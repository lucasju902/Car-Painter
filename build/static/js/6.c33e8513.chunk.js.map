{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","CustomSelect","Select","Wrapper","div","CustomOutlinedInput","OutlinedInput","CustomFontAwesomeIcon","FontAwesomeIcon","props","isstretch","modes","value","MouseModes","DEFAULT","icon","faMousePointer","RECT","faSquare","CIRCLE","faCircle","ELLIPSE","STAR","faStar","RING","faDotCircle","REGULARPOLYGON","size","WEDGE","fontSize","ARC","faCuttlefish","Toolbar","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","mouseMode","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","setMouseMode","target","setCurrentLayer","renderValue","mode","find","item","map","MenuItem","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","useState","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","layer_type","LayerTypes","CAR","layer_visible","layer","color","BasePaints","BASE","Overlays","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","text","font_name","font_file","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","handleTransformEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","radiusX","radiusY","pick","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","sides","Shapes","drawingLayer","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","point","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMousedown","onContentMousedown","getRelativePointerPosition","newLayer","DefaultLayer","setDrawingLayer","onContentMousemove","onContentMouseup","createShape","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","Tooltip","open","enterTouchDelay","placement","title","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","MuiSelect","FontImage","FontSelect","labelId","font_preview","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","my","TextDialog","onCreate","required","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","hex","result","exec","num","EPSILON","validateColor","getAbsoluteTransform","copy","invert","pos","offset"],"mappings":"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","file":"static/js/6.c33e8513.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom, setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport { setCurrent as setCurrentLayer } from \"redux/reducers/layerReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  ZoomOut as ZoomOutIcon,\r\n  Octagon as OctagonIcon,\r\n} from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n  SignalWifi4Bar as WedgeIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { PaintingGuides, MouseModes } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-select {\r\n    padding-left: 10px;\r\n  }\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n];\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n  const handleModeChange = (event) => {\r\n    dispatch(setMouseMode(event.target.value));\r\n    if (event.target.value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <CustomSelect\r\n            value={mouseMode}\r\n            onChange={handleModeChange}\r\n            renderValue={(value) => {\r\n              const mode = modes.find((item) => item.value === value);\r\n              if (!mode) {\r\n                return <></>;\r\n              }\r\n              return mode.icon;\r\n            }}\r\n          >\r\n            {modes.map((mode) => (\r\n              <MenuItem value={mode.value} key={mode.value}>\r\n                {mode.icon}\r\n              </MenuItem>\r\n            ))}\r\n          </CustomSelect>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.STAR:\r\n      return (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.RING:\r\n      return (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.REGULARPOLYGON:\r\n      return (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.WEDGE:\r\n      return (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ARC:\r\n      return (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { getRelativePointerPosition } from \"helper\";\r\n\r\nconst Board = () => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingLayer = useSelector((state) => state.layerReducer.drawingLayer);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      let newLayer = {\r\n        ...DefaultLayer,\r\n        layer_type: LayerTypes.SHAPE,\r\n        layer_data: {\r\n          ...DefaultLayer.layer_data,\r\n          type: mouseMode,\r\n          name: mouseMode,\r\n          left: position.x,\r\n          top: position.y,\r\n          color: \"#000000\",\r\n          scolor: \"#000000\",\r\n          stroke: 1,\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(newLayer));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayer.layer_data.left;\r\n      const height = position.y - drawingLayer.layer_data.top;\r\n\r\n      let layer = {\r\n        ...drawingLayer,\r\n        layer_data: {\r\n          ...drawingLayer.layer_data,\r\n          width: width,\r\n          height: height,\r\n          radius: Math.abs(width),\r\n          innerRadius: Math.abs(width) / 2.5,\r\n          outerRadius: Math.abs(width),\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(layer));\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      dispatch(createShape(currentScheme.id, drawingLayer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayer}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE\r\n        )}\r\n      />\r\n      <PartGroup\r\n        title=\"Overlays\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  !AllowedLayerTypes.includes(\"layer_data.text\")\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n              radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              innerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              outerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n              angle: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n\r\nexport const getRelativePointerPosition = (node) => {\r\n  var transform = node.getAbsoluteTransform().copy();\r\n  // to detect relative position we need to invert transform\r\n  transform.invert();\r\n  // get pointer (say mouse or touch) position\r\n  var pos = node.getStage().getPointerPosition();\r\n  // now we can find relative point\r\n  return transform.point(pos);\r\n};\r\n\r\nexport const getRelativeShadowOffset = (boardRotate, offset) => {\r\n  let shadowOffset = { ...offset };\r\n  if (boardRotate === 90) {\r\n    shadowOffset.x = -offset.y;\r\n    shadowOffset.y = offset.x;\r\n  } else if (boardRotate === 180) {\r\n    shadowOffset.x = -offset.x;\r\n    shadowOffset.y = -offset.y;\r\n  } else if (boardRotate === 270) {\r\n    shadowOffset.x = offset.y;\r\n    shadowOffset.y = -offset.x;\r\n  }\r\n  return shadowOffset;\r\n};\r\n"],"sourceRoot":""}