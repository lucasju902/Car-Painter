{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","frameSize","allowFit","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","length","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","shadowOffsetX","shadowOffsetY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","pressedKey","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","point","cos","sin","rotateAroundPoint","getCenter","keepRatio","sizeLocked","scaleLocked","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","key","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","rror","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","PropertyBar","colorValidator","validateColor","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","nullable","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON","hex","result","exec"],"mappings":"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","file":"static/js/6.7d739666.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport Helper from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(1, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor ? Helper.hexToRgba(filterColor).r : null}\r\n      green={filterColor ? Helper.hexToRgba(filterColor).g : null}\r\n      blue={filterColor ? Helper.hexToRgba(filterColor).b : null}\r\n      alpha={filterColor ? Helper.hexToRgba(filterColor).a / 255 : null}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            frameSize={frameSize}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n        width: Helper.mathRound2(Math.max(5, node.width())),\r\n        height: Helper.mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(5, node.width())),\r\n        height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffsetX}\r\n              shadowOffsetY={shadowOffsetY}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? true\r\n            : false\r\n        }\r\n        enabledAnchors={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label=\"Width\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label=\"Height\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  rror={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.color &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.color\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.color &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.color\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.scolor &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.scolor\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.scolor &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scolor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  rror={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.color &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.color\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.color &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.color\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOpacity\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOffsetX\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowColor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowColor &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowColor &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowBlur\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOpacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport validateColor from \"validate-color\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport zhCN from \"date-fns/locale/zh-CN/index\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const colorValidator = (color) => {\r\n    if (!color || !color.length) return true;\r\n    return validateColor(color);\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n            shadowColor: null,\r\n            shadowBlur: 0,\r\n            shadowOpacity: 1,\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n  hexToRgba,\r\n};\r\n"],"sourceRoot":""}