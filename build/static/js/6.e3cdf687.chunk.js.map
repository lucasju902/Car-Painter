{"version":3,"sources":["hooks/useReducerRef.jsx","utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["useReducerRef","value","ref","useRef","useEffect","current","Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","shapeRef","image","setImage","filters","useMemo","Konva","Filters","RGBA","getPixelRatio","node","Math","max","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","handleDragStart","e","handleDragEnd","handleTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","onTap","draggable","red","hexToRgba","r","green","g","blue","b","onTransformEnd","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","bgColor","paddingX","paddingY","imageshapeRef","console","log","imageNode","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","getCenter","shape","cos","sin","rotateAroundPoint","deltaDeg","rotateAroundCenter","center","getSnapRotation","rot","PI","son","boundBoxFunc","oldBoundBox","newBoundBox","diff","enabledAnchors","borderEnabled","rotateEnabled","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","helpingSponsor","setHelpingSponsor","useResizeDetector","currentCarMake","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","push","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","showSponsorBlock","show","setPaintingGuides","handleLayerDragStart","show_sponsor","handleLayerDragEnd","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","legacy_mode","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","handleBlur","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","handleInputKeyDown","css","Palette","deferred","hideTextfield","MuiButton","CustomAccordionSummary","AccordionSummary","CustomFormControlLabel","FormControlLabel","SubForm","colorKey","opacityKey","errors","setFieldValue","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","control","Checkbox","checked","labelPlacement","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","handleGoBack","clearFrameSize","setSchemeLoaded","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","getDescription","base_description","name_short","increaseData","dataLength","next","loader","Loader","scrollableTarget","cellHeight","cols","alt","GridListTileBar","subtitle","CustomDialogContent","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","increaseLogoData","increaseFlagData","handleTabChange","newValue","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","params","param","PropertyBar","defaultValues","handleClone","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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","file":"static/js/6.e3cdf687.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useReducerRef = (value) => {\r\n  const ref = useRef(value);\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return [value, ref];\r\n};\r\n","/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            layer_data.shadowOffsetX * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            layer_data.shadowOffsetY * Math.abs(scaleY)\r\n          ),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          node.cache({\r\n            pixelRatio: getPixelRatio(shapeRef.current),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // node.getLayer().batchDraw();\r\n        } else {\r\n          node.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const imageNode = imageshapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(imageNode.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            (layer_data.shadowOffsetX || 0) * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            (layer_data.shadowOffsetY || 0) * Math.abs(scaleY)\r\n          ),\r\n          paddingX: mathRound2((layer_data.paddingX || 0) * Math.abs(scaleX)),\r\n          paddingY: mathRound2((layer_data.paddingY || 0) * Math.abs(scaleY)),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          imageNode.cache({\r\n            pixelRatio: getPixelRatio(imageNode),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // imageNode.getLayer().batchDraw();\r\n        } else {\r\n          imageNode.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect\r\n        x={-paddingX || 0}\r\n        y={-paddingY || 0}\r\n        width={props.width + 2 * (paddingX || 0)}\r\n        height={props.height + 2 * (paddingY || 0)}\r\n        fill={bgColor}\r\n      />\r\n      <Image\r\n        x={0}\r\n        y={0}\r\n        width={props.width}\r\n        height={props.height}\r\n        shadowBlur={props.shadowBlur}\r\n        shadowOffsetX={props.shadowOffsetX}\r\n        shadowOffsetY={props.shadowOffsetY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = useCallback(() => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  }, [id, fontFamily, fontFile, onFontLoad, onLoadLayer, setLoadedFontFamily]);\r\n\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [onChange, onDragEnd]\r\n  );\r\n\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n          scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n        });\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n              top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [offsetsFromStroke, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        const width =\r\n          type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n        const height =\r\n          type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(node.x() - offsetsFromStroke.x),\r\n              top: mathRound2(node.y() - offsetsFromStroke.y),\r\n              width: mathRound2(\r\n                Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n              ),\r\n              height: mathRound2(\r\n                Math.max(1, height * Math.abs(scaleY)) -\r\n                  offsetsFromStroke.height\r\n              ),\r\n              radius: node.radius\r\n                ? mathRound2(\r\n                    Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.radius\r\n                  )\r\n                : 0,\r\n              innerRadius: node.innerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.innerRadius\r\n                  )\r\n                : 0,\r\n              outerRadius: node.outerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.outerRadius\r\n                  )\r\n                : 0,\r\n              rotation: mathRound2(node.rotation()) || 0,\r\n              flop: scaleX > 0 ? 0 : 1,\r\n              flip: scaleY > 0 ? 0 : 1,\r\n              stroke: mathRound2(node.strokeWidth() * xyScale),\r\n              shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n              shadowOffsetX: mathRound2(\r\n                layer_data.shadowOffsetX * Math.abs(scaleX)\r\n              ),\r\n              shadowOffsetY: mathRound2(\r\n                layer_data.shadowOffsetY * Math.abs(scaleY)\r\n              ),\r\n              cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n              cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n              cornerBottomLeft: mathRound2(\r\n                layer_data.cornerBottomLeft * xyScale\r\n              ),\r\n              cornerBottomRight: mathRound2(\r\n                layer_data.cornerBottomRight * xyScale\r\n              ),\r\n              points: points.map((point, index) =>\r\n                index % 2 === 0\r\n                  ? mathRound2(point * Math.abs(scaleX))\r\n                  : mathRound2(point * Math.abs(scaleY))\r\n              ),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [type, offsetsFromStroke, layer_data, points, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = useCallback(() => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedLayer]);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [checkNode]);\r\n\r\n  const getCenter = useCallback((shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  }, []);\r\n\r\n  const rotateAroundPoint = useCallback((shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  }, []);\r\n\r\n  const rotateAroundCenter = useCallback(\r\n    (shape, deltaDeg) => {\r\n      const center = getCenter(shape);\r\n      return rotateAroundPoint(shape, deltaDeg, center);\r\n    },\r\n    [getCenter, rotateAroundPoint]\r\n  );\r\n\r\n  const getSnapRotation = useCallback((rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  }, []);\r\n\r\n  const boundBoxFunc = useCallback(\r\n    (oldBoundBox, newBoundBox) => {\r\n      const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n      const diff = closesSnap - oldBoundBox.rotation;\r\n      if (pressedKey === \"shift\") {\r\n        if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n          return newBoundBox;\r\n        }\r\n        if (Math.abs(diff) > 0) {\r\n          return rotateAroundCenter(oldBoundBox, diff);\r\n        }\r\n        return oldBoundBox;\r\n      }\r\n      return newBoundBox;\r\n    },\r\n    [pressedKey, getSnapRotation]\r\n  );\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [helpingSponsor, setHelpingSponsor] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showSponsorBlock = useCallback(\r\n    (show = true) => {\r\n      console.log(show, paintingGuides);\r\n      if (show && !paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)) {\r\n        dispatch(\r\n          setPaintingGuides([...paintingGuides, PaintingGuides.SPONSORBLOCKS])\r\n        );\r\n      }\r\n      if (!show && paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)) {\r\n        dispatch(\r\n          setPaintingGuides(\r\n            paintingGuides.filter(\r\n              (item) => item !== PaintingGuides.SPONSORBLOCKS\r\n            )\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [dispatch, paintingGuides]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_sponsor &&\r\n      !paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n    ) {\r\n      showSponsorBlock(true);\r\n      setHelpingSponsor(true);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentScheme,\r\n    helpingSponsor,\r\n    showSponsorBlock,\r\n    setHelpingSponsor,\r\n  ]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (currentScheme.guide_data.show_sponsor && helpingSponsor) {\r\n      showSponsorBlock(false);\r\n      setHelpingSponsor(false);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentScheme,\r\n    helpingSponsor,\r\n    showSponsorBlock,\r\n    setHelpingSponsor,\r\n  ]);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={frameSize.width / 2}\r\n        offsetY={frameSize.height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n\r\n  const handleBlur = useCallback(() => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  }, [value, min, max, setValue]);\r\n\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onChange(event.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\nconst CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n          show_sponsor: guide_data.show_sponsor || false,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <CustomFormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            name=\"show_sponsor\"\r\n                            checked={formProps.values.show_sponsor}\r\n                            onChange={(event) =>\r\n                              formProps.setFieldValue(\r\n                                \"show_sponsor\",\r\n                                event.target.checked\r\n                              )\r\n                            }\r\n                          />\r\n                        }\r\n                        label=\"Show Sponsor Block for Repositioning\"\r\n                        labelPlacement=\"start\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n  setLoaded as setSchemeLoaded,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { clearFrameSize } from \"redux/reducers/boardReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearFrameSize());\r\n    dispatch(setSchemeLoaded(false));\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      legacyMode ? limit < basePaints.length : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n  const getDescription = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_description : carMake.name_short;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n                <GridListTileBar\r\n                  title={getTitle(item)}\r\n                  subtitle={getDescription(item)}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  const filteredOverlays = useMemo(\r\n    () =>\r\n      overlays.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(search.toLowerCase())\r\n      ),\r\n    [overlays, search]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const filteredLogos = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type !== \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const filteredFlags = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type === \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const increaseLogoData = useCallback(() => {\r\n    setLogoLimit(logoLimit + step);\r\n  }, [logoLimit, step, setLogoLimit]);\r\n\r\n  const increaseFlagData = useCallback(() => {\r\n    setFlagLimit(flagLimit + step);\r\n  }, [flagLimit, step, setFlagLimit]);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n      setSearch(\"\");\r\n    },\r\n    [setTabValue, setSearch]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = useCallback(\r\n    (fontFamily, fontFile) => {\r\n      let fontObject = new FontFace(fontFamily, fontFile);\r\n      fontObject\r\n        .load()\r\n        .then(function (loaded_face) {\r\n          document.fonts.add(loaded_face);\r\n          dispatch(insertToLoadedFontList(fontFamily));\r\n        })\r\n        .catch(function (error) {\r\n          // error occurred\r\n          console.warn(error, fontFamily);\r\n        });\r\n    },\r\n    [insertToLoadedFontList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() => setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)}\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Background Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { onClone } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              user={user}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n    },\r\n    [dispatch, getZoomedCenterPosition, stageRef, frameSize, zoom]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      handleCloneLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar onClone={handleCloneLayer} />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      onChange(event.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}