{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","frameSize","allowFit","imageRef","useRef","shapeRef","useState","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","Overlays","currentLayer","setCurrentLayer","OVERLAY","shadowOffsetX","shadowOffsetY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","pressedKey","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","point","cos","sin","rotateAroundPoint","getCenter","keepRatio","sizeLocked","scaleLocked","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","Tooltip","open","enterTouchDelay","placement","title","children","type","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","AllowedLayerProps","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","PropertyBar","checkDirty","defaultValues","pick","py","moreThan","lessThan","enableReinitialize","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","hex","result","exec","num","EPSILON","validateColor"],"mappings":"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","file":"static/js/6.88714614.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            frameSize={frameSize}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffsetX}\r\n              shadowOffsetY={shadowOffsetY}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? true\r\n            : false\r\n        }\r\n        enabledAnchors={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label=\"Width\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label=\"Height\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOpacity\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOffsetX\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowColor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowBlur\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOpacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n            shadowColor: null,\r\n            shadowBlur: 0,\r\n            shadowOpacity: 1,\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n"],"sourceRoot":""}