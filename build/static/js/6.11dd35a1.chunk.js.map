{"version":3,"sources":["utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomChange","useCallback","event","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","useMemo","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","carMake","BASE","basePaintAssetURL","basePaintIndex","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","keyCode","handleDiscardName","handleGoBack","clearFrameSize","setSchemeLoaded","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","onOpenBase","dataLength","next","hasMore","total_bases","loader","Loader","scrollableTarget","cellHeight","cols","alt","GridListTileBar","subtitle","name_short","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","increaseData","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","handleModeChange","handleOpenBase","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","params","param","PropertyBar","defaultValues","handleClone","cloneLayer","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"4QAkCA,SAASA,IACP,GAAwB,GAApBC,UAAUC,OAAa,CACzB,IAAIC,EAAIF,UAAU,GAElBG,KAAKC,OAASC,EAAaH,GAC3BI,EAAkBH,KAAKC,QACvBG,EAAYJ,KAAKC,SA4CrB,SAASC,EAAaD,GACpB,MAAO,CACYI,SAAUC,EAAWL,EAAOI,SAAU,GACtCE,aAAcD,EAAWL,EAAOM,aAAc,GAC9CC,UAAWF,EAAWL,EAAOO,UAAWZ,EAAMa,KAAKC,KACnDC,cAAeL,EAAWL,EAAOU,cAAe,GAChDC,eAAgBN,EAAWL,EAAOW,eAAgB,GAClDC,cAAeP,EAAWL,EAAOY,cAAe,GAChDC,QAASR,EAAWL,EAAOa,QAAS,GACpCC,QAAST,EAAWL,EAAOc,QAAS,GACpCC,MAAOV,EAAWL,EAAOe,MAAO,GAChCC,OAAQX,EAAWL,EAAOgB,OAAQ,GAClCC,WAAYZ,EAAWL,EAAOiB,WAAY,IAC1CC,MAAOb,EAAWL,EAAOkB,MAAO,IAIrD,SAASb,EAAWc,EAAKC,GACvB,MAAsB,qBAARD,EAAsBA,EAAMC,EAqE5C,SAASlB,EAAkBF,GACzBA,EAAOqB,YACLrB,EAAOO,YAAcZ,EAAMa,KAAKc,aAChCtB,EAAOO,YAAcZ,EAAMa,KAAKe,SAChCvB,EAAOO,YAAcZ,EAAMa,KAAKgB,SAClCxB,EAAOyB,YACLzB,EAAOO,YAAcZ,EAAMa,KAAKc,aAChCtB,EAAOO,YAAcZ,EAAMa,KAAKkB,QAClC1B,EAAO2B,YACL3B,EAAOO,YAAcZ,EAAMa,KAAKgB,UAChCxB,EAAOO,YAAcZ,EAAMa,KAAKoB,KAClC5B,EAAO6B,aAAe7B,EAAOiB,YAAc,EAC3CjB,EAAO8B,QAAU9B,EAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MACnEjC,EAAOkC,UAAYlC,EAAOkB,MAAQvB,EAAMoC,OAAOI,MASjD,SAAShC,EAAYH,GAEnB,GAAIA,EAAOO,YAAcZ,EAAMa,KAAK4B,QAClC,MAAM,IAAIC,MAAM,kCAIlB,GAAIrC,EAAOyB,YAAa,CACtB,GAAIzB,EAAOW,eAAiB,KAA+B,IAAxBX,EAAOM,aACxC,MAAM,IAAI+B,MACR,gEAGJ,GAC2B,KAAzBrC,EAAOY,eACkB,KAAzBZ,EAAOY,eACkB,KAAzBZ,EAAOY,cAEP,MAAM,IAAIyB,MAAM,0DAGlB,GAAIrC,EAAOM,aACT,MAAM,IAAI+B,MACR,iEAMN,GAAIrC,EAAOe,OAAS,GAAKf,EAAOgB,QAAU,EACxC,MAAM,IAAIqB,MAAM,6CAIlB,GACwB,IAAtBrC,EAAOiB,YACe,KAAtBjB,EAAOiB,YACe,KAAtBjB,EAAOiB,YACe,KAAtBjB,EAAOiB,WAEP,MAAM,IAAIoB,MACR,8CAAgDrC,EAAOiB,WAAa,KAKxE,GACuB,IAArBjB,EAAOkC,WACc,IAArBlC,EAAOkC,WACc,IAArBlC,EAAOkC,UAEP,MAAM,IAAIG,MAAM,kDA2JpB,SAASC,EACPC,EACAC,EACAC,EACA1B,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOC,EAAOC,EAAQC,EAAGC,EAAGC,EAC5BxB,EAAe9B,KAAKC,OAAOY,eAAiB,EAEhD,IAAKuC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,IAC1CD,EAA2B,GAAjBE,EAAIrC,EAAQsC,GACtBJ,EAAQT,EAAQW,GAAKtB,EACA,IAAjBA,GACFU,EAAUW,GAAUT,EAASQ,EAAQ,GACrCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,GACzCV,EAAUW,EAAS,GAAKT,EAASQ,GACjCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,IACf,IAAjBpB,GACTU,EAAUW,GAAUT,EAASQ,EAAQ,GACrCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,GACzCV,EAAUW,EAAS,GAAKT,EAASQ,GACjCV,EAAUW,EAAS,GAAK,KACE,IAAjBrB,IACTmB,EAAQP,EAASQ,GAAUR,EAASQ,EAAQ,IAAM,EAClDV,EAAUW,IAAmB,MAARF,IAAmB,EACxCT,EAAUW,EAAS,IAAc,IAARF,IAAmB,EAC5CT,EAAUW,EAAS,IAAc,GAARF,IAAmB,EAC5CT,EAAUW,EAAS,GAAa,MAARF,EAAiB,EAAI,KAKnD,OAAOT,EAkBT,SAASe,EACPf,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CH,EAAQO,EAAOJ,GAAMI,EAAOJ,EAAI,IAAM,EAEtCZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,KACO,MAARL,IAAmB,EACxCT,EAAUW,EAAS,IAAc,IAARF,IAAmB,EAC5CT,EAAUW,EAAS,IAAc,GAARF,IAAmB,EAC5CT,EAAUW,EAAS,GAAa,MAARF,EAAiB,EAAI,IAIjD,OAAOT,EAkBT,SAASkB,EACPlB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIG,EAAQC,EAAGC,EAAGC,EACdK,EAAM3D,KAAKC,OAAOiB,YAAc,EAEpC,IAAKkC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAKO,EAE/CnB,GADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACH,GAAK,IACxBd,EAAUW,EAAS,GAAKK,EAAOJ,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GACnCZ,EAAUW,GAAUK,EAAOJ,EAAI,GAInC,OAAOZ,EAkBT,SAASoB,EACPpB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAII,EAAGC,EAAGC,EAAGH,EAEb,IAAKC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAE/CZ,GADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACH,GAAKE,EAAOJ,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GACnCZ,EAAUW,GAAUK,EAAOJ,EAAI,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EAkBT,SAASqB,EACPrB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAII,EAAGC,EAAGC,EAAGH,EAAQW,EAErB,IAAKV,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CD,EAA2B,GAAjBE,EAAIrC,EAAQsC,GACtBQ,EAAwB,IAAhBN,EAAOJ,EAAI,GACnBZ,EAAUW,EAAS,GAAKK,EAAOJ,GAAKU,EACpCtB,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAAKU,EACxCtB,EAAUW,GAAUK,EAAOJ,EAAI,GAAKU,EACpCtB,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EAkBT,SAASuB,EACPvB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,IAC1CH,EAAQO,EAAOJ,GAEfZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACFL,EACpBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAK,IAI5B,OAAOX,EAkBT,SAASwB,EACPxB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CH,EAAQO,EAAOJ,GAEfZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACFL,EACpBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EA2BT,SAASyB,EAAWC,GAClB,IAAIf,EAASe,EAAKC,WAAavE,EAAMwE,YACjCC,EAAYzE,EAAM0E,UAElBC,EAAS,GAETC,EAAiB,IAAIC,WACvBP,EAAKQ,OACLvB,EAAS,EACTkB,EAAUvE,QAIZ,OAkBF,SAA0B6E,GAGxB,IAFA,IAAIN,EAAYzE,EAAM0E,UAEblB,EAAI,EAAGA,EAAIiB,EAAUvE,OAAQsD,IACpC,GAAIuB,EAAIC,WAAWxB,KAAOiB,EAAUO,WAAWxB,GAC7C,OAAO,EAIX,OAAO,EA3BFyB,CAFKC,OAAOC,aAAaC,MAAM,KAAMR,KAO1CD,EAAOU,WAAY,EACnBV,EAAOW,gBAAkBhB,EAAKiB,UAAUhC,EAAQvD,EAAMwF,eACtDb,EAAOc,gBAAkBnB,EAAKiB,UAAUhC,EAAS,EAAMvD,EAAMwF,eAC7Db,EAAOe,iBAA8C,IAA3Bf,EAAOW,gBACjCX,EAAOgB,iBAA8C,IAA3BhB,EAAOc,gBAE7Bd,EAAOW,kBACTX,EAAOiB,cAAgBtB,EAAKuB,SAASlB,EAAOW,gBAAkB,MAGzDX,IAdLA,EAAOU,WAAY,EACZV,GAlrBX3E,EAAMa,KAAO,CACX4B,QAAS,EACTV,QAAS,EACTjB,IAAK,EACLmB,KAAM,EACNN,YAAa,EACbC,QAAS,GACTC,SAAU,IAMZ7B,EAAMoC,OAAS,CACb0D,YAAa,EACbC,aAAc,EACdC,SAAU,EACVC,UAAW,EACX3D,MAAO,EACPD,KAAM,GACNG,MAAO,GAGTxC,EAAMkG,YAAc,GACpBlG,EAAMwE,YAAc,GACpBxE,EAAMwF,eAAgB,EACtBxF,EAAMmG,QAAU,IAChBnG,EAAMoG,SAAW,IACjBpG,EAAMqG,WAAa,EACnBrG,EAAMsG,WAAa,EACnBtG,EAAM0E,UAAY,sBAmnBlB1E,EAAMuG,UAAUC,KAAO,SAAmBC,EAAMC,GAC9C,IAAIC,EACFC,EAAMxG,MACRuG,EAAM,IAAIE,gBACNL,KAAK,MAAOC,GAAM,GACtBE,EAAIG,aAAe,cACnBH,EAAII,OAAS,WACS,MAAhB3G,KAAK4G,SACPJ,EAAIK,YAAcN,EAAIO,SACtBN,EAAIO,KAAKP,EAAIK,aACTP,GACFA,EAASU,KAAKR,KAIpBD,EAAIU,KAAK,OAmDXrH,EAAMuG,UAAUY,KAAO,SAAmBG,GACxC,IAAIC,EAAW,IAAIC,SAASF,GAE5BlH,KAAKqH,WAAa,IAAI5C,WAAWyC,EAAM,EAAGtH,EAAMkG,aAEhD9F,KAAKC,OAznBP,SAAoBiE,GAClB,IAAIoD,EAAe1H,EAAMwF,cAGzB,GAAIlB,EAAKC,WAAa,GACpB,MAAM,IAAI7B,MAAM,qDAGlB,IAAIrC,EAAS,GAcb,OAbAA,EAAOI,SAAW6D,EAAKuB,SAAS,GAChCxF,EAAOM,aAAe2D,EAAKuB,SAAS,GACpCxF,EAAOO,UAAY0D,EAAKuB,SAAS,GACjCxF,EAAOU,cAAgBuD,EAAKqD,UAAU,EAAMD,GAC5CrH,EAAOW,eAAiBsD,EAAKqD,UAAU,EAAMD,GAC7CrH,EAAOY,cAAgBqD,EAAKuB,SAAS,GACrCxF,EAAOa,QAAUoD,EAAKqD,UAAU,EAAMD,GACtCrH,EAAOc,QAAUmD,EAAKqD,UAAU,GAAMD,GACtCrH,EAAOe,MAAQkD,EAAKqD,UAAU,GAAMD,GACpCrH,EAAOgB,OAASiD,EAAKqD,UAAU,GAAMD,GACrCrH,EAAOiB,WAAagD,EAAKuB,SAAS,IAClCxF,EAAOkB,MAAQ+C,EAAKuB,SAAS,IAEtBxF,EAmmBOuH,CAAWL,GACzBhH,EAAkBH,KAAKC,QACvBG,EAAYJ,KAAKC,QAEjB,IAAIkD,EAASvD,EAAMkG,YAGnB,IADA3C,GAAUnD,KAAKC,OAAOI,WACR6G,EAAK/C,WACjB,MAAM,IAAI7B,MAAM,2BAIlB,GAAItC,KAAKC,OAAOyB,YAAa,CAC3B,IAAI+F,EACFzH,KAAKC,OAAOW,gBAAkBZ,KAAKC,OAAOY,eAAiB,GAC7Db,KAAK0H,QAAU,IAAIjD,WAAWyC,EAAM/D,EAAQsE,GAC5CtE,GAAUsE,EAGZ,IAAIE,EAAgB3H,KAAKC,OAAOiB,YAAc,EAC1C0G,EAAY5H,KAAKC,OAAOe,MAAQhB,KAAKC,OAAOgB,OAC5C4G,EAAaD,EAAYD,EAE7B,GAAI3H,KAAKC,OAAOqB,YAAa,CAE3B,IAAIwG,EAAYZ,EAAK/C,WAAahB,EAASvD,EAAMwE,YAC7C2D,EAAU,IAAItD,WAAWyC,EAAM/D,EAAQ2E,GAC3C9H,KAAKwC,UAniBT,SAAmB0E,EAAMS,EAAeK,GACtC,IAAIC,EAAKC,EAAGC,EAAO/E,EAAGD,EAClBK,EAAQ4E,EAOZ,IALAA,EAAS,IAAI3D,WAAWuD,GACxBxE,EAAS,IAAIiB,WAAWkD,GACxBxE,EAAS,EACT8E,EAAM,EAECA,EAAMD,GAKX,GAHAG,EAA+B,IAD/BD,EAAIhB,EAAK/D,MACIvD,EAAMoG,UAGfkC,EAAItI,EAAMmG,QAAS,CAErB,IAAK3C,EAAI,EAAGA,EAAIuE,IAAiBvE,EAC/BI,EAAOJ,GAAK8D,EAAK/D,KAInB,IAAKC,EAAI,EAAGA,EAAI+E,IAAS/E,EACvBgF,EAAOC,IAAI7E,EAAQyE,GACnBA,GAAON,OAOT,IADAQ,GAASR,EACJvE,EAAI,EAAGA,EAAI+E,IAAS/E,EACvBgF,EAAOH,KAASf,EAAK/D,KAK3B,GAAI8E,EAAMD,EACR,MAAM,IAAI1F,MACR,oCACE2F,EACA,oBACAD,GAIN,OAAOI,EAsfYE,CAAUP,EAASJ,EAAeE,QAGnD7H,KAAKwC,UAAY,IAAIiC,WACnByC,EACA/D,EACAnD,KAAKC,OAAOyB,YAAckG,EAAYC,GAI1C7H,KAAKuE,OAASN,EAAWkD,IAGG,IAA1BnH,KAAKC,OAAOkC,WACXnC,KAAKuE,OAAOe,mBACoB,IAA9BtF,KAAKuE,OAAOiB,eAAqD,IAA9BxF,KAAKuE,OAAOiB,kBAElDxF,KAAKuE,OAAOgE,WAAY,IAU5B3I,EAAMuG,UAAUqC,aAAe,SAA2BhG,GACxD,IAGIM,EAASC,EAAQC,EAAOL,EAASC,EAAQC,EACzC2F,EAJAxH,EAAQhB,KAAKC,OAAOe,MACpBC,EAASjB,KAAKC,OAAOgB,OACrBc,GAAU/B,KAAKC,OAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MA4CrE,OAvCKM,IAEDA,EADEiG,SACUA,SACTC,cAAc,UACdC,WAAW,MACXC,gBAAgB5H,EAAOC,GAId,CACVD,MAAOA,EACPC,OAAQA,EACRiG,KAAM,IAAI2B,kBAAkB7H,EAAQC,EAAS,KAK/Cc,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO6D,WAC9DlD,EAAU,EACVC,EAAS,EACTC,EAAQ5B,IAER0B,EAAU1B,EAAS,EACnB2B,GAAU,EACVC,GAAS,GAGPd,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO0D,aAC9D5C,EAAU,EACVC,EAAS,EACTC,EAAQhC,IAER8B,EAAU9B,EAAQ,EAClB+B,GAAU,EACVC,GAAS,GAKHhD,KAAKC,OAAOiB,YAClB,KAAK,EACHsH,EAAexI,KAAKC,OAAO2B,YACvBmC,EACAxB,EACJ,MAEF,KAAK,GACHiG,EAAexI,KAAKC,OAAO2B,YACvBoC,EACAT,EACJ,MAEF,KAAK,GACHiF,EAAe9E,EACf,MAEF,KAAK,GAIC8E,EAHAxI,KAAKuE,OAAOe,iBACoB,IAA9BtF,KAAKuE,OAAOiB,cAEC5B,EACwB,IAA9B5D,KAAKuE,OAAOiB,cAEN3B,EAGAH,EAGa,IAA1B1D,KAAKC,OAAOkC,UACCyB,EAGAF,EAoBvB,OAbA8E,EAAaxB,KACXhH,KACAwC,EAAU0E,KACVlH,KAAKwC,UACLxC,KAAK0H,QACL1G,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEKR,GAQT5C,EAAMuG,UAAU2C,aAAe,SAA2BtG,GACxD,IAAKA,EACH,MAAM,IAAIF,MAAM,sDAGlB,IAIIQ,EAASC,EAAQC,EAAOL,EAASC,EAAQC,EAJzC7B,EAAQhB,KAAKC,OAAOe,MACpBC,EAASjB,KAAKC,OAAOgB,OACrB8H,EAAiB/H,EAAQC,GAAUjB,KAAKC,OAAOiB,YAAc,GAC7Da,GAAU/B,KAAKC,OAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MAGjEH,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO6D,WAC9DlD,EAAU,EACVC,EAAS,EACTC,EAAQ5B,IAER0B,EAAU1B,EAAS,EACnB2B,GAAU,EACVC,GAAS,GAGPd,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO0D,aAC9D5C,EAAU,EACVC,EAAS,EACTC,EAAQhC,IAER8B,EAAU9B,EAAQ,EAClB+B,GAAU,EACVC,GAAS,GAGNhD,KAAKwC,YACRxC,KAAKwC,UAAY,IAAIiC,WAAWsE,IAOlCnF,EACE5D,KAAKwC,UACLA,EAAU0E,KACVlH,KAAK0H,QACL1G,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAGF,IAAIkE,EAAOlH,KAAKwC,UAEZxC,KAAKC,OAAOqB,cACd4F,EA5qBJ,SAAmBjH,EAAQuC,GAyBzB,IAxBA,IACIY,EAMA4F,EAAYC,EAAcC,EAL1BhC,EAAO1E,EACP4F,EAAS,GACTH,EAAM,EACNN,EAAgB1H,EAAOiB,YAAc,EACrCiC,EAAS,EAETgG,EAAYlJ,EAAOe,MAAQf,EAAOgB,OAAS0G,EAC3CyB,EAAc,SAAqBnB,EAAK9E,GAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIuE,EAAevE,IACjC,GAAI8D,EAAKe,EAAMN,EAAgBvE,KAAO8D,EAAK/D,EAASwE,EAAgBvE,GAClE,OAAO,EAGX,OAAO,GAELiG,EAAgB,SAAUpB,GAC5B,OAAImB,EAAYnB,EAAKA,EAAM,GAClBrI,EAAMqG,WAERrG,EAAMsG,YAGR+B,EAAMN,EAAgBT,EAAKpH,QAAUmI,EAAMN,EAAgBwB,GAAW,CAM3E,GADAF,EAAe,GAHfD,EAAaK,EAAcpB,MAIRrI,EAAMqG,WACvB,KACEgC,EAAMgB,EAAe/B,EAAKpH,QAC1BmJ,EAjCmB,KAkCnBG,EAAYnB,EAAKA,EAAMgB,IAEvBA,SAIF,KACEhB,EAAMgB,EAAe/B,EAAKpH,QAC1BmJ,EA1CmB,KA2CnBI,EAAcpB,EAAMgB,KAAkBrJ,EAAMsG,YAE5C+C,IAYJ,GAPAC,EAAeD,EAAe,EAC1BD,IAAepJ,EAAMqG,aACvBiD,GAAgBtJ,EAAMmG,SAExBqC,EAAOjF,KAAY+F,EAGfF,IAAepJ,EAAMqG,WAAY,CACnC,IAAK7C,EAAI,EAAGA,EAAIuE,EAAevE,IAC7BgF,EAAOhF,EAAID,GAAU+D,EAAK9D,EAAI6E,EAAMN,GAEtCxE,GAAUwE,MACL,CACL,IAAKvE,EAAI,EAAGA,EAAIuE,EAAgBsB,EAAc7F,IAC5CgF,EAAOhF,EAAID,GAAU+D,EAAK9D,EAAI6E,EAAMN,GAEtCxE,GAAUwE,EAAgBsB,EAE5BhB,GAAOgB,EAGT,OAAO,IAAIxE,WAAW2D,GAomBbkB,CAAUtJ,KAAKC,OAAQiH,IAGhC,IAAIqC,EAAa3J,EAAMkG,YAAcoB,EAAKpH,OAASF,EAAMwE,YACrDM,EAAS,IAAI8E,YAAYD,GAE7BvJ,KAAK6G,YAAcnC,EAEnB1E,KAAKqH,WAAa,IAAI5C,WAAWC,EAAQ,EAAG9E,EAAMkG,aAClD9F,KAAK+H,QAAU,IAAItD,WAAWC,EAAQ9E,EAAMkG,YAAaoB,EAAKpH,QAC9DE,KAAKyJ,WAAa,IAAIhF,WACpBC,EACA9E,EAAMkG,YAAcoB,EAAKpH,OACzBF,EAAMwE,aAGR,IAAIsF,EAAa,IAAItC,SAASpH,KAAKqH,WAAW3C,SAp3BhD,SAAqBzE,EAAQiE,GAC3B,IAAIoD,EAAe1H,EAAMwF,cAEzBlB,EAAKyF,SAAS,EAAM1J,EAAOI,UAC3B6D,EAAKyF,SAAS,EAAM1J,EAAOM,cAC3B2D,EAAKyF,SAAS,EAAM1J,EAAOO,WAC3B0D,EAAK0F,UAAU,EAAM3J,EAAOU,cAAe2G,GAC3CpD,EAAK0F,UAAU,EAAM3J,EAAOW,eAAgB0G,GAC5CpD,EAAKyF,SAAS,EAAM1J,EAAOY,eAC3BqD,EAAK0F,UAAU,EAAM3J,EAAOa,QAASwG,GACrCpD,EAAK0F,UAAU,GAAM3J,EAAOc,QAASuG,GACrCpD,EAAK0F,UAAU,GAAM3J,EAAOe,MAAOsG,GACnCpD,EAAK0F,UAAU,GAAM3J,EAAOgB,OAAQqG,GACpCpD,EAAKyF,SAAS,GAAM1J,EAAOiB,YAC3BgD,EAAKyF,SAAS,GAAM1J,EAAOkB,OAu2B3B0I,CAAY7J,KAAKC,OAAQyJ,GACzB1J,KAAK+H,QAAQM,IAAInB,GAn4BnB,SAAqB3C,GAGnB,IAFA,IAAIF,EAAYzE,EAAM0E,UAClBnB,EAASoB,EAAOJ,WAAaE,EAAUvE,OAClCsD,EAAI,EAAGA,EAAIiB,EAAUvE,OAAQsD,IACpCmB,EAAOpB,EAASC,GAAKiB,EAAUO,WAAWxB,GAg4B5C0G,CAAY9J,KAAKyJ,aAQnB7J,EAAMuG,UAAU4D,UAAY,WAC1B,IAAIC,EAAQC,EAAKzH,EAWjB,OAPAA,GADAyH,GADAD,EAASvB,SAASC,cAAc,WACnBC,WAAW,OACRC,gBAAgB5I,KAAKC,OAAOe,MAAOhB,KAAKC,OAAOgB,QAE/D+I,EAAOhJ,MAAQhB,KAAKC,OAAOe,MAC3BgJ,EAAO/I,OAASjB,KAAKC,OAAOgB,OAE5BgJ,EAAIC,aAAalK,KAAKwI,aAAahG,GAAY,EAAG,GAE3CwH,GASTpK,EAAMuG,UAAUgE,WAAa,SAAwBC,GACnD,OAAOpK,KAAK+J,YAAYM,UAAUD,GAAQ,cAQ5CxK,EAAMuG,UAAUmE,WAAa,WAC3B,IAAKtK,KAAK6G,YACR,MAAM,IAAIvE,MAAM,oDAElB,IAAIiI,EAAO,IAAIC,KAAK,CAACxK,KAAK6G,aAAc,CAAEuD,KAAM,gBAChD,OAAOK,IAAIC,gBAAgBH,IAGd3K,Q,wICnhCA+K,EAZMC,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiB,QACjB9H,MAAO,sBACP+H,UAAW,qBACXC,SAAU,IAEZC,MAAO,CACLjI,MAAO,YARU2H,CAUjBO,K,qCCFEC,GAAsBC,YAAOC,KAAV,sFAAGD,CAAH,8HAWnBE,GAAc,SAAC,GAQd,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,QAEMC,EAAmBC,uBACvB,SAACC,GACCP,EAAQQ,SAASD,EAAME,OAAOC,OAAS,GAAK,OAE9C,CAACV,IAGGW,EAAcL,uBAAY,SAACC,GAAD,OAAWA,EAAME,OAAOG,WAAU,IAE5DC,EAAgBP,uBAAY,WAChCN,EAAQ,KACP,CAACA,IAEJ,OACE,cAACc,EAAA,EAAD,CACEpG,KAAMqG,QAAQjB,GACdA,SAAUA,EACVM,QAASA,EACTY,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAVhB,SAaE,eAACE,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,EAAG,EAAGjM,MAAM,QAAvD,UACE,eAAC8L,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS1B,EAAjB,qBACA,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAASzB,EAAjB,sBACA,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BAEF,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAASxB,EAAjB,yBACA,cAACyB,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,eAACT,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACXK,GAAI,EAJN,UAME,cAACJ,EAAA,EAAD,CAAQC,QAASd,EAAjB,0BACA,cAACe,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,cAACnC,GAAD,CACEqC,GAAG,aACHrB,MAAc,IAAPX,EACPiC,SAAU3B,EACV4B,QAAStB,EACTuB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,eACdC,WAAY,EACZC,WAAW,UAONC,OAAMC,KAAK3C,IChEpB+B,GAAajC,YAAO8C,KAAV,0EAAG9C,CAAsB+C,KACnCC,GAAehD,YAAOiD,KAAV,4EAAGjD,CAAwB+C,KACvCG,GAAalD,YAAOmD,KAAV,0EAAGnD,CAAsB+C,KAEnCK,GAAUpD,IAAOqD,IAAV,uEAAGrD,CAAH,4FAQPsD,GAAatD,YAAO+B,KAAV,0EAAG/B,CAAH,gFAsKDuD,GA/JCX,IAAMC,MAAK,SAACW,GAAW,IAEnClD,EAKEkD,EALFlD,SACAC,EAIEiD,EAJFjD,UACAC,EAGEgD,EAHFhD,UACAiD,EAEED,EAFFC,uBACAC,EACEF,EADFE,cANkC,EAQJC,mBAAS,MARL,mBAQ7BxD,EAR6B,KAQnByD,EARmB,KAU9BC,EAAWC,cACXC,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BI,EAAqBH,aACzB,SAACC,GAAD,OAAWA,EAAMC,aAAaC,sBAE1BC,EAAgBJ,aACpB,SAACC,GAAD,OAAWA,EAAMC,aAAaE,iBAE1BhE,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QAEjDiE,EAA6B1D,uBACjC,SAACC,EAAO0D,GACNb,EAAuBa,KAEzB,CAACb,IAGGc,EAAiB5D,uBACrB,WAAoB,IAAnB6D,IAAkB,yDAEfX,EADEW,EACOC,cAEAC,iBAGb,CAACb,IAGGc,EAAsBhE,uBAC1B,SAACC,GACCgD,EAAYhD,EAAMgE,iBAEpB,CAAChB,IAGGiB,EAAuBlE,uBAAY,WACvCiD,EAAY,QACX,CAACA,IAEEkB,EAAanE,uBACjB,SAACI,GACC8C,EAASxD,YAAQU,MAEnB,CAAC8C,IAGH,OACE,cAACT,GAAD,UACE,eAAC3B,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfkD,aAAa,SACbpP,MAAM,OAJR,UAME,cAAC8L,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,QAAQkD,aAAa,SAAxD,SACE,eAACC,EAAA,EAAD,CACEjE,MAAOgD,EACP1B,SAAUgC,EACVY,aAAW,kBAHb,UAKE,cAAC,GAAD,CAAclE,MAAOmE,IAAeC,QAASF,aAAW,WAAxD,SACE,cAAC,EAAD,CAAcG,MAAM,oCAAoCvF,OAAK,EAA7D,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,0BAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeG,UACtBJ,aAAW,YAFb,SAIE,cAAC,EAAD,CAAcG,MAAM,qCAAqCvF,OAAK,EAA9D,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,2BAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeI,cACtBL,aAAW,iBAFb,SAIE,cAAC,EAAD,CACEG,MAAM,0CACNvF,OAAK,EAFP,SAIE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,gCAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeK,aACtBN,aAAW,gBAFb,SAIE,cAAC,EAAD,CACEG,MAAM,yCACNvF,OAAK,EAFP,SAIE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,+BAGJ,cAAC,GAAD,CAAcnB,MAAOmE,IAAeM,KAAMP,aAAW,OAArD,SACE,cAAC,EAAD,CAAcG,MAAM,gCAAgCvF,OAAK,EAAzD,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,2BAKR,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,WAAWkD,aAAa,SAA3D,UACE,cAAChD,EAAA,EAAD,CAAQG,QAAQ,WAAWF,QAAS0B,EAApC,0BAGA,cAAC,EAAD,CAAc0B,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAAC,GAAD,CACE4F,UAAkC,IAAxBtB,EACVnC,QAAS,kBAAMuC,GAAe,IAFhC,SAIE,cAACmB,EAAA,EAAD,QAIJ,cAAC,EAAD,CAAcN,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAAC,GAAD,CACE4F,SAAUtB,IAAuBC,EAAc3P,OAAS,EACxDuN,QAAS,kBAAMuC,GAAe,IAFhC,SAIE,cAACoB,EAAA,EAAD,QAIJ,eAACrC,GAAD,CACEpB,QAAQ,YACR0D,QAAS,cAAC,IAAD,IACT5D,QAAS2C,EAHX,WAKW,IAAPvE,GAAYyF,QAAQ,GALxB,QAQA,cAAC,GAAD,CACE1F,SAAUA,EACVC,KAAMA,EACNC,QAASyE,EACTxE,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXC,QAASoE,e,iHCWNiB,GA7ME,SAAC,GAcX,IAbL1D,EAaI,EAbJA,GACA2D,EAYI,EAZJA,IACAC,EAWI,EAXJA,YACAC,EAUI,EAVJA,UACAC,EASI,EATJA,SACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,YACAC,EAKI,EALJA,SACAC,EAII,EAJJA,SACAlE,EAGI,EAHJA,SACAmE,EAEI,EAFJA,QACGhD,EACC,uJACEiD,EAAWC,iBAAO,MAClBC,EAAWD,mBAFb,EAGsB/C,mBAAS,MAH/B,mBAGGiD,EAHH,KAGUC,EAHV,KAIEC,EAAU,GAEZd,GAAeA,EAAYvR,QAC7BqS,EAAQC,KAAKC,KAAMC,QAAQC,MAE7B,IAAMC,EAAgB,SAACC,GACrB,OAAIX,EAASY,QACJC,KAAKC,IACV,EACAd,EAASY,QAAQ1R,MAAQyR,EAAKzR,QAC9B8Q,EAASY,QAAQzR,OAASwR,EAAKxR,UAG5B,GAGT4R,qBAAU,WAIR,OAHqB,IAAjBpB,IAA2C,IAAjBA,GAAyBC,GAAejE,GACpEiE,EAAYjE,GAAI,GAClBqF,IACO,WACDhB,EAASY,SACXZ,EAASY,QAAQK,oBAAoB,OAAQC,MAGhD,IAEHH,qBAAU,WACJb,EAASU,UACPrB,GAAeA,EAAYvR,OAC7BkS,EAASU,QAAQO,MAAM,CACrBC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIzBnB,EAASU,QAAQU,gBAGpB,CAAC/B,IAEJ,IAAM2B,EAAU,uCAAG,wCAAAK,EAAA,yDACbC,GACD/B,GACAO,EAASY,QAAQ1R,OAASsQ,EAAUtQ,MAAQ,GAC3C8Q,EAASY,QAAQzR,QAAUqQ,EAAUrQ,OAAS,EAC5C6Q,EAASY,QAAQ1R,MACjBsQ,EAAUtQ,MAAQ,EACpBuS,GACDhC,GACAO,EAASY,QAAQ1R,OAASsQ,EAAUtQ,MAAQ,GAC3C8Q,EAASY,QAAQzR,QAAUqQ,EAAUrQ,OAAS,EAC5C6Q,EAASY,QAAQzR,OACfqQ,EAAUtQ,MAAQ,EAAK8Q,EAASY,QAAQzR,OAC1C6Q,EAASY,QAAQ1R,MACnBA,EAAQ6N,EAAM7N,OAASsS,EACvBrS,EAAS4N,EAAM5N,QAAUsS,GAG3BnC,EAAIoC,cAAcC,SAAS,SACzB3B,EAASY,QAAQ1R,OAAU8Q,EAASY,QAAQzR,OAnB/B,wBAqBX+I,EAASvB,SAASC,cAAc,UAC9BuB,EAAMD,EAAOrB,WAAW,MAtBf,SAuBC+K,KAAMC,KAAK1J,EAAKmH,EAAK,CACnCwC,cAAc,IAxBD,cAuBTC,EAvBS,OA0BfC,QAAQC,IAAIF,GACZ7S,EAAQA,GAAS6S,EAAEG,gBAAgBvB,KAAKzR,MAAMiT,QAAQ7H,OAAS,IAC/DnL,EAASA,GAAU4S,EAAEG,gBAAgBvB,KAAKxR,OAAOgT,QAAQ7H,OAAS,IAClEyH,EAAEK,OAAOlT,EAAOC,EAAQ,QA7BT,UA8BT4S,EAAEM,SA9BO,QA+BfjC,EAASlI,GA/BM,wBAiCfkI,EAASJ,EAASY,SAjCH,SAoCbhF,GAAamB,EAAM7N,OAAU6N,EAAM5N,QACrCyM,EAAS,CACP0G,KAAMC,aAAWxF,EAAMxL,EAAIrC,EAAQ,GACnCsT,IAAKD,aAAWxF,EAAMvL,EAAIrC,EAAS,GACnCD,MAAOqT,aAAWrT,GAClBC,OAAQoT,aAAWpT,KAInBoQ,GAAeA,EAAYvR,QAC7BkS,EAASU,QAAQO,MAAM,CACrBC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIvBxB,GACFA,EAAS,CACP3Q,MAAOA,EACPC,OAAQA,IAGRyQ,GAAejE,GAAIiE,EAAYjE,GAAI,GA1DtB,4CAAH,qDA4DVqF,EAAS,uCAAG,4BAAAO,EAAA,uDACVkB,EAAM,IAAIC,OAAOC,OAEnBrD,IAAMA,EAAG,sBAAiB,IAAIsD,MAAOC,eACzCJ,EAAIK,YAAc,YAClB9C,EAASY,QAAU6B,EACnBzC,EAASY,QAAQmC,iBAAiB,OAAQ7B,GAN1B,2CAAH,qDAwDf,OACE,cAAC,KAAD,2BACMnE,GADN,IAEEoD,MAAOA,EACP5E,QAASuE,EACTkD,MAAOlD,EACPmD,IAAK/C,EACLgD,UAAWtH,EACXyE,QAASA,EAAQrS,OAASqS,EAAU,KACpC8C,IAAK5D,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAa8D,EAAI,KACpEC,MACE/D,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAagE,EAAI,KAEjEC,KAAMjE,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAakE,EAAI,KACrEzR,MACEuN,GAAeA,EAAYvR,OACvBoV,aAAU7D,GAAagC,EAAI,IAC3B,KAENmC,YAnEoB,SAACC,GACvB7D,KAmEE8D,UAjEkB,SAACD,GACjB/H,GACFA,EAAS,CACP0G,KAAMC,aAAWoB,EAAEtJ,OAAO9I,KAC1BiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,QA8D3BqS,eA1DuB,SAACF,GAC1B,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACpB/B,QAAQC,IAAI,mBAAoB6B,EAAQC,GAExCpD,EAAKmD,OAAOA,EAAS,EAAI,GAAK,GAC9BnD,EAAKoD,OAAOA,EAAS,EAAI,GAAK,GAC9B,IAAMC,EAAUnD,KAAKoD,IACc,IAAjCpD,KAAKoD,IAAI1B,aAAWwB,IAAiBA,EAASD,GAEhDlI,EAAS,CACP0G,KAAMC,aAAW5B,EAAKpP,KACtBiR,IAAKD,aAAW5B,EAAKnP,KAErBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,QAAU2R,KAAKoD,IAAIH,KACtD3U,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,SAAW0R,KAAKoD,IAAIF,KACxDG,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBM,WAAY9B,aAAW5B,EAAK0D,aAAeL,GAC3CM,cAAe/B,aAAW7C,EAAW4E,cAAgBzD,KAAKoD,IAAIH,IAC9DS,cAAehC,aAAW7C,EAAW6E,cAAgB1D,KAAKoD,IAAIF,MAE5DxE,GAAeA,EAAYvR,OAC7B2S,EAAKQ,MAAM,CACTC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIzBV,EAAKW,eA2BPkD,oBAAoB,EACpBC,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,Q,SCvMxD8E,GAAmB,SAAC9H,GAAW,IAEjCO,EAOEP,EAPFO,eACAwH,EAME/H,EANF+H,eACAC,EAKEhI,EALFgI,gBACAvF,EAIEzC,EAJFyC,UACAwF,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAEIsF,EAAcF,EAAUG,cAAgB,GACxCC,EAAaJ,EAAUK,aAAe,GAE5C,OACE,qCACE,cAAC,GAAD,CACE1J,GAAG,kBACHgE,aAAcsF,EAAe,mBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,kBAMH5F,SAAUkF,EACVxF,YAAayF,EAAUU,gBACvBC,QAASX,EAAUY,kBACnBjB,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeG,WAEzCgB,YAAaA,IAGdkG,MAAMjE,KAAKiE,MAAMjF,KAAKkF,MAAMvG,EAAUtQ,MAAQgW,KAAe,SAACvB,EAAGrS,GAChE,OACE,cAAC,KAAD,CAEE0U,OAAQ,CACNnF,KAAKkF,MAAMzU,EAAI4T,GACf,EACArE,KAAKkF,MAAMzU,EAAI4T,GACf1F,EAAUtQ,OAEZ+W,OAAQjB,EAAUkB,YAAc,OAChCP,QAASX,EAAUmB,cAAgB,EACnCC,YAAahB,EACbT,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeM,OAb3C,YACYzN,OAiBfwU,MAAMjE,KAAKiE,MAAMjF,KAAKkF,MAAMvG,EAAUrQ,OAAS+V,KAAe,SAACvB,EAAGrS,GACjE,OACE,cAAC,KAAD,CAEE0U,OAAQ,CACN,EACAnF,KAAKkF,MAAMzU,EAAI4T,GACf1F,EAAUrQ,OACV0R,KAAKkF,MAAMzU,EAAI4T,IAEjBe,OAAQjB,EAAUkB,YAAc,OAChCP,QAASX,EAAUmB,cAAgB,EACnCC,YAAahB,EACbT,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeM,OAb3C,YACYzN,WAqBP6K,OAAMC,KAAKyI,IC/EpBwB,GAAuB,SAACtJ,GAAW,IAErCO,EAMEP,EANFO,eACAwH,EAKE/H,EALF+H,eACAC,EAIEhI,EAJFgI,gBACAC,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAGF,OACE,cAAC,GAAD,CACEjE,GAAG,aACHgE,aAAcsF,EAAe,cAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,aAMH5F,SAAUkF,EACVxF,YAAayF,EAAUsB,cACvBX,QAASX,EAAUuB,gBACnB5B,WAAW,EACXkB,UAASvI,EAAeqE,SAASlD,IAAeC,SAChDkB,YAAaA,KAKJzD,OAAMC,KAAKiK,IC9BpBG,GAAsB,SAACzJ,GAAW,IAEpCO,EAMEP,EANFO,eACAwH,EAKE/H,EALF+H,eACAC,EAIEhI,EAJFgI,gBACAC,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAGF,OACE,qCACE,cAAC,GAAD,CACEjE,GAAG,sBACHgE,aAAcsF,EAAe,uBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,uBAMH5F,SAAUkF,EACVxF,YAAayF,EAAUyB,cACvBd,QAASX,EAAU0B,gBACnB/B,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeI,eAEzCe,YAAaA,IAGf,cAAC,GAAD,CACEjE,GAAG,qBACHgE,aAAcsF,EAAe,sBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,sBAMH5F,SAAUkF,EACVxF,YAAayF,EAAU2B,kBACvBhB,QAASX,EAAU4B,oBACnBjC,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeK,cAEzCc,YAAaA,QAMNzD,OAAMC,KAAKoK,ICpDpBK,GAAW,SAAC9J,GAAW,IAEzB+J,EAKE/J,EALF+J,OACAhC,EAIE/H,EAJF+H,eACAG,EAGElI,EAHFkI,eACAF,EAEEhI,EAFFgI,gBACAnF,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OACvD,CAAC,eACD,CAAC,WAEL,CAACT,IAGH,OACE,mCACGC,EAAeS,KAAI,SAACC,GAAD,OAClB,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV2D,IACEgG,KAAOC,UACP,cACAT,EAAeU,iBAAiBC,QAAQ,IAAK,KAF7C,WAGIgC,EAAM/H,WAAW+C,KAEvBlD,YAAakI,EAAM/H,WAAWvO,MAC9BwT,WAAW,EACXkB,UAAS4B,EAAMC,cACf/H,aAAcsF,EAAewC,EAAM9L,IACnCiE,YAAaA,EACbC,SAAUkF,GAbL0C,EAAM9L,UAoBNQ,OAAMC,KAAKyK,IC1CpBc,GAAa,SAAC5K,GAAW,IAE3B+J,EAKE/J,EALF+J,OACAc,EAIE7K,EAJF6K,QACA3C,EAGElI,EAHFkI,eACAF,EAEEhI,EAFFgI,gBACAnF,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWO,QACvD,CAAC,cAAe,WAEpB,CAACf,IAGH,OACE,mCACGC,EAAeS,KAAI,SAACC,GAAD,OAClB,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV2D,IACEmI,EAAM/H,WAAW/D,GAAjB,UACO2J,KAAOC,UADd,kBACiCkC,EAAM/H,WAAW/D,GADlD,YACwD8L,EAAM/H,WAAW+C,KACrEqF,aAAkBF,EAASH,EAAM/H,WAAWqI,gBAC5CN,EAAM/H,WAAW+C,IAEvBkD,QAAS8B,EAAM/H,WAAWiG,QAC1BpG,YAAakI,EAAM/H,WAAWvO,MAC9BwT,WAAW,EACXkB,UAAS4B,EAAMC,cACf/H,aAAcsF,EAAewC,EAAM9L,IACnCkE,SAAUkF,EACVnF,YAAaA,GAdR6H,EAAM9L,UAqBNQ,OAAMC,KAAKuL,IC3CpBK,GAAW,SAACjL,GAAW,IAEzB+J,EASE/J,EATF+J,OACAmB,EAQElL,EARFkL,gBACAzI,EAOEzC,EAPFyC,UACA0I,EAMEnL,EANFmL,UACAC,EAKEpL,EALFoL,YACAlD,EAIElI,EAJFkI,eACArJ,EAGEmB,EAHFnB,SACAmE,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWc,WACvD,CAAC,eACD,CAAC,WAEL,CAACtB,IAEGuB,EAAkBnO,uBACtB,SAACuN,GACC,OAAOa,aAAwBH,EAAa,CAC1C5W,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAAC4D,IAGH,OACE,mCACGpB,EAAeS,KAAI,SAACC,GACnB,IAAIc,EAAeF,EAAgBZ,GAEnC,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV6M,KAAMf,EAAM9L,GAAG8M,WACfnJ,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBkC,EAAM/H,WAAWgJ,aAC7CnX,EAAGoX,WAAWlB,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGmX,WAAWlB,EAAM/H,WAAW8C,KAAO,GACtC/C,UAAU,EACVF,YAAakI,EAAM/H,WAAWvO,MAC9BjC,MAAOuY,EAAM/H,WAAWxQ,MACxBC,OAAQsY,EAAM/H,WAAWvQ,OACzB+U,SAAUuD,EAAM/H,WAAWwE,SAC3BiE,YAAaA,EACbxI,aAAcsF,EAAewC,EAAM9L,IACnCgK,QAAS8B,EAAM/H,WAAWiG,QAC1B7B,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3CwE,MAAOnB,EAAM/H,WAAWkJ,MACxBC,MAAOpB,EAAM/H,WAAWmJ,MACxBC,YAAarB,EAAM/H,WAAWoJ,YAC9BzE,WAAYoD,EAAM/H,WAAW2E,WAC7B0E,cAAetB,EAAM/H,WAAWqJ,cAChCzE,cAAeiE,EAAahX,EAC5BgT,cAAegE,EAAa/W,EAC5BsO,SAAU,kBAAMmI,EAAgBR,IAChC9C,WAAY8C,EAAMuB,cAAgBd,IAAce,IAAWC,QAC3D1J,UAAWA,EACXE,WAAY+H,EAAM/H,WAClB9D,SAAU,SAACuN,GAAD,OAAYvN,EAAS6L,EAAO0B,IACtCpJ,QAAS,SAACqJ,GAAD,OAAUrJ,EAAQ0H,EAAO2B,IAClCvD,UAAS4B,EAAMC,cACf9H,YAAaA,GA9BR6H,EAAM9L,UAsCRQ,OAAMC,KAAK4L,ICwBXqB,GAxGE,SAAC,GAiBX,IAhBL1N,EAgBI,EAhBJA,GACA2N,EAeI,EAfJA,WACAC,EAcI,EAdJA,SACAC,EAaI,EAbJA,eAEAV,GAWI,EAZJW,WAYI,EAXJX,aACAzE,EAUI,EAVJA,WACA0E,EASI,EATJA,cACAzE,EAQI,EARJA,cACAC,EAOI,EAPJA,cACA3E,EAMI,EANJA,YACAE,EAKI,EALJA,SACAlE,EAII,EAJJA,SACA8N,EAGI,EAHJA,WACA3J,EAEI,EAFJA,QACGhD,EACC,qNAC4CG,mBAAS,MADrD,mBACGyM,EADH,KACqBC,EADrB,KAEE1J,EAAWD,mBACjBc,qBAAU,WACJuI,GAAcC,IACXC,EAAe7H,SAAS2H,IAG3BM,EAAoBN,GAChB1J,GAAejE,GAAIiE,EAAYjE,GAAI,IAHvCkO,OAMH,CAACP,EAAYC,IAEhB,IAAMM,EAAW,WACE,IAAIC,SAASR,EAAYC,GAEvCtU,OACA8U,MAAK,SAAUC,GACdrT,SAASsT,MAAMC,IAAIF,GACnBN,EAAWJ,GACXM,EAAoBN,GAChB1J,GAAejE,GAAIiE,EAAYjE,GAAI,MAExCwO,OAAM,SAAUC,GAEfpI,QAAQqI,KAAKD,EAAOd,OAqC1B,OACE,cAAC,KAAD,2BACMvM,GADN,IAEEuM,WAAYK,EACZpO,QAASuE,EACTkD,MAAOlD,EACPmD,IAAK/C,EACL4I,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACX8H,YA9CoB,SAACC,GACvB7D,KA8CE8D,UA5CkB,SAACD,GACrB,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QACtBhF,EAAS,CACP0G,KAAMC,aAAWoB,EAAEtJ,OAAO9I,KAC1BiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,KACzBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,UACnCC,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,eAsCtC0U,eAlCuB,SAACF,GAC1B,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACpBnI,EAAS,CACP0G,KAAMC,aAAW5B,EAAKpP,KACtBiR,IAAKD,aAAW5B,EAAKnP,KAErBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,UACnCC,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,WACpC+U,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCJ,OAAQvB,aAAW1B,KAAKC,IAAI,IAAMgD,IAClCC,OAAQxB,aAAW1B,KAAKC,IAAI,IAAMiD,IAClCI,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,MAoBzBS,oBAAoB,EACpBC,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,QC/FxDuK,GAAgB,SAACvN,GAAW,IAE9B+J,EAYE/J,EAZF+J,OACA0C,EAWEzM,EAXFyM,eACAvE,EAUElI,EAVFkI,eACAgF,EASElN,EATFkN,MACAzK,EAQEzC,EARFyC,UACA0I,EAOEnL,EAPFmL,UACAD,EAMElL,EANFkL,gBACAE,EAKEpL,EALFoL,YACAvM,EAIEmB,EAJFnB,SACA8N,EAGE3M,EAHF2M,WACA3J,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAEImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QACL,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAWiD,MAC/BnD,EAAKC,aAAeC,IAAWkD,QAC/BpD,EAAKC,aAAeC,IAAWmD,QAEnC,CAAC,eACD,CAAC,WAEL,CAAC3D,IAEG4D,EAAYxQ,uBAChB,SAACuN,GACC,OAAOwC,EAAMjc,OACTic,EAAMU,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,KAAO8L,EAAM/H,WAAWkL,QAClD,KAEN,CAACX,IAEG5B,EAAkBnO,uBACtB,SAACuN,GACC,OAAOa,aAAwBH,EAAa,CAC1C5W,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAAC4D,IAGH,OACE,mCACGpB,EAAeS,KAAI,SAACC,GACnB,IAAIc,EAAeF,EAAgBZ,GAEnC,GAAIA,EAAMJ,aAAeC,IAAWmD,KAClC,OACE,cAAC,GAAD,CAEE9O,GAAI8L,EAAM9L,GACV6M,KAAMf,EAAM9L,GAAG8M,WACfnJ,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBkC,EAAM/H,WAAWgJ,aAC7C/I,aAAcsF,EAAewC,EAAM9L,IACnCpK,EAAGoX,WAAWlB,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGmX,WAAWlB,EAAM/H,WAAW8C,KAAO,GACtC/C,UAAU,EACVvQ,MAAOuY,EAAM/H,WAAWxQ,MACxBC,OAAQsY,EAAM/H,WAAWvQ,OACzBqQ,UAAWA,EACX0E,SAAUuD,EAAM/H,WAAWwE,SAC3BiE,YAAaA,EACbrE,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3C0E,YAAarB,EAAM/H,WAAWoJ,YAC9BzE,WAAYoD,EAAM/H,WAAW2E,WAC7B0E,cAAetB,EAAM/H,WAAWqJ,cAChCzE,cAAeiE,EAAahX,EAC5BgT,cAAegE,EAAa/W,EAC5BoX,MAAOnB,EAAM/H,WAAWkJ,MACxBC,MAAOpB,EAAM/H,WAAWmJ,MACxBlD,QAAS8B,EAAM/H,WAAWiG,QAC1BjG,WAAY+H,EAAM/H,WAClBI,SAAU,kBAAMmI,EAAgBR,IAChC9C,WACG8C,EAAMuB,cAAgBd,IAAce,IAAWC,QAElDtN,SAAU,SAACuN,GAAD,OAAYvN,EAAS6L,EAAO0B,IACtCpJ,QAAS,SAACqJ,GAAD,OAAUrJ,EAAQ0H,EAAO2B,IAClCvD,UAAS4B,EAAMC,cACf9H,YAAaA,GA/BR6H,EAAM9L,IAmCjB,IAAIiP,EAAOF,EAAUjD,GACrB,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV6M,KAAMf,EAAM9L,GAAG8M,WACfoC,KAAMpD,EAAM/H,WAAWmL,KACvBvB,WAAYsB,EAAKE,UACjBvB,SACEqB,EAAKG,UAAL,cACWzF,KAAOC,UADlB,YAC+BqF,EAAKG,UADpC,KAEI,KAENvB,eAAgBA,EAChB7J,aAAcsF,EAAewC,EAAM9L,IACnC+N,WAAYA,EACZvQ,SAAUsO,EAAM/H,WAAWsL,KAC3BC,KAAMxD,EAAM/H,WAAWvO,MACvBiV,YAAaqB,EAAM/H,WAAWuG,OAC9BA,OAAQwB,EAAM/H,WAAWwL,OACzBC,eAAe,EACf5Z,EAAGoX,WAAWlB,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGmX,WAAWlB,EAAM/H,WAAW8C,KAAO,GACtCoG,MAAOnB,EAAM/H,WAAWkJ,MACxBC,MAAOpB,EAAM/H,WAAWmJ,MACxB7Z,QAAS,EACTC,QAAS,EAGT0W,QAAS8B,EAAM/H,WAAWiG,QAC1BzB,SAAUuD,EAAM/H,WAAWwE,SAC3BJ,QACG2D,EAAM/H,WAAWoE,QAAU,IACD,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,GAEtCJ,QACG0D,EAAM/H,WAAWqE,QAAU,IACD,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,GAEtC0E,YAAarB,EAAM/H,WAAWoJ,YAC9BzE,WAAYoD,EAAM/H,WAAW2E,WAC7B0E,cAAetB,EAAM/H,WAAWqJ,cAChCzE,cAAeiE,EAAahX,EAC5BgT,cAAegE,EAAa/W,EAC5BqU,UAAS4B,EAAMC,cACf5H,SAAU,kBAAMmI,EAAgBR,IAChC9C,WAAY8C,EAAMuB,cAAgBd,IAAce,IAAWC,QAC3DtN,SAAU,SAACuN,GAAD,OAAYvN,EAAS6L,EAAO0B,IACtCpJ,QAAS,SAACqJ,GAAD,OAAUrJ,EAAQ0H,EAAO2B,IAClCxJ,YAAaA,GA9CR6H,EAAM9L,UAsDRQ,OAAMC,KAAKkO,ICwPXc,GAlYD,SAAC,GA8BR,IA7BLzP,EA6BI,EA7BJA,GACArD,EA4BI,EA5BJA,KACA/G,EA2BI,EA3BJA,EACAC,EA0BI,EA1BJA,EACAtC,EAyBI,EAzBJA,MACAC,EAwBI,EAxBJA,OACAkc,EAuBI,EAvBJA,OACArF,EAsBI,EAtBJA,OACAsF,EAqBI,EArBJA,QACAC,EAoBI,EApBJA,SACAC,EAmBI,EAnBJA,kBACAC,EAkBI,EAlBJA,cACAC,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,YACAC,EAeI,EAfJA,YACAC,EAcI,EAdJA,aACAC,EAaI,EAbJA,UACAC,EAYI,EAZJA,MACAjM,EAWI,EAXJA,SACAlE,EAUI,EAVJA,SACAmE,EASI,EATJA,QACA+I,EAQI,EARJA,YACAzE,EAOI,EAPJA,WACA0E,EAMI,EANJA,cACAzE,EAKI,EALJA,cACAC,EAII,EAJJA,cACA7E,EAGI,EAHJA,WACAE,EAEI,EAFJA,YACG7C,EACC,sVACEmD,EAAWD,mBACX+L,EAAkB,SAACrI,GACvB7D,KAEImM,EAAgB,SAACtI,GACrB,GAAI/H,EAAU,CACZ,IAAMsQ,EAAoBC,IAAkB7E,IAAW8E,OAAO9T,GAC9DsD,EACEqL,IAAEoF,KACA,CACE/J,KAAMC,aAAWoB,EAAEtJ,OAAO9I,IAAMia,EAAkBja,GAClDiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,IAAMga,EAAkBha,IAEnD0a,EAAkB/E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAK9C6G,EAAqB,SAAC3I,GAC1B,GAAI/H,EAAU,CACZ,IAAMsQ,EAAoBC,IAAkB7E,IAAW8E,OAAO9T,GACxDqI,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACd7U,EAAQoJ,IAAS2Q,IAAWsD,QAAU5L,EAAKzR,QAAUyR,EAAK6L,UAC1Drd,EACJmJ,IAAS2Q,IAAWsD,QAAU5L,EAAKxR,SAAWwR,EAAK8L,UAC/CzI,EAAUnD,KAAKoD,IACc,IAAjCpD,KAAKoD,IAAI1B,aAAWwB,IAAiBA,EAASD,GAIhDnD,EAAKmD,OAAOA,EAAS,EAAI,GAAK,GAC9BnD,EAAKoD,OAAOA,EAAS,EAAI,GAAK,GAE9BnI,EACEqL,IAAEoF,KACA,CACE/J,KAAMC,aAAW5B,EAAKpP,IAAMia,EAAkBja,GAC9CiR,IAAKD,aAAW5B,EAAKnP,IAAMga,EAAkBha,GAC7CtC,MAAOqT,aACL1B,KAAKC,IAAI,EAAG5R,EAAQ2R,KAAKoD,IAAIH,IAAW0H,EAAkBtc,OAE5DC,OAAQoT,aACN1B,KAAKC,IAAI,EAAG3R,EAAS0R,KAAKoD,IAAIF,IAAWyH,EAAkBrc,QAE7Dkc,OAAQ1K,EAAK0K,OACT9I,aACE1B,KAAKC,IAAI,EAAGH,EAAK0K,SAAWxK,KAAKoD,IAAIF,IACnCyH,EAAkBH,QAEtB,EACJM,YAAahL,EAAKgL,YACdpJ,aACE1B,KAAKC,IAAI,EAAGH,EAAKgL,cAAgB9K,KAAKoD,IAAIF,IACxCyH,EAAkBG,aAEtB,EACJC,YAAajL,EAAKiL,YACdrJ,aACE1B,KAAKC,IAAI,EAAGH,EAAKiL,cAAgB/K,KAAKoD,IAAIF,IACxCyH,EAAkBI,aAEtB,EACJ1H,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBkC,OAAQ1D,aAAW5B,EAAKyF,cAAgBpC,GACxCK,WAAY9B,aAAW5B,EAAK0D,aAAeL,GAC3CM,cAAe/B,aACb7C,EAAW4E,cAAgBzD,KAAKoD,IAAIH,IAEtCS,cAAehC,aACb7C,EAAW6E,cAAgB1D,KAAKoD,IAAIF,IAEtC2I,cAAenK,aAAW7C,EAAWgN,cAAgB1I,GACrD2I,eAAgBpK,aAAW7C,EAAWiN,eAAiB3I,GACvD4I,iBAAkBrK,aAAW7C,EAAWkN,iBAAmB5I,GAC3D6I,kBAAmBtK,aACjB7C,EAAWmN,kBAAoB7I,GAEjCgC,OAAQA,EAAOwB,KAAI,SAACsF,EAAO1b,GAAR,OACjBA,EAAQ,IAAM,EACVmR,aAAWuK,EAAQjM,KAAKoD,IAAIH,IAC5BvB,aAAWuK,EAAQjM,KAAKoD,IAAIF,QAGpCmI,EAAkB/E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAQpD,OAHA1E,qBAAU,WACJnB,GAAejE,GAAIiE,EAAYjE,GAAI,KACtC,IAED,mCACGrD,IAAS2Q,IAAW8D,KACnB,cAAC,KAAD,2BACMhQ,GADN,IAEEkG,IAAK/C,EACL4I,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDsH,aAAcA,EACdta,EAAGA,EACHC,EAAGA,EACHtC,MAAOA,EACPC,OAAQA,EACR+T,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAW+D,OACtB,cAAC,KAAD,2BACMjQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH6Z,OAAQA,EACRvC,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWsD,QACtB,cAAC,KAAD,2BACMxP,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHgb,QAAStd,EACTud,QAAStd,EACT2Z,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWgE,KACtB,cAAC,KAAD,2BACMlQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHma,YAAaA,EACbC,YAAaA,EACbE,UAAWA,EACXhD,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWiE,KACtB,cAAC,KAAD,2BACMnQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHma,YAAaA,EACbC,YAAaA,EACb9C,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWkE,eACtB,cAAC,KAAD,2BACMpQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH6Z,OAAQA,EACR+B,MAAOtB,EACPhD,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWoE,MACtB,cAAC,KAAD,2BACMtQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH6Z,OAAQA,EACRU,MAAOA,EACPjD,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWqE,IACtB,cAAC,KAAD,2BACMvQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHma,YAAaA,EACbC,YAAaA,EACbG,MAAOA,EACPjD,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB7H,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWsE,MAAQjV,IAAS2Q,IAAWuE,IAClD,cAAC,KAAD,2BACMzQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRsF,QAASA,EACTC,SAAUA,EACVzC,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB5H,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAWwE,QACtB,cAAC,KAAD,2BACM1Q,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRsF,QAASA,EACTC,SAAUA,EACVzC,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACX8R,QAAQ,EACRnS,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB5H,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAAS2Q,IAAW0E,MACtB,cAAC,KAAD,2BACM5Q,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRsF,QAASA,EACTC,SAAUA,EACVE,cAAeA,EACfC,aAAcA,EACd5C,YAAa5I,EAASU,QAAUkI,EAAc,KAC9CzE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5C0E,cAAe7I,EAASU,QAAUmI,EAAgB,KAClDzE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAasI,EACbpI,UAAWqI,EACXpI,eAAgByI,EAChB5H,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAG1D,gCCvYF6N,GAAS,SAAC7Q,GAAW,IAEvB+J,EASE/J,EATF+J,OACA+G,EAQE9Q,EARF8Q,aACA5F,EAOElL,EAPFkL,gBACAE,EAMEpL,EANFoL,YACAD,EAKEnL,EALFmL,UACAjD,EAIElI,EAJFkI,eACArJ,EAGEmB,EAHFnB,SACAmE,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAW8E,SACvD,CAAC,eACD,CAAC,WAEL,CAACtF,IAEGuB,EAAkBnO,uBACtB,SAACuN,GACC,OAAOa,aAAwBH,EAAa,CAC1C5W,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAAC4D,IAEG2F,EAAuB5T,uBAAY,SAACuN,GACxC,MAAoC,WAAhCA,EAAM/H,WAAWqO,WACZ,CACLxc,EAAG,CAAC0X,IAAW8D,KAAM9D,IAAWsD,SAAS5K,SAAS8F,EAAMJ,YACpDI,EAAM/H,WAAWuG,OAAS,EAC1B,EACJzU,EAAG,CAACyX,IAAW8D,KAAM9D,IAAWsD,SAAS5K,SAAS8F,EAAMJ,YACpDI,EAAM/H,WAAWuG,OAAS,EAC1B,EACJ9W,QAASsY,EAAM/H,WAAWuG,OAAS,EACnC/W,OAAQuY,EAAM/H,WAAWuG,OAAS,EAClCoF,QAAS5D,EAAM/H,WAAWuG,OAAS,EACnCwF,eAAgBhE,EAAM/H,WAAWuG,OAAS,EAC1CyF,cAAejE,EAAM/H,WAAWuG,OAAS,EACzC0F,YAAalE,EAAM/H,WAAWuG,OAAS,EACvC2F,aAAcnE,EAAM/H,WAAWuG,OAAS,GAER,YAAhCwB,EAAM/H,WAAWqO,WACZ,CACLxc,EAAG,CAAC0X,IAAW8D,KAAM9D,IAAWsD,SAAS5K,SAAS8F,EAAMJ,aACnDI,EAAM/H,WAAWuG,OAAS,EAC3B,EACJzU,EAAG,CAACyX,IAAW8D,KAAM9D,IAAWsD,SAAS5K,SAAS8F,EAAMJ,aACnDI,EAAM/H,WAAWuG,OAAS,EAC3B,EACJ9W,OAAQsY,EAAM/H,WAAWuG,OAAS,EAClC/W,MAAOuY,EAAM/H,WAAWuG,OAAS,EACjCoF,OAAQ5D,EAAM/H,WAAWuG,OAAS,EAClCwF,cAAehE,EAAM/H,WAAWuG,OAAS,EACzCyF,aAAcjE,EAAM/H,WAAWuG,OAAS,EACxC0F,aAAclE,EAAM/H,WAAWuG,OAAS,EACxC2F,YAAanE,EAAM/H,WAAWuG,OAAS,GAEpC,CACL1U,EAAG,EACHC,EAAG,EACHrC,OAAQ,EACRD,MAAO,EACPmc,OAAQ,EACRI,cAAe,EACfC,aAAc,EACdC,YAAa,EACbC,YAAa,KAEd,IAEH,OACE,qCACG7E,EAAeS,KAAI,SAACC,GACnB,IAAIc,EAAeF,EAAgBZ,GAC/B+D,EAAoBsC,EAAqBrG,GAE7C,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACVrD,KAAMmP,EAAM/H,WAAWpH,KACvB/G,EAAGoX,WAAWlB,EAAM/H,WAAW4C,KAAOkJ,EAAkBja,GAAK,GAC7DC,EAAGmX,WAAWlB,EAAM/H,WAAW8C,IAAMgJ,EAAkBha,GAAK,GAC5DtC,MAAO2R,KAAKoD,IAAIwD,EAAM/H,WAAWxQ,MAAQsc,EAAkBtc,OAC3DC,OAAQ0R,KAAKoD,IACXwD,EAAM/H,WAAWvQ,OAASqc,EAAkBrc,QAE9Ckc,OAAQxK,KAAKoD,IACXwD,EAAM/H,WAAW2L,OAASG,EAAkBH,QAE9CG,kBAAmBA,EACnBxF,OACEyB,EAAM/H,WAAWsG,OACbgI,aAA6BvG,EAAM/H,WAAWsG,QAC9C,GAENrG,aAAcsF,EAAewC,EAAM9L,IACnC8P,cAAe5K,KAAKoD,IAClBwD,EAAM/H,WAAW+L,cAAgBD,EAAkBC,eAErDC,aAAc7K,KAAKoD,IACjBwD,EAAM/H,WAAWgM,aAAeF,EAAkBE,cAEpDJ,QAAS7D,EAAM/H,WAAW4L,QAC1BC,SAAU9D,EAAM/H,WAAW6L,SAC3BI,YAAa9K,KAAKoD,IAChBwD,EAAM/H,WAAWiM,YAAcH,EAAkBG,aAEnDC,YAAa/K,KAAKoD,IAChBwD,EAAM/H,WAAWkM,YAAcJ,EAAkBI,aAEnDE,UAAWrE,EAAM/H,WAAWoM,UAC5BD,aAAc,CACZpE,EAAM/H,WAAWgN,cACjBjF,EAAM/H,WAAWiN,eACjBlF,EAAM/H,WAAWkN,iBACjBnF,EAAM/H,WAAWmN,mBAEnB3I,SAAUuD,EAAM/H,WAAWwE,SAC3B6H,MAAOtE,EAAM/H,WAAWqM,MACxBpG,QAAS8B,EAAM/H,WAAWiG,QAC1B7B,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3C0E,YAAarB,EAAM/H,WAAWoJ,YAC9BzE,WAAYoD,EAAM/H,WAAW2E,WAC7B0E,cAAetB,EAAM/H,WAAWqJ,cAChCzE,cAAeiE,EAAahX,EAC5BgT,cAAegE,EAAa/W,EAC5BoX,MAAOnB,EAAM/H,WAAWkJ,MACxBC,MAAOpB,EAAM/H,WAAWmJ,MACxBoC,KAAMxD,EAAM/H,WAAWvO,MACvBiV,YAAaqB,EAAM/H,WAAWuG,OAC9BA,OAAQwB,EAAM/H,WAAWwL,OACzBC,eAAe,EACf8C,yBACiC,WAA/BxG,EAAM/H,WAAWwO,UACb,KACAzG,EAAM/H,WAAWwO,UAEvB1F,KAAMf,EAAM9L,GAAG8M,WACf5C,UAAS4B,EAAMC,cACfhI,WAAY+H,EAAM/H,WAClB8E,oBAAoB,EACpB1E,SAAU,kBAAMmI,EAAgBR,IAChC9C,WAAY8C,EAAMuB,cAAgBd,IAAce,IAAWC,QAC3DtN,SAAU,SAACuN,GAAD,OAAYvN,EAAS6L,EAAO0B,IACtCpJ,QAAS,SAACqJ,GAAD,OAAUrJ,EAAQ0H,EAAO2B,IAClCxJ,YAAaA,GArER6H,EAAM9L,OAyEhBkS,EACC,cAAC,GAAD,CACEvV,KAAMuV,EAAanO,WAAWpH,KAC9B/G,EAAGoX,WAAWkF,EAAanO,WAAW4C,MAAQ,GAC9C9Q,EAAGmX,WAAWkF,EAAanO,WAAW8C,KAAO,GAC7CtT,MAAO2e,EAAanO,WAAWxQ,MAC/BC,OAAQ0e,EAAanO,WAAWvQ,OAChCkc,OAAQxK,KAAKoD,IAAI4J,EAAanO,WAAW2L,QACzCU,MAAO8B,EAAanO,WAAWqM,MAC/B/F,OACE6H,EAAanO,WAAWsG,OACpBgI,aAA6BH,EAAanO,WAAWsG,QACrD,GAENyF,cAAeoC,EAAanO,WAAW+L,cACvCC,aAAcmC,EAAanO,WAAWgM,aACtCJ,QAASuC,EAAanO,WAAW4L,QACjCC,SAAUsC,EAAanO,WAAW6L,SAClCI,YAAa9K,KAAKoD,IAAI4J,EAAanO,WAAWiM,aAC9CC,YAAa/K,KAAKoD,IAAI4J,EAAanO,WAAWkM,aAC9CE,UAAW+B,EAAanO,WAAWoM,UACnCb,KAAM4C,EAAanO,WAAWvO,MAC9BiV,YAAayH,EAAanO,WAAWuG,OACrCA,OAAQ4H,EAAanO,WAAWwL,OAChCC,eAAe,EACfzL,WAAYmO,EAAanO,WACzB8E,oBAAoB,IAGtB,iCAMOrI,OAAMC,KAAKwR,IChEXO,GAnIc,SAAC,GAIvB,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBAEMC,EAAQtO,mBACRuO,EAAYxH,mBAChB,kBACEoH,IACCA,EAAc1O,WAAW+O,YACxBL,EAAc1O,WAAWgP,aACzB,CACEzF,IAAW+D,OACX/D,IAAWgE,KACXhE,IAAWiE,KACXjE,IAAWkE,eACXlE,IAAWoE,MACXpE,IAAWqE,KACX3L,SAASyM,EAAc1O,WAAWpH,OACrB,UAAf+V,KACJ,CAACD,EAAeC,IAoBlBtN,qBAAU,YAjBQ,WAChB,GAAIqN,EAAe,CACjB,IAEMO,EAFQJ,EAAM3N,QAAQgO,WAEDC,QAAQ,IAAMT,EAAczS,IACvD,GAAIgT,IAAiBJ,EAAM3N,QAAQD,OACjC,OAGEgO,EACFJ,EAAM3N,QAAQkO,MAAM,CAACH,IAErBJ,EAAM3N,QAAQmO,SAEhBR,EAAM3N,QAAQoO,WAAWC,aAI3BC,MAGF,IAiCMC,EAAqB,SAACC,EAAOC,GAEjC,OAtBwB,SAACD,EAAOC,EAAUvC,GAC1C,IAAMvb,EAAIsP,KAAKkF,MACb+G,EAAMvb,GACH6d,EAAM7d,EAAIub,EAAMvb,GAAKsP,KAAKyO,IAAID,IAC9BD,EAAM5d,EAAIsb,EAAMtb,GAAKqP,KAAK0O,IAAIF,IAE7B7d,EAAIqP,KAAKkF,MACb+G,EAAMtb,GACH4d,EAAM7d,EAAIub,EAAMvb,GAAKsP,KAAK0O,IAAIF,IAC9BD,EAAM5d,EAAIsb,EAAMtb,GAAKqP,KAAKyO,IAAID,IAGnC,OAAO,2BACFD,GADL,IAEElL,SAAUkL,EAAMlL,SAAWmL,EAC3B9d,IACAC,MAMKge,CAAkBJ,EAAOC,EAnChB,SAACD,GACjB,MAAO,CACL7d,EACE6d,EAAM7d,EACL6d,EAAMlgB,MAAQ,EAAK2R,KAAKyO,IAAIF,EAAMlL,UAClCkL,EAAMjgB,OAAS,EAAK0R,KAAK0O,KAAKH,EAAMlL,UACvC1S,EACE4d,EAAM5d,EACL4d,EAAMjgB,OAAS,EAAK0R,KAAKyO,IAAIF,EAAMlL,UACnCkL,EAAMlgB,MAAQ,EAAK2R,KAAK0O,IAAIH,EAAMlL,WAyBxBuL,CAAUL,KAwB3B,OAAIhB,EAEA,cAAC,KAAD,CACEnL,IAAKsL,EACLC,UAAWA,EACXkB,eACEpB,EACI,GACAE,EACA,CAAC,WAAY,YAAa,cAAe,gBACzC,CACE,WACA,aACA,YACA,eACA,cACA,cACA,gBACA,gBAGRmB,eAAgBrB,EAChBsB,aArCe,SAACC,EAAaC,GACjC,IACMC,EAPgB,SAACC,GACvB,IAAM9L,EAAW8L,EAAM,EAAI,EAAInP,KAAKoP,GAAKD,EAAMA,EACzCE,EAAMrP,KAAKoP,GAAK,GACtB,OAAOpP,KAAKkF,MAAM7B,EAAWgM,GAAOA,EAGjBC,CAAgBL,EAAY5L,UACrB2L,EAAY3L,SACtC,MAAmB,UAAfmK,EACEyB,EAAY5L,SAAW2L,EAAY3L,WAAa,EAC3C4L,EAELjP,KAAKoD,IAAI8L,GAAQ,EACZZ,EAAmBU,EAAaE,GAElCF,EAEFC,GA0BHM,aAAc9B,EAAmB,MAAQ,OAGxC,8B,mBCvFH7R,GAAalD,YAAOmD,KAAV,wEAAGnD,CAAsB+C,KACnC+T,GAAiB9W,YAAOkD,IAAV,4EAAGlD,CAAH,gEAmkBL+W,GA3jBD,SAAC,GAQR,IAAD,EAPJC,EAOI,EAPJA,iBACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBACI,EAEoC3T,mBAAS,IAF7C,mBAEG4T,EAFH,KAEiBC,EAFjB,KAGEC,EAAkB/Q,iBAAO,MACzBgR,EAAWhR,iBAAO,GAClBiR,EAAcjR,iBAAO,GALvB,EAMoB/C,mBAAS,GAN7B,mBAMGiU,EANH,KAMSC,EANT,KAQEhU,EAAWC,cARb,EAS2BgU,eAAvBniB,EATJ,EASIA,MAAOC,EATX,EASWA,OAAQ8T,EATnB,EASmBA,IAEjBzD,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aACtD7F,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QACjD2D,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1B+Q,EAAa9Q,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa4Q,cACvDlG,EAAc5K,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa0K,eACxDD,EAAY3K,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAayK,aACtDpD,EAAiBvH,aAAY,SAACC,GAAD,OAAWA,EAAM8T,eAAe1Q,WAC7D2Q,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAC3D6Q,EAAelU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAcE,UAC1DC,EAAepU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAcI,UAC1DC,EAAWtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYC,QACpDvI,EAAiBjM,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYrI,cAC1DuI,EAAYzU,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAaF,QACtDG,EAAe3U,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAarR,WACzDqE,EAAiB1H,aACrB,SAACC,GAAD,OAAWA,EAAMyU,aAAahN,kBAE1BkN,EAAgB5U,aACpB,SAACC,GAAD,OAAWA,EAAMyU,aAAaE,iBAGhCpR,qBAAU,WACR,OAAQoR,GACN,KAAKC,KAAcC,aACjB,GAAIrB,EAAgBpQ,QAAS,CAC3B,IAAI6G,EAAK,2BACJuJ,EAAgBpQ,SADZ,IAEPlB,WAAW,2BACNsR,EAAgBpQ,QAAQlB,YADnB,IAERsG,OAAQgI,aACNgD,EAAgBpQ,QAAQlB,WAAWsG,YAIzC5I,EAASkV,aAAYf,EAAc5V,GAAI8L,IACvCrK,EAASmV,YAAatJ,IAAWC,UAEnC,MACF,KAAKkJ,KAAcI,cAEjBxB,EAAgBpQ,QAAU,KAC1BxD,EAASqV,aAAiB,UAK7B,CAACN,IAEJO,MAAY,WACNxK,IAAce,IAAWC,SAC3BkI,EAAQD,EAAO,KAEhB,IAAMtQ,KAAK8R,IAAIzB,EAAYtQ,QAAUqQ,EAASrQ,QAAU,EAAIsQ,EAAYtQ,QAAUqQ,EAASrQ,SAAWsQ,EAAYtQ,QAAUqQ,EAASrQ,SAAW,EAAG,KAAO,IAE7J8R,MAAY,WACNxK,IAAce,IAAWC,UAC3BgI,EAAYtQ,QAAUsQ,EAAYtQ,QAAU,KAE7C,GAEH,IAAMgS,EAAkB1Y,uBACtB,SAACyJ,GAEKuE,IAAce,IAAWC,UACJvF,EAAEtJ,SAAWsJ,EAAEtJ,OAAOuU,YACvBsD,GACpB9U,EAAS6K,aAAgB,UAI/B,CAAC7K,EAAU8K,EAAWgK,IAElBW,GAAyB3Y,uBAC7B,SAACyJ,GACC,GAAIuE,IAAce,IAAWC,QAAS,CACpC,IAAMlN,EAAW8W,aAA2BpC,EAAS9P,SACrD,GAAKoQ,EAAgBpQ,SAgCnB,GACE,CAACqI,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAAS9L,SACtDuG,GAEF,CACA,IAAIT,EAAK,2BACJuJ,EAAgBpQ,SADZ,IAEPlB,WAAW,2BACNsR,EAAgBpQ,QAAQlB,YADnB,IAERsG,OAAQgI,aACNgD,EAAgBpQ,QAAQlB,WAAWsG,YAIzCyB,EAAM/H,WAAWsG,OAASyB,EAAM/H,WAAWsG,OAAO+M,OAAO,CACvD/W,EAASzK,EAAIyf,EAAgBpQ,QAAQlB,WAAW4C,KAChDtG,EAASxK,EAAIwf,EAAgBpQ,QAAQlB,WAAW8C,IAChDxG,EAASzK,EAAIyf,EAAgBpQ,QAAQlB,WAAW4C,KAChDtG,EAASxK,EAAIwf,EAAgBpQ,QAAQlB,WAAW8C,MAGlDwO,EAAgBpQ,QAAU6G,OArDA,CAC5B,IAAIuL,EAAQ,2BACPC,KADO,IAEV5L,WAAYC,IAAW8E,MACvB1M,WAAW,2BACNuT,IAAavT,YADR,IAERpH,KAAM4P,EACNM,KAAMN,EACN5F,KAAMtG,EAASzK,EACfiR,IAAKxG,EAASxK,EACdL,MAAOogB,EAAc2B,WAAWC,qBAAuB,UACvDxN,QAAS4L,EAAc2B,WAAWE,uBAAyB,EAC3DlI,OACEqG,EAAc2B,WAAWG,sBAAwB,UACnDpN,OAAQsL,EAAc2B,WAAWI,sBAAwB,MAK3D,CAACrK,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAAS9L,SACtDuG,KAGF8K,EAAStT,WAAWuG,OAAS,EAC7B+M,EAAStT,WAAWsG,OAAS,CAAC,EAAG,EAAG,EAAG,IAErCkC,IAAce,IAAWuE,MAC3BwF,EAAStT,WAAWuG,OAAS,EAC7B+M,EAAStT,WAAWsG,OAAS,CAAC,EAAG,IAEnCgL,EAAgBpQ,QAAUoS,MA4BhC,CACE9K,EACA4K,KACA9B,EAAgBpQ,QAChB8P,EAAS9P,UAGP2S,GAAkBrZ,uBAAY,WAGlC,GAAIgO,IAAce,IAAWC,SAAW8H,EAAgBpQ,QAAS,CAC/D,IAAM5E,EAAW8W,aAA2BpC,EAAS9P,SAC/C1R,EAAQ8M,EAASzK,EAAIyf,EAAgBpQ,QAAQlB,WAAW4C,KACxDnT,EAAS6M,EAASxK,EAAIwf,EAAgBpQ,QAAQlB,WAAW8C,IACzDgR,EAAYxX,EAASzK,EAAIyf,EAAgBpQ,QAAQlB,WAAW4C,KAC5DmR,EAAYzX,EAASxK,EAAIwf,EAAgBpQ,QAAQlB,WAAW8C,IAClE,IACEwO,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,GACnDwlB,IACExC,EAAgBpQ,QAAQlB,WAAWsG,OACjCgL,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,IAEvDylB,IACEzC,EAAgBpQ,QAAQlB,WAAWsG,OACjCgL,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,MAIrDkjB,EAAYtQ,QAAUqQ,EAASrQ,QAAU,GACzCoQ,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,GACnD6S,KAAKoD,IACHuP,EACExC,EAAgBpQ,QAAQlB,WAAWsG,OACjCgL,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,IAErD,IACJ6S,KAAKoD,IACHwP,EACEzC,EAAgBpQ,QAAQlB,WAAWsG,OACjCgL,EAAgBpQ,QAAQlB,WAAWsG,OAAOhY,OAAS,IAErD,IACJ,CACA,IAAIyZ,EAAK,2BACJuJ,EAAgBpQ,SADZ,IAEPlB,WAAW,2BACNsR,EAAgBpQ,QAAQlB,YADnB,IAERsG,OAAO,YAAKgL,EAAgBpQ,QAAQlB,WAAWsG,QAC/C9W,MACE+Z,IAAWsD,UAAYyE,EAAgBpQ,QAAQyG,YAC/CnY,EAAQ,EACJA,EACA,EACNC,OACE8Z,IAAWsD,UAAYyE,EAAgBpQ,QAAQyG,YAC/ClY,EAAS,EACLA,EACA,EACNkc,OAAQxK,KAAKoD,IAAI/U,GACjByc,YAAa9K,KAAKoD,IAAI/U,GAAS,IAC/B0c,YAAa/K,KAAKoD,IAAI/U,OAIxB,CAAC+Z,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAAS9L,SACtDuG,IAGFT,EAAM/H,WAAWsG,OAAO0N,QAAQ,EAAG,EAAGF,EAAWC,GAE/CvL,IAAce,IAAWuE,MAC3B/F,EAAM/H,WAAWsG,OAAO1F,KAAKkT,GAC7B/L,EAAM/H,WAAWsG,OAAO1F,KAAKmT,IAE/BzC,EAAgBpQ,QAAU6G,EAG9BwJ,EAASrQ,QAAUsQ,EAAYtQ,WAEhC,CACDsH,EACA8I,EAAgBpQ,QAChBkS,KACApC,EAAS9P,QACTsQ,EAAYtQ,UAER+S,GAAgBzZ,uBACpB,SAACyJ,GAGI,CACCsF,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACX9L,SAASuG,IAEX9K,EAASqV,aAAiBL,KAAcC,eAE1C,IAAMrW,EAAW8W,aAA2BpC,EAAS9P,SACrDmQ,EAAgB/U,KAElB,CAACoB,EAAU8K,EAAW4K,KAA4B/B,IAE9C6C,GAA2B1Z,uBAC/B,SAACyJ,GACC,IAAM3H,EAAW8W,aAA2BpC,EAAS9P,SAEnD,CACEqI,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACX9L,SAASuG,IACX8I,EAAgBpQ,SAChBkQ,EAAavf,IAAMyK,EAASzK,GAC5Buf,EAAatf,IAAMwK,EAASxK,GAE5B4L,EAASqV,aAAiBL,KAAcC,iBAG5C,CACEjV,EACA8K,EACA4K,KACA9B,EAAgBpQ,QAChBkQ,IAGE+C,GAAkB3Z,uBACtB,SAACC,GAEC,GADAA,EAAM2Z,IAAIC,iBACe,OAArBrD,EAAS9P,SAAoBzG,EAAM2Z,IAAIE,QAAS,CAClD,IAAMC,EAAQvD,EAAS9P,QACjBsT,EAAWD,EAAMnQ,SAF2B,EAGbmQ,EAAME,qBAAhCC,EAHuC,EAG1C7iB,EAAgB8iB,EAH0B,EAG7B7iB,EACf8iB,EAAe,CACnB/iB,GAAI6iB,EAAWH,EAAM1iB,KAAO2iB,EAC5B1iB,GAAI6iB,EAAWJ,EAAMziB,KAAO0iB,GAExBK,EAAW1T,KAAKC,IACpBD,KAAK8R,IACHxY,EAAM2Z,IAAIU,OAAS,EAAIN,EAhSjB,QAgSsCA,EAC5C,IAEF,KAEF9W,EAASxD,YAAQ2a,IACjB,IAAME,EAAS,CACbljB,EAAG6iB,EAAWE,EAAa/iB,EAAIgjB,EAC/B/iB,EAAG6iB,EAAWC,EAAa9iB,EAAI+iB,GAEjCN,EAAMjY,SAASyY,GACfR,EAAMhF,eAGV,CAAC7R,EAAUsT,EAAS9P,UAEhBmE,GAAkB7K,uBACtB,SAAC8Q,IACKxL,EAAUtQ,MAAQ8b,EAAK9b,OAASsQ,EAAUrQ,OAAS6b,EAAK7b,SAC1DiO,EACEsX,YAAkB,CAChBxlB,MAAO2R,KAAKC,IAAItB,EAAUtQ,MAAO8b,EAAK9b,OACtCC,OAAQ0R,KAAKC,IAAItB,EAAUrQ,OAAQ6b,EAAK7b,aAKhD,CAACiO,EAAUoC,IAEPmV,GAAwBza,uBAC5B,SAACuN,EAAO0B,GACN/L,EACEwX,aAAY,2BACPnN,GADM,IAET/H,WAAW,2BACN+H,EAAM/H,YACNyJ,SAKX,CAAC/L,IAEGyX,GAAoB3a,uBACxB,SAACuN,GACCrK,EAAS6K,aAAgBR,MAE3B,CAACrK,IAEG0X,GAAmB5a,uBACvB,SAACuN,EAAO2B,GACNoH,EAAsB/I,EAAM9L,GAAIyN,KAElC,CAACoH,IAEGuE,GAAgB7a,uBACpB,SAACoP,GACClM,EAAS4X,aAAuB1L,MAElC,CAAClM,IAGG6X,GAA4B/a,uBAChC,WAAqB,IACfgb,EADLC,IAAmB,yDAEdA,GACFD,EAAiB/M,EAAc,KACT,MAAK+M,EAAiB,IAE5CA,EAAiB/M,EAAc,IACV,IAAG+M,EAAiB,KAE3CzE,EAAsByE,KAExB,CAAC/M,EAAasI,IAEV2E,GAAkBlb,uBACtB,SAACmb,EAASjM,GACRhM,EAASkY,aAAgB,CAAEC,IAAKF,EAAS/a,MAAO8O,OAElD,CAAChM,IAGH,OACE,eAACpC,EAAA,GAAD,GACE9L,MAAM,OACNC,OAAO,OACP8L,QAAQ,OACRG,eAAe,SACfF,cAAc,SACdG,WAAW,SACXma,OAAO,OACPxZ,SAAS,WACTL,GAAG,iBATL,yBAUW,YAVX,oBAWOsH,GAXP,0BAaE,eAAC,KAAD,CACE/T,MAAOA,EACPC,OAAQA,EACRsmB,YAAa7C,EACb8C,mBAAoB7C,GACpB8C,mBAAoBpC,GACpBqC,iBAAkBjC,GAClBkC,WAAYjC,GACZkC,aAAclD,EACdmD,QAASlC,GACT/P,OAAQnK,GAAQ,EAChBoK,OAAQpK,GAAQ,EAChBuK,SAAUiE,EACV5W,EAAGrC,EAAQ,EACXsC,EAAGrC,EAAS,EACZH,QAASwQ,EAAUtQ,MAAQ,EAC3BD,QAASuQ,EAAUrQ,OAAS,EAC5B8T,IAAKyN,EACLxN,UAAWgF,IAAce,IAAWC,QACpC8M,MAAO,CACLC,OAAQ/N,IAAce,IAAWC,QAAU,UAAY,aApB3D,UAuBE,eAAC,KAAD,CAAOjG,IAAK0N,EAAchM,WAAW,EAArC,UAEE,cAAC,KAAD,CACEpT,EAAG,EACHC,EAAG,EACHtC,MAAOsQ,EAAUtQ,MACjBC,OAAQqQ,EAAUrQ,OAClB8b,KAC+B,gBAA7BsG,EAAc2E,WACV3E,EAAc2E,WACd,IAAM3E,EAAc2E,WAE1BvR,WAAW,IAEb,cAAC,GAAD,CACEiD,QAAS9C,EACTgC,OAAQkL,EACR/M,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAawV,QAGjB,cAAC,KAAD,CAAOzQ,WAAW,EAAlB,SACE,cAAC,GAAD,CACEG,eAAgBA,EAChBxH,eAAgBA,EAChB0H,UAAWuM,EAAc2B,WACzBjO,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAawV,OAGjB,eAAC,KAAD,CAAOnS,IAAK2N,EAAZ,UACE,cAAC,GAAD,CACE9J,OAAQkL,EACRlN,eAAgBA,EAChBG,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAawV,KAEf,cAAC,GAAD,CACEtO,OAAQkL,EACRxS,UAAWA,EACX2I,YAAaA,EACb+J,aAAcA,EACdhK,UAAWA,EACXjD,eAAgBA,EAChBF,gBAAiBA,GACjBkD,gBAAiB4M,GACjBjZ,SAAU+Y,GACV5U,QAAS+U,GACTlV,YAAawV,KAEf,cAAC,GAAD,CACEtO,OAAQkL,EACRnE,aAAcmD,EAAgBpQ,QAC9BuH,YAAaA,EACbD,UAAWA,EACXgK,aAAcA,EACdjN,eAAgBA,EAChBgD,gBAAiB4M,GACjBjZ,SAAU+Y,GACV5U,QAAS+U,GACTlV,YAAawV,KAEf,cAAC,GAAD,CACEtO,OAAQkL,EACR/H,MAAO4H,EACPrI,eAAgBA,EAChBhK,UAAWA,EACX0I,UAAWA,EACXC,YAAaA,EACblD,eAAgBA,EAChBiN,aAAcA,EACdjK,gBAAiB4M,GACjBjZ,SAAU+Y,GACVjL,WAAYqL,GACZhV,QAAS+U,GACTlV,YAAawV,QAGjB,cAAC,KAAD,CAAOnS,IAAK4N,EAAiBlM,WAAW,EAAxC,SACE,cAAC,GAAD,CACEG,eAAgBA,EAChBxH,eAAgBA,EAChB2H,eAAgBA,EAChBD,UAAWuM,EAAc2B,WACzBnO,gBAAiBA,GACjBnF,YAAawV,OAGjB,eAAC,KAAD,WACE,cAAC,GAAD,CACEtQ,eAAgBA,EAChBxH,eAAgBA,EAChB2H,eAAgBA,EAChBzF,UAAWA,EACXwF,UAAWuM,EAAc2B,WACzBnO,gBAAiBA,GACjBnF,YAAawV,KAEf,cAAC,GAAD,CACEhH,cAAe8D,EACf7D,WAAYA,KAEbkC,GACC2B,GAAiB3B,EAAiB2B,EAAavW,IAQ/C,6BAPA,cAAC,GAAD,CACEyS,cAAe4D,EAAUrH,MACvB,SAACvD,GAAD,OAAUmJ,EAAiBnJ,EAAKzL,OAElC2S,kBAAkB,UAO1B,eAACtT,EAAA,EAAD,CAAKgB,SAAS,WAAWma,MAAOjE,EAAe,QAAU,EAAG1P,IAAK,EAAjE,UACE,cAAC,EAAD,CAAc7D,MAAM,cAAc3C,SAAS,SAAS5C,OAAK,EAAzD,SACE,cAACiX,GAAD,CAAgB9U,QAAS,kBAAM0Z,IAA0B,IAAzD,SACE,cAACmB,GAAA,EAAD,QAGJ,cAAC,EAAD,CAAczX,MAAM,eAAe3C,SAAS,SAAS5C,OAAK,EAA1D,SACE,cAACiX,GAAD,CAAgB9U,QAAS,kBAAM0Z,IAA0B,IAAzD,SACE,cAACoB,GAAA,EAAD,WAIL5E,IAAiBE,EAChB,cAAC3W,EAAA,EAAD,CACE9L,MAAM,OACNC,OAAO,OACPmnB,QAAQ,UACRta,SAAS,WACTsG,KAAK,IACLE,IAAI,IANN,SAQE,cAACxH,EAAA,EAAD,CACEgB,SAAS,WACTwG,IAAI,mBACJ2T,MAAM,mBAHR,SAKE,cAACI,EAAA,EAAD,QAIJ,+BAxLJ,K,sNCzaE/a,GAAajC,YAAO8C,KAAV,6EAAG9C,CAAsB+C,KACnCka,GAAcjd,YAAOkd,MAAV,8EAAGld,CAAH,oFAOXmd,GAAgBnd,YAAOyB,KAAV,gFAAGzB,CAAH,8DAMboD,GAAUpD,YAAOod,MAAV,0EAAGpd,CAAH,qCAoEEqd,GA/DK,SAAC7Z,GAAW,IACtB8Z,EAA2C9Z,EAA3C8Z,MAAOlE,EAAoC5V,EAApC4V,IAAK7R,EAA+B/D,EAA/B+D,IAAKxG,EAA0ByC,EAA1BzC,MAAOwc,EAAmB/Z,EAAnB+Z,SAAUC,EAASha,EAATga,KAQ1C,OACE,eAAC,GAAD,CAASC,WAAS,EAAlB,UACE,cAACL,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC,GAAD,CAAYxb,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,SACGL,MAGL,cAACF,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,eAACjc,EAAA,EAAD,CAAKC,QAAQ,OAAOI,WAAW,SAA/B,UACE,cAACqb,GAAD,UACE,cAACS,GAAA,EAAD,CACExE,IAAKA,EACL7R,IAAKA,EACLiW,KAAMA,EACNzc,MAAOA,EACPsB,SAAU,SAACzB,EAAOG,GAAR,OAAkBwc,EAASxc,IACrC8c,kBAAgB,aAChBC,oBAAqB,SAACta,GAAD,OACnB,cAAC1D,EAAA,EAAD,CACE/E,KAAMyI,EAAMzI,KACZgjB,gBAAiB,EACjBC,UAAU,MACV5Y,MAAO5B,EAAMzC,MAJf,SAMGyC,EAAMya,gBAKf,cAAChB,GAAD,CACElc,MAAOA,EACPkb,OAAO,QACPld,KAAK,SACLye,KAAMA,GAAQ,EACdnb,SAAU,SAACzB,GAAD,OACR2c,EACyB,KAAvB3c,EAAME,OAAOC,MACTqY,GAAO,EACP8E,OAAOtd,EAAME,OAAOC,SAG5Bod,OAhDS,WACbpd,EAAQqY,EACVmE,EAASnE,GACArY,EAAQwG,GACjBgW,EAAShW,IA6CH6W,WAAY,CACVhF,IAAKA,EACL7R,IAAKA,EACL,kBAAmB,2B,UC9E3B8W,GAAkBre,YAAOse,MAAV,uFAAGte,CAAH,iBAwCNue,GApCU,SAAC/a,GAAW,IAC3BzC,EAAsDyC,EAAtDzC,MAAOsB,EAA+CmB,EAA/CnB,SAAUmc,EAAqChb,EAArCgb,cAAe3N,EAAsBrN,EAAtBqN,MAAO4N,EAAejb,EAAfib,WAQ/C,OACE,eAAChd,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASG,WAAW,SAAtD,UACE,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOI,WAAW,SAA/B,UACE,cAAC,KAAD,CACEf,MAAOA,GAAS,GAChBsB,SAAU,SAACzK,GAAD,OAAWyK,EAASzK,EAAM8mB,IAAIhf,kBACxCrD,QAASsiB,IACTC,UAAQ,EACRC,eAAa,IAEf,cAACR,GAAD,CACEtd,MAAOA,GAAS,GAChBsB,SAAU,SAACzB,GAAD,OAAW4d,EAAc5d,EAAME,OAAOC,QAChD+d,UAnBmB,SAACle,GACR,UAAdA,EAAMob,KACR3Z,EAASzB,EAAME,OAAOC,aAoBrB8P,EACC,cAAC5O,EAAA,EAAD,CAAYrK,MAAM,YAAYsK,QAAQ,QAAtC,SACGuc,IAGH,iCCdF1c,GAAS/B,YAAO+e,KAAV,mFAAG/e,CAAkB+C,KAC3Bd,GAAajC,YAAO8C,KAAV,uFAAG9C,CAAsB+C,KACnCic,GAAyBhf,YAAOif,MAAV,mGAAGjf,CAAH,2CAKtBkf,GAAU,SAAC1b,GAAW,IAExB8Z,EAUE9Z,EAVF8Z,MACA6B,EASE3b,EATF2b,SACAC,EAQE5b,EARF4b,WACAC,EAOE7b,EAPF6b,OAGAC,GAIE9b,EANF+b,WAME/b,EALFgc,aAKEhc,EAJF8b,eAEA1P,GAEEpM,EAHFic,QAGEjc,EAFFoM,QACA8P,EACElc,EADFkc,cAXuB,EAaO/b,oBAAS,GAbhB,mBAalBgc,EAbkB,KAaRC,EAbQ,KAczB,OACE,eAACC,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACX,GAAD,CAAwBc,WAAY,cAACC,GAAA,EAAD,IAApC,SACE,cAAC,GAAD,UAAazC,MAEf,cAAC0C,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAOwM,GAAI,EAA5D,UACE,eAACib,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACxe,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,mBAGA,cAAC,GAAD,CACE5c,MAAO6O,EAAOuP,GACd9c,SAAU,SAACzK,GAAD,OAAW0nB,EAAcH,EAAUvnB,IAC7C4mB,cAAe,SAAC5mB,GAAD,OAAW0nB,EAAcH,EAAUvnB,IAClDiZ,MAAOzP,QAAQie,EAAOF,IACtBV,WAAYY,EAAOF,UAIzB,cAAC/B,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,UACNlE,IAAK,EACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAO6O,EAAOwP,GACd7B,SAAU,SAACxc,GAAD,OAAWue,EAAcF,EAAYre,WAIpD2e,WAOLQ,GAAuB,SAAC1c,GAAW,IAC/B2c,EAA4B3c,EAA5B2c,SAAUplB,EAAkByI,EAAlBzI,KAAMqlB,EAAY5c,EAAZ4c,QAClBzG,EAAa3V,aACjB,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,QAAQsS,cAGzC,OACE,eAAC0G,GAAA,EAAD,CACExC,kBAAgB,oBAChB9iB,KAAMA,EACN0F,QAAS0f,EACTG,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAape,GAAG,oBAAhB,sBACA,cAAC,KAAD,CACEqe,cAAe,CACb1T,cAAe4M,EAAW5M,eAAiB,GAC3CC,gBAAiB2M,EAAW3M,iBAAmB,EAC/Cb,gBAAiBwN,EAAWxN,iBAAmB,GAC/CE,kBAAmBsN,EAAWtN,mBAAqB,EACnDa,cAAeyM,EAAWzM,eAAiB,GAC3CC,gBAAiBwM,EAAWxM,iBAAmB,EAC/CC,kBAAmBuM,EAAWvM,mBAAqB,GACnDC,oBAAqBsM,EAAWtM,qBAAuB,EACvDV,WAAYgN,EAAWhN,YAAc,GACrCC,aAAc+M,EAAW/M,cAAgB,EACzChB,aAAc+N,EAAW/N,cAAgB,GACzCE,YAAa6N,EAAW7N,aAAe,IAEzC4U,iBAAkBC,OAAa9K,MAAM,CACnC9I,cAAe4T,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtD3U,gBAAiBwU,OACdC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtD5T,cAAeyT,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtD1T,kBAAmBuT,OAChBC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDnU,WAAYgU,OACTC,WACAC,KAAK,mBAAoB,yBAA0BC,QAExDC,SAAU,SAACnR,GAET,OADAnH,QAAQC,IAAIkH,GACL,IAEToR,SAAUZ,EApCZ,SAsCG,SAACa,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAACjf,GAAG,6BAA3B,UACE,cAAC,GAAD,aACEkb,MAAM,WACN6B,SAAS,gBACTC,WAAW,mBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,YACN6B,SAAS,kBACTC,WAAW,qBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,iBACN6B,SAAS,gBACTC,WAAW,mBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,gBACN6B,SAAS,oBACTC,WAAW,uBACP6B,IAEN,cAAC,GAAD,yBACE3D,MAAM,OACN6B,SAAS,aACTC,WAAW,gBACP6B,GAJN,IAKEvB,cACE,eAACtC,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,cACNlE,IAAK,EACL7R,IAAK,GACLiW,KAAM,EACNzc,MAAOkgB,EAAUrR,OAAOhE,aACxB2R,SAAU,SAACxc,GAAD,OACRkgB,EAAU3B,cAAc,eAAgBve,QAI9C,cAACqc,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,IACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAOkgB,EAAUrR,OAAO9D,YACxByR,SAAU,SAACxc,GAAD,OACRkgB,EAAU3B,cAAc,cAAeve,iBAQrD,eAACugB,GAAA,EAAD,WACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEmH,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRuD,SAAUwb,EAAUM,eAAiBN,EAAUO,QAJjD,gCAgBC5e,OAAMC,KAAKqd,ICtNpBuB,GAAY,CAChBC,OAAQ,eACRC,MAAO,mBACPC,EAAG,wBACHC,EAAG,yBACHC,EAAG,6BACHC,EAAG,4BACHC,EAAG,oBACHC,EAAG,cACHC,EAAG,iBACHC,EAAG,cACHC,EAAG,mBACH,SAAK,gBACL,SAAK,kBACL,SAAK,iBACL,SAAK,kBACL,eAAW,oBACX,eAAW,sBACX,eAAW,qBACX,eAAW,sBACX,UAAW,UACX,UAAW,WACX,UAAW,cACX,UAAW,eACX,UAAW,qBACX,UAAW,qBACX,UAAW,yBACX,UAAW,sBACX,UAAW,uBACX,UAAW,oBACX,UAAW,oBACX,UAAW,+BACX,UAAW,qBACX,UAAW,mBACX,UAAW,uBACX,UAAW,oBACX,UAAW,qBACX,cAAe,0BACf,cAAe,6BACf,cAAe,cACf,cAAe,eAGXhF,GAAOpd,YAAOqiB,MAAV,2EAAGriB,CAAgB+C,KACvBuf,GAAUtiB,YAAOiC,KAAV,8EAAGjC,CAAH,4FAOPuiB,GAAkBviB,YAAOiC,KAAV,sFAAGjC,CAAH,oCAKfwiB,GAAkB,SAAChf,GAAW,IAC1B2c,EAAmB3c,EAAnB2c,SAAUplB,EAASyI,EAATzI,KAElB,OACE,eAACslB,GAAA,EAAD,CACExC,kBAAgB,mBAChB9iB,KAAMA,EACN0F,QAAS0f,EACTG,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAape,GAAG,mBAAhB,uBACA,cAACgf,GAAA,EAAD,CAAeC,UAAQ,EAACjf,GAAG,4BAA3B,SACGqgB,OAAOC,KAAKjB,IAAWxT,KAAI,SAACJ,EAAMhW,GAAP,OAC1B,eAAC,GAAD,CAAM4lB,WAAS,EAAatb,GAAI,EAAhC,UACE,cAAC,GAAD,CAAM0L,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC4E,GAAD,UAAUzU,MAEZ,cAAC,GAAD,CAAMA,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC6E,GAAD,UAAkBd,GAAU5T,SALXhW,YAchB+K,OAAMC,KAAK2f,ICxEpBG,GAAa3iB,YAAO4iB,MAAV,0EAAG5iB,CAAH,4BAIV6iB,GACO,YADPA,GAEM,WAGNC,GAAY9iB,YAAOse,MAAV,yEAAGte,CAAH,gBACJ,SAACwD,GAAD,OAAWA,EAAM7N,SAGtBotB,GAAW,WACf,IAAMC,EAAUC,cACVpf,EAAWC,cAFI,EAIGH,mBAAS,IAJZ,mBAIdsL,EAJc,KAIRiU,EAJQ,OAKOvf,mBAAS,MALhB,mBAKdwf,EALc,KAKNC,EALM,KAOfpL,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAE3Dgc,EAAmB1iB,uBACvB,SAACC,GACCsiB,EAAQtiB,EAAME,OAAOC,SAEvB,CAACmiB,IAEGI,EAAiB3iB,uBAAY,WACjCkD,EAAS0f,aAAWvL,EAAc5V,GAAI6M,MACrC,CAACpL,EAAUmU,GAAiBA,EAAc5V,GAAI6M,IAC3CuU,EAAoB7iB,uBACxB,SAACC,GACuB,KAAlBA,EAAM6iB,UACR7iB,EAAM4Z,iBACN8I,OAGJ,CAACA,IAGGI,EAAoB/iB,uBAAY,WACpCuiB,EAAQlL,EAAc/I,QACrB,CAACiU,EAASlL,GAAiBA,EAAc/I,OAEtC0U,EAAehjB,uBAAY,WAC/BkD,EAAS+f,eACT/f,EAASggB,cAAgB,IACzBhgB,EAASigB,gBACTd,EAAQjc,KAAK,OACZ,CAACic,EAASnf,IAEPkgB,EAAsBpjB,uBAC1B,SAACgZ,GACC9V,EACEmgB,aAAa,2BACRhM,GADO,IAEV2B,WAAYA,MAGhByJ,EAAU,QAEZ,CAACvf,EAAUmU,EAAeoL,IAQ5B,OANA5b,qBAAU,WACJwQ,GACFkL,EAAQlL,EAAc/I,QAEvB,CAAC+I,GAAiBA,EAAc/I,OAGjC,eAACxN,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACXmiB,GAAI,EACJC,GAAI,EALN,UAOE,cAACpB,GAAD,CACE/hB,MAAOkO,EACP5M,SAAUghB,EACVvE,UAAW0E,EACX7tB,MAAOqiB,GAAiB/I,IAAS+I,EAAc/I,KAAO,QAAU,UAElE,eAACxN,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGsW,GAAiB/I,IAAS+I,EAAc/I,KACvC,cAAC,EAAD,CAAc7J,MAAM,iBAAiBvF,OAAK,EAA1C,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS0hB,EAAmB9rB,MAAM,YAA9C,SACE,cAAC,KAAD,QAIJ,6BAEDogB,GAAiB/I,IAAS+I,EAAc/I,KACvC,cAAC,EAAD,CAAc7J,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAASshB,EAArB,SACE,cAACa,GAAA,EAAD,QAIJ,6BAEF,cAAC,EAAD,CAAc/e,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS2hB,EAArB,SACE,cAAChB,GAAD,CAAYyB,KAAMC,KAAe5S,KAAK,WAG1C,cAAC,EAAD,CAAcrM,MAAM,YAAYvF,OAAK,EAArC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS,kBAAMohB,EAAUP,KAArC,SACE,cAACF,GAAD,CAAYyB,KAAME,KAAY7S,KAAK,WAGvC,cAAC,EAAD,CAAcrM,MAAM,WAAWvF,OAAK,EAApC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS,kBAAMohB,EAAUP,KAArC,SACE,cAAC0B,GAAA,EAAD,WAKN,cAAC,GAAD,CACExpB,KAAMooB,IAAWN,GACjB1C,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,GACjBzC,QAAS2D,EACT5D,SAAU,kBAAMiD,EAAU,aAMnBxgB,OAAMC,KAAKkgB,I,4IClJpB3f,GAAUpD,YAAOyB,KAAV,wEAAGzB,CAAH,uKAYPwkB,GAAmBxkB,YAAOiC,KAAV,iFAAGjC,CAAH,gBACX,SAACwD,GAAD,MAA6B,SAAjBA,EAAMihB,OAAoB,QAAU,cAErDC,GAAkB1kB,YAAOkD,KAAV,gFAAGlD,CAAH,+CAOf2kB,GAAW,SAACnhB,GAAW,IAEzB2K,EAUE3K,EAVF2K,cACAsB,EASEjM,EATFiM,aACA6B,EAQE9N,EARF8N,KACAsT,EAOEphB,EAPFohB,cACAC,EAMErhB,EANFqhB,aACAC,EAKEthB,EALFshB,SACAC,EAIEvhB,EAJFuhB,YACAxe,EAGE/C,EAHF+C,SACAye,EAEExhB,EAFFwhB,QACAxe,EACEhD,EADFgD,QAGIye,EAAave,iBAAO,MAEpBwe,EAAsBvkB,uBAC1B,SAACyJ,GACCA,EAAE+a,kBACF/a,EAAEgb,YAAYC,2BACdT,MAEF,CAACA,IAGGU,EAAmB3kB,uBACvB,SAACyJ,GACCA,EAAE+a,kBACF/a,EAAEgb,YAAYC,2BACdR,MAEF,CAACD,IAGH,OACE,cAAC,GAAD,CACElb,IAAKub,EACLhB,GAAI,EACJsB,GAAI,EACJpjB,GAAI,EACJT,QAAQ,OACR/L,MAAM,OACN6vB,OAAQ,EACRC,YAAY,WACZC,aAAc,EACd1jB,QAASuE,EACTof,aAAc,kBAAMnf,GAAQ,IAC5Bof,aAAc,kBAAMpf,GAAQ,IAC5Bqf,UAAWC,aAAKhB,GAAY,aAAcE,GAAW,eAbvD,SAeE,eAACvjB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACXnM,MAAM,OAJR,UAME,cAAC6uB,GAAD,CACEtiB,QAAQ,QACRuiB,OAAQtW,EAAgB,OAAS,QACjC4X,QAAM,EAHR,SAKGzU,IAEH,eAAC7P,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,WACIijB,IAAgBD,GAAYE,GAAWvV,GACvC,cAAChO,EAAA,EAAD,CAAKkc,GAAI,EAAT,SACE,cAAC+G,GAAD,CAAiB1iB,QAASsjB,EAAkB7T,KAAK,QAAjD,SACGhC,EAAe,cAACuW,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,QAInC,cAACxkB,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,OAAO+nB,GAAI,IAErCmH,GAAYE,IAAY7W,EACvB,cAACuW,GAAD,CAAiB1iB,QAASkjB,EAAqBzT,KAAK,QAApD,SACGtD,EAAgB,cAAC+X,GAAA,EAAD,IAAqB,cAACC,GAAA,EAAD,MAGxC,cAAC1kB,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,kBAQtBgN,OAAMC,KAAK8hB,ICtFpByB,GAAYC,cAAW,SAAC7mB,GAAD,MAAY,CACvC8mB,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYjnB,EAAMknB,YAAYC,OAAO,YAAa,CAChDC,SAAUpnB,EAAMknB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAITxkB,GAAS/B,YAAO+e,KAAV,oEAAG/e,CAAkB+C,KAC3BgkB,GAAc/mB,YAAOgnB,MAAV,yEAAGhnB,CAAuB+C,KACrCkkB,GAAYjnB,YAAO+B,IAAV,uEAAG/B,CAAH,qJAaTknB,GAAmBlnB,YAAOmnB,MAAV,8EAAGnnB,CAAH,sIAUhBonB,GAAoBpnB,YAAOqnB,MAAV,+EAAGrnB,CAAH,oBAmKRsnB,GA/JG,SAAC9jB,GACjB,IAAM+jB,EAAUnB,KACVviB,EAAWC,cAFU,EAGKH,oBAAS,GAHd,mBAGpBgc,EAHoB,KAGVC,EAHU,KAIrBjH,EAAe3U,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAarR,WACzDmgB,EAAOxjB,aAAY,SAACC,GAAD,OAAWA,EAAMwjB,YAAYD,QAEpD/O,EAQEjV,EARFiV,UACArT,EAOE5B,EAPF4B,MACAsiB,EAMElkB,EANFkkB,QACAhI,EAKElc,EALFkc,cACAqF,EAIEvhB,EAJFuhB,YACA4C,EAGEnkB,EAHFmkB,WACA3Q,EAEExT,EAFFwT,iBACAC,EACEzT,EADFyT,sBAGI2Q,EAAana,mBACjB,kBAAMC,IAAEC,QAAQ8K,EAAW,CAAC,eAAgB,CAAC,UAC7C,CAACA,IAGHjR,qBAAU,WACR,IAAK,IAAI3P,KAAS+vB,EACZA,EAAW/vB,GAAOgwB,cAAgBhnB,SAAShJ,GAAS,GACtDgM,EACEwX,aAAY,2BAELuM,EAAW/vB,IAFP,IAGPgwB,YAAahnB,SAAShJ,GAAS,KAEjC,MAKP,CAAC4gB,EAAUhkB,SAEd,IAAMqzB,EAAoBnnB,uBAAY,WACpCif,GAAY,SAACmI,GAAD,OAAeA,OAC1B,CAACnI,IACEoI,EAAoBrnB,uBACxB,SAAC6X,GAAU,IAAD,WACC3gB,GACP,IAAMqW,EAAQuK,EAAUrH,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,IAAMoW,EAAK3gB,GAAOuK,MAC1D8L,GAASA,EAAM2Z,cAAgBhnB,SAAShJ,GAAS,GACnDgM,EACEwX,aAAY,2BAELnN,GAFI,IAGP2Z,YAAahnB,SAAShJ,GAAS,KAEjC,KATR,IAAK,IAAIA,KAAS2gB,EAAO,EAAhB3gB,KAeX,CAAC4gB,EAAW5U,IAERokB,EAActnB,uBAClB,SAACyB,EAAI8lB,GACH,IAAMha,EAAQuK,EAAUrH,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,KAAOA,KACnDyB,EACEwX,aAAY,2BACPnN,GADM,kBAERga,EAAQha,EAAMga,GAAS,EAAI,QAIlC,CAACzP,EAAW5U,IAERskB,EAAcxnB,uBAClB,SAACuN,GACCrK,EAAS6K,aAAgBR,IACzBrK,EAASmV,YAAatJ,IAAWC,YAEnC,CAAC9L,IAEGukB,EAAaznB,uBACjB,SAACuN,EAAO2B,GACNoH,EAAsB/I,EAAM9L,GAAIyN,KAElC,CAACoH,IAEGoR,EAAY1nB,uBAAY,SAACsO,EAAMlQ,GACnC,OAAIA,IAASgP,IAAWkD,QAA+C,IAArChC,EAAKqZ,QAAQd,EAAKplB,GAAG8M,YAC9CD,EAAKsZ,MAAMf,EAAKplB,GAAG8M,WAAWza,OAAS,GACzCwa,IACN,IAEH,OACE,cAACxN,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,eAACqmB,GAAA,EAAD,WACE,cAACtB,GAAD,CACE9hB,MAAOA,EACPqjB,OACE,eAAChnB,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGgmB,EACC,cAAC,GAAD,CAAa/J,GAAI,EAAjB,SACG+J,EAAQzZ,KAAI,SAACwa,EAAQ5wB,GAAT,OACX,cAACovB,GAAD,CAEEjlB,QAASymB,EAAOzmB,QAChByP,KAAK,QACLiX,UAAW,cAACC,GAAA,EAAD,IACX/iB,QAAS,cAAC,KAAD,CAAiBwe,KAAMqE,EAAOrE,KAAM3S,KAAK,OAClDvP,QAAQ,YALHrK,QAUX,6BAEF,cAACqL,EAAA,EAAD,CACElB,QAAS8lB,EACTjC,UAAWC,aAAKyB,EAAQjB,OAAT,eACZiB,EAAQT,WAAanH,IAH1B,SAME,cAACI,GAAA,EAAD,WAKR,cAAC6I,GAAA,EAAD,CAAUC,GAAIlJ,EAAd,SACE,eAACyH,GAAD,WACE,cAAC,iBAAD,CACE5O,KAAMoP,EACNkB,QAASd,EACTe,UAAW,IACXC,SAAU,SAACzO,GAAD,OAAS9R,QAAQC,IAAI6R,IAC/BhU,SAAU,SAACgU,GAAD,OAAS9R,QAAQC,IAAI6R,IAC/B0O,MAAOtB,EANT,SAQGC,EAAW3Z,KAAI,SAACJ,GAAD,OACd,cAAC,GAAD,CACEyD,KAAM+W,EAAUxa,EAAK1H,WAAW8I,KAAMpB,EAAKC,YAC3CK,cAAeN,EAAKM,cACpBsB,aAAc5B,EAAK4B,aAEnBmV,cAAe,kBAAMqD,EAAYpa,EAAKzL,GAAI,kBAC1CyiB,aAAc,kBAAMoD,EAAYpa,EAAKzL,GAAI,iBACzC0iB,SAAUnM,GAAgBA,EAAavW,KAAOyL,EAAKzL,GACnD4iB,QAAShO,EAAiBnJ,EAAKzL,IAC/BmE,SAAU,kBAAM4hB,EAAYta,IAC5BrH,QAAS,SAACqJ,GAAD,OAAUuY,EAAWva,EAAMgC,IACpCkV,YAAaA,GAPRlX,EAAKzL,SAWfsd,a,kICjNP3d,GAAS/B,YAAO+e,KAAV,8EAAG/e,CAAkB+C,KAE3BmmB,GAAuBlpB,YAAOmpB,MAAV,4FAAGnpB,CAAH,8DAMpBopB,GAAiBppB,YAAOqpB,MAAV,sFAAGrpB,CAAH,qDAIdspB,GAAqBtpB,YAAOupB,MAAV,0FAAGvpB,CAAH,qBAGlBwpB,GAAYxpB,IAAOkJ,IAAV,iFAAGlJ,CAAH,kEA0DAypB,GAnDS7mB,IAAMC,MAAK,SAACW,GAClC,IAD4C,EAElBG,mBADb,IAD+B,mBAErC+lB,EAFqC,KAE9BC,EAF8B,KAGpCtb,EAAwC7K,EAAxC6K,QAAS8R,EAA+B3c,EAA/B2c,SAAUplB,EAAqByI,EAArBzI,KAAM6uB,EAAepmB,EAAfomB,WAKjC,OACE,eAACvJ,GAAA,EAAD,CAAQxC,kBAAgB,oBAAoB9iB,KAAMA,EAAM0F,QAAS0f,EAAjE,UACE,cAACK,GAAA,EAAD,CAAape,GAAG,oBAAhB,+BACA,cAACgf,GAAA,EAAD,CAAeC,UAAQ,EAACjf,GAAG,4BAA3B,SACE,cAAC8mB,GAAD,CACEW,WAAYH,EACZI,KATa,WACnBH,EAASD,EALE,KAcLK,QAASL,EAAQrb,EAAQ2b,YACzBC,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,4BALnB,SAOE,cAACf,GAAD,CAAgBgB,WAAY,IAAKC,KAAM,EAAvC,SACG9d,MAAMjE,KAAK,CAAE7T,OAAQ4Z,EAAQ2b,cAAe,SAACtc,EAAG3V,GAAJ,OAAUA,EAAI,KACxDwwB,MAAM,EAAGmB,GACTzb,KAAI,SAACpW,GAAD,OACH,eAACyxB,GAAD,CAEEe,KAAM,EACNroB,QAAS,kBAAM4nB,EAAW/xB,IAH5B,UAKE,cAAC2xB,GAAD,CAEEzjB,IAAKwI,aAAkBF,EAASxW,GAAS,cACzCyyB,IAAG,qBAAgBzyB,KAErB,cAAC0yB,GAAA,EAAD,CACEnlB,MAAK,qBAAgBvN,GACrB2yB,SAAUnc,EAAQoc,eAXf5yB,YAkBjB,cAACypB,GAAA,EAAD,UACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,4B,UC/DFmK,GAAS/B,YAAO+e,KAAV,0EAAG/e,CAAkB+C,KAE3BmmB,GAAuBlpB,YAAOmpB,MAAV,wFAAGnpB,CAAH,8DAMpBopB,GAAiBppB,YAAOqpB,MAAV,kFAAGrpB,CAAH,qDAIdspB,GAAqBtpB,YAAOupB,MAAV,sFAAGvpB,CAAH,qBAGlB0qB,GAAsB1qB,YAAOohB,MAAV,uFAAGphB,CAAH,kBAGnBwpB,GAAYxpB,IAAOkJ,IAAV,6EAAGlJ,CAAH,kEAOT2qB,GAAc,SAACnnB,GACnB,IAD6B,EAEHG,mBADb,IADgB,mBAEtB+lB,EAFsB,KAEfC,EAFe,OAGDhmB,mBAAS,IAHR,mBAGtBinB,EAHsB,KAGdC,EAHc,KAIrBC,EAAwCtnB,EAAxCsnB,OAAQ3K,EAAgC3c,EAAhC2c,SAAUplB,EAAsByI,EAAtBzI,KAAMgwB,EAAgBvnB,EAAhBunB,YAM1BC,EAAiBF,EAAOld,QAC5B,SAACC,GAAD,OACEA,EAAKoB,KAAK9G,cAAcC,SAASwiB,EAAOziB,gBACxC0F,EAAKod,YAAY9iB,cAAcC,SAASwiB,EAAOziB,kBAGnD,OACE,eAACkY,GAAA,EAAD,CAAQxC,kBAAgB,cAAc9iB,KAAMA,EAAM0F,QAAS0f,EAA3D,UACE,cAACK,GAAA,EAAD,CAAape,GAAG,cAAhB,0BACA,eAACsoB,GAAD,CAAqBrJ,UAAQ,EAA7B,UACE,cAAC5f,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC+oB,GAAA,EAAD,CAAWnqB,MAAO6pB,EAAQvoB,SAAU,SAACtB,GAAD,OAAW8pB,EAAU9pB,QAE3D,cAACU,EAAA,EAAD,CAAKW,GAAG,uBAAuB+oB,SAAS,OAAOv1B,OAAO,OAAtD,SACE,cAAC,GAAD,CACEi0B,WAAYH,EACZI,KApBW,WACnBH,EAASD,EANE,KA0BHK,QAASL,EAAQsB,EAAev2B,OAChCw1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,uBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGW,EAAezC,MAAM,EAAGmB,GAAOzb,KAAI,SAAC4H,GAAD,OAClC,eAAC,GAAD,CAEEwU,KAAM,EACNroB,QAAS,kBAAM+oB,EAAYlV,IAH7B,UAKE,cAAC,GAAD,CACE9P,IAAG,UAAKgG,KAAOC,UAAZ,YAAyB6J,EAAMuV,eAClCd,IAAKzU,EAAM5G,OAEb,cAACsb,GAAA,EAAD,CACEnlB,MAAOyQ,EAAM5G,KACbub,SAAU3U,EAAMoV,gBAVbpV,EAAMzT,gBAkBvB,cAACkf,GAAA,EAAD,UACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,0BAQOgL,OAAMC,KAAK8nB,I,sBClFpB5oB,GAAS/B,YAAO+e,KAAV,wEAAG/e,CAAkB+C,KAC3Bd,GAAajC,YAAO8C,KAAV,4EAAG9C,CAAsB+C,KAEnCmmB,GAAuBlpB,YAAOmpB,MAAV,sFAAGnpB,CAAH,8DAMpBopB,GAAiBppB,YAAOqpB,MAAV,gFAAGrpB,CAAH,qDAIdspB,GAAqBtpB,YAAOupB,MAAV,oFAAGvpB,CAAH,qBAGlB0qB,GAAsB1qB,YAAOohB,MAAV,qFAAGphB,CAAH,kBAGnBwpB,GAAYxpB,IAAOkJ,IAAV,2EAAGlJ,CAAH,kEAOTqrB,GAAa9rB,YAAW,CAC5B+rB,UAAW,CACT5pB,QAAS,OACTG,eAAgB,SAChBnC,gBAAiB,cACjB,WAAY,CACV6gB,SAAU,GACV5qB,MAAO,OACP+J,gBAAiB,aARJH,EAWhB,SAACiE,GAAD,OAAW,cAAC+nB,GAAA,EAAD,2BAAU/nB,GAAV,IAAiBgoB,kBAAmB,CAAEvN,SAAU,gCAExDwN,GAAYlsB,aAAW,SAACC,GAAD,MAAY,CACvCksB,KAAM,CACJC,cAAe,OACf/zB,MAAO,OACPg0B,WAAYpsB,EAAMqsB,WAAWC,kBAC7BlsB,SAAU,OACVmsB,YAAa,EACbC,QAAS,UACTC,SAAU,GACV,UAAW,CACT7f,QAAS,OAVG7M,EAad,SAACiE,GAAD,OAAW,cAAC0oB,GAAA,EAAD,aAAKC,eAAa,GAAK3oB,OAEhC4oB,GAAW,SAAC5oB,GAAW,IACnBya,EAAqCza,EAArCya,SAAUld,EAA2ByC,EAA3BzC,MAAOlJ,EAAoB2L,EAApB3L,MAAUw0B,EADT,aACmB7oB,EADnB,8BAG1B,OACE,6CACE8oB,KAAK,WACLC,OAAQxrB,IAAUlJ,EAClBuK,GAAE,wBAAmBvK,GACrBgmB,kBAAA,mBAA6BhmB,IACzBw0B,GALN,aAOGtrB,IAAUlJ,GAAS,mCAAGomB,QAK7B,SAASuO,GAAU30B,GACjB,MAAO,CACLuK,GAAG,YAAD,OAAcvK,GAChB,gBAAgB,iBAAhB,OAAkCA,IAItC,IAAM40B,GAAa,SAACjpB,GAClB,IAD4B,EAEMG,mBADrB,IADe,mBAErB+oB,EAFqB,KAEVC,EAFU,OAGMhpB,mBAFrB,IADe,mBAGrBipB,EAHqB,KAGVC,EAHU,OAIIlpB,mBAAS,GAJb,mBAIrBmpB,EAJqB,KAIXC,EAJW,OAKAppB,mBAAS,IALT,mBAKrBinB,EALqB,KAKbC,EALa,KAMpBmC,EAAsCxpB,EAAtCwpB,MAAO7M,EAA+B3c,EAA/B2c,SAAUplB,EAAqByI,EAArBzI,KAAMkyB,EAAezpB,EAAfypB,WAazBC,EAAgBF,EAAMpf,QAC1B,SAACC,GAAD,OACEA,EAAKoB,KAAK9G,cAAcC,SAASwiB,EAAOziB,gBAC1B,SAAd0F,EAAK9O,QAEHouB,EAAgBH,EAAMpf,QAC1B,SAACC,GAAD,OACEA,EAAKoB,KAAK9G,cAAcC,SAASwiB,EAAOziB,gBAC1B,SAAd0F,EAAK9O,QAGT,OACE,eAACshB,GAAA,EAAD,CAAQxC,kBAAgB,aAAa9iB,KAAMA,EAAM0F,QAAS0f,EAA1D,UACE,cAACK,GAAA,EAAD,CAAape,GAAG,aAAhB,SACE,eAACX,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAMG,WAAW,SAAnD,UACE,cAAC,GAAD,CAAYI,QAAQ,KAAKyb,GAAI,EAA7B,qBAGA,eAAC0N,GAAD,CACEtqB,MAAO+rB,EACPzqB,SAzBc,SAACzB,EAAOwsB,GAC9BL,EAAYK,GACZvC,EAAU,KAwBF5lB,aAAW,WAHb,UAKE,cAACwmB,GAAD,aAAWnO,MAAM,QAAWkP,GAAU,KACtC,cAACf,GAAD,aAAWnO,MAAM,QAAWkP,GAAU,aAI5C,eAAC,GAAD,CAAqBnL,UAAQ,EAA7B,UACE,cAAC5f,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC+oB,GAAA,EAAD,CAAWnqB,MAAO6pB,EAAQvoB,SAAU,SAACtB,GAAD,OAAW8pB,EAAU9pB,QAE3D,cAAC,GAAD,CAAUA,MAAO+rB,EAAUj1B,MAAO,EAAlC,SACE,cAAC4J,EAAA,EAAD,CAAKW,GAAG,sBAAsB+oB,SAAS,OAAOv1B,OAAO,OAArD,SACE,cAAC,GAAD,CACEi0B,WAAY6C,EACZ5C,KA/Ca,WACvB6C,EAAaD,EARF,KAuDD3C,QAAS2C,EAAYQ,EAAcz4B,OACnCw1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG6C,EAAc3E,MAAM,EAAGmE,GAAWze,KAAI,SAACof,GAAD,OACrC,eAAC,GAAD,CAEEhD,KAAM,EACNroB,QAAS,kBAAMirB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEtnB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBqhB,EAAKC,cACjChD,IAAK+C,EAAKpe,OAEZ,cAACsb,GAAA,EAAD,CAAiBnlB,MAAOioB,EAAKpe,SARxBoe,EAAKjrB,eAetB,cAAC,GAAD,CAAUrB,MAAO+rB,EAAUj1B,MAAO,EAAlC,SACE,cAAC4J,EAAA,EAAD,CAAKW,GAAG,sBAAsB+oB,SAAS,OAAOv1B,OAAO,OAArD,SACE,cAAC,GAAD,CACEi0B,WAAY+C,EACZ9C,KAvEa,WACvB+C,EAAaD,EAXF,KAkFD7C,QAAS6C,EAAYO,EAAc14B,OACnCw1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG8C,EAAc5E,MAAM,EAAGqE,GAAW3e,KAAI,SAACof,GAAD,OACrC,eAAC,GAAD,CAEEhD,KAAM,EACNroB,QAAS,kBAAMirB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEtnB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBqhB,EAAKC,cACjChD,IAAK+C,EAAKpe,OAEZ,cAACsb,GAAA,EAAD,CAAiBnlB,MAAOioB,EAAKpe,SARxBoe,EAAKjrB,kBAgBxB,cAACkf,GAAA,EAAD,UACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,0BAQOgL,OAAMC,KAAK4pB,I,UC3MpB1qB,GAAS/B,YAAO+e,KAAV,sEAAG/e,CAAkB+C,KAC3BwqB,GAAcvtB,YAAOyB,KAAV,2EAAGzB,CAAH,qBAIXwtB,GAAc,SAAChqB,GAAW,IACtB8N,EAA4B9N,EAA5B8N,KAAMvW,EAAsByI,EAAtBzI,KAAM0yB,EAAgBjqB,EAAhBiqB,MAAOC,EAASlqB,EAATkqB,KAE3B,OACE,eAACrN,GAAA,EAAD,CAAQxC,kBAAgB,gBAAgB9iB,KAAMA,EAA9C,UACE,cAACylB,GAAA,EAAD,CAAape,GAAG,gBAAhB,qBACA,cAACgf,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACkM,GAAD,UAAcjc,MAEhB,eAACgQ,GAAA,EAAD,WACE,cAAC,GAAD,CAAQtf,QAASyrB,EAAO71B,MAAM,YAAYsK,QAAQ,WAAWS,WAAS,EAAtE,iBAGA,cAAC,GAAD,CAAQX,QAAS0rB,EAAM91B,MAAM,UAAUsK,QAAQ,WAA/C,uBAQOU,OAAMC,KAAK2qB,I,kDCNpBzrB,GAAS/B,YAAO+e,KAAV,uEAAG/e,CAAkB+C,KAE3BmmB,GAAuBlpB,YAAOmpB,MAAV,qFAAGnpB,CAAH,8DAMpBopB,GAAiBppB,YAAOqpB,MAAV,+EAAGrpB,CAAH,qDAIdspB,GAAqBtpB,YAAOupB,MAAV,mFAAGvpB,CAAH,qBAGlB0qB,GAAsB1qB,YAAOohB,MAAV,oFAAGphB,CAAH,kBAGnBwpB,GAAYxpB,IAAOkJ,IAAV,0EAAGlJ,CAAH,kEAMT2tB,GAAe3tB,YAAOkD,KAAV,6EAAGlD,CAAH,iBAIZ4tB,GAAe,SAACpqB,GACpB,IACMK,EAAWC,cACX0jB,EAAOxjB,aAAY,SAACC,GAAD,OAAWA,EAAMwjB,YAAYD,QAChDxP,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAJnC,EAKc1D,mBAAS,MALvB,mBAKvBkqB,EALuB,KAKPC,EALO,OAMoBnqB,mBAAS,IAN7B,mBAMvBoqB,EANuB,KAMJC,EANI,OAQJrqB,mBAPb,IADiB,mBAQvB+lB,EARuB,KAQhBC,EARgB,OASJhmB,mBAAS,IATL,mBASvBsqB,EATuB,KAShBC,EATgB,OAUQvqB,mBAAS,GAVjB,mBAUvBwqB,EAVuB,KAUVC,EAVU,KAWtBC,EAA0C7qB,EAA1C6qB,QAASlO,EAAiC3c,EAAjC2c,SAAUplB,EAAuByI,EAAvBzI,KAAMuzB,EAAiB9qB,EAAjB8qB,aAE3BC,EAAe5tB,uBAAY,WAC/BgpB,EAASD,EAbE,MAcV,CAACC,EAAUD,IACR8E,EAAsB7tB,uBAC1B,SAAC8tB,GACC,IAAIC,EAAOD,EAAUE,UACnBF,EAAUG,YAAY,YAAc,WAAWn6B,OAC/Cg6B,EAAUG,YAAY,MAExB,OAAyC,IAArCF,EAAKpG,QAAQd,EAAKplB,GAAG8M,YAChBwf,EAAKnG,MAAMf,EAAKplB,GAAG8M,WAAWza,OAAS,GACzCi6B,IAET,CAAClH,EAAKplB,KAEFysB,EAAuBluB,uBAC3B,SAACmuB,GACCZ,EAASY,GACTrmB,QAAQC,IAAIomB,KAEd,CAACZ,IAEGa,EAAoBpuB,uBAAY,WACpC8H,QAAQC,IAAIulB,GACZpqB,EAASmrB,aAAYxH,EAAKplB,GAAI4V,EAAc5V,GAAI6rB,IAChDC,EAAS,IACTE,EAAeD,EAAc,KAC5B,CACDtqB,EACA2jB,EAAKplB,GACL4V,EAAc5V,GACd6rB,EACAC,EACAC,EACAC,IAEIa,EAA0BtuB,uBAC9B,SAACC,EAAOsuB,GACNtuB,EAAMukB,kBACNvkB,EAAMwkB,YAAYC,2BAClByI,EAAkBoB,KAEpB,CAACpB,IAEGqB,EAA4BxuB,sBAAW,sBAAC,4BAAAqH,EAAA,6DAC5CS,QAAQC,IAAI,aAAcmlB,GADkB,kBAGtBuB,KAAcC,wBAChCxB,EAAezrB,IAJyB,QAGtCktB,EAHsC,QAM9B76B,OACVu5B,EAAqBsB,IAErBzrB,EAAS0rB,aAAa1B,GAAgB,IACtCC,EAAkB,OAVsB,gDAa1CjqB,EAAS2rB,aAAW,CAAEC,QAAS,KAAIA,WACnC3B,EAAkB,MAdwB,yDAgB3C,CAACjqB,EAAUgqB,EAAgBG,EAAsBF,IAE9C4B,EAA4B/uB,uBAChC,WAA2B,IAA1BgvB,IAAyB,yDACpBA,IACF9rB,EAAS+rB,aAA2B/B,EAAezrB,KACnDyB,EAAS6K,aAAgB,QAE3B7K,EAAS0rB,aAAa1B,EAAgB8B,IACtC7B,EAAkB,MAClBE,EAAqB,MAEvB,CAACnqB,EAAUgqB,EAAgBC,EAAmBE,IAGhD,OACE,eAAC3N,GAAA,EAAD,CAAQxC,kBAAgB,eAAe9iB,KAAMA,EAAM0F,QAAS0f,EAA5D,UACE,cAACK,GAAA,EAAD,CAAape,GAAG,eAAhB,wBACA,eAAC,GAAD,CAAqBif,UAAQ,EAA7B,UACE,cAAC,KAAD,CACEhf,SAAUwsB,EACV9tB,MAAOktB,EACP4B,wBAAwB,EACxBC,eAAe,EACfC,SAAU,IACL5B,GAENF,EAAMx5B,OACL,cAACgN,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAO+L,QAAQ,OAAOG,eAAe,SAAvD,SACE,cAAC,GAAD,CACEK,QAAQ,YACRtK,MAAM,UACNoK,QAAS+sB,EAHX,sCASF,6BAEF,cAACttB,EAAA,EAAD,CAAKW,GAAG,wBAAwB+oB,SAAS,OAAOv1B,OAAO,OAAOo6B,GAAI,EAAlE,SACE,cAAC,GAAD,CACEnG,WAAYH,EACZI,KAAMyE,EACNxE,QAASL,EAAQ2E,EAAQ55B,OACzBw1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,wBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGgE,EAAQ9F,MAAM,EAAGmB,GAAOzb,KAAI,SAACihB,GAAD,OAC3B,eAAC,GAAD,CAEE7E,KAAM,EACNroB,QAAS,kBAAMssB,EAAaY,IAH9B,UAKE,cAAC,GAAD,CACEnpB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBkjB,EAAWT,WACvCnE,IAAKkE,EAAoBU,EAAWT,aAEtC,cAAClE,GAAA,EAAD,CACEnlB,MAAOopB,EAAoBU,EAAWT,WACtCwB,WACE,cAACtC,GAAD,CACE3rB,QAAS,SAACpB,GAAD,OACPquB,EAAwBruB,EAAOsuB,IAFnC,SAKE,cAACgB,GAAA,EAAD,UAhBDhB,EAAW9sB,gBA0B5B,cAACkf,GAAA,EAAD,UACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,sBAIF,cAACu4B,GAAA,EAAD,CACE7e,KACEuc,EAAc,kCACiBW,EACzBX,EAAeY,WAFP,MAIV,GAEN1zB,OAAQ8yB,EACR1N,SAAU,kBAAM2N,EAAkB,OAClCsC,UAAWjB,IAEb,cAAC,GAAD,CACE7d,KACEyc,EAAkBt5B,OAChB,oFAEE,6BACGs5B,EAAkB9f,KAAI,SAACJ,EAAMhW,GAAP,OACrB,6BAAiBgW,EAAKoB,MAAbpX,QAJf,wCAUA,GAGJkD,OAAQgzB,EAAkBt5B,OAC1Bg5B,MAAO,kBAAMiC,GAA0B,IACvChC,KAAM,kBAAMgC,GAA0B,UAM/B9sB,OAAMC,KAAK+qB,I,iCCpPpByC,GAASrwB,YAAOswB,MAAV,wEAAGtwB,CAAkB+C,KAE3BwtB,GAAevwB,YAAOqwB,IAAV,8EAAGrwB,CAAH,yEAOZwwB,GAAYxwB,IAAOkJ,IAAV,2EAAGlJ,CAAH,mCAyCAywB,GApCI,SAACjtB,GAAW,IACrB8U,EAA8B9U,EAA9B8U,SAAUvX,EAAoByC,EAApBzC,MAAOsB,EAAamB,EAAbnB,SAEzB,OACE,cAACkuB,GAAD,CACEG,QAAQ,oBACRtuB,GAAG,uBACHrB,MAAOA,EACPsB,SAAUA,EACVib,MAAM,OACNnb,GAAI,EACJwuB,YAAa,SAACvuB,GACZ,IAAMiP,EAAOiH,EAASlH,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,KAAOA,KACjD,OAAKiP,EAIH,cAACmf,GAAD,CACEzqB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBqF,EAAKuf,cACjCtG,IAAKjZ,EAAKE,YALL,oDAVb,SAoBG+G,EAASrK,KAAI,SAACoD,GAAD,OACZ,cAACwf,GAAA,EAAD,CAAU9vB,MAAOsQ,EAAKjP,GAAtB,SACE,cAACouB,GAAD,CACEzqB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBqF,EAAKuf,cACjCtG,IAAKjZ,EAAKE,aAHiBF,EAAKjP,UCnBtCL,GAAS/B,YAAO+e,KAAV,yEAAG/e,CAAkB+C,KAC3Bub,GAAYte,YAAO8wB,MAAV,4EAAG9wB,CAAqB+C,KACjCd,GAAajC,YAAO8C,KAAV,6EAAG9C,CAAsB+C,KACnCguB,GAAmB/wB,YAAOse,IAAV,mFAAGte,CAAH,uCAKhBgxB,GAAqBhxB,YAAOyB,KAAV,qFAAGzB,CAAH,oCAEP,SAACwD,GAAD,OAAWA,EAAMytB,aAE5BC,GAAclxB,YAAOyB,KAAV,8EAAGzB,CAAH,uIACN,SAACwD,GAAD,OAAWA,EAAM5L,SACG,SAAC4L,GAAD,OAAWA,EAAMkJ,UACjB,SAAClJ,GAAD,OAAWA,EAAMmO,UACjC,SAACnO,GAAD,OAAWA,EAAMiO,QACf,SAACjO,GAAD,OAAWA,EAAM6N,QACZ,SAAC7N,GAAD,OAAWA,EAAM2tB,UAGjCC,GAAYxuB,IAAMC,MAAK,SAACW,GAAW,IAErC8U,EAQE9U,EARF8U,SACA+G,EAOE7b,EAPF6b,OACAE,EAME/b,EANF+b,WACAC,EAKEhc,EALFgc,aACAF,EAIE9b,EAJF8b,cACAG,EAGEjc,EAHFic,QACA7P,EAEEpM,EAFFoM,OACAyhB,EACE7tB,EADF6tB,UAEIxtB,EAAWC,cACXmM,EAAiBjM,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYrI,cAyBhE,OATA1I,qBAAU,WACR,IAfgBuI,EAAYC,EAexBqB,EAAOiH,EAAS7jB,OAChB6jB,EAASlH,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,KAAOwN,EAAOyB,QAC3C,KACAA,IAASpB,EAAe7H,SAASiJ,EAAKE,aAlB1BxB,EAmBLsB,EAAKE,UAnBYvB,EAmBlB,cAAwBjE,KAAOC,UAA/B,YAA4CqF,EAAKG,UAAjD,KAlBO,IAAIjB,SAASR,EAAYC,GAEvCtU,OACA8U,MAAK,SAAUC,GACdrT,SAASsT,MAAMC,IAAIF,GACnB5M,EAAS4X,aAAuB1L,OAEjCa,OAAM,SAAUC,GAEfpI,QAAQqI,KAAKD,EAAOd,SAWvB,CAACH,EAAOyB,OAGT,qCACE,cAAC0f,GAAD,CACE9hB,KAAK,OACLqO,MAAM,OACNgU,YAAY,kBACZpvB,QAAQ,WACRnB,MAAO6O,EAAO0B,KACdT,MAAOzP,QAAQqe,EAAQnO,MAAQ+N,EAAO/N,MACtCmN,WAAYgB,EAAQnO,MAAQ+N,EAAO/N,KACnC6M,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,GAEV7uB,WAAW,IAEb,eAAC8uB,GAAA,EAAD,CAAavvB,QAAQ,WAArB,UACE,cAACwvB,GAAA,EAAD,CAAYtvB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACErB,MAAO6O,EAAOyB,KACdhP,SAAU,SAAC+H,GAAD,OAAOkV,EAAc,OAAQlV,EAAEtJ,OAAOC,QAChDuX,SAAUA,OAGd,eAAC8E,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,YACNlE,IAAK,EACL7R,IAAK,GACLxG,MAAO6O,EAAO6B,KACd8L,SAAU,SAACxc,GAAD,OAAWue,EAAc,OAAQve,QAG/C,cAACqc,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACxe,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,wBAGA,cAAC,GAAD,CACE5c,MAAO6O,EAAOhY,MACdyK,SAAU,SAACzK,GAAD,OAAW0nB,EAAc,QAAS1nB,IAC5C4mB,cAAe,SAAC5mB,GAAD,OAAW0nB,EAAc,QAAS1nB,IACjDiZ,MAAOzP,QAAQie,EAAOznB,OACtB6mB,WAAYY,EAAOznB,gBAM3B,eAACwlB,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,EACL7R,IAAK,GACLxG,MAAO6O,EAAOlD,OACd6Q,SAAU,SAACxc,GAAD,OAAWue,EAAc,SAAUve,QAGjD,cAACqc,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACxe,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,0BAGA,cAAC,GAAD,CACE5c,MAAO6O,EAAO+B,OACdtP,SAAU,SAACzK,GAAD,OAAW0nB,EAAc,SAAU1nB,IAC7C4mB,cAAe,SAAC5mB,GAAD,OAAW0nB,EAAc,SAAU1nB,IAClDiZ,MAAOzP,QAAQie,EAAO1N,QACtB8M,WAAYY,EAAO1N,iBAM3B,cAACyL,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,SACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,WACNlE,KAAM,IACN7R,IAAK,IACLxG,MAAO6O,EAAOjF,SACd4S,SAAU,SAACxc,GAAD,OAAWue,EAAc,WAAYve,UAIrD,cAACiwB,GAAD,CACEr7B,MAAM,OACNC,OAAO,QACPsuB,GAAI,EACJxiB,QAAQ,OACRG,eAAe,SACfC,WAAW,SACXmvB,UAAWI,EAPb,SASE,cAACH,GAAD,CACEt5B,MAAOgY,EAAOhY,MACd8U,OAAQkD,EAAOlD,OACfiF,OAAQ/B,EAAO+B,OACfF,KAAM7B,EAAO6B,KACb0f,OAAQvhB,EAAOjF,SACf0G,KAAMiH,EAASlH,MAAK,SAACvD,GAAD,OAAUA,EAAKzL,KAAOwN,EAAOyB,QAAME,UANzD,SAQG3B,EAAO0B,eAOZqgB,GAAa,SAACnuB,GAAW,IAE3B8U,EAOE9U,EAPF8U,SACA6H,EAME3c,EANF2c,SACAplB,EAKEyI,EALFzI,KACAs2B,EAIE7tB,EAJF6tB,UACAO,EAGEpuB,EAHFouB,aACAC,EAEEruB,EAFFquB,mBACAC,EACEtuB,EADFsuB,SAGF,OACE,eAACzR,GAAA,EAAD,CAAQxC,kBAAgB,oBAAoB9iB,KAAMA,EAAM0F,QAAS0f,EAAjE,UACE,cAACK,GAAA,EAAD,CAAape,GAAG,oBAAhB,yBACA,cAAC,KAAD,CACEqe,cAAe,CACbnP,KAAM,GACND,KAAM,EACNI,KAAM,GACN7Z,MAAOg6B,GAAgB,UACvBllB,OAAQ,EACRiF,OAAQkgB,GAAsB,UAC9BlnB,SAAU,GAEZ+V,iBAAkBC,OAAa9K,MAAM,CACnCvE,KAAMqP,OAAaoR,SAAS,YAC5Bn6B,MAAO+oB,OACJC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDnP,OAAQgP,OACLC,WACAC,KAAK,mBAAoB,yBAA0BC,QAExDC,SAAU,SAACnR,GAET,OADAnH,QAAQC,IAAIkH,GACL,IAEToR,SAAU8Q,EAvBZ,SAyBG,SAAC7Q,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAA1B,UACE,cAACE,GAAA,EAAD,CAAeC,UAAQ,EAACjf,GAAG,6BAA3B,SACE,cAACgvB,GAAD,2BACMnQ,GADN,IAEE3I,SAAUA,EACV+Y,UAAWA,OAGf,eAAC/P,GAAA,EAAD,WACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEmH,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRuD,SAAUwb,EAAUM,aAJtB,iCAgBC3e,OAAMC,KAAK8uB,ICjQpB5vB,GAAS/B,YAAO+e,KAAV,gFAAG/e,CAAkB+C,KAC3Bd,GAAajC,YAAO8C,KAAV,oFAAG9C,CAAsB+C,KAEnCmc,GAAU,SAAC1b,GAYXA,EAVF8Z,MAFwB,IAGxB6B,EASE3b,EATF2b,SACAC,EAQE5b,EARF4b,WACAC,EAOE7b,EAPF6b,OAGAC,GAIE9b,EANF+b,WAME/b,EALFgc,aAKEhc,EAJF8b,eAEA1P,GAEEpM,EAHFic,QAGEjc,EAFFoM,QACA8P,EACElc,EADFkc,cAEF,OACE,eAACje,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAOwM,GAAI,EAA5D,UACE,eAACib,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACxe,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,mBAGA,cAAC,GAAD,CACE5c,MAAO6O,EAAOuP,GACd9c,SAAU,SAACzK,GAAD,OAAW0nB,EAAcH,EAAUvnB,IAC7C4mB,cAAe,SAAC5mB,GAAD,OAAW0nB,EAAcH,EAAUvnB,IAClDiZ,MAAOzP,QAAQie,EAAOF,IACtBV,WAAYY,EAAOF,UAIzB,cAAC/B,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,UACNlE,IAAK,EACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAO6O,EAAOwP,GACd7B,SAAU,SAACxc,GAAD,OAAWue,EAAcF,EAAYre,WAIpD2e,MAKDsS,GAAwB,SAACxuB,GAAW,IAChC2c,EAA4B3c,EAA5B2c,SAAUplB,EAAkByI,EAAlBzI,KAAMqlB,EAAY5c,EAAZ4c,QAClBzG,EAAa3V,aACjB,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,QAAQsS,cAGzC,OACE,eAAC0G,GAAA,EAAD,CACExC,kBAAgB,oBAChB9iB,KAAMA,EACN0F,QAAS0f,EACTG,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAape,GAAG,oBAAhB,oCACA,cAAC,KAAD,CACEqe,cAAe,CACb7G,oBAAqBD,EAAWC,qBAAuB,UACvDC,sBAAuBF,EAAWE,uBAAyB,EAC3DC,qBAAsBH,EAAWG,sBAAwB,UACzDC,qBAAsBJ,EAAWI,sBAAwB,GAE3D2G,iBAAkBC,OAAa9K,MAAM,CACnC+D,oBAAqB+G,OAClBC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDhH,qBAAsB6G,OACnBC,WACAC,KAAK,mBAAoB,yBAA0BC,QAExDC,SAAU,SAACnR,GAET,OADAnH,QAAQC,IAAIkH,GACL,IAEToR,SAAUZ,EAnBZ,SAqBG,SAACa,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,cAACC,GAAA,EAAD,CAAeC,UAAQ,EAACjf,GAAG,6BAA3B,SACE,cAAC,GAAD,yBACEkb,MAAM,iBACN6B,SAAS,sBACTC,WAAW,yBACP6B,GAJN,IAKEvB,cACE,eAACtC,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACxe,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CACEK,QAAQ,QACRtK,MAAM,gBACN+lB,GAAI,EAHN,0BAOA,cAAC,GAAD,CACE5c,MAAOkgB,EAAUrR,OAAV,qBACPvN,SAAU,SAACzK,GAAD,OACRqpB,EAAU3B,cACR,uBACA1nB,IAGJ4mB,cAAe,SAAC5mB,GAAD,OACbqpB,EAAU3B,cACR,uBACA1nB,IAGJiZ,MAAOzP,QACL6f,EAAU5B,OAAV,sBAEFZ,WAAYwC,EAAU5B,OAAV,4BAIlB,cAACjC,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,EACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAOkgB,EAAUrR,OAAV,qBACP2N,SAAU,SAACxc,GAAD,OACRkgB,EAAU3B,cAAc,uBAAwBve,gBAQ9D,eAACugB,GAAA,EAAD,WACE,cAAC,GAAD,CAAQtf,QAASme,EAAUvoB,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEmH,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRuD,SAAUwb,EAAUM,eAAiBN,EAAUO,QAJjD,gCAgBC5e,OAAMC,KAAKmvB,IC9IpBC,GAAUjyB,YAAOkyB,MAAV,yEAAGlyB,CAAmB+C,KAC7BK,GAAUpD,YAAOyB,KAAV,yEAAGzB,CAAH,iDAIPmyB,GAAcnyB,YAAOyB,KAAV,6EAAGzB,CAAH,wDAKXoyB,GAAapyB,YAAO6wB,MAAV,4EAAG7wB,CAAH,gFAIM,SAACwD,GAAD,MACD,SAAjBA,EAAMihB,OAAoB,4BAA8B,UAGtD4N,GAAwBryB,YAAO4iB,MAAV,uFAAG5iB,CAAH,oBACZ,SAACwD,GAAD,MACS,SAApBA,EAAM8uB,UAAuB,0BAA4B,UAGvDC,GAAwBvyB,YAAOyB,KAAV,uFAAGzB,CAAH,iCACd,SAACwD,GAAD,OAAWA,EAAMgvB,WAIxBC,GAAQ,CACZ,CACE1xB,MAAO2O,IAAWC,QAClB2N,MAAO,eACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMsO,QAErC,CACE3xB,MAAO2O,IAAWwE,QAClBoJ,MAAO,eACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMuO,QAErC,CACE5xB,MAAO2O,IAAWsE,KAClBsJ,MAAO,YACP8G,KAAM,cAAC,KAAD,KAER,CACErjB,MAAO2O,IAAWuE,IAClBqJ,MAAO,aACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMwO,QAErC,CACE7xB,MAAO2O,IAAW8D,KAClB8J,MAAO,iBACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMyO,QAErC,CACE9xB,MAAO2O,IAAW+D,OAClB6J,MAAO,cACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM0O,QAErC,CACE/xB,MAAO2O,IAAWsD,QAClBsK,MAAO,eACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM0O,KAAUR,UAAU,UAEzD,CACEvxB,MAAO2O,IAAWgE,KAClB4J,MAAO,YACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM2O,QAErC,CACEhyB,MAAO2O,IAAWiE,KAClB2J,MAAO,YACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM4O,QAErC,CACEjyB,MAAO2O,IAAWkE,eAClB0J,MAAO,uBACP8G,KAAM,cAAC,KAAD,CAAa3S,KAAM,MAE3B,CACE1Q,MAAO2O,IAAWoE,MAClBwJ,MAAO,aACP8G,KAAM,cAAC,KAAD,CAAWxkB,SAAS,WAE5B,CACEmB,MAAO2O,IAAWqE,IAClBuJ,MAAO,WACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM6O,QAErC,CACElyB,MAAO2O,IAAW0E,MAClBkJ,MAAO,aACP8G,KAAM,cAAC,KAAD,CAAWxkB,SAAS,YAIxBszB,GAAe,CACnB,CACEnyB,MAAO8hB,IAAY5R,OACnBqM,MAAO,iCACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAM+O,QAErC,CACEpyB,MAAO8hB,IAAY7R,KACnBsM,MAAO,cACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMgP,QAErC,CACEryB,MAAO8hB,IAAY3R,KACnBoM,MAAO,cACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMiP,QAErC,CACEtyB,MAAO8hB,IAAYhQ,MACnByK,MAAO,iBACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMkP,QAErC,CACEvyB,MAAO8hB,IAAY0Q,UACnBjW,MAAO,mBACP8G,KAAM,cAACiO,GAAD,CAAuBjO,KAAMoP,SAIjCC,GAAY,SAAC,GAAuC,IAArCtQ,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWsQ,EAAiB,EAAjBA,WAChC7vB,EAAWC,cACX6K,EAAY3K,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAayK,aACtDqJ,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAC3DkE,EAAiBvH,aAAY,SAACC,GAAD,OAAWA,EAAM8T,eAAe1Q,WAC7DssB,EAAc3vB,aAAY,SAACC,GAAD,OAAWA,EAAM2vB,eAAepb,QAC1Dqb,EAAW7vB,aAAY,SAACC,GAAD,OAAWA,EAAM6vB,YAAYtb,QACpDub,EAAa/vB,aAAY,SAACC,GAAD,OAAWA,EAAM+vB,cAAcxb,QACxDF,EAAWtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYC,QACpDvS,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aAGtDguB,EAAmBtzB,uBACvB,SAACI,GACC8C,EAASmV,YAAajY,IAClBA,IAAU2O,IAAWC,SACvB9L,EAAS6K,aAAgB,SAG7B,CAAC7K,IAGGqwB,EAAiBvzB,uBACrB,SAAC6N,GACC3K,EAASmV,YAAatJ,IAAWC,UACjC9L,EAASswB,aAA0Bnc,EAAc5V,GAAIoM,IACrD4U,EAAU,MACVsQ,MAEF,CAAC7vB,EAAUuf,EAAWsQ,EAAY1b,GAAiBA,EAAc5V,KAE7DgyB,EAAkBzzB,uBACtB,SAACkV,GACChS,EAASmV,YAAatJ,IAAWC,UACjC9L,EAASwwB,aAAqBrc,EAAc5V,GAAIyT,EAAO5P,IACvDmd,EAAU,MACVsQ,MAEF,CACE7vB,EACAuf,EACAsQ,EACA1b,GAAiBA,EAAc5V,GAC/B6D,IAGEquB,EAAiB3zB,uBACrB,SAAC0sB,GACCxpB,EAASmV,YAAatJ,IAAWC,UACjC9L,EAAS0wB,aAAoBvc,EAAc5V,GAAIirB,EAAMpnB,IACrDmd,EAAU,MACVsQ,MAEF,CACE7vB,EACAuf,EACAsQ,EACA1b,GAAiBA,EAAc5V,GAC/B6D,IAGEuuB,EAAmB7zB,uBACvB,SAAC8zB,GACC5wB,EAASmV,YAAatJ,IAAWC,UACjC9L,EAAS6wB,aAAsB1c,EAAc5V,GAAIqyB,EAAQxuB,IACzDmd,EAAU,MACVsQ,MAEF,CACE7vB,EACAuf,EACAsQ,EACA1b,GAAiBA,EAAc5V,GAC/B6D,IAGE0uB,EAAmBh0B,uBACvB,SAACiP,GACC/L,EAASmV,YAAatJ,IAAWC,UACjC9L,EAAS+wB,aAAgB5c,EAAc5V,GAAIwN,EAAQ3J,IACnDmd,EAAU,MACVsQ,MAEF,CACE7vB,EACAuf,EACAsQ,EACA1b,GAAiBA,EAAc5V,GAC/B6D,IAIE8d,EAAsBpjB,uBAC1B,SAACgZ,GACC9V,EACEmgB,aAAa,2BACRhM,GADO,IAEV2B,WAAYA,MAGhByJ,EAAU,QAEZ,CAACvf,EAAUmU,EAAeoL,IAG5B,OACE,eAAC,GAAD,WACE,eAAC+O,GAAD,WACGM,GAAMxkB,KAAI,SAAC4mB,GAAD,OACT,cAAC,EAAD,CAEEzvB,MAAOyvB,EAAKvX,MACZzd,OAAK,EACLme,UAAU,QAJZ,SAME,cAACoU,GAAD,CACErxB,MAAO8zB,EAAK9zB,MACZiB,QAAS,kBAAMiyB,EAAiBY,EAAK9zB,QACrC0jB,OAAQoQ,EAAK9zB,QAAU4N,EAAY,OAAS,QAH9C,SAKGkmB,EAAKzQ,QAVHyQ,EAAK9zB,UAcd,cAAC,GAAD,CAASmjB,GAAI,IACZgP,GAAajlB,KAAI,SAACJ,GAAD,OAChB,cAAC,EAAD,CAEEzI,MAAOyI,EAAKyP,MACZzd,OAAK,EACLme,UAAU,QAJZ,SAME,cAACoU,GAAD,CACErxB,MAAO8M,EAAK9M,MACZiB,QAAS,kBAAMohB,EAAUvV,EAAK9M,QAFhC,SAIG8M,EAAKuW,QATHvW,EAAK9M,UAad,cAAC,GAAD,CAASmjB,GAAI,IACb,cAACziB,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,SAAnC,SACE,cAAC,EAAD,CAAcuD,MAAM,yBAAyBvF,OAAK,EAACme,UAAU,QAA7D,SACE,cAACvc,EAAA,EAAD,CAAKsb,QAAQ,UAAb,SACE,cAACwV,GAAD,CACE58B,MAAM,OACNC,OAAO,OACPmnB,QACE/E,EAAc2B,WAAWC,oBACzBkb,aAAW9c,EAAc2B,WAAWE,uBAEtC2Y,QAAO,oBACLxa,EAAc2B,WAAWG,qBACzBgb,aAAW9c,EAAc2B,WAAWI,uBAEtC/X,QAAS,kBAAMohB,EAAUP,IAAYkS,oCAO/C,cAAC,GAAD,CACEh6B,KAAMooB,IAAWN,IAAY0Q,UAC7BllB,QAAS9C,EACTqe,WAAYsK,EACZ/T,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,IAAYhQ,MAC7BiY,OAAQ6I,EACR5I,YAAaqJ,EACbjU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,IAAY7R,KAC7Bgc,MAAO6G,EACP5G,WAAYqH,EACZnU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,IAAY5R,OAC7Bod,QAAS0F,EACTzF,aAAckG,EACdrU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,IAAY3R,KAC7BoH,SAAUA,EACV+Y,UAAWrZ,EAAc2E,WACzBiV,aAAc5Z,EAAc2B,WAAWC,oBACvCiY,mBAAoB7Z,EAAc2B,WAAWG,qBAC7CgY,SAAU6C,EACVxU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEroB,KAAMooB,IAAWN,IAAYkS,uBAC7B3U,QAAS2D,EACT5D,SAAU,kBAAMiD,EAAU,aAMnBxgB,OAAMC,KAAK4wB,IC5WpBuB,GAAeh1B,YAAOyB,KAAV,4EAAGzB,CAAH,mDAKZi1B,GAAej1B,YAAOyB,KAAV,4EAAGzB,CAAH,yBAGZoD,GAAUpD,YAAOyB,KAAV,uEAAGzB,CAAH,iDAIPk1B,GAAmBl1B,YAAO+B,KAAV,gFAAG/B,CAAH,2BAkJPm1B,GA9IC,SAAC3xB,GAAW,IAExB2f,EAKE3f,EALF2f,OACAC,EAIE5f,EAJF4f,UACAsQ,EAGElwB,EAHFkwB,WACA1c,EAEExT,EAFFwT,iBACAC,EACEzT,EADFyT,sBAGIpT,EAAWC,cAEXkU,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAC3DoR,EAAYzU,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAaF,QACtDjN,EAAiBvH,aAAY,SAACC,GAAD,OAAWA,EAAM8T,eAAe1Q,WAE7DgqB,EAAY5jB,mBAChB,iBAC+B,gBAA7BuK,EAAc2E,WACV3E,EAAc2E,WACd,IAAM3E,EAAc2E,aAC1B,CAAC3E,EAAc2E,aApBQ,EAuBWhZ,mBAAS0tB,GAvBpB,mBAuBlB+D,EAvBkB,KAuBNC,EAvBM,OAwBW1xB,oBAAS,GAxBpB,mBAwBlB2xB,EAxBkB,KAwBNC,EAxBM,KA0BzB/tB,qBAAU,WACR6tB,EAAchE,KACb,CAACA,IAEJ,IAAMmE,EAA6B70B,uBACjC,SAAC/I,GACCiM,EAAS4xB,aAAgBzd,EAAc5V,GAAIxK,IAC3Cy9B,EAAcz9B,GACd29B,GAAc,KAEhB,CAAC1xB,EAAUmU,GAAiBA,EAAc5V,GAAIizB,EAAeE,IAEzDG,EAAkC/0B,uBACtC,SAAC/I,GACCy9B,EAAcz9B,GACW29B,EAArB39B,IAAUy5B,KAGhB,CAACA,EAAWgE,EAAeE,IAEvBI,EAA4Bh1B,uBAAY,WAC5CkD,EAAS4xB,aAAgBzd,EAAc5V,GAAIgzB,IAC3CG,GAAc,KACb,CAAC1xB,EAAUmU,GAAiBA,EAAc5V,GAAIgzB,EAAYG,IAE7D,OACE,eAAC9zB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAACszB,GAAD,CAAchR,GAAI,EAAlB,SACE,cAAC,GAAD,MAEF,eAAC,GAAD,CAASviB,QAAQ,OAAjB,UACE,cAAC,GAAD,CACEyhB,OAAQA,EACRC,UAAWA,EACXsQ,WAAYA,IAEd,eAACsB,GAAD,CAAcY,GAAI,EAAGC,GAAI,EAAzB,UACE,cAAC,GAAD,CACEzwB,MAAOmG,EAAiBA,EAAe0D,KAAO,GAC9CwJ,UAAWA,EAAU7K,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OAE3C+W,aAAa,EACb4C,YAAY,EACZ3Q,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACE7R,MAAM,eACNqT,UAAWA,EAAU7K,QACnB,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAWiD,MAC/BnD,EAAKC,aAAeC,IAAWmD,MAC/BrD,EAAKC,aAAeC,IAAWkD,UAEnC+F,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACE7R,MAAM,SACNqT,UAAWA,EAAU7K,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAW8E,SAE3CmE,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACE7R,MAAM,WACNqT,UAAWA,EAAU7K,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWc,WAE3CmI,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACE7R,MAAM,aACNqT,UAAWA,EAAU7K,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWO,QAE3CyW,aAAa,EACb/N,iBAAkBA,EAClBC,sBAAuBA,EACvByI,cACE,eAACje,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXD,eAAe,gBAHjB,UAKE,cAAC,GAAD,CACEd,MAAOq0B,EACP/yB,SAAUmzB,EACVhX,cAAekX,IAEhBJ,GAAcxU,aAAesU,GAC5B,cAACF,GAAD,CACElzB,QAAS2zB,EACTzzB,QAAQ,WAFV,mBAMG4e,aAAesU,GAKlB,6BAJA,cAACnzB,EAAA,EAAD,CAAYrK,MAAM,YAAYsK,QAAQ,QAAtC,0C,SCvIZ6uB,GAAmB/wB,YAAOse,MAAV,uFAAGte,CAAH,uCAMhB81B,GAAkB,SAACtyB,GAAW,IAEhC6b,EASE7b,EATF6b,OACAmC,EAQEhe,EARFge,QACAuU,EAOEvyB,EAPFuyB,oBACAxW,EAME/b,EANF+b,WACAC,EAKEhc,EALFgc,aACAF,EAIE9b,EAJF8b,cACAG,EAGEjc,EAHFic,QACA7P,EAEEpM,EAFFoM,OACAqY,EACEzkB,EADFykB,YAEI+N,EAAsB,CAAC,OAAQ,OAAQ,YAAa,SAZzB,EAaDryB,oBAAS,GAbR,mBAa1Bgc,EAb0B,KAahBC,EAbgB,KAc3BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAMH,MAJ+B,OAA3BqmB,KAAKC,UAAU7W,IACjB5W,QAAQC,IAAI2W,GAIZ2W,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,wBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,mBAC1B,cAAC,GAAD,CACE6G,KAAK,kBACLqO,MAAM,OACNpb,QAAQ,WACRnB,MAAO6O,EAAOzJ,WAAW8I,KACzB4B,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW8I,MACnBoQ,EAAOlZ,YACPkZ,EAAOlZ,WAAW8I,MAEtBwP,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW8I,MACnBoQ,EAAOlZ,YACPkZ,EAAOlZ,WAAW8I,KAEpBkP,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,mBAC1B,cAAC,GAAD,CACE6G,KAAK,kBACLqO,MAAM,OACNpb,QAAQ,WACRnB,MAAO6O,EAAOzJ,WAAWmL,KACzBT,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWmL,MACnB+N,EAAOlZ,YACPkZ,EAAOlZ,WAAWmL,MAEtBmN,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWmL,MACnB+N,EAAOlZ,YACPkZ,EAAOlZ,WAAWmL,KAEpB6M,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,wBAC1B,cAAC,GAAD,CACE6G,KAAK,uBACLqO,MAAM,mBACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOuG,KAAKkF,MAAMoD,EAAOzJ,WAAWoM,WACpC1B,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWoM,WACnB8M,EAAOlZ,YACPkZ,EAAOlZ,WAAWoM,WAEtBkM,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWoM,WACnB8M,EAAOlZ,YACPkZ,EAAOlZ,WAAWoM,UAEpB4L,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,oBAC1B,cAAC,GAAD,CACEkV,MAAM,QACNlE,IAAK,EACL7R,IAAK,IACLxG,MAAOuG,KAAKkF,MAAMoD,EAAOzJ,WAAWqM,OACpC+K,SAAU,SAACxc,GAAD,OAAWue,EAAc,mBAAoBve,MAGzD,6BAED4R,EAAkBvK,SAAS,iBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,wBAGA,cAACza,EAAA,EAAD,CACElB,QAAS,kBAAMimB,EAAY,kBAC3BxW,KAAK,QAFP,SAIG7B,EAAOzB,cACN,cAAC+X,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,SAKN,6BAEDxT,EAAkBvK,SAAS,gBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,qBAGA,cAACza,EAAA,EAAD,CACElB,QAAS,kBAAMimB,EAAY,iBAC3BxW,KAAK,QAFP,SAIG7B,EAAOH,aAAe,cAACuW,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,SAI1C,6BAEDzE,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKizB,I,sBCpNpB/E,GAAmB/wB,YAAOse,MAAV,oFAAGte,CAAH,uCAKhBo2B,GAAmBp2B,YAAOkD,KAAV,oFAAGlD,CAAH,+BAKhBq2B,GAAe,SAAC7yB,GAAW,IAE7B6b,EAWE7b,EAXF6b,OACAmC,EAUEhe,EAVFge,QACAuU,EASEvyB,EATFuyB,oBACAxW,EAQE/b,EARF+b,WACAC,EAOEhc,EAPFgc,aACAF,EAME9b,EANF8b,cACAG,EAKEjc,EALFic,QACA7P,EAIEpM,EAJFoM,OACA0mB,EAGE9yB,EAHF8yB,qBACA3d,EAEEnV,EAFFmV,aACA7D,EACEtR,EADFsR,WAEIkhB,EAAsB,CAC1B,QACA,SACA,SACA,SACA,SACA,cACA,cACA,gBACA,gBAvB4B,EAyBEryB,oBAAS,GAzBX,mBAyBvBgc,EAzBuB,KAyBbC,EAzBa,KA0BxBjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAEG2mB,EAAmB9oB,mBAAQ,iBAAqB,UAAfqH,IAAwB,CAACA,IAE1D0hB,EAAoB71B,uBACxB,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAW+O,YACpBoK,EACE,oBACCve,EAAQ4X,EAAaxS,WAAWvQ,OAC/B+iB,EAAaxS,WAAWxQ,OAG9B2pB,EAAc,mBAAoBlQ,WAAWxO,EAAME,OAAOC,QAAU,KAEtE,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWvQ,OACxC+iB,GAAgBA,EAAaxS,WAAWxQ,QAGtC8gC,EAAqB91B,uBACzB,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAW+O,YACpBoK,EACE,mBACCve,EAAQ4X,EAAaxS,WAAWxQ,MAC/BgjB,EAAaxS,WAAWvQ,QAG9B0pB,EAAc,oBAAqBlQ,WAAWxO,EAAME,OAAOC,QAAU,KAEvE,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWvQ,OACxC+iB,GAAgBA,EAAaxS,WAAWxQ,QAGtC+gC,EAAqB/1B,uBACzB,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAWgP,aACpBmK,EACE,oBACCve,EAAQ4X,EAAaxS,WAAWqE,OAC/BmO,EAAaxS,WAAWoE,QAG9B+U,EAAc,oBAAqBlQ,WAAWxO,EAAME,OAAOC,QAAU,KAEvE,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWqE,OACxCmO,GAAgBA,EAAaxS,WAAWoE,SAGtCosB,EAAqBh2B,uBACzB,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAWgP,aACpBmK,EACE,oBACCve,EAAQ4X,EAAaxS,WAAWoE,OAC/BoO,EAAaxS,WAAWqE,QAG9B8U,EAAc,oBAAqBlQ,WAAWxO,EAAME,OAAOC,QAAU,KAEvE,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWqE,OACxCmO,GAAgBA,EAAaxS,WAAWoE,SAItCqsB,EAA0Bj2B,uBAC9B,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAWgP,aACpBmK,EACE,yBACCve,EAAQ4X,EAAaxS,WAAWkM,YAC/BsG,EAAaxS,WAAWiM,aAG9BkN,EACE,yBACAlQ,WAAWxO,EAAME,OAAOC,QAAU,KAGtC,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWkM,YACxCsG,GAAgBA,EAAaxS,WAAWiM,cAGtCykB,EAA0Bl2B,uBAC9B,SAACC,GACC,IAAIG,EAAQqO,WAAWxO,EAAME,OAAOC,QAAU,EAC1C6O,EAAOzJ,WAAWgP,aACpBmK,EACE,yBACCve,EAAQ4X,EAAaxS,WAAWiM,YAC/BuG,EAAaxS,WAAWkM,aAG9BiN,EACE,yBACAlQ,WAAWxO,EAAME,OAAOC,QAAU,KAGtC,CACEue,EACA3G,GAAgBA,EAAaxS,WAAWkM,YACxCsG,GAAgBA,EAAaxS,WAAWiM,cAG5C,OACE4jB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,qBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACE,eAAC8L,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMG6Q,EAAkBvK,SAAS,oBAC1B,cAAC,GAAD,CACE6G,KAAK,mBACLqO,MACE1N,EAAOzJ,WAAWpH,OAAS2Q,IAAWsD,QAClC,QACA,UAEN9Q,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWxQ,OACpCkb,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWxQ,OACnB0pB,EAAOlZ,YACPkZ,EAAOlZ,WAAWxQ,OAEtB8oB,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWxQ,OACnB0pB,EAAOlZ,YACPkZ,EAAOlZ,WAAWxQ,MAEpBwoB,OAAQoB,EACRld,SAAUm0B,EACVlW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,qBAC5BuK,EAAkBvK,SAAS,qBACzB,cAACguB,GAAD,CACEp0B,QAAS,kBAAMs0B,EAAqB,eADtC,SAGG1mB,EAAOzJ,WAAW+O,YAAcqhB,EAC/B,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDpkB,EAAkBvK,SAAS,qBAC1B,cAAC,GAAD,CACE6G,KAAK,oBACLqO,MACE1N,EAAOzJ,WAAWpH,OAAS2Q,IAAWsD,QAClC,SACA,UAEN9Q,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWvQ,QACpCib,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWvQ,QACnBypB,EAAOlZ,YACPkZ,EAAOlZ,WAAWvQ,QAEtB6oB,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWvQ,QACnBypB,EAAOlZ,YACPkZ,EAAOlZ,WAAWvQ,OAEpBuoB,OAAQoB,EACRld,SAAUo0B,EACVnW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAC/vB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMG6Q,EAAkBvK,SAAS,qBAC1B,cAAC,GAAD,CACE6G,KAAK,oBACLqO,MAAM,SACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWoE,QACpCsG,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWoE,QACnB8U,EAAOlZ,YACPkZ,EAAOlZ,WAAWoE,QAEtBkU,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWoE,QACnB8U,EAAOlZ,YACPkZ,EAAOlZ,WAAWoE,OAEpB4T,OAAQoB,EACRld,SAAUq0B,EACVpW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,sBAC5BuK,EAAkBvK,SAAS,qBACzB,cAACguB,GAAD,CACEp0B,QAAS,kBAAMs0B,EAAqB,gBADtC,SAGG1mB,EAAOzJ,WAAWgP,aAAeohB,EAChC,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDpkB,EAAkBvK,SAAS,qBAC1B,cAAC,GAAD,CACE6G,KAAK,oBACLqO,MAAM,SACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWqE,QACpCqG,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWqE,QACnB6U,EAAOlZ,YACPkZ,EAAOlZ,WAAWqE,QAEtBiU,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWqE,QACnB6U,EAAOlZ,YACPkZ,EAAOlZ,WAAWqE,OAEpB2T,OAAQoB,EACRld,SAAUs0B,EACVrW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAC/vB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMG6Q,EAAkBvK,SAAS,0BAC1B,cAAC,GAAD,CACE6G,KAAK,yBACLqO,MAAM,eACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWiM,aACpCvB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWiM,aACnBiN,EAAOlZ,YACPkZ,EAAOlZ,WAAWiM,aAEtBqM,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWiM,aACnBiN,EAAOlZ,YACPkZ,EAAOlZ,WAAWiM,YAEpB+L,OAAQoB,EACRld,SAAUu0B,EACVtW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,2BAC5BuK,EAAkBvK,SAAS,0BACzB,cAACguB,GAAD,CACEp0B,QAAS,kBAAMs0B,EAAqB,gBADtC,SAGG1mB,EAAOzJ,WAAWgP,aAAeohB,EAChC,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDpkB,EAAkBvK,SAAS,0BAC1B,cAAC,GAAD,CACE6G,KAAK,yBACLqO,MAAM,eACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWkM,aACpCxB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWkM,aACnBgN,EAAOlZ,YACPkZ,EAAOlZ,WAAWkM,aAEtBoM,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWkM,aACnBgN,EAAOlZ,YACPkZ,EAAOlZ,WAAWkM,YAEpB8L,OAAQoB,EACRld,SAAUw0B,EACVvW,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGH7e,EAAkBvK,SAAS,qBAC1B,cAAC,GAAD,CACE6G,KAAK,oBACLqO,MAAM,SACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW2L,QACpCjB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW2L,QACnBuN,EAAOlZ,YACPkZ,EAAOlZ,WAAW2L,QAEtB2M,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW2L,QACnBuN,EAAOlZ,YACPkZ,EAAOlZ,WAAW2L,OAEpBqM,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,2BAC1B,cAAC,GAAD,CACE6G,KAAK,0BACLqO,MAAM,gBACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWgM,cACpCtB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWgM,cACnBkN,EAAOlZ,YACPkZ,EAAOlZ,WAAWgM,cAEtBsM,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWgM,cACnBkN,EAAOlZ,YACPkZ,EAAOlZ,WAAWgM,aAEpBgM,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,4BAC1B,cAAC,GAAD,CACE6G,KAAK,2BACLqO,MAAM,iBACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW+L,eACpCrB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW+L,eACnBmN,EAAOlZ,YACPkZ,EAAOlZ,WAAW+L,eAEtBuM,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW+L,eACnBmN,EAAOlZ,YACPkZ,EAAOlZ,WAAW+L,cAEpBiM,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDhQ,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKwzB,ICniBpBtF,GAAmB/wB,YAAOse,MAAV,yFAAGte,CAAH,uCAMhBg3B,GAAmB,SAACxzB,GAAW,IAEjC6b,EAQE7b,EARF6b,OACAmC,EAOEhe,EAPFge,QACAuU,EAMEvyB,EANFuyB,oBACAxW,EAKE/b,EALF+b,WACAC,EAIEhc,EAJFgc,aAEAC,GAEEjc,EAHF8b,cAGE9b,EAFFic,SACA7P,EACEpM,EADFoM,OAEIomB,EAAsB,CAAC,OAAQ,OAXH,EAYFryB,oBAAS,GAZP,mBAY3Bgc,EAZ2B,KAYjBC,EAZiB,KAa5BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,yBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACE,eAACynB,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,mBAC1B,cAAC,GAAD,CACE6G,KAAK,kBACLqO,MAAM,IACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW4C,MACpC8H,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW4C,MACnBsW,EAAOlZ,YACPkZ,EAAOlZ,WAAW4C,MAEtB0V,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW4C,MACnBsW,EAAOlZ,YACPkZ,EAAOlZ,WAAW4C,KAEpBoV,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,kBAC1B,cAAC,GAAD,CACE6G,KAAK,iBACLqO,MAAM,IACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW8C,KACpC4H,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW8C,KACnBoW,EAAOlZ,YACPkZ,EAAOlZ,WAAW8C,KAEtBwV,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW8C,KACnBoW,EAAOlZ,YACPkZ,EAAOlZ,WAAW8C,IAEpBkV,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,kCAILhQ,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKm0B,IC5HpBvF,GAAczxB,YAAOi3B,MAAV,+EAAGj3B,CAAuB+C,KAErCm0B,GAAe,SAAC1zB,GAAW,IAE7B6b,EAUE7b,EAVF6b,OACAmC,EASEhe,EATFge,QACAuU,EAQEvyB,EARFuyB,oBAGAzW,GAKE9b,EAPF+b,WAOE/b,EANFgc,aAMEhc,EALF8b,eAEA1P,GAGEpM,EAJFic,QAIEjc,EAHFoM,QACA0I,EAEE9U,EAFF8U,SACA6e,EACE3zB,EADF2zB,kBAEInB,EAAsB,CAAC,QAbC,EAcEryB,oBAAS,GAdX,mBAcvBgc,EAduB,KAcbC,EAda,KAexBjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,qBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,mBAC1B,eAAC,GAAD,CAAalG,QAAQ,WAAW8tB,GAAI,EAApC,UACE,cAAC0B,GAAA,EAAD,CAAYtvB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACErB,MAAO6O,EAAOzJ,WAAWkL,KACzBhP,SAAU,SAAC+H,GAAD,OAAO+sB,EAAkB,OAAQ/sB,EAAEtJ,OAAOC,QACpDuX,SAAUA,OAId,6BAED3F,EAAkBvK,SAAS,oBAC1B,eAACgV,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,0BAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC,GAAD,CACE3c,MAAO6O,EAAOzJ,WAAWvO,MACzByK,SAAU,SAACzK,GAAD,OAAWu/B,EAAkB,QAASv/B,IAChD4mB,cAAe,SAAC5mB,GAAD,OACb0nB,EAAc,mBAAoB1nB,IAEpCiZ,MAAOzP,QAAQie,EAAOlZ,YAAckZ,EAAOlZ,WAAWvO,OACtD6mB,WAAYY,EAAOlZ,YAAckZ,EAAOlZ,WAAWvO,aAKzD,6BAED+a,EAAkBvK,SAAS,mBAC1B,cAAC,GAAD,CACEkV,MAAM,YACNlE,IAAK,EACL7R,IAAK,GACLxG,MAAO6O,EAAOzJ,WAAWsL,KACzB8L,SAAU,SAACxc,GAAD,OAAWue,EAAc,kBAAmBve,MAGxD,6BAEDygB,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKq0B,ICxGpBE,GAAiB,SAAC5zB,GAAW,IAE/B6b,EASE7b,EATF6b,OACAmC,EAQEhe,EARFge,QACAuU,EAOEvyB,EAPFuyB,oBAGAzW,GAIE9b,EANF+b,WAME/b,EALFgc,aAKEhc,EAJF8b,eAEA1P,GAEEpM,EAHFic,QAGEjc,EAFFoM,QACAunB,EACE3zB,EADF2zB,kBAEInB,EAAsB,CAAC,SAAU,SAAU,cAZjB,EAaAryB,oBAAS,GAbT,mBAazBgc,EAbyB,KAafC,EAbe,KAc1BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,uBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,qBAC1B,eAACgV,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,4BAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC,GAAD,CACE3c,MAAO6O,EAAOzJ,WAAWwL,OACzBtP,SAAU,SAACzK,GAAD,OAAWu/B,EAAkB,SAAUv/B,IACjD4mB,cAAe,SAAC5mB,GAAD,OACb0nB,EAAc,oBAAqB1nB,IAErCiZ,MAAOzP,QAAQie,EAAOlZ,YAAckZ,EAAOlZ,WAAWwL,QACtD8M,WAAYY,EAAOlZ,YAAckZ,EAAOlZ,WAAWwL,cAKzD,6BAEDgB,EAAkBvK,SAAS,qBAC1B,cAAC3G,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC,GAAD,CACEmb,MAAM,eACNlE,IAAK,EACL7R,IAAK,GACLxG,MAAO6O,EAAOzJ,WAAWuG,OACzB6Q,SAAU,SAACxc,GAAD,OAAWue,EAAc,oBAAqBve,QAI5D,6BAED4R,EAAkBvK,SAAS,yBAC1B,eAACgV,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,2BAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,eAAC2S,GAAA,EAAD,CACEphB,KAAK,wBACL/M,QAAQ,WACRnB,MAAO6O,EAAOzJ,WAAWqO,WACzBnS,SAAU,SAACzB,GAAD,OACRu2B,EAAkB,aAAcv2B,EAAME,OAAOC,QAE/Cuf,WAAS,EAPX,UASE,cAACuQ,GAAA,EAAD,CAAU9vB,MAAM,SAAhB,oBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,SAAhB,oBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,UAAhB,6BAKN,6BAEDygB,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKu0B,ICpHpBC,GAAgB,SAAC7zB,GAAW,IAE9B6b,EASE7b,EATF6b,OAGAmC,GAMEhe,EARF+b,WAQE/b,EAPFgc,aAOEhc,EANFge,SACAuU,EAKEvyB,EALFuyB,oBACAzW,EAIE9b,EAJF8b,cAEA1P,GAEEpM,EAHFic,QAGEjc,EAFFoM,QACAunB,EACE3zB,EADF2zB,kBAEInB,EAAsB,CAAC,QAAS,UAAW,aAZlB,EAaCryB,oBAAS,GAbV,mBAaxBgc,EAbwB,KAadC,EAbc,KAczBjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,uBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,qBAC5BwH,EAAO9B,aAAeC,IAAWmD,KAC/B,eAACkM,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,qBAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC,GAAD,CACE3c,MAAO6O,EAAOzJ,WAAWvO,MACzByK,SAAU,SAACzK,GAAD,OAAWu/B,EAAkB,QAASv/B,IAChD4mB,cAAe,SAAC5mB,GAAD,OACb0nB,EAAc,mBAAoB1nB,IAEpCiZ,MAAOzP,QAAQie,EAAOlZ,YAAckZ,EAAOlZ,WAAWvO,OACtD6mB,WAAYY,EAAOlZ,YAAckZ,EAAOlZ,WAAWvO,aAKzD,6BAED+a,EAAkBvK,SAAS,sBAC1B,cAAC3G,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC,GAAD,CACEmb,MAAM,UACNlE,IAAK,EACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAO6O,EAAOzJ,WAAWiG,QACzBmR,SAAU,SAACxc,GAAD,OAAWue,EAAc,qBAAsBve,QAI7D,6BAED4R,EAAkBvK,SAAS,wBAC1B,eAACgV,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,0BAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,eAAC2S,GAAA,EAAD,CACEphB,KAAK,uBACL/M,QAAQ,WACRnB,MAAO6O,EAAOzJ,WAAWwO,UACzBtS,SAAU,SAACzB,GAAD,OACRu2B,EAAkB,YAAav2B,EAAME,OAAOC,QAE9Cuf,WAAS,EAPX,UASE,cAACuQ,GAAA,EAAD,CAAU9vB,MAAM,SAAhB,oBAEA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,WAAhB,sBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,SAAhB,oBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,UAAhB,qBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,aAAhB,wBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,QAAhB,mBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,SAAhB,oBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,UAAhB,qBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,MAAhB,iBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,aAAhB,wBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,aAAhB,wBACA,cAAC8vB,GAAA,EAAD,CAAU9vB,MAAM,MAAhB,yBAKN,6BAEDygB,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKw0B,I,sBC9HpBC,GAAmB,SAAC9zB,GAYpBA,EAVF6b,OAFiC,IAGjCmC,EASEhe,EATFge,QACAuU,EAQEvyB,EARFuyB,oBAGAzW,GAKE9b,EAPF+b,WAOE/b,EANFgc,aAMEhc,EALF8b,eAGA1P,GAEEpM,EAJFykB,YAIEzkB,EAHFic,QAGEjc,EAFFoM,QACAunB,EACE3zB,EADF2zB,kBAEInB,EAAsB,CAAC,WAAY,OAAQ,QAbf,EAcFryB,oBAAS,GAdP,mBAc3Bgc,EAd2B,KAcjBC,EAdiB,KAe5BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,yBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,uBAC1B,cAAC,GAAD,CACEkV,MAAM,WACNlE,KAAM,IACN7R,IAAK,IACLxG,MAAOuG,KAAKkF,MAAMoD,EAAOzJ,WAAWwE,UACpC4S,SAAU,SAACxc,GAAD,OAAWue,EAAc,sBAAuBve,MAG5D,6BAED4R,EAAkBvK,SAAS,mBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,kBAGA,cAACza,EAAA,EAAD,CACElB,QAAS,kBACPm1B,EAAkB,OAAQvnB,EAAOzJ,WAAWyE,KAAO,EAAI,IAEzD6G,KAAK,QAJP,SAMG7B,EAAOzJ,WAAWyE,KACjB,cAAC2sB,GAAA,EAAD,IAEA,qCACE,cAACA,GAAA,EAAD,IACA,cAAC91B,EAAA,EAAD,CAAKgB,SAAS,WAAWsG,KAAK,MAAME,IAAI,MAAxC,SACE,cAAC,KAAD,CAAiBmb,KAAMoT,KAAS/lB,KAAK,iBAO/C,6BAEDkB,EAAkBvK,SAAS,mBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,kBAGA,cAACza,EAAA,EAAD,CACElB,QAAS,kBACPm1B,EAAkB,OAAQvnB,EAAOzJ,WAAW0E,KAAO,EAAI,IAEzD4G,KAAK,QAJP,SAMG7B,EAAOzJ,WAAW0E,KACjB,cAAC4sB,GAAA,EAAD,IAEA,qCACE,cAACA,GAAA,EAAD,IACA,cAACh2B,EAAA,EAAD,CAAKgB,SAAS,WAAWsG,KAAK,MAAME,IAAI,MAAxC,SACE,cAAC,KAAD,CAAiBmb,KAAMoT,KAAS/lB,KAAK,iBAO/C,6BAED+P,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKy0B,ICnIpBvG,GAAmB/wB,YAAOse,MAAV,uFAAGte,CAAH,uCAMhB03B,GAAiB,SAACl0B,GACtB,IAEE6b,EASE7b,EATF6b,OACAmC,EAQEhe,EARFge,QACAuU,EAOEvyB,EAPFuyB,oBACAxW,EAME/b,EANF+b,WACAC,EAKEhc,EALFgc,aACAF,EAIE9b,EAJF8b,cACAG,EAGEjc,EAHFic,QACA7P,EAEEpM,EAFFoM,OACAunB,EACE3zB,EADF2zB,kBAEInB,EAAsB,CAC1B,cACA,aACA,gBACA,gBACA,iBAlB8B,EAoBAryB,oBAAS,GApBT,mBAoBzBgc,EApByB,KAoBfC,EApBe,KAqB1BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAEG+nB,EAAoBh3B,uBACxB,SAACI,GAA4B,IAArB62B,IAAoB,yDAEvBhoB,EAAOzJ,WAAWoJ,aACe,gBAAlCK,EAAOzJ,WAAWoJ,aAElB+P,EAAc,wBAjCK,GAmCjBsY,EAAUT,EAAkB,cAAep2B,GAC1Cue,EAAc,yBAA0Bve,KAE/C,CAACue,EAAe6X,EAAmBvnB,EAAOzJ,WAAWoJ,cAGvD,OACEymB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,uBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACGgd,EAAkBvK,SAAS,0BAC1B,eAACgV,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAACzb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB+lB,GAAI,EAAtD,4BAIF,cAACP,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACE,cAAC,GAAD,CACE3c,MAAO6O,EAAOzJ,WAAWoJ,YACzBlN,SAAU,SAACzK,GAAD,OAAW+/B,EAAkB//B,IACvC4mB,cAAe,SAAC5mB,GAAD,OAAW+/B,EAAkB//B,GAAO,IACnDiZ,MAAOzP,QACLie,EAAOlZ,YAAckZ,EAAOlZ,WAAWoJ,aAEzCkP,WACEY,EAAOlZ,YAAckZ,EAAOlZ,WAAWoJ,mBAM/C,6BAEDoD,EAAkBvK,SAAS,yBAC1B,cAAC,GAAD,CACE6G,KAAK,wBACLqO,MAAM,cACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW2E,YACpC+F,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW2E,YACnBuU,EAAOlZ,YACPkZ,EAAOlZ,WAAW2E,YAEtB2T,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW2E,YACnBuU,EAAOlZ,YACPkZ,EAAOlZ,WAAW2E,WAEpBqT,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBvK,SAAS,4BAC1B,cAAC,GAAD,CACEkV,MAAM,iBACNlE,IAAK,EACL7R,IAAK,EACLiW,KAAM,IACNzc,MAAO6O,EAAOzJ,WAAWqJ,cACzB+N,SAAU,SAACxc,GAAD,OACRue,EAAc,2BAA4Bve,MAI9C,6BAEF,eAACqc,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,4BAC1B,cAAC,GAAD,CACE6G,KAAK,2BACLqO,MAAM,iBACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW4E,eACpC8F,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW4E,eACnBsU,EAAOlZ,YACPkZ,EAAOlZ,WAAW4E,eAEtB0T,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW4E,eACnBsU,EAAOlZ,YACPkZ,EAAOlZ,WAAW4E,cAEpBoT,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,4BAC1B,cAAC,GAAD,CACE6G,KAAK,2BACLqO,MAAM,iBACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAW6E,eACpC6F,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAW6E,eACnBqU,EAAOlZ,YACPkZ,EAAOlZ,WAAW6E,eAEtByT,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAW6E,eACnBqU,EAAOlZ,YACPkZ,EAAOlZ,WAAW6E,cAEpBmT,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,kCAILhQ,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAK60B,IC7NpB3G,GAAmB/wB,YAAOse,MAAV,sFAAGte,CAAH,uCAMhB63B,GAAiB,SAACr0B,GAAW,IAE/B6b,EAQE7b,EARF6b,OACAmC,EAOEhe,EAPFge,QACAuU,EAMEvyB,EANFuyB,oBACAxW,EAKE/b,EALF+b,WACAC,EAIEhc,EAJFgc,aAEAC,GAEEjc,EAHF8b,cAGE9b,EAFFic,SACA7P,EACEpM,EADFoM,OAEIomB,EAAsB,CAC1B,gBACA,iBACA,mBACA,qBAf8B,EAiBAryB,oBAAS,GAjBT,mBAiBzBgc,EAjByB,KAiBfC,EAjBe,KAkB1BjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,8BAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACE,eAACynB,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACG/K,EAAkBvK,SAAS,4BAC1B,cAAC,GAAD,CACE6G,KAAK,2BACLqO,MAAM,WACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWgN,eACpCtC,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWgN,eACnBkM,EAAOlZ,YACPkZ,EAAOlZ,WAAWgN,eAEtBsL,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWgN,eACnBkM,EAAOlZ,YACPkZ,EAAOlZ,WAAWgN,cAEpBgL,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACG/K,EAAkBvK,SAAS,6BAC1B,cAAC,GAAD,CACE6G,KAAK,4BACLqO,MAAM,YACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWiN,gBACpCvC,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWiN,gBACnBiM,EAAOlZ,YACPkZ,EAAOlZ,WAAWiN,gBAEtBqL,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWiN,gBACnBiM,EAAOlZ,YACPkZ,EAAOlZ,WAAWiN,eAEpB+K,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACG/K,EAAkBvK,SAAS,+BAC1B,cAAC,GAAD,CACE6G,KAAK,8BACLqO,MAAM,cACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWkN,kBACpCxC,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWkN,kBACnBgM,EAAOlZ,YACPkZ,EAAOlZ,WAAWkN,kBAEtBoL,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWkN,kBACnBgM,EAAOlZ,YACPkZ,EAAOlZ,WAAWkN,iBAEpB8K,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAAC6P,GAAI,EAAf,SACG/K,EAAkBvK,SAAS,gCAC1B,cAAC,GAAD,CACE6G,KAAK,+BACLqO,MAAM,eACNpb,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAW4G,EAAOzJ,WAAWmN,mBACpCzC,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWmN,mBACnB+L,EAAOlZ,YACPkZ,EAAOlZ,WAAWmN,mBAEtBmL,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWmN,mBACnB+L,EAAOlZ,YACPkZ,EAAOlZ,WAAWmN,kBAEpB6K,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,kCAILhQ,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKg1B,IClNpBC,GAAgB,SAACt0B,GASjBA,EAPF6b,OAOE7b,EANF+b,WAME/b,EALFgc,aAKEhc,EAJF8b,cAIE9b,EAHFic,QAN8B,IAO9B7P,EAEEpM,EAFFoM,OACAmoB,EACEv0B,EADFu0B,QAEIplB,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OAAK+C,EAAkBvK,SAAS,SAE9B,cAAC3G,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,SACGgd,EAAkBvK,SAAS,SAC1B,cAACrG,EAAA,EAAD,CAAQG,QAAQ,WAAWF,QAAS+1B,EAApC,mBAIA,+BAR2C,8BAcpCn1B,OAAMC,KAAKi1B,ICrBpB/G,GAAmB/wB,YAAOse,MAAV,qFAAGte,CAAH,uCAMhBg4B,GAAe,SAACx0B,GAAW,IAE7B6b,EAQE7b,EARF6b,OACAmC,EAOEhe,EAPFge,QACAuU,EAMEvyB,EANFuyB,oBACAxW,EAKE/b,EALF+b,WACAC,EAIEhc,EAJFgc,aAEAC,GAEEjc,EAHF8b,cAGE9b,EAFFic,SACA7P,EACEpM,EADFoM,OAEIomB,EAAsB,CAAC,QAAS,SAXR,EAYEryB,oBAAS,GAZX,mBAYvBgc,EAZuB,KAYbC,EAZa,KAaxBjN,EAAoBlF,mBACxB,kBACEmC,EAAO9B,aAAeC,IAAW8E,MAC7BD,IAAkBhD,EAAO9B,YACzB8E,IAAkBhD,EAAO9B,YAAY8B,EAAOzJ,WAAWpH,QAC7D,CAAC6Q,IAGH,OACEomB,EAAoBG,OAClB,SAACp1B,GAAD,OAAY4R,EAAkBvK,SAAS,cAAgBrH,MAGlD,6BAEP,eAAC8e,GAAA,EAAD,CAAWF,SAAUA,EAAUtd,SAAU,kBAAMud,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAC9d,EAAA,EAAD,qBAEF,cAAC+d,GAAA,EAAD,UACE,eAACve,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACE,eAACynB,GAAA,EAAD,CAAMK,WAAS,EAAC1a,QAAS,EAAzB,UACE,cAACqa,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,oBAC1B,cAAC,GAAD,CACE6G,KAAK,mBACLqO,MAAM,QACNpb,QAAQ,WACRnD,KAAK,SACLqf,WAAY,CACVZ,KAAM,IAERzc,MAAOiI,aAAW4G,EAAOzJ,WAAWkJ,OACpCwB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWkJ,OACnBgQ,EAAOlZ,YACPkZ,EAAOlZ,WAAWkJ,OAEtBoP,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWkJ,OACnBgQ,EAAOlZ,YACPkZ,EAAOlZ,WAAWkJ,MAEpB8O,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMvP,MAAI,EAACoS,GAAI,EAAf,SACGtN,EAAkBvK,SAAS,oBAC1B,cAAC,GAAD,CACE6G,KAAK,mBACLqO,MAAM,QACNpb,QAAQ,WACRnD,KAAK,SACLqf,WAAY,CACVZ,KAAM,IAERzc,MAAOiI,aAAW4G,EAAOzJ,WAAWmJ,OACpCuB,MAAOzP,QACLqe,EAAQtZ,YACNsZ,EAAQtZ,WAAWmJ,OACnB+P,EAAOlZ,YACPkZ,EAAOlZ,WAAWmJ,OAEtBmP,WACEgB,EAAQtZ,YACRsZ,EAAQtZ,WAAWmJ,OACnB+P,EAAOlZ,YACPkZ,EAAOlZ,WAAWmJ,MAEpB6O,OAAQoB,EACRld,SAAUmd,EACVc,WAAS,EACTrE,OAAO,SACP9Z,GAAI,EACJovB,gBAAiB,CACfC,QAAQ,KAIZ,kCAILhQ,GAAWuU,EAAoBC,GAC9B,cAACv0B,EAAA,EAAD,CAAKuuB,GAAI,EAAGr6B,MAAM,OAAlB,SACE,cAACoM,EAAA,EAAD,CACEhD,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRoe,WAAS,EAJX,qBAUF,sCAQG1d,OAAMC,KAAKm1B,IC/HpB50B,GAAUpD,YAAOyB,KAAV,2EAAGzB,CAAH,yGAUPoxB,GAAYxuB,IAAMC,MACtB,YASO,IARLyV,EAQI,EARJA,SACA2P,EAOI,EAPJA,YACAqO,EAMI,EANJA,qBACA3d,EAKI,EALJA,aACA7D,EAII,EAJJA,WACAijB,EAGI,EAHJA,QACAZ,EAEI,EAFJA,kBACGlW,EACC,4HACE8U,EAAsBp1B,uBAC1B,SAACs3B,GAAY,IAAD,iBACQA,GADR,IACV,2BAA0B,CAAC,IAAlBC,EAAiB,QACxB,GACEjX,EAAUrR,OAAOzJ,WAAW+xB,IAAUvf,EAAaxS,WAAW+xB,GAE9D,OAAO,GALD,8BAOV,OAAO,IAET,CAACjX,EAAUrR,OAAQ+I,IAGrB,OACE,eAAC,KAAD,CAAMqI,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,cAAC1f,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdE,eAAe,gBACfC,WAAW,SACXlM,OAAO,OALT,SAOE,cAACqM,EAAA,EAAD,CAAYC,QAAQ,KAAK6jB,QAAM,EAA/B,0BAIF,cAAC,GAAD,2BACM9E,GADN,IAEEgH,YAAaA,EACb8N,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,IAEE3I,SAAUA,EACV6e,kBAAmBA,EACnBpB,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,IAEEkW,kBAAmBA,EACnBpB,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,gBAEE8U,oBAAqBA,EACrBoB,kBAAmBA,GAHrB,oBAIqBA,KAErB,cAAC,GAAD,2BACMlW,GADN,IAEEqV,qBAAsBA,EACtB3d,aAAcA,EACd7D,WAAYA,EACZihB,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,IAEE8U,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,IAEEgH,YAAaA,EACb8N,oBAAqBA,EACrBoB,kBAAmBA,KAErB,cAAC,GAAD,2BACMlW,GADN,IAEE8U,oBAAqBA,KAEvB,cAAC,GAAD,2BACM9U,GADN,IAEE8U,oBAAqBA,EACrBoB,kBAAmBA,KAErB,cAAC,GAAD,2BACMlW,GADN,IAEE8U,oBAAqBA,KAEvB,cAAC,GAAD,2BAAmB9U,GAAnB,IAA8B8W,QAASA,WA+NhCI,GAzNK,WAClB,IAAMt0B,EAAWC,cACX6U,EAAe3U,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAarR,WACzDiR,EAAWtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYC,QACpD1D,EAAa9Q,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa4Q,cACvDnC,EAAoBlF,mBACxB,kBACGkL,EAEGA,EAAa7K,aAAeC,IAAW8E,MACvCD,IAAkB+F,EAAa7K,YAC/B8E,IAAkB+F,EAAa7K,YAC7B6K,EAAaxS,WAAWpH,MAJ1B,KAMN,CAAC4Z,IAEGyf,EAAgB3qB,mBACpB,kBACEC,IAAEoF,KACA,CACE3E,cAAe,EACfsB,aAAc,EACdtJ,WAAYuH,IAAEoF,KACZ4G,IAAavT,WACbwM,EAAkB/E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,SAGhDyG,EAAkB/E,QAAO,SAACC,GAAD,OAAWA,EAAKzF,SAAS,qBAEtD,CAACuK,IAEG0lB,EAAc13B,uBAAY,WAC1BgY,GAAc9U,EAASy0B,aAAW3f,MACrC,CAAC9U,EAAU8U,IACR4f,EAAc53B,uBAClB,SAACiP,GACC/L,EAASwX,aAAYzL,MAEvB,CAAC/L,IAEGokB,EAActnB,uBAClB,SAACunB,GACCrkB,EACEwX,aAAY,2BACP1C,GADM,kBAERuP,EAAQvP,EAAauP,GAAS,EAAI,QAIzC,CAACrkB,EAAU8U,IAEP6f,EAAwB73B,uBAC5B,SAACqb,EAAKjb,GACJ8C,EACEwX,aAAY,2BACP1C,GADM,IAETxS,WAAW,2BACNwS,EAAaxS,YADR,kBAEP6V,EAAMjb,UAKf,CAAC8C,EAAU8U,IAEP2d,EAAuB31B,uBAC3B,SAACunB,GACCrkB,EACEwX,aAAY,2BACP1C,GADM,IAETxS,WAAW,2BACNwS,EAAaxS,YADR,kBAEP+hB,EAAQvP,EAAaxS,WAAW+hB,GAAS,EAAI,UAKtD,CAACrkB,EAAU8U,IAGb,OAAIA,EAEA,cAAC,GAAD,CAAS4M,GAAI,EAAGtB,GAAI,EAApB,SACE,cAAC,KAAD,CACExD,cAAa,uCACR2X,GACAzf,GAFQ,IAGXxS,WAAW,2BACNiyB,EAAcjyB,YACdwS,EAAaxS,cAGpBua,iBAAkBC,KAAW,CAC3BkH,YAAalH,OACbxS,cAAewS,OACflR,aAAckR,OACdxa,WAAYwa,KACVjT,IAAEoF,KACA,CACE7D,KAAM0R,OAAaoR,SAAS,YAC5BzgB,KAAMqP,OAAaE,KACjB,kBACA,YACA,SAAC9f,GAAD,OACGA,GAASA,EAAMtM,SACfke,EAAkBvK,SAAS,sBAEhCzS,MAAOgrB,OAAaE,KAClB,mBACA,YACA,SAAC9f,GAAD,OACEA,IAAU4R,EAAkBvK,SAAS,uBAEzCxS,OAAQ+qB,OAAaE,KACnB,oBACA,YACA,SAAC9f,GAAD,OACEA,IAAU4R,EAAkBvK,SAAS,wBAEzCW,KAAM4X,OACN1X,IAAK0X,OACLhW,SAAUgW,OACP8X,UAAU,IAAK,6BACfC,SAAS,IAAK,yBACjB9tB,KAAM+V,OACN9V,KAAM8V,OACNpW,OAAQoW,OAAa8X,SAAS,EAAG,0BACjCjuB,OAAQmW,OAAa8X,SAAS,EAAG,0BACjC7gC,MAAO+oB,OACJC,WACAC,KACC,mBACA,yBACAC,MAEJrP,KAAMkP,OACNhP,OAAQgP,OACLC,WACAC,KACC,mBACA,yBACAC,MAEJpU,OAAQiU,OACRtP,KAAMsP,OACNvU,QAASuU,OACTpR,YAAaoR,OACVC,WACAC,KACC,mBACA,yBACAC,MAEJhW,WAAY6V,OACZnR,cAAemR,OACf5V,cAAe4V,OACf3V,cAAe2V,OACftR,MAAOsR,OACPrR,MAAOqR,OACPxN,cAAewN,OACfvN,eAAgBuN,OAChBtN,iBAAkBsN,OAClBrN,kBAAmBqN,OACnB7O,OAAQ6O,OAAa8X,SAAS,EAAG,0BACjCrmB,YAAauO,OAAa8X,SACxB,EACA,0BAEFpmB,YAAasO,OAAa8X,SACxB,EACA,0BAEFlmB,UAAWoO,OAAa8X,SAAS,EAAG,0BACpCjmB,MAAOmO,OACPzO,cAAeyO,OAAa8X,SAC1B,EACA,0BAEFtmB,aAAcwO,OAAa8X,SACzB,EACA,2BAGJ9lB,EAAkB/E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAIlDysB,oBAAkB,EAClB5X,SAAU,SAACnR,GAET,OADAnH,QAAQC,IAAIkH,GACL,IAEToR,SAAUuX,EA/GZ,SAiHG,SAACtX,GAAD,OACC,cAAC,GAAD,2BACMA,GADN,IAEE3I,SAAUA,EACV2P,YAAaA,EACbqO,qBAAsBA,EACtB3d,aAAcA,EACd7D,WAAYA,EACZijB,QAASM,EACTlB,kBAAmBqB,UAOxB,8B,oBCvSHp1B,GAAUpD,YAAOyB,KAAV,sEAAGzB,CAAH,2BACS,SAACwD,GAAD,OAAWA,EAAMo1B,cAwhBxBC,UArhBA,WACb,IAAMh1B,EAAWC,cACXm0B,EAASa,cAFI,EAGyBn1B,mBAAS,IAHlC,mBAGZo1B,EAHY,KAGIC,EAHJ,OAISr1B,mBAAS,MAJlB,mBAIZwf,EAJY,KAIJC,EAJI,OAKmBzf,mBAAS,IAL5B,mBAKZs1B,EALY,KAKCC,EALD,KAObthB,EAAOlR,iBAAO,GACdgR,EAAWhR,iBAAO,GAClByQ,EAAWzQ,iBAAO,MAClB0Q,EAAe1Q,iBAAO,MACtB2Q,EAAe3Q,iBAAO,MACtB4Q,EAAkB5Q,iBAAO,MAEzB8gB,EAAOxjB,aAAY,SAACC,GAAD,OAAWA,EAAMwjB,YAAYD,QAChDxP,EAAgBhU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAc5Q,WAC3D+Q,EAAepU,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAcI,UAC1DM,EAAe3U,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAarR,WACzD8xB,EAAiBn1B,aAAY,SAACC,GAAD,OAAWA,EAAMyU,aAAa0gB,aAC3D1tB,EAAiB1H,aACrB,SAACC,GAAD,OAAWA,EAAMyU,aAAahN,kBAE1BioB,EAAc3vB,aAAY,SAACC,GAAD,OAAWA,EAAM2vB,eAAepb,QAC1Dqb,EAAW7vB,aAAY,SAACC,GAAD,OAAWA,EAAM6vB,YAAYtb,QACpDF,EAAWtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYC,QACpDpY,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QACjD0U,EAAa9Q,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa4Q,cACvDlG,EAAc5K,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa0K,eACxD3I,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aACtD0I,EAAY3K,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAayK,aACtD5K,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAG1Bs1B,EAAmB3yB,iBAAO,MAC1B4yB,GAAe5yB,iBAAO,MAEtB6yB,GAAgBv1B,aAAY,SAACC,GAAD,OAAWA,EAAMgU,cAAcuhB,WAC3DC,GAAiBz1B,aAAY,SAACC,GAAD,OAAWA,EAAM8T,eAAeyhB,WAC7DE,GAAc11B,aAAY,SAACC,GAAD,OAAWA,EAAMsU,YAAYihB,WACvDG,GAAqB31B,aACzB,SAACC,GAAD,OAAWA,EAAM+vB,cAAc4F,eAG3BC,GAAqBl5B,uBACzB,SAACqb,EAAKjb,GACgBm4B,GAAN,IAAVn4B,EAA+B,eAAGib,EAAMjb,GACxB,SAACrK,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BslB,EAAMjb,QAEvD,CAACm4B,IAGGY,GAAen5B,uBAAY,WAC/BkD,EAASxD,YAAQ05B,aAAWzyB,KAAKC,IAAID,KAAK8R,IAAW,KAAPhZ,EAAa,IAAK,UAC/D,CAACyD,EAAUzD,IACR45B,GAAgBr5B,uBAAY,WAChCkD,EAASxD,YAAQ05B,aAAWzyB,KAAKC,IAAID,KAAK8R,IAAIhZ,EAAO,KAAM,IAAK,UAC/D,CAACyD,EAAUzD,IACR65B,GAAgBt5B,uBAAY,WAChC,IAAIhL,EAAQwhB,EAAS9P,QAAQ6yB,MAAMvkC,MAC/BC,EAASuhB,EAAS9P,QAAQ6yB,MAAMtkC,OAC9BukC,EAAUJ,aACdzyB,KAAK8R,IAAIzjB,EAAQsQ,EAAUtQ,MAAOC,EAASqQ,EAAUrQ,SAEvDuhB,EAAS9P,QAAQrP,EAAErC,EAAQ,GAC3BwhB,EAAS9P,QAAQpP,EAAErC,EAAS,GAC5BiO,EAASxD,YAAQ85B,MAChB,CACDt2B,EACAsT,EAAS9P,SAAW8P,EAAS9P,QAAQ6yB,OAAS/iB,EAAS9P,QAAQ6yB,MAAMvkC,MACrEwhB,EAAS9P,SAAW8P,EAAS9P,QAAQ6yB,OAAS/iB,EAAS9P,QAAQ6yB,MAAMtkC,OACrEqQ,IAEI5B,GAA6B1D,uBAAY,SAAC2D,GAC9CT,EAASu2B,YAAkB91B,MAC1B,IACGoX,GAA4B/a,uBAAY,SAAC05B,GAC7Cx2B,EAASy2B,YAAeD,MACvB,IACGE,GAAuB55B,uBAC3B,SAAC65B,GACC,IAAIC,EAAiB,YAAO12B,GACxBlM,EAAQ4iC,EAAkBnS,QAAQkS,GAClC3iC,GAAS,EACX4iC,EAAkBtgB,OAAOtiB,EAAO,GAEhC4iC,EAAkB1zB,KAAKyzB,GAEzBn2B,GAA2Bo2B,KAE7B,CAAC12B,EAAgBM,KAEbqvB,GAAa/yB,uBAAY,WAC7B+5B,YAAW,kBAAMt9B,SAASu9B,cAAcC,SAAQ,OAC/C,IAEGC,GAAiBl6B,uBACrB,SAACqb,EAAKpb,GAoGJ,GAjG6B,UAAzBA,EAAME,OAAOg6B,SAAsC,YAAfl6B,EAAM7B,OACxC+V,IAAekH,GACjBnY,EAASk3B,YAAc/e,IAGd,QAARA,GAAyB,cAARA,IAClBrD,GACAA,EAAa7K,aAAeC,IAAWC,IAKtB,QAARgO,GAAiBrD,EAC1B9U,EAAS6K,aAAgB,OACF,MAAd9N,EAAMob,KAAepb,EAAMo6B,SACpClB,KACuB,MAAdl5B,EAAMob,KAAepb,EAAMo6B,SACpChB,KACuB,MAAdp5B,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASxD,YAAQ,IACM,MAAdO,EAAMob,KAAepb,EAAMo6B,SACpCf,KACuB,MAAdr5B,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWC,UACV,MAAd/O,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWuE,MACV,MAAdrT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAW8D,OACV,MAAd5S,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAW+D,SACV,MAAd7S,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWsD,UACV,MAAdpS,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWgE,OACV,MAAd9S,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWiE,OACV,MAAd/S,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWkE,iBACV,MAAdhT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWoE,QACV,MAAdlT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWqE,MACV,MAAdnT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWwE,UACV,MAAdtT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAWsE,OACV,MAAdpT,EAAMob,KAAepb,EAAMo6B,SACpCn3B,EAASmV,YAAatJ,IAAW0E,QAEnB,MAAdxT,EAAMob,MACLpb,EAAM6Z,SAAW7Z,EAAMq6B,UACxBtiB,EAEA9U,EAASq3B,aAAkBviB,IAEb,MAAd/X,EAAMob,MACLpb,EAAM6Z,SAAW7Z,EAAMq6B,UACxB9B,EAEAt1B,EAASy0B,aAAWa,IACG,MAAdv4B,EAAMob,MAAgBpb,EAAM6Z,SAAW7Z,EAAMq6B,SACtDp3B,EAASY,eACc,MAAd7D,EAAMob,MAAgBpb,EAAM6Z,SAAW7Z,EAAMq6B,SACtDp3B,EAASa,eACQ,MAARsX,EACTue,GAAqBr1B,IAAeC,SACnB,MAAR6W,EACTue,GAAqBr1B,IAAeG,WACnB,MAAR2W,EACTue,GAAqBr1B,IAAeI,eACnB,MAAR0W,EACTue,GAAqBr1B,IAAeK,cACnB,MAARyW,EACTue,GAAqBr1B,IAAeM,MACnB,MAARwW,EACToH,EAAUP,IAAY3R,MACL,MAAR8K,EACToH,EAAUP,IAAYhQ,OACL,MAARmJ,EACToH,EAAUP,IAAY7R,MACL,MAARgL,EACToH,EAAUP,IAAY0Q,WACL,UAARvX,GAEP,CACEtM,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACX9L,SAASuG,IAEX9K,EAASqV,aAAiBL,KAAcC,eAlF1CkgB,EAAkB,2BAAD,OACYrgB,EAAaxS,WAAW8I,KADpC,QAwFQ,UAAzBrO,EAAME,OAAOg6B,UACI,UAAfl6B,EAAM7B,MACR8E,EAASk3B,YAAc,OAGvB,CAAC,aAAc,YAAa,UAAW,aAAa3yB,SAClDxH,EAAMob,MAERrD,IACC,CAAC5K,IAAWC,IAAKD,IAAWO,MAAMlG,SAASuQ,EAAa7K,aACzD,CACA,IAAIqtB,EAAQv6B,EAAMo6B,SAAW,GAAK,EAC9BI,EACY,cAAdx6B,EAAMob,KACDmf,EACa,eAAdv6B,EAAMob,IACNmf,EACA,EACFE,EACY,YAAdz6B,EAAMob,KACDmf,EACa,cAAdv6B,EAAMob,IACNmf,EACA,EACFG,EAASF,EACTG,EAASF,EAWb,GAVoB,KAAhBzsB,GACF0sB,EAASD,EACTE,GAAUH,GACe,MAAhBxsB,GACT0sB,GAAUF,EACVG,GAAUF,GACe,MAAhBzsB,IACT0sB,GAAUD,EACVE,EAASH,GAEQ,UAAfx6B,EAAM7B,KAAkB,CAC1B,IAAIoH,EAAU,eAAQwS,EAAaxS,YAC/BuR,EAASrQ,SAAWuQ,EAAKvQ,UAC3BlB,EAAW4C,KAAO4P,EAAaxS,WAAW4C,KAAOuyB,EACjDn1B,EAAW8C,IAAM0P,EAAaxS,WAAW8C,IAAMsyB,GAEjD13B,EACEwX,aAAY,2BACP1C,GADM,IAETxS,WAAYA,WAIZuR,EAASrQ,SAAWuQ,EAAKvQ,UAC3BqQ,EAASrQ,QAAUob,OAAO+Y,OAAO5jB,EAAKvQ,SACtCxD,EACE43B,aAAgB,2BACX9iB,GADU,IAEbxS,WAAW,2BACNwS,EAAaxS,YADR,IAER4C,KAAM4P,EAAaxS,WAAW4C,KAAOuyB,EACrCryB,IAAK0P,EAAaxS,WAAW8C,IAAMsyB,YASnD,CACE13B,EACAiR,EACA6D,EACAwgB,EACAzhB,EAASrQ,QACTuQ,EAAKvQ,UAGHq0B,GAAgB/6B,uBAAY,WAChCkD,EAAS83B,aAAYhjB,IACrBqgB,EAAkB,MACjB,CAACn1B,EAAU8U,EAAcqgB,IAEtB4C,GAAiBj7B,sBAAW,sBAChC,kEAAAqH,EAAA,yDAAO6zB,IAAP,iCACMl9B,EAASvB,SAASC,cAAc,UAChCuB,EAAMD,EAAOrB,WAAW,MACtBuK,EAAag0B,EAAQ,GAAM,EAE7BlmC,EAAQ2jC,GAAajyB,QAAQ1R,MAAQkS,EACrCjS,EAAS0jC,GAAajyB,QAAQzR,OAASiS,EAEvCqyB,EARN,eAQmB/iB,EAAS9P,QAAQ6yB,OAClC/iB,EAAS9P,QAAQy0B,SAAS,CACxB9jC,EAAG,EACHC,EAAG,EACHxC,QAAS,EACTC,QAAS,EACT6U,OAAQ,EACRC,OAAQ,EACRG,SAAU,EACVhV,MAAO2jC,GAAajyB,QAAQ1R,MAC5BC,OAAQ0jC,GAAajyB,QAAQzR,SAE/BuhB,EAAS9P,QAAQ00B,QAEb3kB,EAAa/P,QAtBnB,wBAuBQ20B,EAAe5kB,EAAa/P,QAAQrI,UAAU,CAAE6I,eAvBxD,UAwByBo0B,aAAgBD,GAxBzC,QAwBIE,EAxBJ,mBA0BM7kB,EAAahQ,QA1BnB,wBA2BQ80B,EAAe9kB,EAAahQ,QAAQrI,UAAU,CAAE6I,eA3BxD,UA4ByBo0B,aAAgBE,GA5BzC,QA4BIC,EA5BJ,mBA8BM9kB,EAAgBjQ,UAAWw0B,EA9BjC,wBA+BQQ,EAAkB/kB,EAAgBjQ,QAAQrI,UAAU,CACtD6I,eAhCN,UAkC4Bo0B,aAAgBI,GAlC5C,QAkCIC,EAlCJ,kBAqCEnlB,EAAS9P,QAAQy0B,SAASpuB,IAAE6uB,KAAKrC,EAAO,CAAC,eACzC/iB,EAAS9P,QAAQ00B,OACjBp9B,EAAOhJ,MAAQA,EACfgJ,EAAO/I,OAASA,EAEZsmC,GACFt9B,EAAI49B,UACFN,EACA,EACA,EACAA,EAAavmC,MACbumC,EAAatmC,QAGbwmC,GACFx9B,EAAI49B,UACFJ,EACA,EACA,EACAA,EAAazmC,MACbymC,EAAaxmC,QAGb0mC,GAAmBT,GACrBj9B,EAAI49B,UACFF,EACA,EACA,EACAA,EAAgB3mC,MAChB2mC,EAAgB1mC,SAGhBimC,EArEN,0CAqEoBl9B,EAAOK,UAAU,cArErC,eAsEM7H,EAAYyH,EAAIzB,aAAa,EAAG,EAAGxH,EAAOC,GAtEhD,kBAuESuB,GAvET,4CAyEA,CACEmiC,GAAajyB,QACb8P,EAAS9P,QACT+P,EAAa/P,QACbgQ,EAAahQ,QACbiQ,EAAgBjQ,UAIdo1B,GAAwB97B,sBAAW,sBAAC,kCAAAqH,EAAA,0DACpCmP,EAAS9P,UAAWgyB,EAAiBhyB,QADD,iCAGpCxD,EAAS64B,cAAU,IAHiB,SAIhBd,KAJgB,cAIhCe,EAJgC,OAKpC94B,EAAS64B,cAAU,IACfx9B,EAAO09B,aAAcD,GACrBE,EAAa,IAAIC,KACnB,CAAC59B,GADc,UAEZm6B,EAAiBhyB,QAAQjF,GAFb,QAGf,CACErD,KAAM,eAINg+B,EAAW,IAAIC,UACVC,OAAO,QAASJ,GACzBE,EAASE,OAAO,WAAY5D,EAAiBhyB,QAAQjF,IAjBjB,UAmB9BgtB,KAAc8N,gBAAgBH,GAnBA,0DAqBpCl5B,EAAS2rB,aAAW,CAAEC,QAAS,KAAIA,WArBC,0DAwBvC,CACD5rB,EACAw1B,EAAiBhyB,SAAWgyB,EAAiBhyB,QAAQjF,IACpD+U,EAAS9P,QACVu0B,KAGIuB,GAAoBx8B,sBAAW,sBAAC,uBAAAqH,EAAA,SAAAA,EAAA,0DAChCmP,EAAS9P,UAAWgyB,EAAiBhyB,QADL,iCAGhCxD,EAAS64B,cAAU,IAHa,SAIVd,IAAe,GAJL,OAI5BzkC,EAJ4B,OAKhC0M,EAAS64B,cAAU,KACfvhC,EAAM,IAAIiiC,EAAI,CAChBznC,MAAO2jC,GAAajyB,QAAQ1R,MAC5BC,OAAQ0jC,GAAajyB,QAAQzR,OAC7BT,UAAWioC,EAAIhoC,KAAKe,WAElBsH,aAAatG,GAGbkmC,EAAMliC,EAAI8D,cAEV+I,EAAI5K,SAASC,cAAc,MAC7Bof,MAAQ,gBACVzU,EAAEs1B,KAAOD,EACTr1B,EAAEu1B,SAAF,UAAgBlE,EAAiBhyB,QAAQjF,GAAzC,QACA4F,EAAEw1B,QACFr0B,OAAO/J,IAAIq+B,gBAAgBJ,GArBK,kDAuBhC50B,QAAQC,IAAR,MACA7E,EAAS2rB,aAAW,CAAEC,QAAS,KAAIA,WAxBH,0DA2BnC,CACD5rB,EACAw1B,EAAiBhyB,SAAWgyB,EAAiBhyB,QAAQjF,IACpD+U,EAAS9P,QACVu0B,KAmDF,OAhDAp0B,qBAAU,WACJggB,GAAQA,EAAKplB,IAAM61B,EAAO71B,KACvB4V,GACHnU,EAAS65B,aAAUzF,EAAO71B,KAEvBu3B,IACH91B,EAAS85B,aAAsBnW,EAAKplB,KAEjCuxB,EAAYl/B,QAAQoP,EAAS+5B,gBAC7B/J,EAASp/B,QAAQoP,EAASg6B,gBAC1BvlB,EAAS7jB,QAAQoP,EAASi6B,mBAGhC,CAACtW,IAEJhgB,qBAAU,WACR,IAAMu2B,EAAWC,aAAY,WAC3BpmB,EAAKvQ,SAAW,IACf,KACG42B,EAAcvD,WAAW+B,GAAuB,KAChDyB,EAAoBF,YAAYvB,GAAuB,KAE7D,OAAO,WACL0B,cAAcJ,GACdI,cAAcD,GACdE,aAAaH,MAEd,IAEHz2B,qBAAU,YAEL4Q,GACDqK,OAAOC,KAAKhX,GAAgByqB,OAAM,SAACkI,GAAD,OAAO3yB,EAAe2yB,OACxDlnB,EAAS9P,UAETxD,EAASy6B,cAAU,IACnBrE,QAED,CAACvuB,EAAgB0M,IAEpB5Q,qBAAU,WACR6xB,EAAiBhyB,QAAU2Q,IAC1B,CAACA,IAEJxQ,qBAAU,WACR8xB,GAAajyB,QAAUpB,IACtB,CAACA,IAGF,qCACE,cAACs4B,EAAA,EAAD,CAAQn5B,MAAO4S,EAAgBA,EAAc/I,KAAO,OACnDsqB,IAAiBE,IAAkBC,KAAgB1hB,EAClD,cAACgF,EAAA,EAAD,IAEA,eAACvb,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,OAAO8L,QAAQ,OAAOC,cAAc,SAA7D,UACE,cAAC,IAAD,CACE68B,WAAY,CAAC,OACbC,WAAY5D,KAEd,cAAC,IAAD,CACE2D,WAAY,CAAC,OACbE,gBAAgB,QAChBD,WAAY5D,KAEd,eAACp5B,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,oBAAoB8L,QAAQ,OAArD,UACE,cAAC,GAAD,CACEyhB,OAAQA,EACRC,UAAWA,EACXsQ,WAAYA,GACZ1c,iBAAkBiiB,EAClBhiB,sBAAuB4iB,KAEzB,cAAC,GAAD,CACElkC,MAAM,qBACNijC,WAAW,UACXzN,SAAS,SAHX,SAKE,cAAC,GAAD,CACEnU,iBAAkBiiB,EAClBhiB,sBAAuB4iB,GACvB3iB,sBAAuBwE,GACvBvE,SAAUA,EACVC,aAAcA,EACdC,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,GAAD,OAEF,cAAC,GAAD,CACEhX,SAAUw5B,GACVv5B,UAAWy5B,GACXx5B,UAAWy5B,GACXx2B,uBAAwBY,GACxBX,cAAey5B,QAIrB,cAAChN,GAAA,EAAD,CACE7e,KAAMynB,EACNh+B,KAAgC,IAA1Bg+B,EAAetkC,OACrB0rB,SAAU,kBAAM6Y,EAAkB,KAClC5I,UAAWsL,U,iGC/jBbtV,EAAYC,aAAW,SAAC7mB,GAAD,MAAY,CACvCorB,OAAO,aACLnoB,SAAU,WACVijB,aAAclmB,EAAMqW,MAAM6P,aAC1BhmB,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnB8lB,OAAQ,oBACR7vB,MAAO,QACN6J,EAAMm/B,YAAYC,GAAG,MAAQ,CAC5BjpC,MAAO,SAGXkpC,WAAY,CACV7S,QAASxsB,EAAMuD,QAAQ,EAAG,GAC1BnN,OAAQ,OACR6M,SAAU,WACVq8B,cAAe,OACfp9B,QAAS,OACTI,WAAY,SACZD,eAAgB,UAElBk9B,UAAW,CACTnnC,MAAO,UACPjC,MAAO,QAETqpC,WAAY,CACVhT,QAASxsB,EAAMuD,QAAQ,EAAG,EAAG,EAAG,GAEhCk8B,YAAY,cAAD,OAAgBz/B,EAAMuD,QAAQ,GAA9B,OACX0jB,WAAYjnB,EAAMknB,YAAYC,OAAO,SACrChxB,MAAO,YA+BIu1B,IA3BG,SAAC1nB,GAAW,IACpBzC,EAAoByC,EAApBzC,MAAOsB,EAAamB,EAAbnB,SAETklB,EAAUnB,IAKhB,OACE,sBAAKP,UAAW0B,EAAQqD,OAAxB,UACE,qBAAK/E,UAAW0B,EAAQsX,WAAxB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEvN,YAAY,SACZ/J,QAAS,CACPmE,KAAMnE,EAAQwX,UACdG,MAAO3X,EAAQyX,YAEjBj+B,MAAOA,EACPqd,WAAY,CAAE,aAAc,UAC5B/b,SAjBe,SAACzB,GACpByB,EAASzB,EAAME,OAAOC,e,uIChCpBgB,EAAS/B,YAAO+e,KAAV,4EAAG/e,CAAkB+C,KAE3BotB,EAAgBvtB,IAAMC,MAAK,SAACW,GAAW,IACnC8N,EAAoC9N,EAApC8N,KAAMvW,EAA8ByI,EAA9BzI,KAAMolB,EAAwB3c,EAAxB2c,SAAUiQ,EAAc5sB,EAAd4sB,UAE9B,OACE,eAAC,IAAD,CAAQvS,kBAAgB,gBAAgB9iB,KAAMA,EAA9C,UACE,cAAC,IAAD,CAAaqH,GAAG,gBAAhB,qBACA,cAAC,IAAD,CAAeif,UAAQ,EAAvB,SACE,cAAC,IAAD,CAAYnf,QAAQ,QAApB,SAA6BoP,MAE/B,eAAC,IAAD,WACE,cAACvP,EAAD,CAAQC,QAASme,EAAUvoB,MAAM,UAAjC,oBAGA,cAACmK,EAAD,CACEC,QAASouB,EACTx4B,MAAM,YACNsK,QAAQ,WACRS,WAAS,EAJX,8BAaOwtB","file":"static/js/6.11dd35a1.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/wireframe.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={`${\r\n        config.assetsURL\r\n      }/templates/${currentCarMake.folder_directory.replace(\r\n        \" \",\r\n        \"_\"\r\n      )}/mask.png`}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/sponsor_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/number_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    currentCarMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\nimport { basePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={\r\n            layer.layer_data.id\r\n              ? `${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`\r\n              : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n                layer.layer_data.img\r\n          }\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n            top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x() - offsetsFromStroke.x),\r\n            top: mathRound2(node.y() - offsetsFromStroke.y),\r\n            width: mathRound2(\r\n              Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n            ),\r\n            height: mathRound2(\r\n              Math.max(1, height * Math.abs(scaleY)) - offsetsFromStroke.height\r\n            ),\r\n            radius: node.radius\r\n              ? mathRound2(\r\n                  Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.radius\r\n                )\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.innerRadius\r\n                )\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.outerRadius\r\n                )\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 1,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={frameSize.width / 2}\r\n        offsetY={frameSize.height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            carMake={currentCarMake}\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n  setLoaded as setSchemeLoaded,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { clearFrameSize } from \"redux/reducers/boardReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearFrameSize());\r\n    dispatch(setSchemeLoaded(false));\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback((name, type) => {\r\n    if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n      return name.slice(user.id.toString().length + 1);\r\n    return name;\r\n  }, []);\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { carMake, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < carMake.total_bases}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {Array.from({ length: carMake.total_bases }, (_, i) => i + 1)\r\n              .slice(0, limit)\r\n              .map((index) => (\r\n                <CustomGridListTile\r\n                  key={index}\r\n                  cols={1}\r\n                  onClick={() => onOpenBase(index)}\r\n                >\r\n                  <CustomImg\r\n                    // src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`} // For Legacy basepaint\r\n                    src={basePaintAssetURL(carMake, index) + \"preview.jpg\"}\r\n                    alt={`Base Paint ${index}`}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={`Base Paint ${index}`}\r\n                    subtitle={carMake.name_short}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.01}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  // const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayersFromBasePaint(currentScheme.id, basePaintIndex));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box display=\"flex\" justifyContent=\"center\">\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  currentScheme.guide_data.default_shape_color +\r\n                  alphaToHex(currentScheme.guide_data.default_shape_opacity)\r\n                }\r\n                outline={`2px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor +\r\n                  alphaToHex(currentScheme.guide_data.default_shape_stroke)\r\n                }`}\r\n                onClick={() => setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)}\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        carMake={currentCarMake}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer, cloneLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) dispatch(cloneLayer(currentLayer));\r\n  }, [dispatch, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const pixelRatio = isPNG ? 0.5 : 1;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(\r\n          baseLayerImg,\r\n          0,\r\n          0,\r\n          baseLayerImg.width,\r\n          baseLayerImg.height\r\n        );\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(\r\n          mainLayerImg,\r\n          0,\r\n          0,\r\n          mainLayerImg.width,\r\n          mainLayerImg.height\r\n        );\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(\r\n          carMaskLayerImg,\r\n          0,\r\n          0,\r\n          carMaskLayerImg.width,\r\n          carMaskLayerImg.height\r\n        );\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        var tga = new TGA({\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}