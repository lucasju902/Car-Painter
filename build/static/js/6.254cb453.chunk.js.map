{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","imageRef","useRef","shapeRef","useState","image","setImage","useEffect","loadImage","current","removeEventListener","handleLoad","a","height","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","node","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","crossOrigin","addEventListener","onTap","ref","draggable","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","Math","max","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","BasePaints","BASE","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","length","find","text","font_name","font_file","fontSize","size","fill","color","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","toggleField","field","Card","CardHeader","action","index","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","layer_order","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","opacity","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","MuiTextField","Select","MuiSelect","CustomeTextField","FontImage","FontSelect","ColorInputField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","labelId","renderValue","font_preview","MenuItem","sm","css","palette","Palette","deferred","hideTextfield","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","count","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","TitleTypograhpy","GeneralProperty","AllowedLayerProps","SizeProperty","PositionProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","PropertyBar","checkDirty","defaultValues","pick","py","Object","assign","moreThan","lessThan","enableReinitialize","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","Date","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON"],"mappings":"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","file":"static/js/6.254cb453.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Image } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    img.src = src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(5, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(5, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left)}\r\n          y={parseFloat(layer.layer_data.top)}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile && !loadedFontList.includes(fontFamily)) {\r\n      loadFont();\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  useEffect(() => {\r\n    const node = shapeRef.current;\r\n    if (\r\n      node &&\r\n      (node.width() !== props.width || node.height() !== props.height)\r\n    ) {\r\n      if (onChange) {\r\n        onChange({\r\n          width: Helper.mathRound2(node.width()),\r\n          height: Helper.mathRound2(node.height()),\r\n        });\r\n      }\r\n    }\r\n  }, [shapeRef.current]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      // we will reset it back\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(5, node.width())),\r\n        height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()),\r\n        scaleX: Helper.mathRound2(Math.abs(scaleX)),\r\n        scaleY: Helper.mathRound2(Math.abs(scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left)}\r\n              y={parseFloat(layer.layer_data.top)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file}`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left)}\r\n            y={parseFloat(layer.layer_data.top)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY | 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer) return <Transformer ref={trRef} keepRatio={false} />;\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={() => toggleVisible()} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={() => toggleLocked()} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id === list[index].id);\r\n      if (layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? false : true,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, width } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n        {label}\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <SliderWrapper>\r\n          <Slider\r\n            min={min}\r\n            max={max}\r\n            value={value}\r\n            onChange={(event, value) => setValue(value)}\r\n            aria-labelledby=\"shape-size\"\r\n            ValueLabelComponent={(props) => (\r\n              <Tooltip\r\n                open={props.open}\r\n                enterTouchDelay={0}\r\n                placement=\"top\"\r\n                title={props.value}\r\n              >\r\n                {props.children}\r\n              </Tooltip>\r\n            )}\r\n          />\r\n        </SliderWrapper>\r\n        <CustomInput\r\n          value={value}\r\n          margin=\"dense\"\r\n          type=\"number\"\r\n          onChange={(event) =>\r\n            setValue(\r\n              event.target.value === \"\" ? min || 0 : Number(event.target.value)\r\n            )\r\n          }\r\n          onBlur={handleBlur}\r\n          inputProps={{\r\n            min: min,\r\n            max: max,\r\n            \"aria-labelledby\": \"input-slider\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport config from \"config\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  Select as MuiSelect,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { Palette } from \"constant\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Select = styled(MuiSelect)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\nconst FontSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          labelId=\"font-select-label\"\r\n          id=\"font-select-outlined\"\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          label=\"Font\"\r\n          mb={4}\r\n          renderValue={(id) => {\r\n            const font = fontList.find((item) => item.id === id);\r\n            if (!font) {\r\n              return <>Select Font</>;\r\n            }\r\n            return (\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            );\r\n          }}\r\n        >\r\n          {fontList.map((font) => (\r\n            <MenuItem value={font.id} key={font.id}>\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            </MenuItem>\r\n          ))}\r\n        </FontSelect>\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            width={80}\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.color}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"color\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.color}\r\n                onChange={(event) => setFieldValue(\"color\", event.target.value)}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            width={80}\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.scolor}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"scolor\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.scolor}\r\n                onChange={(event) =>\r\n                  setFieldValue(\"scolor\", event.target.value)\r\n                }\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            width={80}\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.BASE === item.layer_type\r\n    ).length;\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base, count + 1));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.OVERLAY === item.layer_type\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromShape(currentScheme.id, shape, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromUpload(currentScheme.id, upload, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createTextLayer(currentScheme.id, values, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst TitleTypograhpy = styled(Typography)`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  border-bottom: 1px solid gray;\r\n  padding-bottom: 5px;\r\n`;\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleTypograhpy>General</TitleTypograhpy>\r\n      {AllowedLayerProps[values.layer_type].includes(\"name\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.name\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          value={values.layer_data.name}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.name &&\r\n              errors.layer_data &&\r\n              errors.layer_data.name\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.name &&\r\n            errors.layer_data &&\r\n            errors.layer_data.name\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerProps[values.layer_type].includes(\"text\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.text\"\r\n          label=\"Text\"\r\n          variant=\"outlined\"\r\n          value={values.layer_data.text}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.text &&\r\n              errors.layer_data &&\r\n              errors.layer_data.text\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.text &&\r\n            errors.layer_data &&\r\n            errors.layer_data.text\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst TitleTypograhpy = styled(Typography)`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  border-bottom: 1px solid gray;\r\n  padding-bottom: 5px;\r\n`;\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"height\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleTypograhpy>Size</TitleTypograhpy>\r\n      {AllowedLayerProps[values.layer_type].includes(\"width\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.width\"\r\n          label=\"Width\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.width)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.width &&\r\n              errors.layer_data &&\r\n              errors.layer_data.width\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.width &&\r\n            errors.layer_data &&\r\n            errors.layer_data.width\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerProps[values.layer_type].includes(\"height\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.height\"\r\n          label=\"Height\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.height)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.height &&\r\n              errors.layer_data &&\r\n              errors.layer_data.height\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.height &&\r\n            errors.layer_data &&\r\n            errors.layer_data.height\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerProps[values.layer_type].includes(\"scaleX\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.scaleX\"\r\n          label=\"ScaleX\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.scaleX)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.scaleX &&\r\n              errors.layer_data &&\r\n              errors.layer_data.scaleX\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.scaleX &&\r\n            errors.layer_data &&\r\n            errors.layer_data.scaleX\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerProps[values.layer_type].includes(\"scaleY\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.scaleY\"\r\n          label=\"ScaleY\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.scaleY)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.scaleY &&\r\n              errors.layer_data &&\r\n              errors.layer_data.scaleY\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.scaleY &&\r\n            errors.layer_data &&\r\n            errors.layer_data.scaleY\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\n\r\nconst TitleTypograhpy = styled(Typography)`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  border-bottom: 1px solid gray;\r\n  padding-bottom: 5px;\r\n`;\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleTypograhpy>Position</TitleTypograhpy>\r\n      {AllowedLayerProps[values.layer_type].includes(\"left\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.left\"\r\n          label=\"Left\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.left)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.left &&\r\n              errors.layer_data &&\r\n              errors.layer_data.left\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.left &&\r\n            errors.layer_data &&\r\n            errors.layer_data.left\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerProps[values.layer_type].includes(\"top\") ? (\r\n        <CustomeTextField\r\n          name=\"layer_data.top\"\r\n          label=\"Top\"\r\n          variant=\"outlined\"\r\n          type=\"number\"\r\n          value={Helper.mathRound2(values.layer_data.top)}\r\n          error={Boolean(\r\n            touched.layer_data &&\r\n              touched.layer_data.top &&\r\n              errors.layer_data &&\r\n              errors.layer_data.top\r\n          )}\r\n          helperText={\r\n            touched.layer_data &&\r\n            touched.layer_data.top &&\r\n            errors.layer_data &&\r\n            errors.layer_data.top\r\n          }\r\n          onBlur={handleBlur}\r\n          onChange={handleChange}\r\n          fullWidth\r\n          margin=\"normal\"\r\n          mb={4}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  TextField,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst TitleTypograhpy = styled(Typography)`\r\n  margin-top: 5px;\r\n  margin-bottom: 5px;\r\n  border-bottom: 1px solid gray;\r\n  padding-bottom: 5px;\r\n`;\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleTypograhpy>Rotation</TitleTypograhpy>\r\n      {AllowedLayerProps[values.layer_type].includes(\"rotation\") ? (\r\n        <SliderInput\r\n          label=\"Rotation\"\r\n          width={80}\r\n          min={-179}\r\n          max={179}\r\n          value={Math.round(values.layer_data.rotation)}\r\n          setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      <Box display=\"flex\" justifyContent=\"space-around\">\r\n        {AllowedLayerProps[values.layer_type].includes(\"flop\") ? (\r\n          <FormControl component=\"fieldset\">\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={Boolean(values.layer_data.flop)}\r\n                  onChange={(event) =>\r\n                    setFieldValue(\r\n                      \"layer_data.flop\",\r\n                      event.target.checked ? 1 : 0\r\n                    )\r\n                  }\r\n                />\r\n              }\r\n              label=\"Flop\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </FormControl>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {AllowedLayerProps[values.layer_type].includes(\"flip\") ? (\r\n          <FormControl component=\"fieldset\">\r\n            <FormControlLabel\r\n              control={\r\n                <Checkbox\r\n                  color=\"primary\"\r\n                  checked={Boolean(values.layer_data.flip)}\r\n                  onChange={(event) =>\r\n                    setFieldValue(\r\n                      \"layer_data.flip\",\r\n                      event.target.checked ? 1 : 0\r\n                    )\r\n                  }\r\n                />\r\n              }\r\n              label=\"Flip\"\r\n              labelPlacement=\"start\"\r\n            />\r\n          </FormControl>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] !== currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = {\r\n      layer_data: _.pick(\r\n        {\r\n          name: \"\",\r\n          width: 0,\r\n          height: 0,\r\n          left: 0,\r\n          top: 0,\r\n          rotation: 0,\r\n          flop: 0,\r\n          flip: 0,\r\n          scaleX: 1,\r\n          scaleY: 1,\r\n        },\r\n        AllowedLayerProps[currentLayer.layer_type]\r\n      ),\r\n    };\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...currentLayer,\r\n            ...defaultValues,\r\n            layer_data: Object.assign(\r\n              defaultValues.layer_data,\r\n              currentLayer.layer_data\r\n            ),\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              width: Yup.number()\r\n                .required(\"Required\")\r\n                .moreThan(0, \"Must be greater than 0\"),\r\n              height: Yup.number()\r\n                .required(\"Required\")\r\n                .moreThan(0, \"Must be greater than 0\"),\r\n              left: Yup.number().required(\"Required\"),\r\n              top: Yup.number().required(\"Required\"),\r\n              rotation: Yup.number()\r\n                .required(\"Required\")\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} />\r\n              <SizeProperty {...formProps} />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { deleteLayer } from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      key === \"del\" &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n};\r\n"],"sourceRoot":""}