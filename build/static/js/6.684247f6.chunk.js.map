{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","length","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","css","palette","Palette","deferred","hideTextfield","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","SizeProperty","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","PropertyBar","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","nullable","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON","hex","result","exec"],"mappings":"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","file":"static/js/6.684247f6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport Helper from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    // if (node.width() < 2.5 || node.height() < 2.5) {\r\n    //   return 15;\r\n    // }\r\n    // if (node.width() < 5 || node.height() < 5) {\r\n    //   return 10;\r\n    // }\r\n    // if (node.width() < 10 || node.height() < 10) {\r\n    //   return 7;\r\n    // }\r\n    // if (node.width() < 30 || node.height() < 30) {\r\n    //   return 4;\r\n    // }\r\n    // if (node.width() < 50 || node.height() < 50) {\r\n    //   return 2;\r\n    // }\r\n    // if (node.width() < 200 || node.height() < 200) {\r\n    //   return 1.5;\r\n    // }\r\n    // return 1;\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(1, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor ? Helper.hexToRgba(filterColor).r : null}\r\n      green={filterColor ? Helper.hexToRgba(filterColor).g : null}\r\n      blue={filterColor ? Helper.hexToRgba(filterColor).b : null}\r\n      alpha={filterColor ? Helper.hexToRgba(filterColor).a / 255 : null}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left || 0)}\r\n          y={parseFloat(layer.layer_data.top || 0)}\r\n          filterColor={layer.layer_data.color}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          opacity={layer.layer_data.opacity}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  // useEffect(() => {\r\n  //   const node = shapeRef.current;\r\n  //   if (\r\n  //     node &&\r\n  //     (node.width() !== props.width || node.height() !== props.height) &&\r\n  //     loadedFontFamily\r\n  //   ) {\r\n  //     if (onChange) {\r\n  //       onChange({\r\n  //         width: Helper.mathRound2(node.width()),\r\n  //         height: Helper.mathRound2(node.height()),\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }, [shapeRef.current, loadedFontFamily]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        // width: Helper.mathRound2(Math.max(5, node.width())),\r\n        // height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()),\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer) return <Transformer ref={trRef} keepRatio={false} />;\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <ColorPicker\r\n        value={value || \"\"}\r\n        onChange={(color) => onChange(color.css.backgroundColor)}\r\n        palette={Palette}\r\n        deferred\r\n        hideTextfield\r\n      />\r\n      <ColorInputField\r\n        value={value || \"\"}\r\n        onChange={(event) => onChange(event.target.value)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  console.log(errors);\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_visible\", 1 - values.layer_visible)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_locked\", 1 - values.layer_locked)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.width\"\r\n              label=\"Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.width)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.width &&\r\n                errors.layer_data &&\r\n                errors.layer_data.width\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.height\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.height\"\r\n              label=\"Height\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.height)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.height &&\r\n                errors.layer_data &&\r\n                errors.layer_data.height\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleX\"\r\n              label=\"ScaleX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleY\"\r\n              label=\"ScaleY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] !== currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] !== currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string().nullable(),\r\n              size: Yup.number(),\r\n              scolor: Yup.string().nullable(),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty {...formProps} />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      (key === \"del\" || key === \"backspace\") &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n    if (key === \"esc\" && event.target.tagName !== \"INPUT\" && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n  hexToRgba,\r\n};\r\n"],"sourceRoot":""}