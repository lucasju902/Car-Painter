{"version":3,"sources":["components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","Popover","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","width","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","value","onChange","event","parseInt","target","endAdornment","InputAdornment","position","labelWidth","autoFocus","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleUndoRedo","isUndo","historyActionBack","historyActionUp","alignContent","ToggleButtonGroup","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","Undo","length","Redo","endIcon","currentTarget","toFixed","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","RotationButton","Board","onChangeBoardRotation","stageRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleChangeBoardRotation","newBoardRotate","isRight","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","positionX","positionY","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","right","RotateLeft","RotateRight","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","key","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","TitleBar","dirtyName","setDirtyName","dialog","setDialog","px","my","setCurrentName","changeName","icon","faQuestion","Settings","updateScheme","CustomTypography","active","PartItem","toggleVisible","toggleLocked","selected","disableLock","hover","setHover","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","stopPropagation","nativeEvent","stopImmediatePropagation","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","action","startIcon","Add","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","mode","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","pr","pb","changeBaseColor","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer"],"mappings":"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","file":"static/js/7.d7714faf.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = (event) => {\r\n    setZoom(parseInt(event.target.value || 0) / 100.0);\r\n  };\r\n  const handleZoom100 = () => {\r\n    setZoom(1);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ZoomPopover;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const { onZoomIn, onZoomOut, onZoomFit, onChangePaintingGuides } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleUndoRedo = (isUndo = true) => {\r\n    if (isUndo) {\r\n      dispatch(historyActionBack());\r\n    } else {\r\n      dispatch(historyActionUp());\r\n    }\r\n  };\r\n\r\n  const handleZoomPoperOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseZoomPoper = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleZoom = (value) => {\r\n    dispatch(setZoom(value));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.STAR:\r\n      return (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.RING:\r\n      return (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.REGULARPOLYGON:\r\n      return (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.WEDGE:\r\n      return (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ARC:\r\n      return (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.LINE:\r\n    case MouseModes.PEN:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.POLYGON:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ARROW:\r\n      return (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({ onChangeBoardRotation, stageRef }) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayerRef.current) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        drawingLayerRef.current = newLayer;\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n          ]);\r\n\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = () => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayerRef.current &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  console.log(stageRef);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShortCutsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setDialog(null);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\">\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      className={clsx(selected && \"activeItem\", hover && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography active={layer_visible ? \"true\" : \"false\"} noWrap>\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hover || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <IconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n          {selected || hover || !layer_visible ? (\r\n            <IconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </IconButton>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...layer,\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, baseColor, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = (value) => {\r\n    dispatch(setMouseMode(value));\r\n    if (value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DrawerBar;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flop\",\r\n                    values.layer_data.flop ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flip\",\r\n                    values.layer_data.flip ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  !AllowedLayerTypes.includes(\"layer_data.text\")\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n              radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              innerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              outerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n              angle: Yup.number(),\r\n              pointerLength: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              pointerWidth: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} toggleField={toggleField} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4 } from \"helper\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomFit = () => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"(\" && event.shiftKey) {\r\n        handleZoomFit();\r\n      } else if (event.key === \"D\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      } else if (event.key === \"B\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.PEN));\r\n      } else if (event.key === \"R\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RECT));\r\n      } else if (event.key === \"C\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.CIRCLE));\r\n      } else if (event.key === \"E\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n      } else if (event.key === \"S\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.STAR));\r\n      } else if (event.key === \"G\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RING));\r\n      } else if (event.key === \"O\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n      } else if (event.key === \"W\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.WEDGE));\r\n      } else if (event.key === \"A\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARC));\r\n      } else if (event.key === \"P\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.POLYGON));\r\n      } else if (event.key === \"L\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.LINE));\r\n      } else if (event.key === \">\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARROW));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionBack());\r\n      } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionUp());\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}