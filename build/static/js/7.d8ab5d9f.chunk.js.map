{"version":3,"sources":["utils/tga.js","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/SubForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/GuidesSetting.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/SharingSetting.jsx","dialogs/scheme-settings-dialog/styles.jsx","dialogs/scheme-settings-dialog/SchemeSettingsDialog.jsx","dialogs/scheme-settings-dialog/index.js","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","components/Loader.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/LightTooltip.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","showProperties","handleToggleProperties","setShowProperties","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","LightTooltip","title","arrow","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","ml","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","useRef","shapeRef","image","setImage","filters","useMemo","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","handleDragStart","e","handleDragEnd","handleTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onTransformEnd","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","editable","bgColor","paddingX","paddingY","imageshapeRef","console","log","imageNode","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","fontSize","size","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","trRef","selectedLayer","pressedKey","hoveredTransform","keepRatio","sizeLocked","scaleLocked","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","boundBoxFunc","oldBoundBox","newBoundBox","diff","getSnapRotation","rotateAroundCenter","enabledAnchors","borderEnabled","rotateEnabled","borderStroke","RotationButton","Board","wrapperWidth","wrapperHeight","wrapperRef","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","activeTransformerRef","hoveredTransformerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","previousGuide","setPreviousGuide","currentCarMake","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","push","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","showGuideForRepositioning","show","newPaintingGuides","show_wireframe","show_numberBlocks","show_sponsor","show_grid","setPaintingGuides","handleLayerDragStart","handleLayerDragEnd","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","legacy_mode","show_carparts_on_top","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","handleBlur","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","Tooltip","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","handleInputKeyDown","borderRadius","m","css","backgroundColor","Palette","deferred","hideTextfield","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleChange","touched","extraChildren","expanded","setExpanded","expandIcon","ExpandMore","sm","CustomFormControlLabel","FormControlLabel","CustomDialogContent","DialogContent","InnerForm","onCancel","formProps","onSubmit","handleSubmit","noValidate","dividers","maxHeight","pr","overflow","control","checked","labelPlacement","isSubmitting","isValid","GuidesSetting","onApply","initialValues","validationSchema","Yup","shape","nullable","test","colorValidator","validate","CustomAutocomplete","Autocomplete","owner","currentUserID","schemeID","premiumUsers","unInvitedUsers","user","sharedUsers","user_id","isOwner","handleNewUserChange","scheme_id","accepted","handleNewUserPermissionChange","handleSharedUserChange","options","getOptionLabel","option","newValue","renderInput","params","newUser","flexGrow","mt","drivername","sharedUser","SharingSetting","ownerID","userList","pro_user","TabPanel","other","role","hidden","a11yProps","StyledTabs","withStyles","indicator","root","paddingLeft","Tabs","TabIndicatorProps","StyledTab","theme","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","SchemeSettingsDialog","onApplyGuideSettings","onApplySharingSetting","tabValue","setTabValue","handleTabChange","fullWidth","maxWidth","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Dialog","DialogTitle","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","onBack","setName","dialog","setDialog","userReducer","currentUser","authReducer","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","handleApplyProjectSettings","updateScheme","handleApplySharingSetting","createSharedUser","setMessage","message","deleteSharedUserItem","updateSharedUserItem","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","MuiButton","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","Root","Loader","CircularProgress","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","increaseData","dataLength","next","loader","scrollableTarget","cellHeight","cols","alt","DialogActions","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overlay_thumb","GridListTileBar","subtitle","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","logos","onOpenLogo","filteredLogos","filteredFlags","increaseLogoData","increaseFlagData","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","handleApplySettings","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","Accordion","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","handleChangeRotation","newRot","PI","boundBox","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","onDelete","SkewProperty","param","PropertyBar","defaultValues","handleClone","handleDelete","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","history","useHistory","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","useResizeDetector","useReducerRef","userRef","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","shared","setHoveredJSONItem","getAbsolutePosition","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleDeleteLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","stageAttrs","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","uploadLater","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","handleGoBack","clearFrameSize","setLoaded","clearSharedUsers","clearCurrentScheme","clearCurrentLayer","getScheme","scheme","tempsharedUsers","getUploadListByUserID","getOverlayList","getLogoList","getFontList","getUserList","getSharedUsers","interval","setInterval","thumbnailInterval","clearInterval","SocketClient","connect","on","emit","updateLayerListItem","deleteLayerListItem","updateSchemeListItem","setCurrentScheme","insertToLayerList","disconnect","k","Helmet","handleKeys","onKeyEvent","handleEventType","tooltip","boxShadow","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","input"],"mappings":"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","file":"static/js/7.d8ab5d9f.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n  setShowProperties,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { ChevronsLeft, ChevronsRight } from \"react-feather\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n\r\n  const handleToggleProperties = useCallback(() => {\r\n    dispatch(setShowProperties(!showProperties));\r\n  }, [dispatch, showProperties]);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n\r\n          <LightTooltip title=\"Toggle Properties\" arrow>\r\n            <IconButton onClick={handleToggleProperties} ml={2}>\r\n              {showProperties ? <ChevronsRight /> : <ChevronsLeft />}\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            layer_data.shadowOffsetX * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            layer_data.shadowOffsetY * Math.abs(scaleY)\r\n          ),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          node.cache({\r\n            pixelRatio: getPixelRatio(shapeRef.current),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // node.getLayer().batchDraw();\r\n        } else {\r\n          node.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  editable,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const imageNode = imageshapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(imageNode.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            (layer_data.shadowOffsetX || 0) * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            (layer_data.shadowOffsetY || 0) * Math.abs(scaleY)\r\n          ),\r\n          paddingX: mathRound2((layer_data.paddingX || 0) * Math.abs(scaleX)),\r\n          paddingY: mathRound2((layer_data.paddingY || 0) * Math.abs(scaleY)),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          imageNode.cache({\r\n            pixelRatio: getPixelRatio(imageNode),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // imageNode.getLayer().batchDraw();\r\n        } else {\r\n          imageNode.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange && editable}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect\r\n        x={-paddingX || 0}\r\n        y={-paddingY || 0}\r\n        width={props.width + 2 * (paddingX || 0)}\r\n        height={props.height + 2 * (paddingY || 0)}\r\n        fill={bgColor}\r\n      />\r\n      <Image\r\n        x={0}\r\n        y={0}\r\n        width={props.width}\r\n        height={props.height}\r\n        shadowBlur={props.shadowBlur}\r\n        shadowOffsetX={props.shadowOffsetX}\r\n        shadowOffsetY={props.shadowOffsetY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    editable,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = useCallback(() => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  }, [id, fontFamily, fontFile, onFontLoad, onLoadLayer, setLoadedFontFamily]);\r\n\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [onChange, onDragEnd]\r\n  );\r\n\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n          scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n        });\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              editable={editable}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  editable,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n              top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [offsetsFromStroke, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        const width =\r\n          type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n        const height =\r\n          type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(node.x() - offsetsFromStroke.x),\r\n              top: mathRound2(node.y() - offsetsFromStroke.y),\r\n              width: mathRound2(\r\n                Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n              ),\r\n              height: mathRound2(\r\n                Math.max(1, height * Math.abs(scaleY)) -\r\n                  offsetsFromStroke.height\r\n              ),\r\n              radius: node.radius\r\n                ? mathRound2(\r\n                    Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.radius\r\n                  )\r\n                : 0,\r\n              innerRadius: node.innerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.innerRadius\r\n                  )\r\n                : 0,\r\n              outerRadius: node.outerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.outerRadius\r\n                  )\r\n                : 0,\r\n              rotation: mathRound2(node.rotation()) || 0,\r\n              flop: scaleX > 0 ? 0 : 1,\r\n              flip: scaleY > 0 ? 0 : 1,\r\n              stroke: mathRound2(node.strokeWidth() * xyScale),\r\n              shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n              shadowOffsetX: mathRound2(\r\n                layer_data.shadowOffsetX * Math.abs(scaleX)\r\n              ),\r\n              shadowOffsetY: mathRound2(\r\n                layer_data.shadowOffsetY * Math.abs(scaleY)\r\n              ),\r\n              cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n              cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n              cornerBottomLeft: mathRound2(\r\n                layer_data.cornerBottomLeft * xyScale\r\n              ),\r\n              cornerBottomRight: mathRound2(\r\n                layer_data.cornerBottomRight * xyScale\r\n              ),\r\n              points: points.map((point, index) =>\r\n                index % 2 === 0\r\n                  ? mathRound2(point * Math.abs(scaleX))\r\n                  : mathRound2(point * Math.abs(scaleY))\r\n              ),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [type, offsetsFromStroke, layer_data, points, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\nimport { getSnapRotation, rotateAroundCenter } from \"helper\";\r\n\r\nconst TransformerComponent = ({\r\n  trRef,\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = useCallback(() => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedLayer]);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [checkNode]);\r\n\r\n  const boundBoxFunc = useCallback(\r\n    (oldBoundBox, newBoundBox) => {\r\n      const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n      const diff = closesSnap - oldBoundBox.rotation;\r\n      if (pressedKey === \"shift\") {\r\n        if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n          return newBoundBox;\r\n        }\r\n        if (Math.abs(diff) > 0) {\r\n          return rotateAroundCenter(oldBoundBox, diff);\r\n        }\r\n        return oldBoundBox;\r\n      }\r\n      return newBoundBox;\r\n    },\r\n    [pressedKey, getSnapRotation, rotateAroundCenter]\r\n  );\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        id=\"defaultTransformer\"\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  wrapperWidth,\r\n  wrapperHeight,\r\n  wrapperRef,\r\n  hoveredLayerJSON,\r\n  editable,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n  activeTransformerRef,\r\n  hoveredTransformerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [previousGuide, setPreviousGuide] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showGuideForRepositioning = useCallback(\r\n    (show = true) => {\r\n      if (!show) {\r\n        dispatch(setPaintingGuides([...previousGuide]));\r\n        setPreviousGuide([]);\r\n      } else if (!previousGuide.length) {\r\n        setPreviousGuide([...paintingGuides]);\r\n        let newPaintingGuides = [...paintingGuides];\r\n        if (\r\n          currentScheme.guide_data.show_wireframe &&\r\n          !newPaintingGuides.includes(PaintingGuides.WIREFRAME)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.WIREFRAME);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_numberBlocks &&\r\n          !newPaintingGuides.includes(PaintingGuides.NUMBERBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.NUMBERBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_sponsor &&\r\n          !newPaintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.SPONSORBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_grid &&\r\n          !newPaintingGuides.includes(PaintingGuides.GRID)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.GRID);\r\n        }\r\n        dispatch(setPaintingGuides(newPaintingGuides));\r\n      }\r\n    },\r\n    [dispatch, paintingGuides, previousGuide, setPreviousGuide, currentScheme]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(true);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(false);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" position=\"relative\">\r\n      <Box\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        id=\"board-wrapper\"\r\n        position=\"relative\"\r\n        ref={wrapperRef}\r\n      >\r\n        <Stage\r\n          width={wrapperWidth}\r\n          height={wrapperHeight}\r\n          onMousedown={handleMouseDown}\r\n          onContentMousedown={handleContentMouseDown}\r\n          onContentMousemove={handleMouseMove}\r\n          onContentMouseup={handleMouseUp}\r\n          onDblClick={handleContentDoubleClick}\r\n          onTouchStart={handleMouseDown}\r\n          onWheel={handleZoomStage}\r\n          scaleX={zoom || 1}\r\n          scaleY={zoom || 1}\r\n          rotation={boardRotate}\r\n          x={wrapperWidth / 2}\r\n          y={wrapperHeight / 2}\r\n          offsetX={frameSize.width / 2}\r\n          offsetY={frameSize.height / 2}\r\n          ref={stageRef}\r\n          draggable={mouseMode === MouseModes.DEFAULT}\r\n          style={{\r\n            cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n          }}\r\n        >\r\n          <Layer ref={baseLayerRef} listening={false}>\r\n            {/* Background */}\r\n            <Rect\r\n              x={0}\r\n              y={0}\r\n              width={frameSize.width}\r\n              height={frameSize.height}\r\n              fill={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              listening={false}\r\n            />\r\n            <BasePaints\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              layers={layerList}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer listening={false}>\r\n            <PaintingGuideBottom\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              guideData={currentScheme.guide_data}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer ref={mainLayerRef}>\r\n            {!currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Overlays\r\n              editable={editable}\r\n              layers={layerList}\r\n              frameSize={frameSize}\r\n              boardRotate={boardRotate}\r\n              currentLayer={currentLayer}\r\n              mouseMode={mouseMode}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <Shapes\r\n              editable={editable}\r\n              layers={layerList}\r\n              drawingLayer={drawingLayerRef.current}\r\n              boardRotate={boardRotate}\r\n              mouseMode={mouseMode}\r\n              currentLayer={currentLayer}\r\n              loadedStatuses={loadedStatuses}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <LogosAndTexts\r\n              editable={editable}\r\n              layers={layerList}\r\n              fonts={fontList}\r\n              loadedFontList={loadedFontList}\r\n              frameSize={frameSize}\r\n              mouseMode={mouseMode}\r\n              boardRotate={boardRotate}\r\n              loadedStatuses={loadedStatuses}\r\n              currentLayer={currentLayer}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onFontLoad={handleAddFont}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            {currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n          <Layer ref={carMaskLayerRef} listening={false}>\r\n            <PaintingGuideCarMask\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer>\r\n            <PaintingGuideTop\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              frameSize={frameSize}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n            {editable ? (\r\n              <TransformerComponent\r\n                trRef={activeTransformerRef}\r\n                selectedLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {hoveredLayerJSON &&\r\n            (!currentLayer ||\r\n              !hoveredLayerJSON[currentLayer.id] ||\r\n              !editable) ? (\r\n              <TransformerComponent\r\n                trRef={hoveredTransformerRef}\r\n                selectedLayer={layerList.find(\r\n                  (item) => hoveredLayerJSON[item.id]\r\n                )}\r\n                hoveredTransform={true}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n        </Stage>\r\n        <Box position=\"absolute\" right={0} top={0}>\r\n          <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n              <RotateLeftIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n          <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n              <RotateRightIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ScreenLoader />\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, disabled, min, max, value, setValue, step } = props;\r\n\r\n  const handleBlur = useCallback(() => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  }, [value, min, max, setValue]);\r\n\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              disabled={disabled}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            disabled={disabled}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? Math.max(min, 0)\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, disabled, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onChange(event.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {disabled ? (\r\n          <Box\r\n            width=\"24px\"\r\n            height=\"24px\"\r\n            bgcolor={value || \"white\"}\r\n            borderRadius=\"5px\"\r\n            m=\"4px\"\r\n          ></Box>\r\n        ) : (\r\n          <ColorPicker\r\n            value={value || \"\"}\r\n            onChange={(color) => onChange(color.css.backgroundColor)}\r\n            palette={Palette}\r\n            deferred\r\n            hideTextfield\r\n          />\r\n        )}\r\n\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          disabled={disabled}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { AccordionSummary } from \"components/MaterialUI\";\r\n\r\nexport const CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { CustomAccordionSummary } from \"./styles\";\r\n\r\nexport const SubForm = (props) => {\r\n  const {\r\n    label,\r\n    editable,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            {colorKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Color\r\n                  </Typography>\r\n                  <ColorPickerInput\r\n                    disabled={!editable}\r\n                    value={values[colorKey]}\r\n                    onChange={(color) => setFieldValue(colorKey, color)}\r\n                    onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                    error={Boolean(errors[colorKey])}\r\n                    helperText={errors[colorKey]}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {opacityKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <SliderInput\r\n                  label=\"Opacity\"\r\n                  disabled={!editable}\r\n                  min={0}\r\n                  max={1}\r\n                  step={0.01}\r\n                  value={values[opacityKey]}\r\n                  setValue={(value) => setFieldValue(opacityKey, value)}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, FormControlLabel } from \"components/MaterialUI\";\r\n\r\nexport const CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Checkbox,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { SubForm } from \"./sub-form\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { CustomFormControlLabel, CustomDialogContent } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(({ editable, onCancel, ...formProps }) => {\r\n  return (\r\n    <Form onSubmit={formProps.handleSubmit} noValidate>\r\n      <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n        <Box maxHeight=\"70vh\" pr={5} overflow=\"auto\">\r\n          <SubForm\r\n            label=\"Car Mask\"\r\n            colorKey=\"carmask_color\"\r\n            opacityKey=\"carmask_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n          />\r\n          <SubForm\r\n            label=\"Wireframe\"\r\n            colorKey=\"wireframe_color\"\r\n            opacityKey=\"wireframe_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_wireframe\"\r\n                        checked={formProps.values.show_wireframe}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_wireframe\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Wireframe for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Sponsor Blocks\"\r\n            colorKey=\"sponsor_color\"\r\n            opacityKey=\"sponsor_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_sponsor\"\r\n                        checked={formProps.values.show_sponsor}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_sponsor\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Sponsor Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Number Blocks\"\r\n            colorKey=\"numberblock_color\"\r\n            opacityKey=\"numberblock_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_numberBlocks\"\r\n                        checked={formProps.values.show_numberBlocks}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_numberBlocks\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Number Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Grid\"\r\n            colorKey=\"grid_color\"\r\n            opacityKey=\"grid_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Column Size\"\r\n                    min={5}\r\n                    max={50}\r\n                    step={1}\r\n                    value={formProps.values.grid_padding}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_padding\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Stroke Width\"\r\n                    min={0.01}\r\n                    max={3}\r\n                    step={0.01}\r\n                    value={formProps.values.grid_stroke}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_stroke\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_grid\"\r\n                        checked={formProps.values.show_grid}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_grid\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Grid for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Car Parts\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_carparts_on_top\"\r\n                        checked={formProps.values.show_carparts_on_top}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_carparts_on_top\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Car Parts on top of other layers\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={formProps.isSubmitting || !formProps.isValid || !editable}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Form>\r\n  );\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const GuidesSetting = React.memo((props) => {\r\n  const { guide_data, editable, onCancel, onApply } = props;\r\n\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      carmask_color: guide_data.carmask_color || \"\",\r\n      carmask_opacity: guide_data.carmask_opacity || 1,\r\n      wireframe_color: guide_data.wireframe_color || \"\",\r\n      wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n      sponsor_color: guide_data.sponsor_color || \"\",\r\n      sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n      numberblock_color: guide_data.numberblock_color || \"\",\r\n      numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n      grid_color: guide_data.grid_color || \"\",\r\n      grid_opacity: guide_data.grid_opacity || 1,\r\n      grid_padding: guide_data.grid_padding || 10,\r\n      grid_stroke: guide_data.grid_stroke || 0.1,\r\n      show_wireframe: guide_data.show_wireframe || false,\r\n      show_sponsor: guide_data.show_sponsor || false,\r\n      show_numberBlocks: guide_data.show_numberBlocks || false,\r\n      show_grid: guide_data.show_grid || false,\r\n      show_carparts_on_top: guide_data.show_carparts_on_top || false,\r\n    }),\r\n    [guide_data]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={Yup.object().shape({\r\n        carmask_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        wireframe_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        sponsor_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        numberblock_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        grid_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n      })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm {...formProps} editable={editable} onCancel={onCancel} />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, Autocomplete } from \"components/MaterialUI\";\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n\r\nexport const CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from \"components/MaterialUI\";\r\n\r\nimport { CustomDialogContent, CustomAutocomplete } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(\r\n  ({\r\n    owner,\r\n    editable,\r\n    currentUserID,\r\n    schemeID,\r\n    premiumUsers,\r\n    onCancel,\r\n    ...formProps\r\n  }) => {\r\n    const {\r\n      isSubmitting,\r\n      isValid,\r\n      handleSubmit,\r\n      setFieldValue,\r\n      values,\r\n    } = formProps;\r\n\r\n    const unInvitedUsers = useMemo(\r\n      () =>\r\n        !owner\r\n          ? []\r\n          : premiumUsers.filter(\r\n              (user) =>\r\n                user.id !== owner.id &&\r\n                !values.sharedUsers.find((item) => item.user_id === user.id)\r\n            ),\r\n      [premiumUsers, owner, values]\r\n    );\r\n    const isOwner = useMemo(\r\n      () => (!owner ? false : owner.id === currentUserID),\r\n      [owner, currentUserID]\r\n    );\r\n\r\n    const handleNewUserChange = useCallback(\r\n      (user) => {\r\n        setFieldValue(\r\n          `newUser`,\r\n          user\r\n            ? {\r\n                user_id: user.id,\r\n                user: user,\r\n                scheme_id: schemeID,\r\n                accepted: 0,\r\n                editable: 0,\r\n              }\r\n            : null\r\n        );\r\n      },\r\n      [schemeID]\r\n    );\r\n\r\n    const handleNewUserPermissionChange = useCallback((value) => {\r\n      setFieldValue(`newUser['editable']`, value);\r\n    }, []);\r\n\r\n    const handleSharedUserChange = useCallback((value, index) => {\r\n      setFieldValue(`sharedUsers[${index}]['editable']`, value);\r\n    }, []);\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit} noValidate>\r\n        <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n          {isOwner ? (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={5} pr={5}>\r\n              <CustomAutocomplete\r\n                options={unInvitedUsers}\r\n                getOptionLabel={(option) => option.id.toString()}\r\n                style={{ width: 200 }}\r\n                onChange={(event, newValue) => {\r\n                  handleNewUserChange(newValue);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Enter Customer ID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              {values.newUser ? (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  flexGrow={1}\r\n                  ml={5}\r\n                >\r\n                  <Box mt=\"-7px\">\r\n                    <Typography>{values.newUser.user.drivername}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      ID #{values.newUser.user.id}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box height=\"31px\">\r\n                    <Select\r\n                      variant=\"outlined\"\r\n                      value={values.newUser.editable}\r\n                      onChange={(event) =>\r\n                        handleNewUserPermissionChange(event.target.value)\r\n                      }\r\n                    >\r\n                      <MenuItem value={0}>Can view</MenuItem>\r\n                      <MenuItem value={1}>{\"Can view & edit\"}</MenuItem>\r\n                      <MenuItem value={-1}>Cancel</MenuItem>\r\n                    </Select>\r\n                  </Box>\r\n                </Box>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box maxHeight=\"50vh\" pr={5} overflow=\"auto\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={4}>\r\n              <Typography color=\"textSecondary\">\r\n                {owner.drivername + (isOwner ? \" (you)\" : \"\")}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">Owner</Typography>\r\n            </Box>\r\n            {values.sharedUsers.map((sharedUser, index) => (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                key={index}\r\n                mb={4}\r\n              >\r\n                <Box mt=\"-7px\">\r\n                  <Typography color=\"textSecondary\">\r\n                    {sharedUser.user.drivername +\r\n                      (currentUserID === sharedUser.user.id ? \" (you)\" : \"\")}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    ID #{sharedUser.user.id}\r\n                  </Typography>\r\n                </Box>\r\n                <Box height=\"31px\">\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    value={sharedUser.editable}\r\n                    disabled={!isOwner && currentUserID !== sharedUser.user.id}\r\n                    onChange={(event) =>\r\n                      handleSharedUserChange(event.target.value, index)\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>Can view</MenuItem>\r\n                    <MenuItem value={1} disabled={!editable}>\r\n                      {\"Can view & edit\"}\r\n                    </MenuItem>\r\n                    <MenuItem value={-1}>Remove</MenuItem>\r\n                  </Select>\r\n                </Box>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </CustomDialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            disabled={isSubmitting || !isValid}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const SharingSetting = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    ownerID,\r\n    schemeID,\r\n    currentUserID,\r\n    userList,\r\n    sharedUsers,\r\n    onCancel,\r\n    onApply,\r\n  } = props;\r\n  const owner = useMemo(() => userList.find((item) => item.id === ownerID), [\r\n    ownerID,\r\n    userList,\r\n  ]);\r\n  const premiumUsers = useMemo(() => userList.filter((item) => item.pro_user), [\r\n    userList,\r\n  ]);\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      newUser: null,\r\n      sharedUsers: sharedUsers,\r\n    }),\r\n    [sharedUsers]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      // validationSchema={Yup.object().shape({\r\n      //   user_id: Yup.number().min(0),\r\n      // })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm\r\n          {...formProps}\r\n          editable={editable}\r\n          owner={owner}\r\n          currentUserID={currentUserID}\r\n          schemeID={schemeID}\r\n          premiumUsers={premiumUsers}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport { Tab, Tabs, Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`project-settings-tabpanel-${index}`}\r\n      aria-labelledby={`project-settings-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const a11yProps = (index) => {\r\n  return {\r\n    id: `project-settings-tab-${index}`,\r\n    \"aria-controls\": `project-settings-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nexport const StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n  root: {\r\n    paddingLeft: \"24px\",\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport const StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: \"10px\",\r\n    padding: \"6px 5px\",\r\n    minWidth: 120,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport { Box, Dialog, DialogTitle } from \"components/MaterialUI\";\r\nimport { GuidesSetting, SharingSetting } from \"./components\";\r\nimport { StyledTabs, StyledTab, TabPanel, a11yProps } from \"./styles\";\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const {\r\n    ownerID,\r\n    editable,\r\n    currentUserID,\r\n    schemeID,\r\n    userList,\r\n    sharedUsers,\r\n    guide_data,\r\n    onCancel,\r\n    open,\r\n    onApplyGuideSettings,\r\n    onApplySharingSetting,\r\n  } = props;\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n    },\r\n    [setTabValue]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Project Settings</DialogTitle>\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        aria-label=\"Project Settings Tab\"\r\n      >\r\n        <StyledTab label=\"Painting Guides\" {...a11yProps(0)} />\r\n        <StyledTab label=\"Sharing\" {...a11yProps(1)} />\r\n      </StyledTabs>\r\n      <Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <GuidesSetting\r\n            editable={editable}\r\n            guide_data={guide_data}\r\n            onApply={onApplyGuideSettings}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <SharingSetting\r\n            editable={editable}\r\n            ownerID={ownerID}\r\n            currentUserID={currentUserID}\r\n            schemeID={schemeID}\r\n            userList={userList}\r\n            sharedUsers={sharedUsers}\r\n            onApply={onApplySharingSetting}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import SchemeSettingsDialog from \"./SchemeSettingsDialog\";\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  createSharedUser,\r\n  updateSharedUserItem,\r\n  deleteSharedUserItem,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/scheme-settings-dialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = (props) => {\r\n  const { editable, onBack } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const currentUser = useSelector((state) => state.authReducer.user);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleApplyProjectSettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  const handleApplySharingSetting = useCallback(\r\n    (data) => {\r\n      console.log(data);\r\n      let count = 0;\r\n      if (data.newUser && data.newUser.editable >= 0) {\r\n        count += 1;\r\n        dispatch(\r\n          createSharedUser(\r\n            {\r\n              user_id: data.newUser.user_id,\r\n              scheme_id: data.newUser.scheme_id,\r\n              accepted: data.newUser.accepted,\r\n              editable: data.newUser.editable,\r\n            },\r\n            () => {\r\n              dispatch(\r\n                setMessage({\r\n                  message: \"Shared Project successfully!\",\r\n                  type: \"success\",\r\n                })\r\n              );\r\n            }\r\n          )\r\n        );\r\n      }\r\n      for (let sharedUser of data.sharedUsers) {\r\n        if (sharedUser.editable === -1) {\r\n          dispatch(\r\n            deleteSharedUserItem(sharedUser.id, () => {\r\n              if (!count)\r\n                dispatch(\r\n                  setMessage({\r\n                    message: \"Applied Sharing Setting successfully!\",\r\n                    type: \"success\",\r\n                  })\r\n                );\r\n              count += 1;\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            updateSharedUserItem(\r\n              sharedUser.id,\r\n              {\r\n                editable: sharedUser.editable,\r\n              },\r\n              () => {\r\n                if (!count)\r\n                  dispatch(\r\n                    setMessage({\r\n                      message: \"Applied Sharing Setting successfully!\",\r\n                      type: \"success\",\r\n                    })\r\n                  );\r\n                count += 1;\r\n              }\r\n            )\r\n          );\r\n        }\r\n      }\r\n\r\n      setDialog(null);\r\n    },\r\n    [dispatch, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={onBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        ownerID={currentScheme.user_id}\r\n        editable={editable}\r\n        currentUserID={currentUser.id}\r\n        schemeID={currentScheme.id}\r\n        sharedUsers={sharedUsers}\r\n        userList={userList}\r\n        guide_data={guide_data}\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApplyGuideSettings={handleApplyProjectSettings}\r\n        onApplySharingSetting={handleApplySharingSetting}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disabled,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock &&\r\n          !disabled &&\r\n          (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {!disabled && (selected || hovered || !layer_visible) ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    disabled,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd && !disabled}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                  disabled={disabled}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Root = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 60px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Root>\r\n      <CircularProgress m={2} color=\"secondary\" />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? []\r\n        : legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? false\r\n        : legacyMode\r\n        ? limit < basePaints.length\r\n        : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3} spacing={8}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  const filteredOverlays = useMemo(\r\n    () =>\r\n      overlays.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(search.toLowerCase())\r\n      ),\r\n    [overlays, search]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 30;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const filteredLogos = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type !== \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const filteredFlags = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type === \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const increaseLogoData = useCallback(() => {\r\n    setLogoLimit(logoLimit + step);\r\n  }, [logoLimit, step, setLogoLimit]);\r\n\r\n  const increaseFlagData = useCallback(() => {\r\n    setFlagLimit(flagLimit + step);\r\n  }, [flagLimit, step, setFlagLimit]);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n      setSearch(\"\");\r\n    },\r\n    [setTabValue, setSearch]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 30;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, disabled, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = useCallback(\r\n    (fontFamily, fontFile) => {\r\n      let fontObject = new FontFace(fontFamily, fontFile);\r\n      fontObject\r\n        .load()\r\n        .then(function (loaded_face) {\r\n          document.fonts.add(loaded_face);\r\n          dispatch(insertToLoadedFontList(fontFamily));\r\n        })\r\n        .catch(function (error) {\r\n          // error occurred\r\n          console.warn(error, fontFamily);\r\n        });\r\n    },\r\n    [insertToLoadedFontList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef, editable }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              disabled={!editable}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              disabled={!editable}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() =>\r\n                  editable\r\n                    ? setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)\r\n                    : null\r\n                }\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    editable,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onBack,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar editable={editable} onBack={onBack} />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n          editable={editable}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  disabled={!editable}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              disabled={!editable}\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                disabled={!editable}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              disabled={!editable}\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                disabled={!editable}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                disabled={!editable}\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    BG Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  disabled={!editable}\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { rotateAroundCenter } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    stageRef,\r\n    currentLayer,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  const handleChangeRotation = useCallback(\r\n    (value) => {\r\n      if (\r\n        ![\r\n          MouseModes.CIRCLE,\r\n          MouseModes.ELLIPSE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n          MouseModes.ARROW,\r\n          MouseModes.PEN,\r\n        ].includes(currentLayer.layer_data.type)\r\n      ) {\r\n        const stage = stageRef.current;\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n        const newRot = (value / 180) * Math.PI;\r\n        const boundBox = {\r\n          x: selectedNode.x(),\r\n          y: selectedNode.y(),\r\n          width: selectedNode.width(),\r\n          height: selectedNode.height(),\r\n          rotation: (selectedNode.rotation() / 180) * Math.PI,\r\n        };\r\n\r\n        const newBoundBox = rotateAroundCenter(\r\n          boundBox,\r\n          newRot - boundBox.rotation\r\n        );\r\n\r\n        setFieldValue(\"layer_data.left\", newBoundBox.x);\r\n        setFieldValue(\"layer_data.top\", newBoundBox.y);\r\n      }\r\n      setFieldValue(\"layer_data.rotation\", value);\r\n    },\r\n    [currentLayer, rotateAroundCenter]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              disabled={!editable}\r\n              setValue={handleChangeRotation}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Shadow Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              disabled={!editable}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n    onDelete,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"clone\") &&\r\n    !AllowedLayerTypes.includes(\"delete\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {editable && AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {editable && AllowedLayerTypes.includes(\"delete\") ? (\r\n        <Box width=\"100%\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    editable,\r\n    stageRef,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onDelete,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        if (!currentLayer) return false;\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          stageRef={stageRef}\r\n          currentLayer={currentLayer}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          editable={editable}\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onClone={onClone}\r\n          onDelete={onDelete}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { editable, stageRef, onClone, onDelete } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const initialValues = useMemo(\r\n    () =>\r\n      currentLayer\r\n        ? {\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }\r\n        : { ...defaultValues },\r\n    [defaultValues, currentLayer]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleDelete = useCallback(() => {\r\n    if (currentLayer) onDelete(currentLayer);\r\n  }, [onDelete, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              editable={editable}\r\n              user={user}\r\n              stageRef={stageRef}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onDelete={handleDelete}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper py={5} px={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        height=\"34px\"\r\n      >\r\n        <Typography variant=\"h5\" noWrap>\r\n          Properties\r\n        </Typography>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport {\r\n  getScheme,\r\n  setSaving,\r\n  setLoaded,\r\n  getSharedUsers,\r\n  updateListItem as updateSchemeListItem,\r\n  setCurrent as setCurrentScheme,\r\n  clearSharedUsers,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  updateListItem as updateLayerListItem,\r\n  deleteListItem as deleteLayerListItem,\r\n  insertToList as insertToLayerList,\r\n  clearCurrent as clearCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n  clearFrameSize,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\nimport { getUserList } from \"redux/reducers/userReducer\";\r\nimport SocketClient from \"utils/socketClient\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const {\r\n    width: wrapperWidth,\r\n    height: wrapperHeight,\r\n    ref: wrapperRef,\r\n  } = useResizeDetector();\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n  const activeTransformerRef = useRef(null);\r\n  const hoveredTransformerRef = useRef(null);\r\n\r\n  const [user, userRef] = useReducerRef(\r\n    useSelector((state) => state.authReducer.user)\r\n  );\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const editable = useMemo(\r\n    () =>\r\n      !user || !currentScheme\r\n        ? false\r\n        : user.id === currentScheme.user_id ||\r\n          sharedUsers.find(\r\n            (shared) => shared.user_id === user.id && shared.editable\r\n          ),\r\n    [user, currentScheme, sharedUsers]\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoom = useCallback(\r\n    (newScale) => {\r\n      if (currentLayer && currentLayer.layer_data) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n\r\n        const { x: pointerX, y: pointerY } = selectedNode.getAbsolutePosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n\r\n        dispatch(setZoom(newScale));\r\n\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      } else {\r\n        dispatch(setZoom(newScale));\r\n      }\r\n    },\r\n    [dispatch, currentLayer, stageRef.current]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n\r\n  const handleZoomOut = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n    },\r\n    [dispatch, getZoomedCenterPosition, stageRef, frameSize, zoom]\r\n  );\r\n  const handleDeleteLayer = useCallback(\r\n    (layer) => {\r\n      setConfirmMessage(`Are you sure to delete \"${layer.layer_data.name}\"?`);\r\n    },\r\n    [setConfirmMessage]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR &&\r\n          editable\r\n        ) {\r\n          handleDeleteLayer(currentLayer);\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer &&\r\n          editable\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer &&\r\n          editable\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (\r\n          event.key === \"z\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionBack());\r\n        } else if (\r\n          event.key === \"y\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\" && editable) {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\" && editable) {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\" && editable) {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\" && editable) {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\" && editable) {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          } else if (currentLayer) {\r\n            dispatch(setCurrentLayer(null));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\" && editable) {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      editable,\r\n      handleCloneLayer,\r\n      handleDeleteLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let stageAttrs = { ...stageRef.current.attrs };\r\n\r\n      wrapperRef.current.style.width = `${frameSizeRef.current.width}px`;\r\n      wrapperRef.current.style.height = `${frameSizeRef.current.height}px`;\r\n\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: frameSizeRef.current.width / 2,\r\n        offsetY: frameSizeRef.current.width / 2,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: -frameSizeRef.current.width / 2,\r\n          y: -frameSizeRef.current.width / 2,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(stageAttrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      wrapperRef.current.style.width = `100%`;\r\n      wrapperRef.current.style.height = `100%`;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(\r\n    async (uploadLater = true) => {\r\n      if (stageRef.current && currentSchemeRef.current) {\r\n        try {\r\n          console.log(\"Uploading Thumbnail\");\r\n          dispatch(setSaving(true));\r\n          let dataURL = await takeScreenshot();\r\n          if (uploadLater) dispatch(setSaving(false));\r\n          let blob = dataURItoBlob(dataURL);\r\n          var fileOfBlob = new File(\r\n            [blob],\r\n            `${currentSchemeRef.current.id}.png`,\r\n            {\r\n              type: \"image/png\",\r\n            }\r\n          );\r\n\r\n          let formData = new FormData();\r\n          formData.append(\"files\", fileOfBlob);\r\n          formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n          await SchemeService.uploadThumbnail(formData);\r\n          if (!uploadLater) dispatch(setSaving(false));\r\n          console.log(\"Uploaded Thumbnail\");\r\n        } catch (err) {\r\n          dispatch(setMessage({ message: err.message }));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]\r\n  );\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `car_${userRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        await handleUploadThumbnail();\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    userRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n    handleUploadThumbnail,\r\n  ]);\r\n\r\n  const handleGoBack = useCallback(async () => {\r\n    await handleUploadThumbnail(false);\r\n    dispatch(clearFrameSize());\r\n    dispatch(setLoaded(false));\r\n    dispatch(clearSharedUsers());\r\n    dispatch(clearCurrentScheme());\r\n    dispatch(clearCurrentLayer());\r\n    history.push(\"/\");\r\n  }, [history, dispatch, handleUploadThumbnail]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(\r\n          getScheme(params.id, (scheme, tempsharedUsers) => {\r\n            if (\r\n              user.id !== scheme.user_id &&\r\n              !tempsharedUsers.find((shared) => shared.user_id === user.id)\r\n            ) {\r\n              dispatch(\r\n                setMessage({\r\n                  message: \"You don't have permission for this project!\",\r\n                })\r\n              );\r\n              history.push(\"/\");\r\n            } else {\r\n              if (!uploadsInitialized) {\r\n                dispatch(getUploadListByUserID(user.id));\r\n              }\r\n              if (!overlayList.length) dispatch(getOverlayList());\r\n              if (!logoList.length) dispatch(getLogoList());\r\n              if (!fontList.length) dispatch(getFontList());\r\n              if (!userList.length) dispatch(getUserList());\r\n              if (!sharedUsers.length) dispatch(getSharedUsers(params.id));\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (editable) {\r\n      const interval = setInterval(() => {\r\n        tick.current += 1;\r\n      }, 200);\r\n      const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n        clearInterval(thumbnailInterval);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Socket.io Stuffs\r\n  useEffect(() => {\r\n    SocketClient.connect();\r\n\r\n    SocketClient.on(\"connect\", () => {\r\n      SocketClient.emit(\"room\", params.id);\r\n    });\r\n\r\n    SocketClient.on(\"client-update-layer\", (response) => {\r\n      dispatch(updateLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-delete-layer\", (response) => {\r\n      dispatch(deleteLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-update-scheme\", (response) => {\r\n      dispatch(updateSchemeListItem(response.data));\r\n      dispatch(setCurrentScheme(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-create-layer\", (response) => {\r\n      dispatch(insertToLayerList(response.data));\r\n    });\r\n\r\n    return () => {\r\n      SocketClient.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n      setTimeout(handleUploadThumbnail, 5000);\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box\r\n            width=\"100%\"\r\n            height=\"calc(100% - 50px)\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              editable={editable}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onBack={handleGoBack}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper background=\"#282828\" overflow=\"hidden\" flexGrow=\"1\">\r\n              <Board\r\n                wrapperWidth={wrapperWidth}\r\n                wrapperHeight={wrapperHeight}\r\n                wrapperRef={wrapperRef}\r\n                hoveredLayerJSON={hoveredJSON}\r\n                editable={editable}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n                activeTransformerRef={activeTransformerRef}\r\n                hoveredTransformerRef={hoveredTransformerRef}\r\n              />\r\n            </Wrapper>\r\n            {showProperties ? (\r\n              <PropertyBar\r\n                stageRef={stageRef}\r\n                editable={editable}\r\n                onClone={handleCloneLayer}\r\n                onDelete={handleDeleteLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    height: \"26px\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      onChange(event.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}