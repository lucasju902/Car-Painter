{"version":3,"sources":["services/cookieService.js","redux/reducers/basePaintReducer.js","redux/reducers/messageReducer.js","components/Loader.jsx","services/fontService.js","redux/reducers/fontReducer.js","services/uploadService.js","redux/reducers/uploadReducer.js","services/overlayService.js","redux/reducers/overlayReducer.js","services/logoService.js","redux/reducers/logoReducer.js","pages/auth/Page404.jsx","services/baseAPIService.js","theme/variants.js","theme/typography.js","theme/overrides.js","theme/breakpoints.js","theme/props.js","theme/shadows.js","theme/index.js","components/Async.jsx","routes/index.js","services/authService.js","redux/reducers/authReducer.js","layouts/Main.jsx","layouts/Auth.jsx","routes/Routes.js","App.jsx","utils/axios.js","utils/mock.js","mocks/authMock.js","utils/history.js","redux/reducers/themeReducer.js","redux/reducers/index.js","redux/index.js","index.jsx","redux/reducers/boardReducer.js","redux/reducers/layerReducer.js","services/layerService.js","helper/index.js","services/schemeService.js","config/index.js","redux/reducers/schemeReducer.js","constant/index.js","components/ScreenLoader.jsx","services/carMakeService.js","redux/reducers/carMakeReducer.js"],"names":["CookieService","getSiteLogin","variable","vars","decodeURIComponent","split","queryJson","i","length","pair","getQueryVariable","slice","createSlice","name","initialState","list","current","loading","reducers","setLoading","state","action","payload","setList","item","base_data","JSON","parse","insertToList","basepaint","push","updateListItem","basePaintList","foundIndex","findIndex","id","setCurrent","actions","msg","type","timeout","setMessage","message","Root","styled","div","Loader","m","color","FontService","BaseAPIService","getFontList","a","requestWithAuth","getFontByID","createFont","updateFont","loadedList","concatList","concat","setLoadedList","insertToLoadedList","overlayList","dispatch","fonts","UploadService","getUploadList","getUploadListByUserID","userID","getUploadByID","createUpload","updateUpload","deleteUpload","deleteFromAll","uploadFiles","formData","initialized","deleteListItem","splice","uploads","schemeID","files","FormData","append","fileNames","file","stringify","upload","OverlayService","getOverlayList","getOverlayByID","createOverlay","updateOverlay","overlays","LogoService","getLogoList","getLogoByID","createLogo","updateLogo","Button","MuiButton","spacing","Wrapper","props","theme","breakpoints","up","Page404","title","component","variant","align","gutterBottom","Link","to","mt","baseURL","config","apiURL","request","url","method","data","contentType","axios","headers","httpsAgent","https","Agent","rejectUnauthorized","then","res","Authorization","customBlue","defaultVariant","THEMES","DEFAULT","palette","primary","main","contrastText","secondary","background","default","paper","text","header","grey","search","indicator","footer","sidebar","brand","online","green","badge","variants","merge","DARK","error","red","LIGHT","BLUE","GREEN","INDIGO","indigo","typography","fontFamily","join","fontSize","fontWeightLight","fontWeightRegular","fontWeightMedium","fontWeightBold","h1","fontWeight","lineHeight","h2","h3","h4","h5","caption","textTransform","h6","subtitle1","subtitle2","body1","body2","button","overrides","MuiCssBaseline","html","WebkitFontSmoothing","boxShadow","backgroundColor","width","height","MuiCard","root","borderRadius","MuiCardHeader","marginTop","marginRight","MuiPickersDay","day","MuiPickersYear","MuiPickersCalendar","transitionContainer","MuiPickersCalendarHeader","iconButton","switchHeader","marginBottom","MuiPickersClock","container","margin","MuiPickersClockNumber","clockNumber","left","MuiPickerDTHeader","dateHeader","timeHeader","MuiPickersTimePicker","hourMinuteLabel","MuiPickersToolbar","toolbar","MuiChip","MuiDivider","MuiPaper","MuiInput","underline","borderBottom","MuiOutlinedInput","input","padding","MuiAccordion","rounded","display","MuiAccordionSummary","minHeight","content","MuiAccordionDetails","values","xs","sm","md","lg","xl","MuiButtonBase","disableRipple","titleTypographyProps","shadows","createTheme","themeConfig","find","console","warn","Error","createMuiTheme","asyncComponent","importComponent","this","setState","C","ScreenLoader","React","Component","async","Page500","Scheme","mainLayoutRoutes","path","authLayoutRoutes","children","AuthService","signIn","user","undefined","setUser","GlobalStyle","createGlobalStyle","withWidth","routes","useDispatch","useSelector","authReducer","authLoading","useEffect","response","email","CssBaseline","Auth","childRoutes","Layout","map","index","guard","Guard","Fragment","element","exact","render","Routes","MainLayout","AuthLayout","App","messageReducer","themeReducer","handleClose","useCallback","event","reason","Helmet","titleTemplate","defaultTitle","StylesProvider","injectFirst","utils","DateFnsUtils","currentTheme","Snackbar","open","autoHideDuration","onClose","anchorOrigin","vertical","horizontal","Alert","severity","create","validateStatus","status","axiosMockAdapter","AxiosMockAdapter","delayResponse","userData","mock","onPost","reply","password","history","createHistory","setTheme","combineReducers","router","connectRouter","boardReducer","schemeReducer","carMakeReducer","basePaintReducer","layerReducer","overlayReducer","logoReducer","uploadReducer","fontReducer","devMode","env","middleware","getDefaultMiddleware","immutableCheck","routerMiddleware","logger","store","configureStore","reducer","createRootReducer","ReactDOM","document","getElementById","frameSize","paintingGuides","zoom","pressedKey","boardRotate","mouseMode","MouseModes","actionHistory","actionHistoryIndex","setFrameSize","clearFrameSize","setFrameSizeToMax","size","originSize","Math","max","setPressedKey","setBoardRotate","setPaintingGuides","setZoom","setMouseMode","pushToActionHistory","setActionHistory","setActionHistoryIndex","backUpLayer","layerToClone","getState","LayerService","createLayer","_","omit","layer_data","layer","HistoryActions","LAYER_ADD_ACTION","LAYER_CHANGE_ACTION","LAYER_DELETE_ACTION","includes","prev_data","next_data","insertToLayerList","setCurrentLayer","historyActionBack","SCHEME_CHANGE_ACTION","updateLayer","deleteLayer","updateScheme","historyActionUp","DrawingStatus","CLEAR_COMMAND","ADD_TO_SHAPE","hoveredJSON","clipboard","drawingStatus","loadedStatuses","layerList","deleteItemsByUploadID","filter","layer_type","LayerTypes","UPLOAD","setHoveredJSON","setHoveredJSONItem","key","value","setClipboard","setDrawingStatus","setLoadedStatusAll","setLoadedStatus","createLayersFromBasePaint","basePaintItemOrIndex","legacyMode","baseData","Array","from","base_item","DefaultLayer","BASE","scheme_id","opacity","basePaintIndex","img","parseLayer","createLayerFromOverlay","shape","position","OVERLAY","rotation","x","top","y","source_file","overlay_file","preview_file","overlay_thumb","createLayerFromLogo","logo","LOGO","createLayerFromUpload","file_name","substring","lastIndexOf","createTextLayer","textObj","TEXT","cloneLayer","samePosition","pushingToHistory","centerPosition","layer_order","createShape","newlayer","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","configuredLayer","previousLayer","currentLayer","updateLayerOnly","getLayerList","getLayerByID","getDifferenceFromToday","past_date","difference_In_Second","Date","getTime","round","difference_In_Min","difference_In_Hour","difference_In_Day","hexToRgba","hex","result","exec","r","parseInt","g","b","mathRound2","num","Number","EPSILON","mathRound4","colorValidator","getRelativePointerPosition","node","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","getRelativeShadowOffset","offset","shadowOffset","removeDuplicatedPointFromEnd","points","new_points","newLayer","parseScheme","scheme","newScheme","guide_data","dataURItoBlob","dataURI","binary","atob","array","charCodeAt","Blob","Uint8Array","addImageProcess","src","Promise","resolve","reject","Image","onload","onerror","alphaToHex","alpha","s","floor","toString","legacyBasePaintAssetURL","assetsURL","basePaintAssetURL","carMake","folder_directory","legacyCarMakeAssetURL","carMakeAssetURL","getZoomedCenterPosition","stageRef","getTransform","attrs","fitZoom","min","SchemeService","getSchemeList","getSchemeListByUserID","getSchemeListByUploadID","uploadID","createScheme","carMakeID","legacy_mode","getScheme","deleteScheme","cloneScheme","uploadThumbnail","process","loaded","saving","setSaving","setLoaded","schemeList","clearCurrent","setCurrentName","setCurrentBaseColor","base_color","schemes","onOpen","log","date_modified","setCurrentCarMake","layers","setLayerList","setBasePaintList","basePaints","currentScheme","changeName","changeBaseColor","CAR","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","Palette","blue","yellow","cyan","lime","gray","orange","purple","black","white","pink","darkblue","DialogTypes","BASEPAINT","DEFAULT_SHAPE_SETTINGS","upload_id","layer_visible","layer_locked","time_modified","confirm","radius","innerRadius","outerRadius","flop","flip","scaleX","scaleY","skewX","skewY","stroke","paddingX","paddingY","strokeType","font","sizeLocked","scaleLocked","scolor","bgColor","blendType","shadowColor","shadowBlur","shadowOpacity","shadowOffsetX","shadowOffsetY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","numPoints","angle","lineCap","lineJoin","pointerLength","pointerWidth","RECT","CIRCLE","ELLIPSE","REGULARPOLYGON","ARROW","LINE","WEDGE","POLYGON","SOFTPOLYGON","STAR","RING","ARC","PEN","alignItems","justifyContent","CarMakeService","getCarMakeList","getCarMakeByID","createCarMake","updateCarMake","carMakes"],"mappings":"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fC,cAAe,EACfC,eAAgB,EAChBC,iBAAkB,EAClBC,kBAAmB,EACnBC,UAAW,EACXC,MAAO,GACPnI,OAAQ,GACRoI,QAAS,QACTC,SAAU,QACVC,cAAe,GACfC,aAAc,KAILjS,EAAa,CACxB9O,QAAS,UACTghB,KAAM,YACNC,OAAQ,SACRC,QAAS,UACTC,eAAgB,kBAChBC,MAAO,QACPC,KAAM,OACNC,MAAO,QACPC,QAAS,UACTC,YAAa,eACbC,KAAM,OACNC,KAAM,OACNC,IAAK,MACLC,IAAK,OAGMnR,EAAiB,CAC5BU,qBAAsB,uBACtBT,iBAAkB,mBAClBC,oBAAqB,sBACrBC,oBAAqB,uBAGV6E,GAAiB,mBAC3BtD,EAAW6C,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,kBAGA,kBACA,iBACA,oBACA,oBACA,mBACA,mBACA,sBACA,kBACA,kBACA,kBACA,mBACA,kBACA,oBACA,oBACA,qBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA9B0B,cAgC3B7C,EAAWsC,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,mBACA,oBACA,mBACA,mBACA,kBACA,iBACA,sBACA,kBACA,kBACA,qBACA,yBACA,wBACA,2BACA,wBACA,2BACA,2BACA,sBACA,sBACA,uBAxD0B,cA0D3BtC,EAAW2B,QAAU,CACpB,gBACA,eACA,QACA,aACA,kBACA,mBACA,oBACA,mBACA,mBACA,kBACA,iBACA,sBACA,kBACA,kBACA,qBACA,mBACA,yBACA,wBACA,2BACA,wBACA,2BACA,2BACA,sBACA,sBACA,uBAnF0B,cAqF3B3B,EAAWuD,OArFgB,mBAsFzB5G,EAAWkS,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,kBACA,iBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,2BACA,2BACA,4BACA,8BACA,iCArHwB,cAuHzBlS,EAAWmS,OAAS,CACnB,gBACA,eACA,QACA,aACA,kBACA,kBACA,oBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BAjJwB,cAmJzBnS,EAAWoS,QAAU,CACpB,gBACA,eACA,QACA,aACA,kBACA,kBACA,mBACA,oBACA,mBACA,mBACA,kBACA,iBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA9KwB,cAgLzBpS,EAAW2S,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,kBACA,yBACA,yBACA,uBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA3MwB,cA6MzB3S,EAAW4S,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,kBACA,yBACA,yBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BAxOwB,cA0OzB5S,EAAWqS,eAAiB,CAC3B,gBACA,eACA,QACA,aACA,kBACA,kBACA,oBACA,uBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BArQwB,cAuQzBrS,EAAWwS,MAAQ,CAClB,gBACA,eACA,QACA,aACA,kBACA,kBACA,oBACA,mBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BAlSwB,cAoSzBxS,EAAW6S,IAAM,CAChB,gBACA,eACA,QACA,aACA,kBACA,kBACA,mBACA,mBACA,yBACA,yBACA,mBACA,kBACA,iBACA,sBACA,kBACA,kBACA,qBACA,mBACA,uBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BAhUwB,cAkUzB7S,EAAWuS,KAAO,CACjB,gBACA,eACA,QACA,aACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,qBACA,sBACA,sBACA,kBACA,kBACA,qBACA,oBACA,oBACA,uBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA7VwB,cA+VzBvS,EAAWyS,QAAU,CACpB,gBACA,eACA,QACA,aACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,qBACA,sBACA,sBACA,kBACA,kBACA,mBACA,uBACA,qBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA3XwB,cA6XzBzS,EAAWsS,MAAQ,CAClB,gBACA,eACA,QACA,aACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,qBACA,sBACA,2BACA,0BACA,sBACA,kBACA,kBACA,mBACA,uBACA,qBACA,oBACA,oBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BA3ZwB,cA6ZzBtS,EAAW8S,IAAM,CAChB,gBACA,eACA,QACA,aACA,kBACA,kBACA,kBACA,iBACA,mBACA,mBACA,oBACA,qBACA,sBACA,sBACA,kBACA,kBACA,qBACA,oBACA,oBACA,uBACA,wBACA,yBACA,wBACA,2BACA,wBACA,2BACA,6BAxbwB,kBA2b3BzP,EAAWC,OAAS,CACnB,gBACA,eACA,QACA,aACA,kBACA,mBACA,oBACA,kBACA,iBACA,mBACA,mBACA,sBACA,kBACA,kBACA,qBACA,yBACA,wBACA,2BACA,wBACA,2BACA,2BACA,sBACA,sBACA,uBAnd0B,cAqd3BD,EAAWkB,KAAO,CACjB,kBACA,gBACA,aACA,qBACA,qBA1d0B,cA4d3BlB,EAAWgL,IAAM,CAChB,kBACA,gBACA,aACA,qBAhe0B,I,gCCtI9B,kCAmBepV,IAdM,WACnB,OACE,cAAC,IAAD,CACEpE,MAAM,OACNC,OAAO,OACPwC,QAAQ,OACRyb,WAAW,SACXC,eAAe,SALjB,SAOE,cAAC,IAAD,Q,uKCZeC,E,kIAAuBrnB,GAAvBqnB,EACZC,e,sBAAiB,sBAAApnB,EAAA,+EADLmnB,EAELlnB,gBAAL,WAAiC,QADlB,2CADLknB,EAIZE,e,uCAAiB,WAAOtoB,GAAP,SAAAiB,EAAA,+EAJLmnB,EAKLlnB,gBAAL,mBAAiClB,GAAM,QADxB,2C,sDAJLooB,EAOZG,c,uCAAgB,WAAOppB,GAAP,SAAA8B,EAAA,+EAPJmnB,EAQLlnB,gBAAL,WAAiC,OAAQ/B,IAD3B,2C,sDAPJipB,EAUZI,c,uCAAgB,WAAOxoB,EAAIb,GAAX,SAAA8B,EAAA,+EAVJmnB,EAWLlnB,gBAAL,mBAAiClB,GAAM,MAAOb,IADhC,2C,oECFZX,EAAQC,YAAY,CAC/BC,KAAM,iBACNC,aARmB,CACnBC,KAAM,GACNC,QAAS,KACTC,SAAS,GAMTC,SAAU,CACRC,WAAY,SAACC,EAAOC,GAClBD,EAAMH,QAAUI,EAAOC,SAEzBC,QAAS,SAACH,EAAOC,GACfD,EAAML,KAAOM,EAAOC,SAEtBM,aAAc,SAACR,EAAOC,GACpBD,EAAML,KAAKe,KAAKT,EAAOC,UAEzBS,eAAgB,SAACX,EAAOC,GACtB,IAAIqjB,EAAU,YAAOtjB,EAAML,MACvBkB,EAAayiB,EAAWxiB,WAC1B,SAACV,GAAD,OAAUA,EAAKW,KAAOd,EAAOC,QAAQa,OAEnB,IAAhBF,IACFyiB,EAAWziB,GAAcZ,EAAOC,QAChCF,EAAML,KAAO2jB,IAGjBtiB,WAAY,SAAChB,EAAOC,GAClBD,EAAMJ,QAAUK,EAAOC,Y,EAKiCX,EAAM0B,QAA5DlB,E,EAAAA,WAAYI,E,EAAAA,QACLa,G,EADcR,a,EAAcG,eACbpB,EAAM0B,QAArBD,YAEFooB,EAAiB,yDAAM,WAAOzmB,GAAP,eAAAX,EAAA,6DAClCW,EAAS5C,GAAW,IADc,kBAGTopB,EAAeC,iBAHN,OAG1BI,EAH0B,OAIhC7mB,EAASxC,EAAQqpB,IAJe,gDAMhC7mB,EAAStB,YAAW,CAAEC,QAAS,KAAIA,WANH,QAQlCqB,EAAS5C,GAAW,IARc,yDAAN,uDAkCfR,MAAf,U","file":"static/js/main.9ded3244.chunk.js","sourcesContent":["// import Cookies from \"js-cookie\";\r\n\r\nconst getQueryVariable = (variable) => {\r\n  const query = decodeURIComponent(variable);\r\n  var vars = query.split(\"&\");\r\n  let queryJson = {};\r\n  for (var i = 0; i < vars.length; i++) {\r\n    var pair = vars[i].split(\"=\");\r\n    queryJson[pair[0]] = pair[1];\r\n  }\r\n  return queryJson;\r\n};\r\n\r\nexport default class CookieService {\r\n  static getSiteLogin = () => {\r\n    // return Cookies.get(\"site_login_v2\", {\r\n    //   domain: \"tradingpaints.com\",\r\n    // });\r\n    return getQueryVariable(\r\n      \"usr%3D20210226%26hash%3D5d9c68c6c50ed3d02a2fcf54f63993b6\"\r\n    );\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./messageReducer\";\r\n// import BasePaintService from \"services/basePaintService\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"basePaintReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      let list = action.payload;\r\n      for (let item of list) {\r\n        if (typeof item.base_data === \"string\") {\r\n          item.base_data = JSON.parse(item.base_data);\r\n        }\r\n      }\r\n      state.list = list;\r\n    },\r\n    insertToList: (state, action) => {\r\n      let basepaint = action.payload;\r\n      if (typeof basepaint.base_data === \"string\") {\r\n        basepaint.base_data = JSON.parse(basepaint.base_data);\r\n      }\r\n      state.list.push(basepaint);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let basePaintList = [...state.list];\r\n      let foundIndex = basePaintList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        basePaintList[foundIndex] = action.payload;\r\n        state.list = basePaintList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  insertToList,\r\n  updateListItem,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  msg: null,\r\n  type: \"error\", //'success', 'warning'\r\n  timeout: -1,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"messageReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setMessage: (state, action) => {\r\n      state.msg = action.payload.message;\r\n      state.type = action.payload.type || \"error\";\r\n      state.timeout = action.payload.timeout || 3000;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setMessage } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Root = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 60px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Root>\r\n      <CircularProgress m={2} color=\"secondary\" />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class FontService extends BaseAPIService {\r\n  static getFontList = async () => {\r\n    return this.requestWithAuth(`/font`, \"GET\");\r\n  };\r\n  static getFontByID = async (id) => {\r\n    return this.requestWithAuth(`/font/${id}`, \"GET\");\r\n  };\r\n  static createFont = async (payload) => {\r\n    return this.requestWithAuth(`/font`, \"POST\", payload);\r\n  };\r\n  static updateFont = async (id, payload) => {\r\n    return this.requestWithAuth(`/font/${id}`, \"PUT\", payload);\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport FontService from \"services/fontService\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  loadedList: [],\r\n  current: null,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"fontReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    insertToList: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    concatList: (state, action) => {\r\n      state.list = state.list.concat(action.payload);\r\n    },\r\n    setLoadedList: (state, action) => {\r\n      state.loadedList = action.payload;\r\n    },\r\n    insertToLoadedList: (state, action) => {\r\n      state.loadedList = state.loadedList.concat(action.payload);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let overlayList = [...state.list];\r\n      let foundIndex = overlayList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        overlayList[foundIndex] = action.payload;\r\n        state.list = overlayList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  insertToList,\r\n  concatList,\r\n  updateListItem,\r\n  setLoadedList,\r\n  insertToLoadedList,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getFontList = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const fonts = await FontService.getFontList();\r\n    dispatch(setList(fonts));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class UploadService extends BaseAPIService {\r\n  static getUploadList = async () => {\r\n    return this.requestWithAuth(`/upload`, \"GET\");\r\n  };\r\n  static getUploadListByUserID = async (userID) => {\r\n    return this.requestWithAuth(`/upload/byUserID/${userID}`, \"GET\");\r\n  };\r\n  static getUploadByID = async (id) => {\r\n    return this.requestWithAuth(`/upload/${id}`, \"GET\");\r\n  };\r\n  static createUpload = async (payload) => {\r\n    return this.requestWithAuth(`/upload`, \"POST\", payload);\r\n  };\r\n  static updateUpload = async (id, payload) => {\r\n    return this.requestWithAuth(`/upload/${id}`, \"PUT\", payload);\r\n  };\r\n  static deleteUpload = async (id, deleteFromAll) => {\r\n    return this.requestWithAuth(`/upload/${id}`, \"DELETE\", {\r\n      deleteFromAll,\r\n    });\r\n  };\r\n  static uploadFiles = async (formData) => {\r\n    return this.requestWithAuth(\r\n      `/upload/uploadFiles`,\r\n      \"POST\",\r\n      formData,\r\n      0,\r\n      \"multipart/form-data\"\r\n    );\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport UploadService from \"services/uploadService\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n  initialized: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"uploadReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n      state.initialized = true;\r\n    },\r\n    insertToList: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    concatList: (state, action) => {\r\n      state.list = state.list.concat(action.payload);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let list = [...state.list];\r\n      let foundIndex = list.findIndex((item) => item.id === action.payload.id);\r\n      if (foundIndex !== -1) {\r\n        list[foundIndex] = action.payload;\r\n        state.list = list;\r\n      }\r\n    },\r\n    deleteListItem: (state, action) => {\r\n      let list = [...state.list];\r\n      let foundIndex = list.findIndex((item) => item.id === action.payload.id);\r\n      if (foundIndex !== -1) {\r\n        list.splice(foundIndex, 1);\r\n        state.list = list;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  concatList,\r\n  insertToList,\r\n  updateListItem,\r\n  deleteListItem,\r\n} = slice.actions;\r\n\r\nexport const getUploadListByUserID = (userID) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const uploads = await UploadService.getUploadListByUserID(userID);\r\n    dispatch(setList(uploads));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const uploadFiles = (userID, schemeID, files) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    let formData = new FormData();\r\n    formData.append(\"userID\", userID);\r\n    formData.append(\"schemeID\", schemeID);\r\n    let fileNames = [];\r\n    for (let file of files) {\r\n      formData.append(\"files\", file);\r\n      fileNames.push(file.name);\r\n    }\r\n    formData.append(\"fileNames\", JSON.stringify(fileNames));\r\n\r\n    const uploads = await UploadService.uploadFiles(formData);\r\n    dispatch(concatList(uploads));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const deleteUpload = (upload, deleteFromAll) => async (dispatch) => {\r\n  // dispatch(setLoading(true));\r\n\r\n  try {\r\n    dispatch(deleteListItem(upload));\r\n    await UploadService.deleteUpload(upload.id, deleteFromAll);\r\n    dispatch(\r\n      setMessage({\r\n        message: \"Deleted your uploaded file successfully!\",\r\n        type: \"success\",\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  // dispatch(setLoading(false));\r\n};\r\n\r\nexport default slice.reducer;\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class OverlayService extends BaseAPIService {\r\n  static getOverlayList = async () => {\r\n    return this.requestWithAuth(`/overlay`, \"GET\");\r\n  };\r\n  static getOverlayByID = async (id) => {\r\n    return this.requestWithAuth(`/overlay/${id}`, \"GET\");\r\n  };\r\n  static createOverlay = async (payload) => {\r\n    return this.requestWithAuth(`/overlay`, \"POST\", payload);\r\n  };\r\n  static updateOverlay = async (id, payload) => {\r\n    return this.requestWithAuth(`/overlay/${id}`, \"PUT\", payload);\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport OverlayService from \"services/overlayService\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"overlayReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    insertToList: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    concatList: (state, action) => {\r\n      state.list = state.list.concat(action.payload);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let overlayList = [...state.list];\r\n      let foundIndex = overlayList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        overlayList[foundIndex] = action.payload;\r\n        state.list = overlayList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  insertToList,\r\n  concatList,\r\n  updateListItem,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getOverlayList = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const overlays = await OverlayService.getOverlayList();\r\n    dispatch(setList(overlays));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class LogoService extends BaseAPIService {\r\n  static getLogoList = async () => {\r\n    return this.requestWithAuth(`/logo`, \"GET\");\r\n  };\r\n  static getLogoByID = async (id) => {\r\n    return this.requestWithAuth(`/logo/${id}`, \"GET\");\r\n  };\r\n  static createLogo = async (payload) => {\r\n    return this.requestWithAuth(`/logo`, \"POST\", payload);\r\n  };\r\n  static updateLogo = async (id, payload) => {\r\n    return this.requestWithAuth(`/logo/${id}`, \"PUT\", payload);\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport LogoService from \"services/logoService\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"logoReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    insertToList: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    concatList: (state, action) => {\r\n      state.list = state.list.concat(action.payload);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let overlayList = [...state.list];\r\n      let foundIndex = overlayList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        overlayList[foundIndex] = action.payload;\r\n        state.list = overlayList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  insertToList,\r\n  concatList,\r\n  updateListItem,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const getLogoList = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const overlays = await LogoService.getLogoList();\r\n    dispatch(setList(overlays));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Helmet from \"react-helmet\";\r\n\r\nimport { Button as MuiButton, Typography } from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  padding: ${(props) => props.theme.spacing(6)}px;\r\n  text-align: center;\r\n  background: transparent;\r\n\r\n  ${(props) => props.theme.breakpoints.up(\"md\")} {\r\n    padding: ${(props) => props.theme.spacing(10)}px;\r\n  }\r\n`;\r\n\r\nfunction Page404() {\r\n  return (\r\n    <Wrapper>\r\n      <Helmet title=\"404 Error\" />\r\n      <Typography component=\"h1\" variant=\"h1\" align=\"center\" gutterBottom>\r\n        404\r\n      </Typography>\r\n      <Typography component=\"h2\" variant=\"h5\" align=\"center\" gutterBottom>\r\n        Page not found.\r\n      </Typography>\r\n      <Typography component=\"h2\" variant=\"body1\" align=\"center\" gutterBottom>\r\n        The page you are looking for might have been removed.\r\n      </Typography>\r\n\r\n      <Button\r\n        component={Link}\r\n        to=\"/\"\r\n        variant=\"contained\"\r\n        color=\"secondary\"\r\n        mt={2}\r\n      >\r\n        Return to website\r\n      </Button>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Page404;\r\n","import axios from \"axios\";\r\nimport https from \"https\";\r\nimport config from \"config\";\r\n\r\nimport CookieService from \"./cookieService\";\r\nconst baseURL = config.apiURL || \"\";\r\n\r\nexport default class BaseAPIService {\r\n  static request = (\r\n    url,\r\n    method,\r\n    data,\r\n    timeout = 0,\r\n    contentType = \"application/json\"\r\n  ) => {\r\n    return axios\r\n      .request({\r\n        url: baseURL + url,\r\n        headers: {\r\n          \"Content-Type\": contentType,\r\n        },\r\n        method,\r\n        data,\r\n        timeout,\r\n        httpsAgent: new https.Agent({\r\n          rejectUnauthorized: false,\r\n        }),\r\n      })\r\n      .then((res) => res.data);\r\n  };\r\n\r\n  static requestWithAuth = (\r\n    url,\r\n    method,\r\n    data,\r\n    timeout = 0,\r\n    contentType = \"application/json\"\r\n  ) => {\r\n    return axios\r\n      .request({\r\n        url: baseURL + url,\r\n        headers: {\r\n          Authorization: JSON.stringify(CookieService.getSiteLogin()),\r\n          \"Content-Type\": contentType,\r\n        },\r\n        method,\r\n        data,\r\n        timeout,\r\n        httpsAgent: new https.Agent({\r\n          rejectUnauthorized: false,\r\n        }),\r\n      })\r\n      .then((res) => res.data);\r\n  };\r\n}\r\n","import merge from \"deepmerge\";\r\nimport { green, grey, indigo, red } from \"@material-ui/core/colors\";\r\nimport { THEMES } from \"constant\";\r\n\r\nconst customBlue = {\r\n  50: \"#e9f0fb\",\r\n  100: \"#c8daf4\",\r\n  200: \"#a3c1ed\",\r\n  300: \"#7ea8e5\",\r\n  400: \"#6395e0\",\r\n  500: \"#4782da\",\r\n  600: \"#407ad6\",\r\n  700: \"#376fd0\",\r\n  800: \"#2f65cb\",\r\n  900: \"#2052c2 \",\r\n};\r\n\r\nconst defaultVariant = {\r\n  name: THEMES.DEFAULT,\r\n  palette: {\r\n    type: \"light\",\r\n    primary: {\r\n      main: customBlue[700],\r\n      contrastText: \"#FFF\",\r\n    },\r\n    secondary: {\r\n      main: \"#f48fb1\",\r\n      contrastText: \"#FFF\",\r\n    },\r\n    background: {\r\n      default: \"#F7F9FC\",\r\n      paper: \"#FFF\",\r\n    },\r\n    text: {\r\n      primary: \"#FFF\",\r\n      secondary: \"#8A8A8A\",\r\n    },\r\n  },\r\n  header: {\r\n    color: grey[500],\r\n    background: \"#FFF\",\r\n    search: {\r\n      color: grey[800],\r\n    },\r\n    indicator: {\r\n      background: customBlue[600],\r\n    },\r\n  },\r\n  footer: {\r\n    color: grey[500],\r\n    background: \"#FFF\",\r\n  },\r\n  sidebar: {\r\n    color: grey[200],\r\n    background: \"#233044\",\r\n    header: {\r\n      color: grey[200],\r\n      background: \"#233044\",\r\n      brand: {\r\n        color: customBlue[500],\r\n      },\r\n    },\r\n    footer: {\r\n      color: grey[200],\r\n      background: \"#1E2A38\",\r\n      online: {\r\n        background: green[500],\r\n      },\r\n    },\r\n    badge: {\r\n      color: \"#FFF\",\r\n      background: customBlue[500],\r\n    },\r\n  },\r\n};\r\n\r\nconst darkVariant = merge(defaultVariant, {\r\n  name: THEMES.DARK,\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: customBlue[200],\r\n      contrastText: \"#FFF\",\r\n    },\r\n    error: {\r\n      main: red[300],\r\n      contrastText: \"#FFF\",\r\n    },\r\n    background: {\r\n      default: \"#1B2635\",\r\n      paper: \"#233044\",\r\n    },\r\n    text: {\r\n      primary: \"rgba(255, 255, 255, 0.95)\",\r\n      secondary: \"rgba(255, 255, 255, 0.5)\",\r\n    },\r\n  },\r\n  header: {\r\n    color: grey[300],\r\n    background: \"#1B2635\",\r\n    search: {\r\n      color: grey[200],\r\n    },\r\n  },\r\n  footer: {\r\n    color: grey[300],\r\n    background: \"#233044\",\r\n  },\r\n});\r\n\r\nconst lightVariant = merge(defaultVariant, {\r\n  name: THEMES.LIGHT,\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n  header: {\r\n    color: grey[200],\r\n    background: customBlue[800],\r\n    search: {\r\n      color: grey[100],\r\n    },\r\n    indicator: {\r\n      background: red[700],\r\n    },\r\n  },\r\n  sidebar: {\r\n    color: grey[900],\r\n    background: \"#FFF\",\r\n    header: {\r\n      color: \"#FFF\",\r\n      background: customBlue[800],\r\n      brand: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n    footer: {\r\n      color: grey[800],\r\n      background: \"#F7F7F7\",\r\n      online: {\r\n        background: green[500],\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst blueVariant = merge(defaultVariant, {\r\n  name: THEMES.BLUE,\r\n  palette: {\r\n    type: \"light\",\r\n  },\r\n  sidebar: {\r\n    color: \"#FFF\",\r\n    background: customBlue[700],\r\n    header: {\r\n      color: \"#FFF\",\r\n      background: customBlue[800],\r\n      brand: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n    footer: {\r\n      color: \"#FFF\",\r\n      background: customBlue[800],\r\n      online: {\r\n        background: \"#FFF\",\r\n      },\r\n    },\r\n    badge: {\r\n      color: \"#000\",\r\n      background: \"#FFF\",\r\n    },\r\n  },\r\n});\r\n\r\nconst greenVariant = merge(defaultVariant, {\r\n  name: THEMES.GREEN,\r\n  palette: {\r\n    primary: {\r\n      main: green[800],\r\n      contrastText: \"#FFF\",\r\n    },\r\n    secondary: {\r\n      main: green[500],\r\n      contrastText: \"#FFF\",\r\n    },\r\n  },\r\n  header: {\r\n    indicator: {\r\n      background: green[600],\r\n    },\r\n  },\r\n  sidebar: {\r\n    color: \"#FFF\",\r\n    background: green[700],\r\n    header: {\r\n      color: \"#FFF\",\r\n      background: green[800],\r\n      brand: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n    footer: {\r\n      color: \"#FFF\",\r\n      background: green[800],\r\n      online: {\r\n        background: \"#FFF\",\r\n      },\r\n    },\r\n    badge: {\r\n      color: \"#000\",\r\n      background: \"#FFF\",\r\n    },\r\n  },\r\n});\r\n\r\nconst indigoVariant = merge(defaultVariant, {\r\n  name: THEMES.INDIGO,\r\n  palette: {\r\n    primary: {\r\n      main: indigo[600],\r\n      contrastText: \"#FFF\",\r\n    },\r\n    secondary: {\r\n      main: indigo[400],\r\n      contrastText: \"#FFF\",\r\n    },\r\n  },\r\n  header: {\r\n    indicator: {\r\n      background: indigo[600],\r\n    },\r\n  },\r\n  sidebar: {\r\n    color: \"#FFF\",\r\n    background: indigo[700],\r\n    header: {\r\n      color: \"#FFF\",\r\n      background: indigo[800],\r\n      brand: {\r\n        color: \"#FFFFFF\",\r\n      },\r\n    },\r\n    footer: {\r\n      color: \"#FFF\",\r\n      background: indigo[800],\r\n      online: {\r\n        background: \"#FFF\",\r\n      },\r\n    },\r\n    badge: {\r\n      color: \"#000\",\r\n      background: \"#FFF\",\r\n    },\r\n  },\r\n});\r\n\r\nconst variants = [\r\n  defaultVariant,\r\n  darkVariant,\r\n  lightVariant,\r\n  blueVariant,\r\n  greenVariant,\r\n  indigoVariant,\r\n];\r\n\r\nexport default variants;\r\n","const typography = {\r\n  fontFamily: [\r\n    \"Inter\",\r\n    \"-apple-system\",\r\n    \"BlinkMacSystemFont\",\r\n    '\"Segoe UI\"',\r\n    \"Roboto\",\r\n    '\"Helvetica Neue\"',\r\n    \"Arial\",\r\n    \"sans-serif\",\r\n    '\"Apple Color Emoji\"',\r\n    '\"Segoe UI Emoji\"',\r\n    '\"Segoe UI Symbol\"',\r\n  ].join(\",\"),\r\n  fontSize: 13,\r\n  fontWeightLight: 300,\r\n  fontWeightRegular: 400,\r\n  fontWeightMedium: 500,\r\n  fontWeightBold: 600,\r\n  h1: {\r\n    fontSize: \"2rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.25,\r\n  },\r\n  h2: {\r\n    fontSize: \"1.75rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.25,\r\n  },\r\n  h3: {\r\n    fontSize: \"1.5rem\",\r\n    fontWeight: 600,\r\n    lineHeight: 1.25,\r\n  },\r\n  h4: {\r\n    fontSize: \"1.125rem\",\r\n    fontWeight: 500,\r\n    lineHeight: 1.25,\r\n  },\r\n  h5: {\r\n    fontSize: \"1.0625rem\",\r\n    fontWeight: 500,\r\n    lineHeight: 1.25,\r\n  },\r\n  caption: {\r\n    textTransform: \"uppercase\",\r\n    fontSize: \"0.7rem\",\r\n  },\r\n  h6: {\r\n    fontSize: \"1rem\",\r\n    fontWeight: 500,\r\n    lineHeight: 1.25,\r\n  },\r\n  subtitle1: {\r\n    fontSize: \"1rem\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  subtitle2: {\r\n    fontSize: \"0.7rem\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  body1: {\r\n    fontSize: \"1rem\",\r\n    lineHeight: 1.75,\r\n  },\r\n  body2: {\r\n    fontSize: 12,\r\n  },\r\n  button: {\r\n    textTransform: \"none\",\r\n  },\r\n};\r\n\r\nexport default typography;\r\n","const overrides = {\r\n  MuiCssBaseline: {\r\n    \"@global\": {\r\n      html: {\r\n        WebkitFontSmoothing: \"auto\",\r\n      },\r\n      \"::-webkit-scrollbar-track\": {\r\n        boxShadow: \"inset 0 0 5px #0f0f0f\",\r\n        backgroundColor: \"#202121\",\r\n      },\r\n      \"::-webkit-scrollbar\": {\r\n        backgroundColor: \"#202121\",\r\n      },\r\n      \"::-webkit-scrollbar:vertical\": {\r\n        width: \"10px\",\r\n      },\r\n      \"::-webkit-scrollbar:horizontal\": {\r\n        height: \"10px\",\r\n      },\r\n      \"::-webkit-scrollbar-thumb\": {\r\n        backgroundColor: \"#37393a\",\r\n      },\r\n      \"::-webkit-scrollbar-corner\": {\r\n        backgroundColor: \"#37393a\",\r\n      },\r\n    },\r\n  },\r\n  MuiCard: {\r\n    root: {\r\n      borderRadius: \"6px\",\r\n      boxShadow:\r\n        \"rgba(50, 50, 93, 0.025) 0px 2px 5px -1px, rgba(0, 0, 0, 0.05) 0px 1px 3px -1px\",\r\n    },\r\n  },\r\n  MuiCardHeader: {\r\n    action: {\r\n      marginTop: \"-4px\",\r\n      marginRight: \"-4px\",\r\n    },\r\n  },\r\n  MuiPickersDay: {\r\n    day: {\r\n      fontWeight: \"300\",\r\n    },\r\n  },\r\n  MuiPickersYear: {\r\n    root: {\r\n      height: \"64px\",\r\n    },\r\n  },\r\n  MuiPickersCalendar: {\r\n    transitionContainer: {\r\n      marginTop: \"6px\",\r\n    },\r\n  },\r\n  MuiPickersCalendarHeader: {\r\n    iconButton: {\r\n      backgroundColor: \"transparent\",\r\n      \"& > *\": {\r\n        backgroundColor: \"transparent\",\r\n      },\r\n    },\r\n    switchHeader: {\r\n      marginTop: \"2px\",\r\n      marginBottom: \"4px\",\r\n    },\r\n  },\r\n  MuiPickersClock: {\r\n    container: {\r\n      margin: `32px 0 4px`,\r\n    },\r\n  },\r\n  MuiPickersClockNumber: {\r\n    clockNumber: {\r\n      left: `calc(50% - 16px)`,\r\n      width: \"32px\",\r\n      height: \"32px\",\r\n    },\r\n  },\r\n  MuiPickerDTHeader: {\r\n    dateHeader: {\r\n      \"& h4\": {\r\n        fontSize: \"2.125rem\",\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n    timeHeader: {\r\n      \"& h3\": {\r\n        fontSize: \"3rem\",\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n  },\r\n  MuiPickersTimePicker: {\r\n    hourMinuteLabel: {\r\n      \"& h2\": {\r\n        fontSize: \"3.75rem\",\r\n        fontWeight: 300,\r\n      },\r\n    },\r\n  },\r\n  MuiPickersToolbar: {\r\n    toolbar: {\r\n      \"& h4\": {\r\n        fontSize: \"2.125rem\",\r\n        fontWeight: 400,\r\n      },\r\n    },\r\n  },\r\n  MuiChip: {\r\n    root: {\r\n      borderRadius: \"6px\",\r\n    },\r\n  },\r\n  // MuiToggleButton: {\r\n  //   root: {\r\n  //     color: \"#8A8A8A\",\r\n  //     \"&:hover\": {\r\n  //       color: \"white\",\r\n  //     },\r\n  //     \"&.Mui-selected\": {\r\n  //       color: \"#8A8A8A\",\r\n  //       background: \"white\",\r\n  //     },\r\n  //     \"&.Mui-selected:hover\": {\r\n  //       color: \"#8A8A8A\",\r\n  //       background: \"white !important\",\r\n  //     },\r\n  //   },\r\n  // },\r\n  MuiDivider: {\r\n    root: {\r\n      backgroundColor: \"#8A8A8A\",\r\n    },\r\n  },\r\n  // MuiInputBase: {\r\n  //   input: {\r\n  //     color: \"white\",\r\n  //     borderBottom: \"1px solid #8A8A8A\",\r\n  //     width: \"40px\",\r\n  //   },\r\n  // },\r\n  MuiPaper: {\r\n    root: {\r\n      backgroundColor: \"#444\",\r\n    },\r\n  },\r\n  MuiInput: {\r\n    underline: {\r\n      \"&:before\": {\r\n        borderBottom: \"0px !important\",\r\n      },\r\n      \"&:after\": {\r\n        borderBottom: \"0px !important\",\r\n      },\r\n      \"&:hover:before\": {\r\n        borderBottom: \"0px !important\",\r\n      },\r\n    },\r\n  },\r\n  MuiOutlinedInput: {\r\n    input: {\r\n      padding: \"6px 14px\",\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  MuiAccordion: {\r\n    rounded: {\r\n      borderRadius: \"6px\",\r\n    },\r\n    root: {\r\n      \"&:before\": {\r\n        display: \"none\",\r\n      },\r\n      margin: \"4px 0 !important\",\r\n    },\r\n  },\r\n  MuiAccordionSummary: {\r\n    root: {\r\n      minHeight: \"50px !important\",\r\n      padding: \"0 12px\",\r\n    },\r\n    content: {\r\n      margin: \"8px 0 !important\",\r\n    },\r\n  },\r\n  MuiAccordionDetails: {\r\n    root: {\r\n      padding: \"4px 12px 12px\",\r\n    },\r\n  },\r\n};\r\n\r\nexport default overrides;\r\n","const breakpoints = {\r\n  values: {\r\n    xs: 0,\r\n    sm: 600,\r\n    md: 960,\r\n    lg: 1280,\r\n    xl: 1440,\r\n  },\r\n};\r\n\r\nexport default breakpoints;\r\n","const props = {\r\n  MuiButtonBase: {\r\n    disableRipple: true,\r\n  },\r\n  MuiCardHeader: {\r\n    titleTypographyProps: { variant: \"h6\" },\r\n  },\r\n};\r\n\r\nexport default props;\r\n","function createShadow() {\r\n  return `0px 1px 2px 0px rgba(0, 0, 0, 0.05);`;\r\n}\r\n\r\nconst shadows = [\r\n  \"none\",\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n  createShadow(),\r\n];\r\n\r\nexport default shadows;\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\nimport variants from \"./variants\";\r\nimport typography from \"./typography\";\r\nimport overrides from \"./overrides\";\r\nimport breakpoints from \"./breakpoints\";\r\nimport props from \"./props\";\r\nimport shadows from \"./shadows\";\r\n\r\nconst createTheme = (name) => {\r\n  let themeConfig = variants.find((variant) => variant.name === name);\r\n\r\n  if (!themeConfig) {\r\n    console.warn(new Error(`The theme ${name} is not valid`));\r\n    themeConfig = variants[0];\r\n  }\r\n\r\n  return createMuiTheme(\r\n    {\r\n      spacing: 4,\r\n      breakpoints: breakpoints,\r\n      overrides: overrides,\r\n      props: props,\r\n      typography: typography,\r\n      shadows: shadows,\r\n      palette: themeConfig.palette,\r\n    },\r\n    {\r\n      name: themeConfig.name,\r\n      header: themeConfig.header,\r\n      footer: themeConfig.footer,\r\n      sidebar: themeConfig.sidebar,\r\n    }\r\n  );\r\n};\r\n\r\nexport default createTheme;\r\n","import React from \"react\";\r\n\r\nimport ScreenLoader from \"./ScreenLoader\";\r\n\r\nexport default function asyncComponent(importComponent) {\r\n  class AsyncComponent extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        component: null,\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      const { default: component } = await importComponent();\r\n\r\n      this.setState({\r\n        component: component,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n\r\n      return C ? <C {...this.props} /> : <ScreenLoader />;\r\n    }\r\n  }\r\n\r\n  return AsyncComponent;\r\n}\r\n","import async from \"../components/Async\";\r\n\r\n// Guards\r\n// const AuthGuard = async(() => import(\"../components/AuthGuard\"));\r\n\r\n// Auth components\r\nconst Page404 = async(() => import(\"../pages/auth/Page404\"));\r\nconst Page500 = async(() => import(\"../pages/auth/Page500\"));\r\n\r\n// Main components\r\nconst Scheme = async(() => import(\"../pages/scheme\"));\r\nconst Project = async(() => import(\"../pages/project\"));\r\n\r\nconst authRoutes = {\r\n  id: \"Auth\",\r\n  path: \"/auth\",\r\n  //   icon: <Users />,\r\n  children: [\r\n    {\r\n      path: \"/auth/404\",\r\n      name: \"404 Page\",\r\n      component: Page404,\r\n    },\r\n    {\r\n      path: \"/auth/500\",\r\n      name: \"500 Page\",\r\n      component: Page500,\r\n    },\r\n  ],\r\n  component: null,\r\n};\r\n\r\nconst projectRoute = {\r\n  id: \"Project\",\r\n  path: \"/\",\r\n  name: \"Project\",\r\n  component: Project,\r\n  //   guard: AuthGuard,\r\n};\r\n\r\nconst schemeRoute = {\r\n  id: \"Scheme\",\r\n  path: \"/scheme/:id\",\r\n  name: \"scheme\",\r\n  component: Scheme,\r\n  //   guard: AuthGuard,\r\n};\r\n\r\n// Routes using the Dashboard layout\r\nexport const mainLayoutRoutes = [projectRoute, schemeRoute];\r\n\r\n// Routes using the Auth layout\r\nexport const authLayoutRoutes = [authRoutes];\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class AuthService extends BaseAPIService {\r\n  static signIn = async (payload) => {\r\n    return this.request(`/auth/login`, \"POST\", payload);\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport AuthService from \"services/authService\";\r\nimport CookieService from \"services/cookieService\";\r\nimport { setMessage } from \"./messageReducer\";\r\n\r\nconst initialState = {\r\n  user: undefined,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"authReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setUser: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setUser, setLoading } = slice.actions;\r\n\r\nexport const signInWithCookie = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const response = await AuthService.signIn(CookieService.getSiteLogin());\r\n    dispatch(\r\n      setUser({\r\n        id: response.id,\r\n        email: response.email,\r\n        name: response.name,\r\n      })\r\n    );\r\n  } catch (error) {\r\n    dispatch(setMessage({ message: error.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport default slice.reducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled, { createGlobalStyle } from \"styled-components/macro\";\r\nimport { CssBaseline, withWidth } from \"@material-ui/core\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport { signInWithCookie } from \"redux/reducers/authReducer\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,\r\n  body,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    background: ${(props) => props.theme.palette.background.default};\r\n  }\r\n\r\n  .MuiCardHeader-action .MuiIconButton-root {\r\n    padding: 4px;\r\n    width: 28px;\r\n    height: 28px;\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  position: relative;\r\n  display: block;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst Main = ({ children, routes, width }) => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const authLoading = useSelector((state) => state.authReducer.loading);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      dispatch(signInWithCookie());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <Root>\r\n      <CssBaseline />\r\n      <GlobalStyle />\r\n      {authLoading ? <ScreenLoader /> : children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default withWidth()(Main);\r\n","import React from \"react\";\r\nimport styled, { createGlobalStyle } from \"styled-components/macro\";\r\nimport { CssBaseline } from \"@material-ui/core\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html,\r\n  body,\r\n  #root {\r\n    height: 100%;\r\n  }\r\n  body {\r\n    background: ${(props) => props.theme.palette.background.default};\r\n  }\r\n`;\r\n\r\nconst Root = styled.div`\r\n  max-width: 520px;\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 100%;\r\n`;\r\n\r\nconst Auth = ({ children }) => {\r\n  return (\r\n    <Root>\r\n      <CssBaseline />\r\n      <GlobalStyle />\r\n      {children}\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport { mainLayoutRoutes, authLayoutRoutes } from \"./index\";\r\n\r\nimport MainLayout from \"../layouts/Main\";\r\nimport AuthLayout from \"../layouts/Auth\";\r\nimport Page404 from \"../pages/auth/Page404\";\r\n\r\nconst childRoutes = (Layout, routes) =>\r\n  routes.map(({ component: Component, guard, children, path }, index) => {\r\n    const Guard = guard || React.Fragment;\r\n\r\n    return children ? (\r\n      children.map((element, index) => {\r\n        const Guard = element.guard || React.Fragment;\r\n\r\n        return (\r\n          <Route\r\n            key={index}\r\n            path={element.path}\r\n            exact\r\n            render={(props) => (\r\n              <Guard>\r\n                <Layout>\r\n                  <element.component {...props} />\r\n                </Layout>\r\n              </Guard>\r\n            )}\r\n          />\r\n        );\r\n      })\r\n    ) : Component ? (\r\n      <Route\r\n        key={index}\r\n        path={path}\r\n        exact\r\n        render={(props) => (\r\n          <Guard>\r\n            <Layout>\r\n              <Component {...props} />\r\n            </Layout>\r\n          </Guard>\r\n        )}\r\n      />\r\n    ) : null;\r\n  });\r\n\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      {childRoutes(MainLayout, mainLayoutRoutes)}\r\n      {childRoutes(AuthLayout, authLayoutRoutes)}\r\n      <Route\r\n        render={() => (\r\n          <AuthLayout>\r\n            <Page404 />\r\n          </AuthLayout>\r\n        )}\r\n      />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Helmet } from \"react-helmet\";\nimport DateFnsUtils from \"@date-io/date-fns\";\n\nimport { ThemeProvider } from \"styled-components/macro\";\n\nimport { MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport {\n  StylesProvider,\n  ThemeProvider as MuiThemeProvider,\n} from \"@material-ui/core/styles\";\n\nimport createTheme from \"./theme\";\nimport Routes from \"./routes/Routes\";\n\nimport { setMessage } from \"redux/reducers/messageReducer\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const message = useSelector((state) => state.messageReducer);\n  const theme = useSelector((state) => state.themeReducer);\n\n  const handleClose = useCallback(\n    (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n      dispatch(setMessage({ message: null }));\n    },\n    [dispatch]\n  );\n\n  return (\n    <React.Fragment>\n      <Helmet\n        titleTemplate=\"%s · Paint Builder · Trading Paints\"\n        defaultTitle=\"Paint Builder · Trading Paints\"\n      />\n      <StylesProvider injectFirst>\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\n          <MuiThemeProvider theme={createTheme(theme.currentTheme)}>\n            <ThemeProvider theme={createTheme(theme.currentTheme)}>\n              {message.msg ? (\n                <Snackbar\n                  open={message.msg ? true : false}\n                  autoHideDuration={5000}\n                  onClose={handleClose}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                >\n                  <Alert onClose={handleClose} severity={message.type}>\n                    {message.msg}\n                  </Alert>\n                </Snackbar>\n              ) : (\n                <></>\n              )}\n              <Routes />\n            </ThemeProvider>\n          </MuiThemeProvider>\n        </MuiPickersUtilsProvider>\n      </StylesProvider>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  validateStatus: (status) => status < 500,\r\n});\r\n","import AxiosMockAdapter from \"axios-mock-adapter\";\r\nimport axios from \"./axios\";\r\n\r\nconst axiosMockAdapter = new AxiosMockAdapter(axios, {\r\n  delayResponse: 0,\r\n});\r\n\r\nexport default axiosMockAdapter;\r\n","import mock from \"../utils/mock\";\r\n\r\nconst userData = {\r\n  id: \"12345\",\r\n  email: \"demo@bootlab.io\",\r\n  name: \"Lucy Lavender\",\r\n};\r\n\r\nmock.onPost(\"/api/auth/sign-in\").reply((config) => {\r\n  const { email, password } = JSON.parse(config.data);\r\n\r\n  if (email === \"demo@bootlab.io\" && password === \"unsafepassword\") {\r\n    return [200, userData];\r\n  }\r\n\r\n  return [401, { message: \"Please check your email and password\" }];\r\n});\r\n\r\nmock.onPost(\"/api/auth/sign-up\").reply(() => {\r\n  return [200, userData];\r\n});\r\n\r\nmock.onPost(\"/api/auth/reset-password\").reply(() => {\r\n  return [200, userData];\r\n});\r\n","import { createBrowserHistory as createHistory } from \"history\";\r\n\r\nconst history = createHistory();\r\n\r\nexport default history;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { THEMES } from \"constant\";\r\n\r\nconst initialState = {\r\n  currentTheme: THEMES.DARK,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"themeReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setTheme: (state, action) => {\r\n      state.currentTheme = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setTheme } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport { connectRouter } from \"connected-react-router\";\r\n\r\nimport authReducer from \"./authReducer\";\r\nimport boardReducer from \"./boardReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport themeReducer from \"./themeReducer\";\r\nimport schemeReducer from \"./schemeReducer\";\r\nimport carMakeReducer from \"./carMakeReducer\";\r\nimport basePaintReducer from \"./basePaintReducer\";\r\nimport layerReducer from \"./layerReducer\";\r\nimport overlayReducer from \"./overlayReducer\";\r\nimport logoReducer from \"./logoReducer\";\r\nimport uploadReducer from \"./uploadReducer\";\r\nimport fontReducer from \"./fontReducer\";\r\n\r\nconst reducers = (history) =>\r\n  combineReducers({\r\n    router: connectRouter(history),\r\n    authReducer,\r\n    boardReducer,\r\n    messageReducer,\r\n    themeReducer,\r\n    schemeReducer,\r\n    carMakeReducer,\r\n    basePaintReducer,\r\n    layerReducer,\r\n    overlayReducer,\r\n    logoReducer,\r\n    uploadReducer,\r\n    fontReducer,\r\n  });\r\n\r\nexport default reducers;\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport { routerMiddleware } from \"connected-react-router\";\r\n\r\nimport config from \"config\";\r\nimport history from \"utils/history\";\r\nimport createRootReducer from \"./reducers\";\r\n\r\nconst devMode = config.env === \"development\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({ immutableCheck: false }),\r\n  routerMiddleware(history),\r\n];\r\n\r\nif (devMode) {\r\n  middleware.push(logger);\r\n}\r\n\r\nconst store = configureStore({\r\n  reducer: createRootReducer(history),\r\n  middleware,\r\n});\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./mocks\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","import _ from \"lodash\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { MouseModes } from \"constant\";\r\nimport { HistoryActions } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  deleteLayer,\r\n  insertToList as insertToLayerList,\r\n  setCurrent as setCurrentLayer,\r\n} from \"./layerReducer\";\r\nimport { updateScheme } from \"./schemeReducer\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport LayerService from \"services/layerService\";\r\n\r\nconst initialState = {\r\n  frameSize: {\r\n    width: 1024,\r\n    height: 1024,\r\n  },\r\n  paintingGuides: [\"car-mask\"],\r\n  zoom: 1,\r\n  pressedKey: null,\r\n  boardRotate: 0,\r\n  mouseMode: MouseModes.DEFAULT,\r\n  actionHistory: [],\r\n  actionHistoryIndex: -1,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"boardReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setFrameSize: (state, action) => {\r\n      state.frameSize = action.payload;\r\n    },\r\n    clearFrameSize: (state, action) => {\r\n      state.frameSize = initialState.frameSize;\r\n    },\r\n    setFrameSizeToMax: (state, action) => {\r\n      let size = action.payload;\r\n      let originSize = state.frameSize;\r\n      state.frameSize = {\r\n        width: Math.max(size.width, originSize.width),\r\n        height: Math.max(size.height, originSize.height),\r\n      };\r\n    },\r\n    setPressedKey: (state, action) => {\r\n      state.pressedKey = action.payload;\r\n    },\r\n    setBoardRotate: (state, action) => {\r\n      state.boardRotate = action.payload;\r\n    },\r\n    setPaintingGuides: (state, action) => {\r\n      state.paintingGuides = [...action.payload];\r\n    },\r\n    setZoom: (state, action) => {\r\n      state.zoom = action.payload;\r\n    },\r\n    setMouseMode: (state, action) => {\r\n      state.mouseMode = action.payload;\r\n    },\r\n    pushToActionHistory: (state, action) => {\r\n      let history = [...state.actionHistory];\r\n      history = history.slice(0, state.actionHistoryIndex + 1);\r\n      history.push(action.payload);\r\n      state.actionHistory = history;\r\n      state.actionHistoryIndex = state.actionHistory.length - 1;\r\n    },\r\n    setActionHistory: (state, action) => {\r\n      state.actionHistory = action.payload;\r\n    },\r\n    setActionHistoryIndex: (state, action) => {\r\n      state.actionHistoryIndex = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setFrameSize,\r\n  clearFrameSize,\r\n  setFrameSizeToMax,\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  setMouseMode,\r\n  pushToActionHistory,\r\n  setActionHistory,\r\n  setActionHistoryIndex,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const backUpLayer = (layerToClone) => async (dispatch, getState) => {\r\n  try {\r\n    let actionHistory = JSON.parse(\r\n      JSON.stringify(getState().boardReducer.actionHistory)\r\n    );\r\n    const layer = await LayerService.createLayer({\r\n      ..._.omit(layerToClone, [\"id\"]),\r\n      layer_data: JSON.stringify({\r\n        ...layerToClone.layer_data,\r\n      }),\r\n    });\r\n    for (let action of actionHistory) {\r\n      if (\r\n        [\r\n          HistoryActions.LAYER_ADD_ACTION,\r\n          HistoryActions.LAYER_CHANGE_ACTION,\r\n          HistoryActions.LAYER_DELETE_ACTION,\r\n        ].includes(action.action)\r\n      ) {\r\n        if (action.data && action.data.id === layerToClone.id) {\r\n          action.data.id = layer.id;\r\n        }\r\n        if (action.prev_data && action.prev_data.id === layerToClone.id) {\r\n          action.prev_data.id = layer.id;\r\n        }\r\n        if (action.next_data && action.next_data.id === layerToClone.id) {\r\n          action.next_data.id = layer.id;\r\n        }\r\n      }\r\n    }\r\n    dispatch(setActionHistory(actionHistory));\r\n    dispatch(insertToLayerList(layer));\r\n    dispatch(setCurrentLayer(layer));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n};\r\n\r\nexport const historyActionBack = () => async (dispatch, getState) => {\r\n  const actionHistory = getState().boardReducer.actionHistory;\r\n  const actionHistoryIndex = getState().boardReducer.actionHistoryIndex;\r\n\r\n  if (actionHistoryIndex > -1) {\r\n    switch (actionHistory[actionHistoryIndex].action) {\r\n      case HistoryActions.LAYER_CHANGE_ACTION:\r\n        dispatch(\r\n          updateLayer(actionHistory[actionHistoryIndex].prev_data, false)\r\n        );\r\n        break;\r\n      case HistoryActions.LAYER_ADD_ACTION:\r\n        dispatch(deleteLayer(actionHistory[actionHistoryIndex].data, false));\r\n        break;\r\n      case HistoryActions.LAYER_DELETE_ACTION:\r\n        dispatch(backUpLayer(actionHistory[actionHistoryIndex].data));\r\n        break;\r\n      case HistoryActions.SCHEME_CHANGE_ACTION:\r\n        dispatch(\r\n          updateScheme(actionHistory[actionHistoryIndex].prev_data, false)\r\n        );\r\n        break;\r\n    }\r\n    dispatch(setActionHistoryIndex(actionHistoryIndex - 1));\r\n  }\r\n};\r\n\r\nexport const historyActionUp = () => async (dispatch, getState) => {\r\n  const actionHistory = getState().boardReducer.actionHistory;\r\n  const actionHistoryIndex = getState().boardReducer.actionHistoryIndex;\r\n\r\n  if (\r\n    actionHistory.length > 0 &&\r\n    actionHistoryIndex < actionHistory.length - 1\r\n  ) {\r\n    switch (actionHistory[actionHistoryIndex + 1].action) {\r\n      case HistoryActions.LAYER_CHANGE_ACTION:\r\n        dispatch(\r\n          updateLayer(actionHistory[actionHistoryIndex + 1].next_data, false)\r\n        );\r\n        break;\r\n      case HistoryActions.LAYER_ADD_ACTION:\r\n        dispatch(backUpLayer(actionHistory[actionHistoryIndex + 1].data));\r\n        break;\r\n      case HistoryActions.LAYER_DELETE_ACTION:\r\n        dispatch(\r\n          deleteLayer(actionHistory[actionHistoryIndex + 1].data, false)\r\n        );\r\n        break;\r\n      case HistoryActions.SCHEME_CHANGE_ACTION:\r\n        dispatch(\r\n          updateScheme(actionHistory[actionHistoryIndex + 1].next_data, false)\r\n        );\r\n        break;\r\n    }\r\n    dispatch(setActionHistoryIndex(actionHistoryIndex + 1));\r\n  }\r\n};\r\n","import _ from \"lodash\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  LayerTypes,\r\n  DefaultLayer,\r\n  AllowedLayerProps,\r\n  HistoryActions,\r\n} from \"constant\";\r\nimport { parseLayer } from \"helper\";\r\nimport LayerService from \"services/layerService\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport { pushToActionHistory } from \"./boardReducer\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  hoveredJSON: {},\r\n  clipboard: null,\r\n  drawingStatus: null,\r\n  loadedStatuses: {},\r\n  loading: false,\r\n};\r\n\r\nexport const DrawingStatus = {\r\n  CLEAR_COMMAND: \"CLEAR_COMMAND\",\r\n  ADD_TO_SHAPE: \"ADD_TO_SHAPE\",\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"layerReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      let list = action.payload;\r\n      for (let item of list) {\r\n        if (typeof item.layer_data === \"string\") {\r\n          item.layer_data = JSON.parse(item.layer_data);\r\n        }\r\n      }\r\n      state.list = list;\r\n    },\r\n    insertToList: (state, action) => {\r\n      let layer = action.payload;\r\n      if (typeof layer.layer_data === \"string\") {\r\n        layer.layer_data = JSON.parse(layer.layer_data);\r\n      }\r\n      state.list.push(layer);\r\n    },\r\n    concatList: (state, action) => {\r\n      let list = action.payload;\r\n      for (let item of list) {\r\n        if (typeof item.layer_data === \"string\") {\r\n          item.layer_data = JSON.parse(item.layer_data);\r\n        }\r\n      }\r\n      state.list = state.list.concat(list);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let layerList = [...state.list];\r\n      let foundIndex = layerList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        layerList[foundIndex] = action.payload;\r\n        state.list = layerList;\r\n      }\r\n    },\r\n    deleteItemsByUploadID: (state, action) => {\r\n      let layerList = [...state.list];\r\n      state.list = layerList.filter(\r\n        (item) =>\r\n          item.layer_type !== LayerTypes.UPLOAD ||\r\n          item.layer_data.id !== action.payload\r\n      );\r\n    },\r\n    deleteListItem: (state, action) => {\r\n      let layerList = [...state.list];\r\n      let foundIndex = layerList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        layerList.splice(foundIndex, 1);\r\n        state.list = layerList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      let layer = action.payload;\r\n      if (layer && typeof layer.layer_data === \"string\") {\r\n        layer.layer_data = JSON.parse(layer.layer_data);\r\n      }\r\n      state.current = layer;\r\n    },\r\n    setHoveredJSON: (state, action) => {\r\n      state.hoveredJSON = action.payload;\r\n    },\r\n    setHoveredJSONItem: (state, action) => {\r\n      let { key, value } = action.payload;\r\n      state.hoveredJSON[key] = value;\r\n    },\r\n    setClipboard: (state, action) => {\r\n      let layer = action.payload;\r\n      if (layer && typeof layer.layer_data === \"string\") {\r\n        layer.layer_data = JSON.parse(layer.layer_data);\r\n      }\r\n      state.clipboard = layer;\r\n    },\r\n    setDrawingStatus: (state, action) => {\r\n      state.drawingStatus = action.payload;\r\n    },\r\n    setLoadedStatusAll: (state, action) => {\r\n      state.loadedStatuses = action.payload;\r\n    },\r\n    setLoadedStatus: (state, action) => {\r\n      let { key, value } = action.payload;\r\n      state.loadedStatuses[key] = value;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading } = slice.actions;\r\nexport const {\r\n  setCurrent,\r\n  setList,\r\n  setDrawingStatus,\r\n  insertToList,\r\n  concatList,\r\n  updateListItem,\r\n  deleteListItem,\r\n  setClipboard,\r\n  setHoveredJSON,\r\n  setHoveredJSONItem,\r\n  deleteItemsByUploadID,\r\n  setLoadedStatusAll,\r\n  setLoadedStatus,\r\n} = slice.actions;\r\n\r\nexport default slice.reducer;\r\n\r\nexport const createLayersFromBasePaint = (\r\n  schemeID,\r\n  basePaintItemOrIndex,\r\n  legacyMode\r\n) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    // let layer_order = order;\r\n    let baseData = legacyMode\r\n      ? basePaintItemOrIndex.base_data\r\n      : Array.from({ length: 3 }, (_, i) => i + 1); // There are 3 basepaints for each carMake.\r\n\r\n    for (let base_item of baseData) {\r\n      const layer = await LayerService.createLayer({\r\n        ...DefaultLayer,\r\n        layer_type: LayerTypes.BASE,\r\n        scheme_id: schemeID,\r\n        layer_data: legacyMode\r\n          ? JSON.stringify({\r\n              ...DefaultLayer.layer_data,\r\n              ...base_item,\r\n              id: basePaintItemOrIndex.id,\r\n              opacity: 1,\r\n            })\r\n          : JSON.stringify({\r\n              ...DefaultLayer.layer_data,\r\n              name: `Base Pattern ${base_item}`,\r\n              basePaintIndex: basePaintItemOrIndex,\r\n              img: `${base_item}.png`,\r\n              opacity: 1,\r\n            }),\r\n      });\r\n      dispatch(insertToList(layer));\r\n      dispatch(setCurrent(layer));\r\n      dispatch(\r\n        pushToActionHistory({\r\n          action: HistoryActions.LAYER_ADD_ACTION,\r\n          data: parseLayer(layer),\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createLayerFromOverlay = (schemeID, shape, position) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const boardRotate = getState().boardReducer.boardRotate;\r\n    const layer = await LayerService.createLayer({\r\n      ...DefaultLayer,\r\n      layer_type: LayerTypes.OVERLAY,\r\n      scheme_id: schemeID,\r\n      layer_data: JSON.stringify({\r\n        ...DefaultLayer.layer_data,\r\n        id: shape.id,\r\n        name: shape.name,\r\n        rotation: -boardRotate,\r\n        left: position.x,\r\n        top: position.y,\r\n        source_file: shape.overlay_file,\r\n        preview_file: shape.overlay_thumb,\r\n      }),\r\n    });\r\n    dispatch(insertToList(layer));\r\n    dispatch(setCurrent(layer));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.LAYER_ADD_ACTION,\r\n        data: parseLayer(layer),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createLayerFromLogo = (schemeID, logo, position) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const boardRotate = getState().boardReducer.boardRotate;\r\n    const layer = await LayerService.createLayer({\r\n      ...DefaultLayer,\r\n      layer_type: LayerTypes.LOGO,\r\n      scheme_id: schemeID,\r\n      layer_data: JSON.stringify({\r\n        ...DefaultLayer.layer_data,\r\n        id: logo.id,\r\n        name: logo.name,\r\n        rotation: -boardRotate,\r\n        left: position.x,\r\n        top: position.y,\r\n        source_file: logo.source_file,\r\n        preview_file: logo.preview_file,\r\n      }),\r\n    });\r\n    dispatch(insertToList(layer));\r\n    dispatch(setCurrent(layer));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.LAYER_ADD_ACTION,\r\n        data: parseLayer(layer),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createLayerFromUpload = (schemeID, upload, position) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const boardRotate = getState().boardReducer.boardRotate;\r\n    const layer = await LayerService.createLayer({\r\n      ...DefaultLayer,\r\n      layer_type: LayerTypes.UPLOAD,\r\n      scheme_id: schemeID,\r\n      layer_data: JSON.stringify({\r\n        ...DefaultLayer.layer_data,\r\n        id: upload.id,\r\n        name: upload.file_name.substring(\r\n          upload.file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n          upload.file_name.lastIndexOf(\".\")\r\n        ),\r\n        rotation: -boardRotate,\r\n        left: position.x,\r\n        top: position.y,\r\n        source_file: upload.file_name,\r\n        preview_file: upload.file_name,\r\n      }),\r\n    });\r\n    dispatch(insertToList(layer));\r\n    dispatch(setCurrent(layer));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.LAYER_ADD_ACTION,\r\n        data: parseLayer(layer),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createTextLayer = (schemeID, textObj, position) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const boardRotate = getState().boardReducer.boardRotate;\r\n    const layer = await LayerService.createLayer({\r\n      ...DefaultLayer,\r\n      layer_type: LayerTypes.TEXT,\r\n      scheme_id: schemeID,\r\n      layer_data: JSON.stringify({\r\n        ...DefaultLayer.layer_data,\r\n        ...textObj,\r\n        name: textObj.text,\r\n        rotation: textObj.rotation - boardRotate,\r\n        left: position.x,\r\n        top: position.y,\r\n      }),\r\n    });\r\n    dispatch(insertToList(layer));\r\n    dispatch(setCurrent(layer));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.LAYER_ADD_ACTION,\r\n        data: parseLayer(layer),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const cloneLayer = (\r\n  layerToClone,\r\n  samePosition = false,\r\n  pushingToHistory = true,\r\n  centerPosition\r\n) => async (dispatch) => {\r\n  if (layerToClone) {\r\n    dispatch(setLoading(true));\r\n    try {\r\n      const layer = await LayerService.createLayer({\r\n        ..._.omit(layerToClone, [\"id\"]),\r\n        layer_order: 0,\r\n        layer_data: JSON.stringify({\r\n          ...layerToClone.layer_data,\r\n          name: layerToClone.layer_data.name + \" copy\",\r\n          left: samePosition\r\n            ? layerToClone.layer_data.left\r\n            : centerPosition.x -\r\n              (layerToClone.layer_data.width\r\n                ? layerToClone.layer_data.width / 2\r\n                : 0),\r\n          top: samePosition\r\n            ? layerToClone.layer_data.top\r\n            : centerPosition.y -\r\n              (layerToClone.layer_data.height\r\n                ? layerToClone.layer_data.height / 2\r\n                : 0),\r\n        }),\r\n      });\r\n      dispatch(insertToList(layer));\r\n      dispatch(setCurrent(layer));\r\n      if (pushingToHistory)\r\n        dispatch(\r\n          pushToActionHistory({\r\n            action: HistoryActions.LAYER_ADD_ACTION,\r\n            data: parseLayer(layer),\r\n          })\r\n        );\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n    }\r\n    dispatch(setLoading(false));\r\n  }\r\n};\r\n\r\nexport const createShape = (schemeID, newlayer) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const AllowedLayerTypes =\r\n      AllowedLayerProps[LayerTypes.SHAPE][newlayer.layer_data.type];\r\n    const layer = await LayerService.createLayer({\r\n      ...DefaultLayer,\r\n      ...newlayer,\r\n      layer_type: LayerTypes.SHAPE,\r\n      scheme_id: schemeID,\r\n      layer_data: JSON.stringify(\r\n        _.pick(\r\n          {\r\n            ...DefaultLayer.layer_data,\r\n            ...newlayer.layer_data,\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      ),\r\n    });\r\n    dispatch(insertToList(layer));\r\n    dispatch(setCurrent(layer));\r\n    dispatch(setDrawingStatus(DrawingStatus.CLEAR_COMMAND));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.LAYER_ADD_ACTION,\r\n        data: parseLayer(layer),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const updateLayer = (layer, pushingToHistory = true) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  // dispatch(setLoading(true));\r\n  let configuredLayer = {\r\n    ...layer,\r\n    layer_order: layer.layer_order || 1,\r\n  };\r\n  try {\r\n    let previousLayer = getState().layerReducer.list.find(\r\n      (item) => item.id === layer.id\r\n    );\r\n\r\n    dispatch(updateListItem(configuredLayer));\r\n    const currentLayer = getState().layerReducer.current;\r\n    if (currentLayer && currentLayer.id === configuredLayer.id) {\r\n      dispatch(setCurrent(configuredLayer));\r\n    }\r\n    await LayerService.updateLayer(configuredLayer.id, {\r\n      ...configuredLayer,\r\n      layer_data: JSON.stringify(configuredLayer.layer_data),\r\n    });\r\n    if (pushingToHistory) {\r\n      dispatch(\r\n        pushToActionHistory({\r\n          action: HistoryActions.LAYER_CHANGE_ACTION,\r\n          prev_data: previousLayer,\r\n          next_data: configuredLayer,\r\n        })\r\n      );\r\n    }\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  // dispatch(setLoading(false));\r\n};\r\n\r\nexport const updateLayerOnly = (layer) => async (dispatch, getState) => {\r\n  let configuredLayer = {\r\n    ...layer,\r\n    layer_order: layer.layer_order || 1,\r\n  };\r\n\r\n  dispatch(updateListItem(configuredLayer));\r\n  const currentLayer = getState().layerReducer.current;\r\n  if (currentLayer && currentLayer.id === configuredLayer.id) {\r\n    dispatch(setCurrent(configuredLayer));\r\n  }\r\n};\r\n\r\nexport const deleteLayer = (layer, pushingToHistory = true) => async (\r\n  dispatch\r\n) => {\r\n  // dispatch(setLoading(true));\r\n\r\n  try {\r\n    dispatch(deleteListItem(layer));\r\n    dispatch(setCurrent(null));\r\n    await LayerService.deleteLayer(layer.id);\r\n    if (pushingToHistory)\r\n      dispatch(\r\n        pushToActionHistory({\r\n          action: HistoryActions.LAYER_DELETE_ACTION,\r\n          data: layer,\r\n        })\r\n      );\r\n    dispatch(\r\n      setMessage({ message: \"Deleted Layer successfully!\", type: \"success\" })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  // dispatch(setLoading(false));\r\n};\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class LayerService extends BaseAPIService {\r\n  static getLayerList = async () => {\r\n    return this.requestWithAuth(`/layer`, \"GET\");\r\n  };\r\n  static getLayerByID = async (id) => {\r\n    return this.requestWithAuth(`/layer/${id}`, \"GET\");\r\n  };\r\n  static createLayer = async (payload) => {\r\n    return this.requestWithAuth(`/layer`, \"POST\", payload);\r\n  };\r\n  static updateLayer = async (id, payload) => {\r\n    return this.requestWithAuth(`/layer/${id}`, \"PUT\", payload);\r\n  };\r\n  static deleteLayer = async (id) => {\r\n    return this.requestWithAuth(`/layer/${id}`, \"DELETE\");\r\n  };\r\n}\r\n","import _ from \"lodash\";\r\nimport config from \"config\";\r\n// import validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const mathRound4 = (num) => Math.round(num * 10000) / 10000;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  if (color[0] === \"#\" && (color.length === 4 || color.length === 7))\r\n    return true;\r\n  return false;\r\n};\r\n\r\nexport const getRelativePointerPosition = (node) => {\r\n  var transform = node.getAbsoluteTransform().copy();\r\n  // to detect relative position we need to invert transform\r\n  transform.invert();\r\n  // get pointer (say mouse or touch) position\r\n  var pos = node.getStage().getPointerPosition();\r\n  // now we can find relative point\r\n  return transform.point(pos);\r\n};\r\n\r\nexport const getRelativeShadowOffset = (boardRotate, offset) => {\r\n  let shadowOffset = { ...offset };\r\n  if (boardRotate === 90) {\r\n    shadowOffset.x = -offset.y;\r\n    shadowOffset.y = offset.x;\r\n  } else if (boardRotate === 180) {\r\n    shadowOffset.x = -offset.x;\r\n    shadowOffset.y = -offset.y;\r\n  } else if (boardRotate === 270) {\r\n    shadowOffset.x = offset.y;\r\n    shadowOffset.y = -offset.x;\r\n  }\r\n  return shadowOffset;\r\n};\r\n\r\nexport const removeDuplicatedPointFromEnd = (points) => {\r\n  let new_points = [...points];\r\n  if (new_points.length >= 4) {\r\n    while (\r\n      new_points[new_points.length - 1] === new_points[new_points.length - 3] &&\r\n      new_points[new_points.length - 2] === new_points[new_points.length - 4]\r\n    ) {\r\n      new_points.splice(-2, 2);\r\n    }\r\n  }\r\n  return new_points;\r\n};\r\n\r\nexport const parseLayer = (layer) => {\r\n  let newLayer = { ...layer };\r\n  if (typeof newLayer.layer_data === \"string\") {\r\n    newLayer.layer_data = JSON.parse(newLayer.layer_data);\r\n  }\r\n  return newLayer;\r\n};\r\n\r\nexport const parseScheme = (scheme) => {\r\n  let newScheme = { ...scheme };\r\n  if (typeof newScheme.guide_data === \"string\" || !newScheme.guide_data) {\r\n    newScheme.guide_data = JSON.parse(newScheme.guide_data) || {};\r\n  }\r\n  return newScheme;\r\n};\r\n\r\nexport const dataURItoBlob = (dataURI) => {\r\n  var binary = atob(dataURI.split(\",\")[1]);\r\n  var array = [];\r\n  for (var i = 0; i < binary.length; i++) {\r\n    array.push(binary.charCodeAt(i));\r\n  }\r\n  return new Blob([new Uint8Array(array)], { type: \"image/png\" });\r\n};\r\n\r\nexport const addImageProcess = (src) => {\r\n  return new Promise((resolve, reject) => {\r\n    let img = new Image();\r\n    img.onload = () => resolve(img);\r\n    img.onerror = reject;\r\n    img.src = src;\r\n  });\r\n};\r\n\r\nexport const alphaToHex = (alpha) => {\r\n  let s = Math.floor(alpha * 255).toString(16);\r\n  if (s.length === 1) s = \"0\" + s;\r\n  return s;\r\n};\r\n\r\nexport const correctColor = (color) => {\r\n  if (color.indexOf(\"#\") === 0) return color;\r\n  if (color.length === 6) return \"#\" + color;\r\n  return null;\r\n};\r\n\r\nexport const legacyBasePaintAssetURL = (basepaint) => {\r\n  return `${config.assetsURL}/bases/${basepaint.id}/`;\r\n};\r\n\r\nexport const basePaintAssetURL = (carMake, index) => {\r\n  return `${config.assetsURL}/templates2048/${carMake.folder_directory.replace(\r\n    \" \",\r\n    \"_\"\r\n  )}/bases/${index}/`;\r\n};\r\n\r\nexport const legacyCarMakeAssetURL = (carMake) => {\r\n  return `${config.assetsURL}/templates/${carMake.folder_directory.replace(\r\n    \" \",\r\n    \"_\"\r\n  )}/`;\r\n};\r\nexport const carMakeAssetURL = (carMake) => {\r\n  return `${config.assetsURL}/templates2048/${carMake.folder_directory.replace(\r\n    \" \",\r\n    \"_\"\r\n  )}/`;\r\n};\r\n\r\nexport const getZoomedCenterPosition = (stageRef, frameSize, zoom) => {\r\n  const transform = stageRef.current.getTransform().m;\r\n  let width = stageRef.current.attrs.width;\r\n  let height = stageRef.current.attrs.height;\r\n  const fitZoom = mathRound4(\r\n    Math.min(width / frameSize.width, height / frameSize.height)\r\n  );\r\n  return {\r\n    x: -transform[4] / zoom + (frameSize.width * fitZoom) / zoom / 2,\r\n    y: -transform[5] / zoom + (frameSize.height * fitZoom) / zoom / 2,\r\n  };\r\n};\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class SchemeService extends BaseAPIService {\r\n  static getSchemeList = async () => {\r\n    return this.requestWithAuth(`/scheme`, \"GET\");\r\n  };\r\n  static getSchemeListByUserID = async (userID) => {\r\n    return this.requestWithAuth(`/scheme/?userID=${userID}`, \"GET\");\r\n  };\r\n  static getSchemeListByUploadID = async (uploadID) => {\r\n    return this.requestWithAuth(`/scheme/byUpload/${uploadID}`, \"GET\");\r\n  };\r\n  static createScheme = async (carMakeID, name, userID, legacy_mode) => {\r\n    return this.requestWithAuth(`/scheme`, \"POST\", {\r\n      carMakeID,\r\n      name,\r\n      userID,\r\n      legacy_mode,\r\n    });\r\n  };\r\n  static getScheme = async (schemeID) => {\r\n    return this.requestWithAuth(`/scheme/${schemeID}`, \"GET\");\r\n  };\r\n  static updateScheme = async (schemeID, payload) => {\r\n    return this.requestWithAuth(`/scheme/${schemeID}`, \"PUT\", payload);\r\n  };\r\n  static deleteScheme = async (id) => {\r\n    return this.requestWithAuth(`/scheme/${id}`, \"DELETE\");\r\n  };\r\n  static cloneScheme = async (id) => {\r\n    return this.requestWithAuth(`/scheme/clone/${id}`, \"POST\");\r\n  };\r\n\r\n  static uploadThumbnail = async (formData) => {\r\n    return this.requestWithAuth(\r\n      `/scheme/thumbnail`,\r\n      \"POST\",\r\n      formData,\r\n      0,\r\n      \"multipart/form-data\"\r\n    );\r\n  };\r\n}\r\n","const config = {\r\n  env: process.env.NODE_ENV,\r\n  assetsURL:\r\n    process.env.REACT_APP_ASSET_URL ||\r\n    (process.env.NODE_ENV !== \"development\"\r\n      ? \"/assets\"\r\n      : \"http://localhost:3000/assets\"),\r\n  apiURL:\r\n    process.env.NODE_ENV !== \"development\"\r\n      ? \"/api\"\r\n      : \"http://localhost:3000/api\",\r\n};\r\nexport default config;\r\n","import _ from \"lodash\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\nimport { HistoryActions } from \"constant\";\r\nimport { parseScheme } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\nimport { setMessage } from \"./messageReducer\";\r\nimport { setCurrent as setCurrentCarMake } from \"./carMakeReducer\";\r\nimport { setList as setLayerList, setLoadedStatusAll } from \"./layerReducer\";\r\nimport { setList as setBasePaintList } from \"./basePaintReducer\";\r\nimport { pushToActionHistory } from \"./boardReducer\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n  loaded: false,\r\n  saving: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"schemeReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setSaving: (state, action) => {\r\n      state.saving = action.payload;\r\n    },\r\n    setLoaded: (state, action) => {\r\n      state.loaded = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      let list = [...action.payload];\r\n      for (let item of list) {\r\n        if (typeof item.guide_data === \"string\" || !item.guide_data) {\r\n          item.guide_data = JSON.parse(item.guide_data) || {};\r\n        }\r\n      }\r\n      state.list = list;\r\n    },\r\n    insertToList: (state, action) => {\r\n      let scheme = { ...action.payload };\r\n      if (\r\n        scheme &&\r\n        (typeof scheme.guide_data === \"string\" || !scheme.guide_data)\r\n      ) {\r\n        scheme.guide_data = JSON.parse(scheme.guide_data) || {};\r\n      }\r\n      state.list.push(scheme);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let schemeList = [...state.list];\r\n      let foundIndex = schemeList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        schemeList[foundIndex] = action.payload;\r\n        state.list = schemeList;\r\n      }\r\n    },\r\n    deleteListItem: (state, action) => {\r\n      state.list = state.list.filter((item) => item.id !== action.payload);\r\n    },\r\n    setCurrent: (state, action) => {\r\n      let scheme = { ...state.current, ...action.payload };\r\n      if (\r\n        scheme &&\r\n        (typeof scheme.guide_data === \"string\" || !scheme.guide_data)\r\n      ) {\r\n        scheme.guide_data = JSON.parse(scheme.guide_data) || {};\r\n      }\r\n      state.current = scheme;\r\n    },\r\n    clearCurrent: (state, action) => {\r\n      state.current = null;\r\n    },\r\n    setCurrentName: (state, action) => {\r\n      state.current = {\r\n        ...state.current,\r\n        name: action.payload,\r\n      };\r\n    },\r\n    setCurrentBaseColor: (state, action) => {\r\n      state.current = {\r\n        ...state.current,\r\n        base_color: action.payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\nconst {\r\n  setLoading,\r\n  setList,\r\n  insertToList,\r\n  updateListItem,\r\n  deleteListItem,\r\n} = slice.actions;\r\nexport const {\r\n  setSaving,\r\n  setLoaded,\r\n  setCurrent,\r\n  clearCurrent,\r\n  setCurrentName,\r\n  setCurrentBaseColor,\r\n} = slice.actions;\r\n\r\nexport const getSchemeList = (userID) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const schemes = await SchemeService.getSchemeListByUserID(userID);\r\n    dispatch(setList(schemes));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createScheme = (\r\n  carMake,\r\n  name,\r\n  userID,\r\n  legacy_mode = 0,\r\n  onOpen = null\r\n) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const result = await SchemeService.createScheme(\r\n      carMake.id,\r\n      name,\r\n      userID,\r\n      legacy_mode\r\n    );\r\n    console.log(\"result: \", result);\r\n    if (onOpen) onOpen(result.scheme.id);\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const getScheme = (schemeID) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const result = await SchemeService.getScheme(schemeID);\r\n    console.log(\"result: \", result);\r\n    let scheme = await SchemeService.updateScheme(schemeID, {\r\n      ..._.omit(result.scheme, [\"carMake\", \"layers\"]),\r\n      date_modified: Math.round(new Date().getTime() / 1000),\r\n    });\r\n    dispatch(setCurrent(scheme));\r\n    dispatch(setCurrentCarMake(result.carMake));\r\n    let loadedStatuses = {};\r\n    result.layers.map((item) => {\r\n      loadedStatuses[item.id] = false;\r\n    });\r\n    dispatch(setLoadedStatusAll(loadedStatuses));\r\n    dispatch(setLayerList(result.layers));\r\n    dispatch(setBasePaintList(result.basePaints));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const updateScheme = (payload, pushingToHistory = true) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    const currentScheme = getState().schemeReducer.current;\r\n    if (currentScheme && currentScheme.id === payload.id) {\r\n      dispatch(setCurrent(payload));\r\n    }\r\n\r\n    const scheme = await SchemeService.updateScheme(payload.id, {\r\n      ..._.omit(payload, [\"carMake\", \"layers\"]),\r\n      guide_data: JSON.stringify(payload.guide_data),\r\n    });\r\n    dispatch(updateListItem(scheme));\r\n    if (pushingToHistory)\r\n      dispatch(\r\n        pushToActionHistory({\r\n          action: HistoryActions.SCHEME_CHANGE_ACTION,\r\n          prev_data: currentScheme,\r\n          next_data: parseScheme(scheme),\r\n        })\r\n      );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n};\r\n\r\nexport const changeName = (id, name) => async (dispatch) => {\r\n  try {\r\n    dispatch(setCurrentName(name));\r\n    await SchemeService.updateScheme(id, { name });\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n};\r\n\r\nexport const changeBaseColor = (id, color) => async (dispatch, getState) => {\r\n  try {\r\n    const currentScheme = getState().schemeReducer.current;\r\n    let base_color = color;\r\n    if (base_color !== \"transparent\") {\r\n      base_color = base_color.replace(\"#\", \"\");\r\n    }\r\n    const scheme = await SchemeService.updateScheme(id, { base_color });\r\n    dispatch(setCurrentBaseColor(base_color));\r\n    dispatch(\r\n      pushToActionHistory({\r\n        action: HistoryActions.SCHEME_CHANGE_ACTION,\r\n        prev_data: currentScheme,\r\n        next_data: parseScheme(scheme),\r\n      })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n};\r\n\r\nexport const deleteScheme = (schemeID) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    dispatch(deleteListItem(schemeID));\r\n    await SchemeService.deleteScheme(schemeID);\r\n\r\n    dispatch(\r\n      setMessage({ message: \"Deleted Project successfully!\", type: \"success\" })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const cloneScheme = (schemeID) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n\r\n  try {\r\n    const scheme = await SchemeService.cloneScheme(schemeID);\r\n    dispatch(insertToList(scheme));\r\n    dispatch(\r\n      setMessage({ message: \"Cloned Project successfully!\", type: \"success\" })\r\n    );\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport default slice.reducer;\r\n","// Theme\r\nexport const THEME_SET = \"THEME_SET\";\r\nexport const THEMES = {\r\n  DEFAULT: \"DEFAULT\",\r\n  DARK: \"DARK\",\r\n  LIGHT: \"LIGHT\",\r\n  BLUE: \"BLUE\",\r\n  GREEN: \"GREEN\",\r\n  INDIGO: \"INDIGO\",\r\n};\r\n\r\nexport const LayerTypes = {\r\n  TEXT: 1,\r\n  LOGO: 2,\r\n  BASE: 3,\r\n  OVERLAY: 4,\r\n  UPLOAD: 5,\r\n  CAR: 6,\r\n  SHAPE: 7,\r\n};\r\n\r\nexport const PaintingGuides = {\r\n  CARMASK: \"car-mask\",\r\n  WIREFRAME: \"wireframe\",\r\n  SPONSORBLOCKS: \"sponsor-blocks\",\r\n  NUMBERBLOCKS: \"number-blocks\",\r\n  GRID: \"grid\",\r\n};\r\n\r\nexport const Palette = {\r\n  red: \"#ff0000\",\r\n  blue: \"#0000ff\",\r\n  green: \"#00ff00\",\r\n  yellow: \"#FFFF00\",\r\n  cyan: \"#00FFFF\",\r\n  lime: \"#BFFF00\",\r\n  gray: \"#808080\",\r\n  orange: \"#FFA500\",\r\n  purple: \"#800080\",\r\n  black: \"#000000\",\r\n  white: \"#FFFFFF\",\r\n  pink: \"#FFC0CB\",\r\n  darkblue: \"#00008b\",\r\n};\r\n\r\nexport const DialogTypes = {\r\n  BASEPAINT: \"BASEPAINT\",\r\n  SHAPE: \"SHAPE\",\r\n  LOGO: \"LOGO\",\r\n  UPLOAD: \"UPLOAD\",\r\n  TEXT: \"TEXT\",\r\n  DEFAULT_SHAPE_SETTINGS: \"DEFAULT_SHAPE_SETTINGS\",\r\n};\r\n\r\nexport const DefaultLayer = {\r\n  upload_id: 0,\r\n  layer_visible: 1,\r\n  layer_locked: 0,\r\n  layer_order: 0,\r\n  time_modified: 0,\r\n  confirm: \"\",\r\n  layer_data: {\r\n    name: \"\",\r\n    text: \"\",\r\n    width: 0,\r\n    height: 0,\r\n    radius: 0,\r\n    innerRadius: 0,\r\n    outerRadius: 0,\r\n    left: 0,\r\n    top: 0,\r\n    rotation: 0,\r\n    flop: 0,\r\n    flip: 0,\r\n    scaleX: 1,\r\n    scaleY: 1,\r\n    skewX: 0,\r\n    skewY: 0,\r\n    stroke: 0,\r\n    paddingX: 0,\r\n    paddingY: 0,\r\n    strokeType: \"middle\",\r\n    font: 0,\r\n    size: 0,\r\n    sizeLocked: true,\r\n    scaleLocked: true,\r\n    scolor: null,\r\n    color: null,\r\n    bgColor: null,\r\n    blendType: \"normal\",\r\n    opacity: 1,\r\n    shadowColor: null,\r\n    shadowBlur: 0,\r\n    shadowOpacity: 1,\r\n    shadowOffsetX: 0,\r\n    shadowOffsetY: 0,\r\n    cornerTopLeft: 0,\r\n    cornerTopRight: 0,\r\n    cornerBottomLeft: 0,\r\n    cornerBottomRight: 0,\r\n    numPoints: 5,\r\n    angle: 60,\r\n    points: [],\r\n    lineCap: \"round\",\r\n    lineJoin: \"round\",\r\n    pointerLength: 20,\r\n    pointerWidth: 20,\r\n  },\r\n};\r\n\r\nexport const MouseModes = {\r\n  DEFAULT: \"DEFAULT\",\r\n  RECT: \"Rectangle\",\r\n  CIRCLE: \"Circle\",\r\n  ELLIPSE: \"Ellipse\",\r\n  REGULARPOLYGON: \"Regular Polygon\",\r\n  ARROW: \"Arrow\",\r\n  LINE: \"Line\",\r\n  WEDGE: \"Wedge\",\r\n  POLYGON: \"Polygon\",\r\n  SOFTPOLYGON: \"Soft Polygon\",\r\n  STAR: \"Star\",\r\n  RING: \"Ring\",\r\n  ARC: \"Arc\",\r\n  PEN: \"Pen\",\r\n};\r\n\r\nexport const HistoryActions = {\r\n  SCHEME_CHANGE_ACTION: \"SCHEME_CHANGE_ACTION\",\r\n  LAYER_ADD_ACTION: \"LAYER_ADD_ACTION\",\r\n  LAYER_CHANGE_ACTION: \"LAYER_CHANGE_ACTION\",\r\n  LAYER_DELETE_ACTION: \"LAYER_DELETE_ACTION\",\r\n};\r\n\r\nexport const AllowedLayerProps = {\r\n  [LayerTypes.TEXT]: [\r\n    \"layer_visible\",\r\n    \"layer_locked\",\r\n    \"clone\",\r\n    \"layer_data\",\r\n    \"layer_data.name\",\r\n    \"layer_data.text\",\r\n    // \"layer_data.width\",\r\n    // \"layer_data.height\",\r\n    \"layer_data.left\",\r\n    \"layer_data.top\",\r\n    \"layer_data.scaleX\",\r\n    \"layer_data.scaleY\",\r\n    \"layer_data.skewX\",\r\n    \"layer_data.skewY\",\r\n    \"layer_data.rotation\",\r\n    \"layer_data.flop\",\r\n    \"layer_data.flip\",\r\n    \"layer_data.font\",\r\n    \"layer_data.color\",\r\n    \"layer_data.size\",\r\n    \"layer_data.stroke\",\r\n    \"layer_data.scolor\",\r\n    \"layer_data.opacity\",\r\n    \"layer_data.shadowColor\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOpacity\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOffsetX\",\r\n    \"layer_data.shadowOffsetY\",\r\n  ],\r\n  [LayerTypes.LOGO]: [\r\n    \"layer_visible\",\r\n    \"layer_locked\",\r\n    \"clone\",\r\n    \"layer_data\",\r\n    \"layer_data.name\",\r\n    \"layer_data.width\",\r\n    \"layer_data.height\",\r\n    \"layer_data.skewX\",\r\n    \"layer_data.skewY\",\r\n    \"layer_data.left\",\r\n    \"layer_data.top\",\r\n    \"layer_data.rotation\",\r\n    \"layer_data.flop\",\r\n    \"layer_data.flip\",\r\n    \"layer_data.opacity\",\r\n    \"layer_data.shadowColor\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOpacity\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOffsetX\",\r\n    \"layer_data.shadowOffsetY\",\r\n    \"layer_data.paddingX\",\r\n    \"layer_data.paddingY\",\r\n    \"layer_data.bgColor\",\r\n  ],\r\n  [LayerTypes.OVERLAY]: [\r\n    \"layer_visible\",\r\n    \"layer_locked\",\r\n    \"clone\",\r\n    \"layer_data\",\r\n    \"layer_data.name\",\r\n    \"layer_data.width\",\r\n    \"layer_data.height\",\r\n    \"layer_data.skewX\",\r\n    \"layer_data.skewY\",\r\n    \"layer_data.left\",\r\n    \"layer_data.top\",\r\n    \"layer_data.rotation\",\r\n    \"layer_data.flop\",\r\n    \"layer_data.flip\",\r\n    \"layer_data.opacity\",\r\n    \"layer_data.color\",\r\n    \"layer_data.shadowColor\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOpacity\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOffsetX\",\r\n    \"layer_data.shadowOffsetY\",\r\n    \"layer_data.paddingX\",\r\n    \"layer_data.paddingY\",\r\n    \"layer_data.bgColor\",\r\n  ],\r\n  [LayerTypes.SHAPE]: {\r\n    [MouseModes.RECT]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.width\",\r\n      \"layer_data.height\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n      \"layer_data.cornerTopLeft\",\r\n      \"layer_data.cornerTopRight\",\r\n      \"layer_data.cornerBottomLeft\",\r\n      \"layer_data.cornerBottomRight\",\r\n    ],\r\n    [MouseModes.CIRCLE]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.radius\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.ELLIPSE]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.width\",\r\n      \"layer_data.height\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.STAR]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.innerRadius\",\r\n      \"layer_data.outerRadius\",\r\n      \"layer_data.numPoints\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.RING]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.innerRadius\",\r\n      \"layer_data.outerRadius\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.REGULARPOLYGON]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.radius\",\r\n      \"layer_data.numPoints\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.WEDGE]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.radius\",\r\n      \"layer_data.angle\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.ARC]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.innerRadius\",\r\n      \"layer_data.outerRadius\",\r\n      \"layer_data.angle\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.LINE]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.points\",\r\n      \"layer_data.lineCap\",\r\n      \"layer_data.lineJoin\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.POLYGON]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.points\",\r\n      \"layer_data.lineCap\",\r\n      \"layer_data.lineJoin\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.ARROW]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.points\",\r\n      \"layer_data.lineCap\",\r\n      \"layer_data.lineJoin\",\r\n      \"layer_data.pointerLength\",\r\n      \"layer_data.pointerWidth\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.color\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n    [MouseModes.PEN]: [\r\n      \"layer_visible\",\r\n      \"layer_locked\",\r\n      \"clone\",\r\n      \"layer_data\",\r\n      \"layer_data.name\",\r\n      \"layer_data.type\",\r\n      \"layer_data.left\",\r\n      \"layer_data.top\",\r\n      \"layer_data.skewX\",\r\n      \"layer_data.skewY\",\r\n      \"layer_data.points\",\r\n      \"layer_data.lineCap\",\r\n      \"layer_data.lineJoin\",\r\n      \"layer_data.rotation\",\r\n      \"layer_data.flop\",\r\n      \"layer_data.flip\",\r\n      \"layer_data.opacity\",\r\n      \"layer_data.stroke\",\r\n      \"layer_data.scolor\",\r\n      \"layer_data.blendType\",\r\n      \"layer_data.strokeType\",\r\n      \"layer_data.shadowColor\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOpacity\",\r\n      \"layer_data.shadowBlur\",\r\n      \"layer_data.shadowOffsetX\",\r\n      \"layer_data.shadowOffsetY\",\r\n    ],\r\n  },\r\n  [LayerTypes.UPLOAD]: [\r\n    \"layer_visible\",\r\n    \"layer_locked\",\r\n    \"clone\",\r\n    \"layer_data\",\r\n    \"layer_data.name\",\r\n    \"layer_data.width\",\r\n    \"layer_data.height\",\r\n    \"layer_data.left\",\r\n    \"layer_data.top\",\r\n    \"layer_data.skewX\",\r\n    \"layer_data.skewY\",\r\n    \"layer_data.rotation\",\r\n    \"layer_data.flop\",\r\n    \"layer_data.flip\",\r\n    \"layer_data.opacity\",\r\n    \"layer_data.shadowColor\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOpacity\",\r\n    \"layer_data.shadowBlur\",\r\n    \"layer_data.shadowOffsetX\",\r\n    \"layer_data.shadowOffsetY\",\r\n    \"layer_data.paddingX\",\r\n    \"layer_data.paddingY\",\r\n    \"layer_data.bgColor\",\r\n  ],\r\n  [LayerTypes.BASE]: [\r\n    \"layer_data.name\",\r\n    \"layer_visible\",\r\n    \"layer_data\",\r\n    \"layer_data.opacity\",\r\n    \"layer_data.color\",\r\n  ],\r\n  [LayerTypes.CAR]: [\r\n    \"layer_data.name\",\r\n    \"layer_visible\",\r\n    \"layer_data\",\r\n    \"layer_data.color\",\r\n  ],\r\n};\r\n","import React from \"react\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\nimport Loader from \"./Loader\";\r\n\r\nconst ScreenLoader = () => {\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      justifyContent=\"center\"\r\n    >\r\n      <Loader />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ScreenLoader;\r\n","import BaseAPIService from \"./baseAPIService\";\r\n\r\nexport default class CarMakeService extends BaseAPIService {\r\n  static getCarMakeList = async () => {\r\n    return this.requestWithAuth(`/carMake`, \"GET\");\r\n  };\r\n  static getCarMakeByID = async (id) => {\r\n    return this.requestWithAuth(`/carMake/${id}`, \"GET\");\r\n  };\r\n  static createCarMake = async (payload) => {\r\n    return this.requestWithAuth(`/carMake`, \"POST\", payload);\r\n  };\r\n  static updateCarMake = async (id, payload) => {\r\n    return this.requestWithAuth(`/carMake/${id}`, \"PUT\", payload);\r\n  };\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport CarMakeService from \"services/carMakeService\";\r\nimport { setMessage } from \"./messageReducer\";\r\n\r\nconst initialState = {\r\n  list: [],\r\n  current: null,\r\n  loading: false,\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"carMakeReducer\",\r\n  initialState,\r\n  reducers: {\r\n    setLoading: (state, action) => {\r\n      state.loading = action.payload;\r\n    },\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n    },\r\n    insertToList: (state, action) => {\r\n      state.list.push(action.payload);\r\n    },\r\n    updateListItem: (state, action) => {\r\n      let schemeList = [...state.list];\r\n      let foundIndex = schemeList.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (foundIndex !== -1) {\r\n        schemeList[foundIndex] = action.payload;\r\n        state.list = schemeList;\r\n      }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nconst { setLoading, setList, insertToList, updateListItem } = slice.actions;\r\nexport const { setCurrent } = slice.actions;\r\n\r\nexport const getCarMakeList = () => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const carMakes = await CarMakeService.getCarMakeList();\r\n    dispatch(setList(carMakes));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const createCarMake = (payload) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const carMake = await CarMakeService.createCarMake(payload);\r\n    dispatch(insertToList(carMake));\r\n    dispatch(setCurrent(carMake));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport const updateCarMake = (id, payload) => async (dispatch) => {\r\n  dispatch(setLoading(true));\r\n  try {\r\n    const carMake = await CarMakeService.updateCarMake(id, payload);\r\n    dispatch(updateListItem(carMake));\r\n  } catch (err) {\r\n    dispatch(setMessage({ message: err.message }));\r\n  }\r\n  dispatch(setLoading(false));\r\n};\r\n\r\nexport default slice.reducer;\r\n"],"sourceRoot":""}