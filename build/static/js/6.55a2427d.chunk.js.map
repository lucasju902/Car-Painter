{"version":3,"sources":["utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomChange","useCallback","event","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","useMemo","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","keyCode","handleDiscardName","handleGoBack","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","increaseData","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","base","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","isDirty","PropertyBar","defaultValues","handleClone","cloneLayer","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","every","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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jb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAW8D,OACV,MAAdzS,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAW+D,SACV,MAAd1S,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWsD,UACV,MAAdjS,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWgE,OACV,MAAd3S,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWiE,OACV,MAAd5S,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWkE,iBACV,MAAd7S,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWoE,QACV,MAAd/S,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWqE,MACV,MAAdhT,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWwE,UACV,MAAdnT,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAWsE,OACV,MAAdjT,EAAMib,KAAejb,EAAM25B,SACpC12B,EAASgV,YAAatJ,IAAW0E,QAEnB,MAAdrT,EAAMib,MACLjb,EAAM0Z,SAAW1Z,EAAM45B,UACxBhiB,EAEA3U,EAAS42B,aAAkBjiB,IAEb,MAAd5X,EAAMib,MACLjb,EAAM0Z,SAAW1Z,EAAM45B,UACxB9B,EAEA70B,EAAS+zB,aAAWc,IACG,MAAd93B,EAAMib,MAAgBjb,EAAM0Z,SAAW1Z,EAAM45B,SACtD32B,EAASY,eACc,MAAd7D,EAAMib,MAAgBjb,EAAM0Z,SAAW1Z,EAAM45B,SACtD32B,EAASa,eACQ,MAARmX,EACTie,GAAqB50B,IAAeC,SACnB,MAAR0W,EACTie,GAAqB50B,IAAeG,WACnB,MAARwW,EACTie,GAAqB50B,IAAeI,eACnB,MAARuW,EACTie,GAAqB50B,IAAeK,cACnB,MAARsW,EACTie,GAAqB50B,IAAeM,MACnB,MAARqW,EACToH,EAAUP,IAAY3R,MACL,MAAR8K,EACToH,EAA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","file":"static/js/6.55a2427d.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/wireframe.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={`${\r\n        config.assetsURL\r\n      }/templates/${currentCarMake.folder_directory.replace(\r\n        \" \",\r\n        \"_\"\r\n      )}/mask.png`}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/sponsor_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/number_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    currentCarMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, loadedStatuses, handleImageSize, onLoadLayer } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n            top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x() - offsetsFromStroke.x),\r\n            top: mathRound2(node.y() - offsetsFromStroke.y),\r\n            width: mathRound2(\r\n              Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n            ),\r\n            height: mathRound2(\r\n              Math.max(1, height * Math.abs(scaleY)) - offsetsFromStroke.height\r\n            ),\r\n            radius: node.radius\r\n              ? mathRound2(\r\n                  Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.radius\r\n                )\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.innerRadius\r\n                )\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.outerRadius\r\n                )\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 1,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.01}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback((name, type) => {\r\n    if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n      return name.slice(user.id.toString().length + 1);\r\n    return name;\r\n  }, []);\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (base) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.strokeType\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.blendType\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.skewX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.skewY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer, cloneLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const isDirty = useMemo(() => {\r\n      for (let i in formProps.values.layer_data) {\r\n        if (formProps.values.layer_data[i] != currentLayer.layer_data[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      for (let i in formProps.values) {\r\n        if (i != \"layer_data\" && formProps.values[i] != currentLayer[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }, [formProps.values, currentLayer]);\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n          {formProps.isValid && isDirty ? (\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n              Apply\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n        <GeneralProperty {...formProps} toggleField={toggleField} />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <ColorProperty {...formProps} onLayerDataUpdate={onLayerDataUpdate} />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n        />\r\n        <PositionProperty {...formProps} />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty {...formProps} />\r\n        <ShadowProperty {...formProps} onLayerDataUpdate={onLayerDataUpdate} />\r\n        <CornerProperty {...formProps} />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) dispatch(cloneLayer(currentLayer));\r\n  }, [dispatch, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n  const pixelRatio = 0.5;\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n\r\n      let width = isPNG\r\n        ? frameSizeRef.current.width * pixelRatio\r\n        : frameSizeRef.current.width;\r\n      let height = isPNG\r\n        ? frameSizeRef.current.height * pixelRatio\r\n        : frameSizeRef.current.height;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(\r\n          baseLayerImg,\r\n          0,\r\n          0,\r\n          baseLayerImg.width,\r\n          baseLayerImg.height\r\n        );\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(\r\n          mainLayerImg,\r\n          0,\r\n          0,\r\n          mainLayerImg.width,\r\n          mainLayerImg.height\r\n        );\r\n      }\r\n      if (carMaskLayerImg) {\r\n        ctx.drawImage(\r\n          carMaskLayerImg,\r\n          0,\r\n          0,\r\n          carMaskLayerImg.width,\r\n          carMaskLayerImg.height\r\n        );\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        var tga = new TGA({\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses]);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}