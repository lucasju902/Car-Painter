{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","CustomSelect","Select","Wrapper","div","CustomOutlinedInput","OutlinedInput","modes","value","MouseModes","DEFAULT","icon","faMousePointer","RECT","faSquare","CIRCLE","faCircle","STAR","faStar","Toolbar","props","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","mouseMode","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","setMouseMode","target","renderValue","mode","find","item","map","MenuItem","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","frameSize","allowFit","imageRef","useRef","shapeRef","useState","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","layer_type","LayerTypes","CAR","layer_visible","layer","layer_data","color","BasePaints","BASE","Overlays","currentLayer","setCurrentLayer","OVERLAY","shadowOffsetX","shadowOffsetY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","Shapes","drawingLayer","SHAPE","TransformerComponent","selectedLayer","pressedKey","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","point","cos","sin","rotateAroundPoint","getCenter","keepRatio","sizeLocked","scaleLocked","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMousedown","onContentMousedown","attrs","newLayer","evt","layerX","layerY","setDrawingLayer","onContentMousemove","onContentMouseup","createShape","onTouchStart","onWheel","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","Tooltip","open","enterTouchDelay","placement","title","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","MuiSelect","FontImage","FontSelect","labelId","font_preview","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","my","TextDialog","onCreate","required","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","AllowedLayerProps","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","PropertyBar","checkDirty","defaultValues","pick","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","hex","result","exec","num","EPSILON","validateColor"],"mappings":"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","file":"static/js/6.18679868.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom, setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faMousePointer,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PaintingGuides, MouseModes } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-select {\r\n    padding-left: 10px;\r\n  }\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    icon: faMousePointer,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    icon: faSquare,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    icon: faCircle,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    icon: faStar,\r\n  },\r\n];\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n  const handleModeChange = (event) => {\r\n    dispatch(setMouseMode(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <CustomSelect\r\n            value={mouseMode}\r\n            onChange={handleModeChange}\r\n            renderValue={(value) => {\r\n              const mode = modes.find((item) => item.value === value);\r\n              if (!mode) {\r\n                return <></>;\r\n              }\r\n              return <FontAwesomeIcon icon={mode.icon} />;\r\n            }}\r\n          >\r\n            {modes.map((mode) => (\r\n              <MenuItem value={mode.value} key={mode.value}>\r\n                <FontAwesomeIcon icon={mode.icon} />\r\n              </MenuItem>\r\n            ))}\r\n          </CustomSelect>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            frameSize={frameSize}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffsetX}\r\n              shadowOffsetY={shadowOffsetY}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport { Rect } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffsetX = layer.layer_data.shadowOffsetX;\r\n        let shadowOffsetY = layer.layer_data.shadowOffsetY;\r\n        if (boardRotate === 90) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = layer.layer_data.shadowOffsetX;\r\n        } else if (boardRotate === 180) {\r\n          shadowOffsetX = -layer.layer_data.shadowOffsetX;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetY;\r\n        } else if (boardRotate === 270) {\r\n          shadowOffsetX = layer.layer_data.shadowOffsetY;\r\n          shadowOffsetY = -layer.layer_data.shadowOffsetX;\r\n        }\r\n\r\n        return (\r\n          <Shape\r\n            name={layer.id.toString()}\r\n            type={layer.layer_data.type}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffsetX}\r\n            shadowOffsetY={shadowOffsetY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? true\r\n            : false\r\n        }\r\n        enabledAnchors={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked ||\r\n          pressedKey === \"shift\"\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\n\r\nconst Board = () => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingLayer = useSelector((state) => state.layerReducer.drawingLayer);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      console.log(stageRef.current);\r\n      const offsetX = stageRef.current.attrs.x - stageRef.current.attrs.offsetX;\r\n      const offsetY = stageRef.current.attrs.y - stageRef.current.attrs.offsetY;\r\n      let newLayer = {\r\n        layer_type: LayerTypes.SHAPE,\r\n        layer_data: {\r\n          type: mouseMode,\r\n          name: mouseMode,\r\n          left: e.evt.layerX - offsetX,\r\n          top: e.evt.layerY - offsetY,\r\n          width: 0,\r\n          height: 0,\r\n          color: \"#000000\",\r\n          scolor: \"#000000\",\r\n          stroke: 1,\r\n          shadowColor: null,\r\n          shadowBlur: 0,\r\n          shadowOpacity: 1,\r\n          shadowOffsetX: 0,\r\n          shadowOffsetY: 0,\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(newLayer));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      const offsetX = stageRef.current.attrs.x - stageRef.current.attrs.offsetX;\r\n      const offsetY = stageRef.current.attrs.y - stageRef.current.attrs.offsetY;\r\n      let width = e.evt.layerX - offsetX - drawingLayer.layer_data.left;\r\n      let height = e.evt.layerY - offsetY - drawingLayer.layer_data.top;\r\n      let layer = {\r\n        ...drawingLayer,\r\n        layer_data: {\r\n          ...drawingLayer.layer_data,\r\n          width: width,\r\n          height: height,\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(layer));\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      dispatch(createShape(currentScheme.id, drawingLayer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayer}\r\n            currentLayer={currentLayer}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE\r\n        )}\r\n      />\r\n      <PartGroup\r\n        title=\"Overlays\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label=\"Width\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label=\"Height\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOpacity\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOffsetX\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowColor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowBlur\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOpacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n            shadowColor: null,\r\n            shadowBlur: 0,\r\n            shadowOpacity: 1,\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n"],"sourceRoot":""}