{"version":3,"sources":["components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","Popover","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","width","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","value","onChange","event","parseInt","target","endAdornment","InputAdornment","position","labelWidth","autoFocus","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleUndoRedo","isUndo","historyActionBack","historyActionUp","alignContent","ToggleButtonGroup","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","Undo","length","Redo","endIcon","currentTarget","toFixed","URLImage","src","tellSize","onSelect","onHover","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","onChangeBoardRotation","stageRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","hoveredLayerJSON","hoveredJSON","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","setHoveredJSONItem","key","handleChangeBoardRotation","newBoardRotate","isRight","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","positionX","positionY","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","style","cursor","base_color","guide_data","insertToLoadedFontList","right","RotateLeft","RotateRight","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","setName","dialog","setDialog","px","my","changeName","Save","icon","faQuestion","Settings","updateScheme","CustomTypography","active","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","el","rect","getBoundingClientRect","bottom","innerHeight","clientHeight","innerWidth","clientWidth","isInViewport","scrollIntoView","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","stopPropagation","nativeEvent","stopImmediatePropagation","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","action","startIcon","Add","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","hoverLayer","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","mode","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","pr","pb","changeBaseColor","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer"],"mappings":"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","file":"static/js/7.fc480f1e.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = (event) => {\r\n    setZoom(parseInt(event.target.value || 0) / 100.0);\r\n  };\r\n  const handleZoom100 = () => {\r\n    setZoom(1);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ZoomPopover;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const { onZoomIn, onZoomOut, onZoomFit, onChangePaintingGuides } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleUndoRedo = (isUndo = true) => {\r\n    if (isUndo) {\r\n      dispatch(historyActionBack());\r\n    } else {\r\n      dispatch(historyActionUp());\r\n    }\r\n  };\r\n\r\n  const handleZoomPoperOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseZoomPoper = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleZoom = (value) => {\r\n    dispatch(setZoom(value));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setHoveredJSONItem,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({ onChangeBoardRotation, stageRef }) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const hoveredLayerJSON = useSelector(\r\n    (state) => state.layerReducer.hoveredJSON\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayerRef.current) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        drawingLayerRef.current = newLayer;\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n          ]);\r\n\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = () => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayerRef.current &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleHoverLayer = (layer, flag) => {\r\n    dispatch(setHoveredJSONItem({ key: layer.id, value: flag }));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  console.log(stageRef);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShortCutsDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { changeName, updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  };\r\n  const handleDiscardName = () => {\r\n    setName(currentScheme.name);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setDialog(null);\r\n  };\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        width={currentScheme && name !== currentScheme.name ? \"150px\" : \"230px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  const isInViewport = (el) => {\r\n    const rect = el.getBoundingClientRect();\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <=\r\n        (window.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if ((selected || hovered) && !isInViewport(wrapperRef.current)) {\r\n      wrapperRef.current.scrollIntoView();\r\n    }\r\n  }, [selected, hovered]);\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography active={layer_visible ? \"true\" : \"false\"} noWrap>\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <IconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <IconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </IconButton>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n  setHoveredJSONItem,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const hoveredJSON = useSelector((state) => state.layerReducer.hoveredJSON);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...layer,\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n  const hoverLayer = (layer, flag) => {\r\n    dispatch(setHoveredJSONItem({ key: layer.id, value: flag }));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, baseColor, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = (value) => {\r\n    dispatch(setMouseMode(value));\r\n    if (value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DrawerBar;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flop\",\r\n                    values.layer_data.flop ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flip\",\r\n                    values.layer_data.flip ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = (value) => {\r\n    if (\r\n      !values.layer_data.shadowColor ||\r\n      values.layer_data.shadowColor === \"transparent\"\r\n    ) {\r\n      setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n    }\r\n    setFieldValue(\"layer_data.shadowColor\", value);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} toggleField={toggleField} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4 } from \"helper\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomFit = () => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"(\" && event.shiftKey) {\r\n        handleZoomFit();\r\n      } else if (event.key === \"D\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      } else if (event.key === \"B\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.PEN));\r\n      } else if (event.key === \"R\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RECT));\r\n      } else if (event.key === \"C\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.CIRCLE));\r\n      } else if (event.key === \"E\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n      } else if (event.key === \"S\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.STAR));\r\n      } else if (event.key === \"G\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RING));\r\n      } else if (event.key === \"O\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n      } else if (event.key === \"W\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.WEDGE));\r\n      } else if (event.key === \"A\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARC));\r\n      } else if (event.key === \"P\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.POLYGON));\r\n      } else if (event.key === \"L\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.LINE));\r\n      } else if (event.key === \">\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARROW));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionBack());\r\n      } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionUp());\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}