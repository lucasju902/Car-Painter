{"version":3,"sources":["components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","Popover","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","width","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","value","onChange","event","parseInt","target","endAdornment","InputAdornment","position","labelWidth","autoFocus","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleUndoRedo","isUndo","historyActionBack","historyActionUp","alignContent","ToggleButtonGroup","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","Undo","length","Redo","endIcon","currentTarget","toFixed","URLImage","src","tellSize","onSelect","onHover","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","hoveredLayerJSON","hoveredJSON","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","setHoveredJSONItem","key","handleChangeBoardRotation","newBoardRotate","isRight","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","positionX","positionY","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","style","cursor","base_color","guide_data","insertToLoadedFontList","right","RotateLeft","RotateRight","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","setName","dialog","setDialog","px","my","changeName","Save","icon","faQuestion","Settings","updateScheme","CustomTypography","active","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","el","rect","getBoundingClientRect","bottom","innerHeight","clientHeight","innerWidth","clientWidth","isInViewport","scrollIntoView","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","stopPropagation","nativeEvent","stopImmediatePropagation","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","action","startIcon","Add","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","hoverLayer","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","mode","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","pr","pb","changeBaseColor","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","takeScreenshot","enableCarMask","setAttrs","draw","baseLayerURL","toDataURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","dataURL","blob","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","setTimeout","thumbnailInterval","clearInterval","clearTimeout","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","activeElement","blur","newRotation","setBoardRotate","deleteLayer"],"mappings":"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","file":"static/js/7.9759f4f8.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = (event) => {\r\n    setZoom(parseInt(event.target.value || 0) / 100.0);\r\n  };\r\n  const handleZoom100 = () => {\r\n    setZoom(1);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default ZoomPopover;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const { onZoomIn, onZoomOut, onZoomFit, onChangePaintingGuides } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleUndoRedo = (isUndo = true) => {\r\n    if (isUndo) {\r\n      dispatch(historyActionBack());\r\n    } else {\r\n      dispatch(historyActionUp());\r\n    }\r\n  };\r\n\r\n  const handleZoomPoperOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseZoomPoper = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleZoom = (value) => {\r\n    dispatch(setZoom(value));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideCarMask;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect, FastLayer } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setHoveredJSONItem,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const hoveredLayerJSON = useSelector(\r\n    (state) => state.layerReducer.hoveredJSON\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayerRef.current) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        drawingLayerRef.current = newLayer;\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n          ]);\r\n\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = () => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayerRef.current &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleHoverLayer = (layer, flag) => {\r\n    dispatch(setHoveredJSONItem({ key: layer.id, value: flag }));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  console.log(stageRef);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <FastLayer ref={baseLayerRef}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n        </FastLayer>\r\n        <FastLayer>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n        </FastLayer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n          />\r\n        </Layer>\r\n        <FastLayer ref={carMaskLayerRef}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n        </FastLayer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShortCutsDialog;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { changeName, updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    setName(event.target.value);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  };\r\n  const handleDiscardName = () => {\r\n    setName(currentScheme.name);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setDialog(null);\r\n  };\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        width={currentScheme && name !== currentScheme.name ? \"150px\" : \"230px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  const isInViewport = (el) => {\r\n    const rect = el.getBoundingClientRect();\r\n    return (\r\n      rect.top >= 0 &&\r\n      rect.left >= 0 &&\r\n      rect.bottom <=\r\n        (window.innerHeight || document.documentElement.clientHeight) &&\r\n      rect.right <= (window.innerWidth || document.documentElement.clientWidth)\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if ((selected || hovered) && !isInViewport(wrapperRef.current)) {\r\n      wrapperRef.current.scrollIntoView();\r\n    }\r\n  }, [selected, hovered]);\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography active={layer_visible ? \"true\" : \"false\"} noWrap>\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <IconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <IconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </IconButton>\r\n          ) : (\r\n            <Box width=\"28.28px\" height=\"28.28px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n  setHoveredJSONItem,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const hoveredJSON = useSelector((state) => state.layerReducer.hoveredJSON);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...layer,\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n  const hoverLayer = (layer, flag) => {\r\n    dispatch(setHoveredJSONItem({ key: layer.id, value: flag }));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, baseColor, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = (value) => {\r\n    dispatch(setMouseMode(value));\r\n    if (value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DrawerBar;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flop\",\r\n                    values.layer_data.flop ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flip\",\r\n                    values.layer_data.flip ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = (value) => {\r\n    if (\r\n      !values.layer_data.shadowColor ||\r\n      values.layer_data.shadowColor === \"transparent\"\r\n    ) {\r\n      setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n    }\r\n    setFieldValue(\"layer_data.shadowColor\", value);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} toggleField={toggleField} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  };\r\n  const handleZoomFit = () => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"(\" && event.shiftKey) {\r\n        handleZoomFit();\r\n      } else if (event.key === \"D\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      } else if (event.key === \"B\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.PEN));\r\n      } else if (event.key === \"R\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RECT));\r\n      } else if (event.key === \"C\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.CIRCLE));\r\n      } else if (event.key === \"E\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n      } else if (event.key === \"S\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.STAR));\r\n      } else if (event.key === \"G\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RING));\r\n      } else if (event.key === \"O\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n      } else if (event.key === \"W\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.WEDGE));\r\n      } else if (event.key === \"A\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARC));\r\n      } else if (event.key === \"P\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.POLYGON));\r\n      } else if (event.key === \"L\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.LINE));\r\n      } else if (event.key === \">\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARROW));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionBack());\r\n      } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionUp());\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  const takeScreenshot = async (enableCarMask = true) => {\r\n    let canvas = document.createElement(\"canvas\");\r\n    let ctx = canvas.getContext(\"2d\");\r\n    const pixelRatio = 0.5;\r\n\r\n    let width = frameSizeRef.current.width * pixelRatio;\r\n    let height = frameSizeRef.current.height * pixelRatio;\r\n    let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n    let attrs = { ...stageRef.current.attrs };\r\n    stageRef.current.setAttrs({\r\n      x: 0,\r\n      y: 0,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      scaleX: 1,\r\n      scaleY: 1,\r\n      rotation: 0,\r\n      width: frameSizeRef.current.width,\r\n      height: frameSizeRef.current.height,\r\n    });\r\n    stageRef.current.draw();\r\n\r\n    if (baseLayerRef.current) {\r\n      let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n      baseLayerImg = await addImageProcess(baseLayerURL);\r\n    }\r\n    if (mainLayerRef.current) {\r\n      let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n      mainLayerImg = await addImageProcess(mainLayerURL);\r\n    }\r\n    if (carMaskLayerRef.current && enableCarMask) {\r\n      let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n        pixelRatio,\r\n      });\r\n      carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n    }\r\n\r\n    stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n    stageRef.current.draw();\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n\r\n    if (baseLayerImg) {\r\n      ctx.drawImage(\r\n        baseLayerImg,\r\n        0,\r\n        0,\r\n        baseLayerImg.width,\r\n        baseLayerImg.height\r\n      );\r\n    }\r\n    if (mainLayerImg) {\r\n      ctx.drawImage(\r\n        mainLayerImg,\r\n        0,\r\n        0,\r\n        mainLayerImg.width,\r\n        mainLayerImg.height\r\n      );\r\n    }\r\n    if (carMaskLayerImg) {\r\n      ctx.drawImage(\r\n        carMaskLayerImg,\r\n        0,\r\n        0,\r\n        carMaskLayerImg.width,\r\n        carMaskLayerImg.height\r\n      );\r\n    }\r\n    return canvas.toDataURL(\"image/png\");\r\n  };\r\n\r\n  const handleUploadThumbnail = async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        let dataURL = await takeScreenshot();\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 5000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}