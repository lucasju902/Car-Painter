{"version":3,"sources":["utils/tga.js","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/SubForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/GuidesSetting.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/SharingSetting.jsx","dialogs/scheme-settings-dialog/styles.jsx","dialogs/scheme-settings-dialog/SchemeSettingsDialog.jsx","dialogs/scheme-settings-dialog/index.js","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","components/Loader.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/LightTooltip.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","LightTooltip","title","arrow","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","useRef","shapeRef","image","setImage","filters","useMemo","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","handleDragStart","e","handleDragEnd","handleTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onTransformEnd","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","bgColor","paddingX","paddingY","imageshapeRef","console","log","imageNode","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","fontSize","size","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","trRef","selectedLayer","pressedKey","hoveredTransform","keepRatio","sizeLocked","scaleLocked","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","boundBoxFunc","oldBoundBox","newBoundBox","diff","getSnapRotation","rotateAroundCenter","enabledAnchors","borderEnabled","rotateEnabled","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","activeTransformerRef","hoveredTransformerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","previousGuide","setPreviousGuide","useResizeDetector","currentCarMake","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","push","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","showGuideForRepositioning","show","newPaintingGuides","show_wireframe","show_numberBlocks","show_sponsor","show_grid","setPaintingGuides","handleLayerDragStart","handleLayerDragEnd","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","legacy_mode","show_carparts_on_top","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","handleBlur","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","Tooltip","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","handleInputKeyDown","css","backgroundColor","Palette","deferred","hideTextfield","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleChange","touched","extraChildren","expanded","setExpanded","expandIcon","ExpandMore","sm","CustomFormControlLabel","FormControlLabel","CustomDialogContent","DialogContent","InnerForm","onCancel","formProps","onSubmit","handleSubmit","noValidate","dividers","maxHeight","pr","overflow","control","checked","labelPlacement","isSubmitting","isValid","GuidesSetting","onApply","initialValues","validationSchema","Yup","shape","nullable","test","colorValidator","validate","CustomAutocomplete","Autocomplete","owner","schemeID","premiumUsers","unInvitedUsers","user","sharedUsers","handleNewUserChange","user_id","scheme_id","accepted","editable","handleNewUserPermissionChange","handleSharedUserChange","options","getOptionLabel","option","newValue","renderInput","params","newUser","flexGrow","ml","drivername","sharedUser","SharingSetting","ownerID","userList","pro_user","TabPanel","other","role","hidden","a11yProps","StyledTabs","withStyles","indicator","root","paddingLeft","Tabs","TabIndicatorProps","StyledTab","theme","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","SchemeSettingsDialog","onApplyGuideSettings","onApplySharingSetting","tabValue","setTabValue","handleTabChange","fullWidth","maxWidth","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Dialog","DialogTitle","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","userReducer","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","handleGoBack","clearFrameSize","setSchemeLoaded","clearCurrentScheme","handleApplyProjectSettings","updateScheme","handleApplySharingSetting","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","MuiButton","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","Root","Loader","CircularProgress","m","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","increaseData","dataLength","next","loader","scrollableTarget","cellHeight","cols","alt","DialogActions","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overlay_thumb","GridListTileBar","subtitle","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","logos","onOpenLogo","filteredLogos","filteredFlags","increaseLogoData","increaseFlagData","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","handleApplySettings","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","Accordion","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","handleChangeRotation","newRot","PI","boundBox","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","onDelete","SkewProperty","param","PropertyBar","defaultValues","handleClone","handleDelete","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","useReducerRef","userRef","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","getAbsolutePosition","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleDeleteLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","getUserList","getSharedUsers","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","tooltip","boxShadow","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","input"],"mappings":"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","file":"static/js/7.9112f14c.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            layer_data.shadowOffsetX * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            layer_data.shadowOffsetY * Math.abs(scaleY)\r\n          ),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          node.cache({\r\n            pixelRatio: getPixelRatio(shapeRef.current),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // node.getLayer().batchDraw();\r\n        } else {\r\n          node.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const imageNode = imageshapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(imageNode.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            (layer_data.shadowOffsetX || 0) * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            (layer_data.shadowOffsetY || 0) * Math.abs(scaleY)\r\n          ),\r\n          paddingX: mathRound2((layer_data.paddingX || 0) * Math.abs(scaleX)),\r\n          paddingY: mathRound2((layer_data.paddingY || 0) * Math.abs(scaleY)),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          imageNode.cache({\r\n            pixelRatio: getPixelRatio(imageNode),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // imageNode.getLayer().batchDraw();\r\n        } else {\r\n          imageNode.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect\r\n        x={-paddingX || 0}\r\n        y={-paddingY || 0}\r\n        width={props.width + 2 * (paddingX || 0)}\r\n        height={props.height + 2 * (paddingY || 0)}\r\n        fill={bgColor}\r\n      />\r\n      <Image\r\n        x={0}\r\n        y={0}\r\n        width={props.width}\r\n        height={props.height}\r\n        shadowBlur={props.shadowBlur}\r\n        shadowOffsetX={props.shadowOffsetX}\r\n        shadowOffsetY={props.shadowOffsetY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = useCallback(() => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  }, [id, fontFamily, fontFile, onFontLoad, onLoadLayer, setLoadedFontFamily]);\r\n\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [onChange, onDragEnd]\r\n  );\r\n\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n          scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n        });\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n              top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [offsetsFromStroke, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        const width =\r\n          type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n        const height =\r\n          type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(node.x() - offsetsFromStroke.x),\r\n              top: mathRound2(node.y() - offsetsFromStroke.y),\r\n              width: mathRound2(\r\n                Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n              ),\r\n              height: mathRound2(\r\n                Math.max(1, height * Math.abs(scaleY)) -\r\n                  offsetsFromStroke.height\r\n              ),\r\n              radius: node.radius\r\n                ? mathRound2(\r\n                    Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.radius\r\n                  )\r\n                : 0,\r\n              innerRadius: node.innerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.innerRadius\r\n                  )\r\n                : 0,\r\n              outerRadius: node.outerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.outerRadius\r\n                  )\r\n                : 0,\r\n              rotation: mathRound2(node.rotation()) || 0,\r\n              flop: scaleX > 0 ? 0 : 1,\r\n              flip: scaleY > 0 ? 0 : 1,\r\n              stroke: mathRound2(node.strokeWidth() * xyScale),\r\n              shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n              shadowOffsetX: mathRound2(\r\n                layer_data.shadowOffsetX * Math.abs(scaleX)\r\n              ),\r\n              shadowOffsetY: mathRound2(\r\n                layer_data.shadowOffsetY * Math.abs(scaleY)\r\n              ),\r\n              cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n              cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n              cornerBottomLeft: mathRound2(\r\n                layer_data.cornerBottomLeft * xyScale\r\n              ),\r\n              cornerBottomRight: mathRound2(\r\n                layer_data.cornerBottomRight * xyScale\r\n              ),\r\n              points: points.map((point, index) =>\r\n                index % 2 === 0\r\n                  ? mathRound2(point * Math.abs(scaleX))\r\n                  : mathRound2(point * Math.abs(scaleY))\r\n              ),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [type, offsetsFromStroke, layer_data, points, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\nimport { getSnapRotation, rotateAroundCenter } from \"helper\";\r\n\r\nconst TransformerComponent = ({\r\n  trRef,\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = useCallback(() => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedLayer]);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [checkNode]);\r\n\r\n  const boundBoxFunc = useCallback(\r\n    (oldBoundBox, newBoundBox) => {\r\n      const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n      const diff = closesSnap - oldBoundBox.rotation;\r\n      if (pressedKey === \"shift\") {\r\n        if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n          return newBoundBox;\r\n        }\r\n        if (Math.abs(diff) > 0) {\r\n          return rotateAroundCenter(oldBoundBox, diff);\r\n        }\r\n        return oldBoundBox;\r\n      }\r\n      return newBoundBox;\r\n    },\r\n    [pressedKey, getSnapRotation, rotateAroundCenter]\r\n  );\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        id=\"defaultTransformer\"\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n  activeTransformerRef,\r\n  hoveredTransformerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [previousGuide, setPreviousGuide] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showGuideForRepositioning = useCallback(\r\n    (show = true) => {\r\n      if (!show) {\r\n        dispatch(setPaintingGuides([...previousGuide]));\r\n        setPreviousGuide([]);\r\n      } else if (!previousGuide.length) {\r\n        setPreviousGuide([...paintingGuides]);\r\n        let newPaintingGuides = [...paintingGuides];\r\n        if (\r\n          currentScheme.guide_data.show_wireframe &&\r\n          !newPaintingGuides.includes(PaintingGuides.WIREFRAME)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.WIREFRAME);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_numberBlocks &&\r\n          !newPaintingGuides.includes(PaintingGuides.NUMBERBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.NUMBERBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_sponsor &&\r\n          !newPaintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.SPONSORBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_grid &&\r\n          !newPaintingGuides.includes(PaintingGuides.GRID)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.GRID);\r\n        }\r\n        dispatch(setPaintingGuides(newPaintingGuides));\r\n      }\r\n    },\r\n    [dispatch, paintingGuides, previousGuide, setPreviousGuide, currentScheme]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(true);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(false);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={frameSize.width / 2}\r\n        offsetY={frameSize.height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          {!currentScheme.guide_data.show_carparts_on_top ? (\r\n            <CarParts\r\n              layers={layerList}\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          {currentScheme.guide_data.show_carparts_on_top ? (\r\n            <CarParts\r\n              layers={layerList}\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            trRef={activeTransformerRef}\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              trRef={hoveredTransformerRef}\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ScreenLoader />\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n\r\n  const handleBlur = useCallback(() => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  }, [value, min, max, setValue]);\r\n\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? Math.max(min, 0)\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onChange(event.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { AccordionSummary } from \"components/MaterialUI\";\r\n\r\nexport const CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { CustomAccordionSummary } from \"./styles\";\r\n\r\nexport const SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            {colorKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Color\r\n                  </Typography>\r\n                  <ColorPickerInput\r\n                    value={values[colorKey]}\r\n                    onChange={(color) => setFieldValue(colorKey, color)}\r\n                    onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                    error={Boolean(errors[colorKey])}\r\n                    helperText={errors[colorKey]}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {opacityKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <SliderInput\r\n                  label=\"Opacity\"\r\n                  min={0}\r\n                  max={1}\r\n                  step={0.01}\r\n                  value={values[opacityKey]}\r\n                  setValue={(value) => setFieldValue(opacityKey, value)}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, FormControlLabel } from \"components/MaterialUI\";\r\n\r\nexport const CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Checkbox,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { SubForm } from \"./sub-form\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { CustomFormControlLabel, CustomDialogContent } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(({ onCancel, ...formProps }) => {\r\n  return (\r\n    <Form onSubmit={formProps.handleSubmit} noValidate>\r\n      <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n        <Box maxHeight=\"70vh\" pr={5} overflow=\"auto\">\r\n          <SubForm\r\n            label=\"Car Mask\"\r\n            colorKey=\"carmask_color\"\r\n            opacityKey=\"carmask_opacity\"\r\n            {...formProps}\r\n          />\r\n          <SubForm\r\n            label=\"Wireframe\"\r\n            colorKey=\"wireframe_color\"\r\n            opacityKey=\"wireframe_opacity\"\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_wireframe\"\r\n                        checked={formProps.values.show_wireframe}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_wireframe\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Wireframe for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Sponsor Blocks\"\r\n            colorKey=\"sponsor_color\"\r\n            opacityKey=\"sponsor_opacity\"\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_sponsor\"\r\n                        checked={formProps.values.show_sponsor}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_sponsor\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Sponsor Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Number Blocks\"\r\n            colorKey=\"numberblock_color\"\r\n            opacityKey=\"numberblock_opacity\"\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_numberBlocks\"\r\n                        checked={formProps.values.show_numberBlocks}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_numberBlocks\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Number Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Grid\"\r\n            colorKey=\"grid_color\"\r\n            opacityKey=\"grid_opacity\"\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Column Size\"\r\n                    min={5}\r\n                    max={50}\r\n                    step={1}\r\n                    value={formProps.values.grid_padding}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_padding\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Stroke Width\"\r\n                    min={0.01}\r\n                    max={3}\r\n                    step={0.01}\r\n                    value={formProps.values.grid_stroke}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_stroke\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_grid\"\r\n                        checked={formProps.values.show_grid}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_grid\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Grid for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Car Parts\"\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_carparts_on_top\"\r\n                        checked={formProps.values.show_carparts_on_top}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_carparts_on_top\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Car Parts on top of other layers\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={formProps.isSubmitting || !formProps.isValid}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Form>\r\n  );\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const GuidesSetting = React.memo((props) => {\r\n  const { guide_data, onCancel, onApply } = props;\r\n\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      carmask_color: guide_data.carmask_color || \"\",\r\n      carmask_opacity: guide_data.carmask_opacity || 1,\r\n      wireframe_color: guide_data.wireframe_color || \"\",\r\n      wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n      sponsor_color: guide_data.sponsor_color || \"\",\r\n      sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n      numberblock_color: guide_data.numberblock_color || \"\",\r\n      numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n      grid_color: guide_data.grid_color || \"\",\r\n      grid_opacity: guide_data.grid_opacity || 1,\r\n      grid_padding: guide_data.grid_padding || 10,\r\n      grid_stroke: guide_data.grid_stroke || 0.1,\r\n      show_wireframe: guide_data.show_wireframe || false,\r\n      show_sponsor: guide_data.show_sponsor || false,\r\n      show_numberBlocks: guide_data.show_numberBlocks || false,\r\n      show_grid: guide_data.show_grid || false,\r\n      show_carparts_on_top: guide_data.show_carparts_on_top || false,\r\n    }),\r\n    [guide_data]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={Yup.object().shape({\r\n        carmask_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        wireframe_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        sponsor_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        numberblock_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        grid_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n      })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => <InnerForm {...formProps} onCancel={onCancel} />}\r\n    </Formik>\r\n  );\r\n});\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, Autocomplete } from \"components/MaterialUI\";\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n\r\nexport const CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  Autocomplete,\r\n  TextField,\r\n} from \"components/MaterialUI\";\r\n\r\nimport { CustomDialogContent, CustomAutocomplete } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(\r\n  ({ owner, schemeID, premiumUsers, onCancel, ...formProps }) => {\r\n    const {\r\n      isSubmitting,\r\n      isValid,\r\n      handleSubmit,\r\n      setFieldValue,\r\n      values,\r\n    } = formProps;\r\n    const unInvitedUsers = useMemo(\r\n      () =>\r\n        premiumUsers.filter(\r\n          (user) =>\r\n            user.id !== owner.id &&\r\n            !values.sharedUsers.find((item) => item.user.id === user.id)\r\n        ),\r\n      [premiumUsers, owner, values]\r\n    );\r\n\r\n    const handleNewUserChange = useCallback(\r\n      (user) => {\r\n        setFieldValue(\r\n          `newUser`,\r\n          user\r\n            ? {\r\n                user_id: user.id,\r\n                user: user,\r\n                scheme_id: schemeID,\r\n                accepted: 0,\r\n                editable: 0,\r\n              }\r\n            : null\r\n        );\r\n      },\r\n      [schemeID]\r\n    );\r\n\r\n    const handleNewUserPermissionChange = useCallback((value) => {\r\n      setFieldValue(`newUser['editable']`, value);\r\n    }, []);\r\n\r\n    const handleSharedUserChange = useCallback((value, index) => {\r\n      setFieldValue(`sharedUsers[${index}]['editable']`, value);\r\n    }, []);\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit} noValidate>\r\n        <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n          <Box display=\"flex\" justifyContent=\"space-between\" mb={5} pr={5}>\r\n            <CustomAutocomplete\r\n              options={unInvitedUsers}\r\n              getOptionLabel={(option) => option.id.toString()}\r\n              style={{ width: 200 }}\r\n              onChange={(event, newValue) => {\r\n                handleNewUserChange(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Enter Customer ID\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n            {values.newUser ? (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                flexGrow={1}\r\n                ml={5}\r\n              >\r\n                <Box>\r\n                  <Typography>{values.newUser.user.drivername}</Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    ID #{values.newUser.user.id}\r\n                  </Typography>\r\n                </Box>\r\n                <Box height=\"31px\">\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    value={values.newUser.editable}\r\n                    onChange={(event) =>\r\n                      handleNewUserPermissionChange(event.target.value)\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>Can view</MenuItem>\r\n                    <MenuItem value={1}>{\"Can view & edit\"}</MenuItem>\r\n                    <MenuItem value={-1}>Cancel</MenuItem>\r\n                  </Select>\r\n                </Box>\r\n              </Box>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box maxHeight=\"50vh\" pr={5} overflow=\"auto\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n              <Typography color=\"textSecondary\">{owner.drivername}</Typography>\r\n              <Typography color=\"textSecondary\">Owner</Typography>\r\n            </Box>\r\n            {values.sharedUsers.map((sharedUser, index) => (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                key={index}\r\n                mb={2}\r\n              >\r\n                <Typography color=\"textSecondary\">\r\n                  {sharedUser.user.drivername}\r\n                </Typography>\r\n                <Select\r\n                  variant=\"outlined\"\r\n                  value={sharedUser.editable}\r\n                  onChange={(event) =>\r\n                    handleSharedUserChange(event.target.value, index)\r\n                  }\r\n                >\r\n                  <MenuItem value={0}>Can view</MenuItem>\r\n                  <MenuItem value={1}>{\"Can view & edit\"}</MenuItem>\r\n                  <MenuItem value={-1}>Remove</MenuItem>\r\n                </Select>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </CustomDialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            disabled={isSubmitting || !isValid}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n","import React, { useMemo } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const SharingSetting = React.memo((props) => {\r\n  const { ownerID, schemeID, userList, sharedUsers, onCancel, onApply } = props;\r\n  const owner = useMemo(() => userList.find((item) => item.id === ownerID), [\r\n    ownerID,\r\n    userList,\r\n  ]);\r\n  const premiumUsers = useMemo(() => userList.filter((item) => item.pro_user), [\r\n    userList,\r\n  ]);\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      newUser: null,\r\n      sharedUsers: sharedUsers,\r\n    }),\r\n    [sharedUsers]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      // validationSchema={Yup.object().shape({\r\n      //   user_id: Yup.number().min(0),\r\n      // })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm\r\n          {...formProps}\r\n          owner={owner}\r\n          schemeID={schemeID}\r\n          premiumUsers={premiumUsers}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport { Tab, Tabs, Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`project-settings-tabpanel-${index}`}\r\n      aria-labelledby={`project-settings-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const a11yProps = (index) => {\r\n  return {\r\n    id: `project-settings-tab-${index}`,\r\n    \"aria-controls\": `project-settings-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nexport const StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n  root: {\r\n    paddingLeft: \"24px\",\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport const StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: \"10px\",\r\n    padding: \"6px 5px\",\r\n    minWidth: 120,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport { Box, Dialog, DialogTitle } from \"components/MaterialUI\";\r\nimport { GuidesSetting, SharingSetting } from \"./components\";\r\nimport { StyledTabs, StyledTab, TabPanel, a11yProps } from \"./styles\";\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const {\r\n    ownerID,\r\n    schemeID,\r\n    userList,\r\n    sharedUsers,\r\n    guide_data,\r\n    onCancel,\r\n    open,\r\n    onApplyGuideSettings,\r\n    onApplySharingSetting,\r\n  } = props;\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n    },\r\n    [setTabValue]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Project Settings</DialogTitle>\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        aria-label=\"Project Settings Tab\"\r\n      >\r\n        <StyledTab label=\"Painting Guides\" {...a11yProps(0)} />\r\n        <StyledTab label=\"Sharing\" {...a11yProps(1)} />\r\n      </StyledTabs>\r\n      <Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <GuidesSetting\r\n            guide_data={guide_data}\r\n            onApply={onApplyGuideSettings}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <SharingSetting\r\n            ownerID={ownerID}\r\n            schemeID={schemeID}\r\n            userList={userList}\r\n            sharedUsers={sharedUsers}\r\n            onApply={onApplySharingSetting}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import SchemeSettingsDialog from \"./SchemeSettingsDialog\";\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n  setLoaded as setSchemeLoaded,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { clearFrameSize } from \"redux/reducers/boardReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/scheme-settings-dialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearFrameSize());\r\n    dispatch(setSchemeLoaded(false));\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplyProjectSettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  const handleApplySharingSetting = useCallback(\r\n    (data) => {\r\n      console.log(data);\r\n\r\n      setDialog(null);\r\n    },\r\n    [dispatch, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        ownerID={currentScheme.user_id}\r\n        schemeID={currentScheme.id}\r\n        sharedUsers={sharedUsers}\r\n        userList={userList}\r\n        guide_data={guide_data}\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApplyGuideSettings={handleApplyProjectSettings}\r\n        onApplySharingSetting={handleApplySharingSetting}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Root = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 60px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Root>\r\n      <CircularProgress m={2} color=\"secondary\" />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? []\r\n        : legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? false\r\n        : legacyMode\r\n        ? limit < basePaints.length\r\n        : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3} spacing={8}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  const filteredOverlays = useMemo(\r\n    () =>\r\n      overlays.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(search.toLowerCase())\r\n      ),\r\n    [overlays, search]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 30;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const filteredLogos = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type !== \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const filteredFlags = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type === \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const increaseLogoData = useCallback(() => {\r\n    setLogoLimit(logoLimit + step);\r\n  }, [logoLimit, step, setLogoLimit]);\r\n\r\n  const increaseFlagData = useCallback(() => {\r\n    setFlagLimit(flagLimit + step);\r\n  }, [flagLimit, step, setFlagLimit]);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n      setSearch(\"\");\r\n    },\r\n    [setTabValue, setSearch]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 30;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = useCallback(\r\n    (fontFamily, fontFile) => {\r\n      let fontObject = new FontFace(fontFamily, fontFile);\r\n      fontObject\r\n        .load()\r\n        .then(function (loaded_face) {\r\n          document.fonts.add(loaded_face);\r\n          dispatch(insertToLoadedFontList(fontFamily));\r\n        })\r\n        .catch(function (error) {\r\n          // error occurred\r\n          console.warn(error, fontFamily);\r\n        });\r\n    },\r\n    [insertToLoadedFontList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() => setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)}\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Background Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { rotateAroundCenter } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    stageRef,\r\n    currentLayer,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  const handleChangeRotation = useCallback(\r\n    (value) => {\r\n      if (\r\n        ![\r\n          MouseModes.CIRCLE,\r\n          MouseModes.ELLIPSE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n          MouseModes.ARROW,\r\n          MouseModes.PEN,\r\n        ].includes(currentLayer.layer_data.type)\r\n      ) {\r\n        const stage = stageRef.current;\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n        const newRot = (value / 180) * Math.PI;\r\n        const boundBox = {\r\n          x: selectedNode.x(),\r\n          y: selectedNode.y(),\r\n          width: selectedNode.width(),\r\n          height: selectedNode.height(),\r\n          rotation: (selectedNode.rotation() / 180) * Math.PI,\r\n        };\r\n\r\n        const newBoundBox = rotateAroundCenter(\r\n          boundBox,\r\n          newRot - boundBox.rotation\r\n        );\r\n\r\n        setFieldValue(\"layer_data.left\", newBoundBox.x);\r\n        setFieldValue(\"layer_data.top\", newBoundBox.y);\r\n      }\r\n      setFieldValue(\"layer_data.rotation\", value);\r\n    },\r\n    [currentLayer, rotateAroundCenter]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={handleChangeRotation}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n    onDelete,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"clone\") &&\r\n    !AllowedLayerTypes.includes(\"delete\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {AllowedLayerTypes.includes(\"delete\") ? (\r\n        <Box width=\"100%\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    stageRef,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onDelete,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        if (!currentLayer) return false;\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          stageRef={stageRef}\r\n          currentLayer={currentLayer}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty {...formProps} onClone={onClone} onDelete={onDelete} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { stageRef, onClone, onDelete } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const initialValues = useMemo(\r\n    () =>\r\n      currentLayer\r\n        ? {\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }\r\n        : { ...defaultValues },\r\n    [defaultValues, currentLayer]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleDelete = useCallback(() => {\r\n    if (currentLayer) onDelete(currentLayer);\r\n  }, [onDelete, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              user={user}\r\n              stageRef={stageRef}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onDelete={handleDelete}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper py={5} px={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        height=\"34px\"\r\n      >\r\n        <Typography variant=\"h5\" noWrap>\r\n          Properties\r\n        </Typography>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport {\r\n  getScheme,\r\n  setSaving,\r\n  setLoaded,\r\n  getSharedUsers,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\nimport { getUserList } from \"redux/reducers/userReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n  const activeTransformerRef = useRef(null);\r\n  const hoveredTransformerRef = useRef(null);\r\n\r\n  const [user, userRef] = useReducerRef(\r\n    useSelector((state) => state.authReducer.user)\r\n  );\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoom = useCallback(\r\n    (newScale) => {\r\n      if (currentLayer && currentLayer.layer_data) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n\r\n        const { x: pointerX, y: pointerY } = selectedNode.getAbsolutePosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n\r\n        dispatch(setZoom(newScale));\r\n\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      } else {\r\n        dispatch(setZoom(newScale));\r\n      }\r\n    },\r\n    [dispatch, currentLayer, stageRef.current]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n\r\n  const handleZoomOut = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n    },\r\n    [dispatch, getZoomedCenterPosition, stageRef, frameSize, zoom]\r\n  );\r\n  const handleDeleteLayer = useCallback(\r\n    (layer) => {\r\n      setConfirmMessage(`Are you sure to delete \"${layer.layer_data.name}\"?`);\r\n    },\r\n    [setConfirmMessage]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          handleDeleteLayer(currentLayer);\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          } else if (currentLayer) {\r\n            dispatch(setCurrentLayer(null));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      handleCloneLayer,\r\n      handleDeleteLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `car_${userRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    userRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(\r\n          getScheme(params.id, () => {\r\n            if (!uploadsInitialized) {\r\n              dispatch(getUploadListByUserID(user.id));\r\n            }\r\n            if (!overlayList.length) dispatch(getOverlayList());\r\n            if (!logoList.length) dispatch(getLogoList());\r\n            if (!fontList.length) dispatch(getFontList());\r\n            if (!userList.length) dispatch(getUserList());\r\n            if (!sharedUsers.length) dispatch(getSharedUsers(params.id));\r\n          })\r\n        );\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box\r\n            width=\"100%\"\r\n            height=\"calc(100% - 50px)\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper background=\"#282828\" overflow=\"hidden\" flexGrow=\"1\">\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n                activeTransformerRef={activeTransformerRef}\r\n                hoveredTransformerRef={hoveredTransformerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar\r\n              stageRef={stageRef}\r\n              onClone={handleCloneLayer}\r\n              onDelete={handleDeleteLayer}\r\n            />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    height: \"26px\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      onChange(event.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}