{"version":3,"sources":["dialogs/ProjectSelectDialog.jsx","dialogs/OpenProjectDialog.jsx","dialogs/CreateProjectDialog.jsx","pages/project/index.jsx","helper/index.js"],"names":["Button","styled","MuiButton","spacing","ProjectSelectDialog","props","onCreateProject","onOpenProject","open","Dialog","aria-labelledby","DialogTitle","id","DialogContent","dividers","Box","display","flexDirection","onClick","color","variant","mb","SchemeWrapper","OpenProjectDialog","schemeList","onCancel","length","map","scheme","Typography","name","getDifferenceFromToday","date_modified","DialogActions","Autocomplete","MuiAutocomplete","CustomDialogActions","NameField","TextField","useState","carMake","setCarMake","setName","onContinue","carMakeList","sortedCarMakesList","_","orderBy","options","groupBy","option","car_type","getOptionLabel","style","width","onChange","event","newValue","renderInput","params","label","value","target","disabled","Scheme","dispatch","useDispatch","history","useHistory","dialog","setDialog","user","useSelector","state","authReducer","carMakeReducer","list","schemeReducer","currentScheme","current","schemeLoading","loading","carMakeLoading","useEffect","getSchemeList","getCarMakeList","push","height","ScreenLoader","schemeID","console","log","getScheme","CreateProjectDialog","createScheme","createSchemeFromCarMake","past_date","difference_In_Second","Date","getTime","Math","round","difference_In_Min","difference_In_Hour","difference_In_Day","hexToRgba","hex","result","exec","r","parseInt","g","b","a","mathRound2","num","Number","EPSILON","colorValidator","validateColor","getRelativePointerPosition","node","transform","getAbsoluteTransform","copy","invert","pos","getStage","getPointerPosition","point","getRelativeShadowOffset","boardRotate","offset","shadowOffset","x","y"],"mappings":"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","file":"static/js/5.5498ee5d.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const { onCreateProject, onOpenProject, open } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Paint Builder</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          <Button\r\n            onClick={onCreateProject}\r\n            color=\"default\"\r\n            variant=\"outlined\"\r\n            mb={1}\r\n          >\r\n            CREATE A NEW PAINT\r\n          </Button>\r\n          <Button onClick={onOpenProject} color=\"default\" variant=\"outlined\">\r\n            OPEN A PAINT BUILDER PROJECT\r\n          </Button>\r\n        </Box>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProjectSelectDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport { getDifferenceFromToday } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst SchemeWrapper = styled(Box)`\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst OpenProjectDialog = (props) => {\r\n  const { schemeList, onCreateProject, onOpenProject, onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">\r\n        Open a Paint Builder Project\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {schemeList && schemeList.length ? (\r\n            schemeList.map((scheme) => (\r\n              <SchemeWrapper\r\n                onClick={() => onOpenProject(scheme.id)}\r\n                key={scheme.id}\r\n              >\r\n                <Typography variant=\"body1\">{scheme.name}</Typography>\r\n                <Typography variant=\"body2\">\r\n                  Last modified {getDifferenceFromToday(scheme.date_modified)}\r\n                </Typography>\r\n              </SchemeWrapper>\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onCreateProject} color=\"default\" variant=\"outlined\">\r\n          NEW\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OpenProjectDialog;\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomDialogActions = styled(DialogActions)`\r\n  padding-right: 24px;\r\n`;\r\nconst NameField = styled(TextField)`\r\n  .MuiInputBase-root {\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const [carMake, setCarMake] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const { onContinue, onCancel, open, carMakeList } = props;\r\n\r\n  let sortedCarMakesList = _.orderBy(\r\n    [...carMakeList],\r\n    [\"name\", \"car_type\"],\r\n    [\"asc\", \"asc\"]\r\n  );\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Create a new paint</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {carMakeList && carMakeList.length ? (\r\n            <Autocomplete\r\n              id=\"car-make-select\"\r\n              options={sortedCarMakesList}\r\n              groupBy={(option) => option.car_type}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 500 }}\r\n              mb={4}\r\n              onChange={(event, newValue) => {\r\n                setCarMake(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Vehicle\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <NameField\r\n            label=\"Name\"\r\n            value={name}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <CustomDialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onContinue(carMake, name)}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!carMake ? true : false}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </CustomDialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProjectSelectDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport ProjectSelectDialog from \"dialogs/ProjectSelectDialog\";\r\nimport OpenProjectDialog from \"dialogs/OpenProjectDialog\";\r\nimport CreateProjectDialog from \"dialogs/CreateProjectDialog\";\r\n\r\nimport {\r\n  getSchemeList,\r\n  createScheme,\r\n  getScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getCarMakeList } from \"redux/reducers/carMakeReducer\";\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(\"ProjectSelectDialog\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const carMakeList = useSelector((state) => state.carMakeReducer.list);\r\n  const schemeList = useSelector((state) => state.schemeReducer.list);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!schemeList.length) dispatch(getSchemeList(user.id));\r\n      if (!carMakeList.length) dispatch(getCarMakeList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      history.push(`/scheme/${currentScheme.id}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentScheme]);\r\n\r\n  const openScheme = (schemeID) => {\r\n    console.log(\"Opening scheme: \", schemeID);\r\n    dispatch(getScheme(schemeID));\r\n    setDialog(null);\r\n  };\r\n\r\n  const createSchemeFromCarMake = (carMake, name) => {\r\n    dispatch(createScheme(carMake, name, user.id));\r\n    setDialog(null);\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      {schemeLoading || carMakeLoading || !schemeList || !carMakeList ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <>\r\n          <ProjectSelectDialog\r\n            open={dialog === \"ProjectSelectDialog\"}\r\n            onCreateProject={() => setDialog(\"CreateProjectDialog\")}\r\n            onOpenProject={() => setDialog(\"OpenProjectDialog\")}\r\n            onCancel={() => setDialog(null)}\r\n          />\r\n          <OpenProjectDialog\r\n            schemeList={schemeList}\r\n            open={dialog === \"OpenProjectDialog\"}\r\n            onCreateProject={() => setDialog(\"CreateProjectDialog\")}\r\n            onOpenProject={(scheme) => openScheme(scheme)}\r\n            onCancel={() => setDialog(\"ProjectSelectDialog\")}\r\n          />\r\n          <CreateProjectDialog\r\n            carMakeList={carMakeList}\r\n            open={dialog === \"CreateProjectDialog\"}\r\n            onContinue={(carMake, name) =>\r\n              createSchemeFromCarMake(carMake, name)\r\n            }\r\n            onCancel={() => setDialog(\"ProjectSelectDialog\")}\r\n          />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n\r\nexport const getRelativePointerPosition = (node) => {\r\n  var transform = node.getAbsoluteTransform().copy();\r\n  // to detect relative position we need to invert transform\r\n  transform.invert();\r\n  // get pointer (say mouse or touch) position\r\n  var pos = node.getStage().getPointerPosition();\r\n  // now we can find relative point\r\n  return transform.point(pos);\r\n};\r\n\r\nexport const getRelativeShadowOffset = (boardRotate, offset) => {\r\n  let shadowOffset = { ...offset };\r\n  if (boardRotate === 90) {\r\n    shadowOffset.x = -offset.y;\r\n    shadowOffset.y = offset.x;\r\n  } else if (boardRotate === 180) {\r\n    shadowOffset.x = -offset.x;\r\n    shadowOffset.y = -offset.y;\r\n  } else if (boardRotate === 270) {\r\n    shadowOffset.x = offset.y;\r\n    shadowOffset.y = -offset.x;\r\n  }\r\n  return shadowOffset;\r\n};\r\n"],"sourceRoot":""}