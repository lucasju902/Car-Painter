{"version":3,"sources":["hooks/useReducerRef.jsx","utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["useReducerRef","value","ref","useRef","useEffect","current","Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","Math","max","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","draggable","red","hexToRgba","r","green","g","blue","b","e","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","useMemo","grid_padding","gridStroke","grid_stroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","bgColor","paddingX","paddingY","imageshapeRef","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","borderEnabled","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","helpingSponsor","setHelpingSponsor","useResizeDetector","currentCarMake","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","showSponsorBlock","show","setPaintingGuides","handleLayerDragStart","show_sponsor","handleLayerDragEnd","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","legacy_mode","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","Palette","deferred","hideTextfield","MuiButton","CustomAccordionSummary","AccordionSummary","CustomFormControlLabel","FormControlLabel","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","control","Checkbox","checked","labelPlacement","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","handleGoBack","clearFrameSize","setSchemeLoaded","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","getDescription","base_description","name_short","dataLength","next","loader","Loader","scrollableTarget","cellHeight","cols","alt","GridListTileBar","subtitle","CustomDialogContent","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","increaseData","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","params","param","PropertyBar","defaultValues","handleClone","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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","file":"static/js/6.bca1e8a8.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useReducerRef = (value) => {\r\n  const ref = useRef(value);\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return [value, ref];\r\n};\r\n","/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n    if (onDragStart) onDragStart();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n    if (onDragEnd) onDragEnd();\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n    if (onDragStart) onDragStart();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n    if (onDragEnd) onDragEnd();\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        const imageNode = imageshapeRef.current;\r\n        imageNode.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageNode.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect width={props.width} height={props.height} fill={bgColor} />\r\n      <Image\r\n        x={paddingX}\r\n        y={paddingY}\r\n        width={props.width - 2 * paddingX}\r\n        height={props.height - 2 * paddingY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n    if (onDragStart) onDragStart();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n    if (onDragEnd) onDragEnd();\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n    if (onDragStart) onDragStart();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n            top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n    if (onDragEnd) onDragEnd();\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x() - offsetsFromStroke.x),\r\n            top: mathRound2(node.y() - offsetsFromStroke.y),\r\n            width: mathRound2(\r\n              Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n            ),\r\n            height: mathRound2(\r\n              Math.max(1, height * Math.abs(scaleY)) - offsetsFromStroke.height\r\n            ),\r\n            radius: node.radius\r\n              ? mathRound2(\r\n                  Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.radius\r\n                )\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.innerRadius\r\n                )\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.outerRadius\r\n                )\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [helpingSponsor, setHelpingSponsor] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showSponsorBlock = useCallback(\r\n    (show = true) => {\r\n      console.log(show, paintingGuides);\r\n      if (show && !paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)) {\r\n        dispatch(\r\n          setPaintingGuides([...paintingGuides, PaintingGuides.SPONSORBLOCKS])\r\n        );\r\n      }\r\n      if (!show && paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)) {\r\n        dispatch(\r\n          setPaintingGuides(\r\n            paintingGuides.filter(\r\n              (item) => item !== PaintingGuides.SPONSORBLOCKS\r\n            )\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [dispatch, paintingGuides]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_sponsor &&\r\n      !paintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n    ) {\r\n      showSponsorBlock(true);\r\n      setHelpingSponsor(true);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentScheme,\r\n    helpingSponsor,\r\n    showSponsorBlock,\r\n    setHelpingSponsor,\r\n  ]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (currentScheme.guide_data.show_sponsor && helpingSponsor) {\r\n      showSponsorBlock(false);\r\n      setHelpingSponsor(false);\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentScheme,\r\n    helpingSponsor,\r\n    showSponsorBlock,\r\n    setHelpingSponsor,\r\n  ]);\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={frameSize.width / 2}\r\n        offsetY={frameSize.height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n            onDragStart={handleLayerDragStart}\r\n            onDragEnd={handleLayerDragEnd}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\nconst CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n          show_sponsor: guide_data.show_sponsor || false,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                      <CustomFormControlLabel\r\n                        control={\r\n                          <Checkbox\r\n                            color=\"primary\"\r\n                            name=\"show_sponsor\"\r\n                            checked={formProps.values.show_sponsor}\r\n                            onChange={(event) =>\r\n                              formProps.setFieldValue(\r\n                                \"show_sponsor\",\r\n                                event.target.checked\r\n                              )\r\n                            }\r\n                          />\r\n                        }\r\n                        label=\"Show Sponsor Block for Repositioning\"\r\n                        labelPlacement=\"start\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n  setLoaded as setSchemeLoaded,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { clearFrameSize } from \"redux/reducers/boardReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearFrameSize());\r\n    dispatch(setSchemeLoaded(false));\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      legacyMode ? limit < basePaints.length : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n  const getDescription = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_description : carMake.name_short;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n                <GridListTileBar\r\n                  title={getTitle(item)}\r\n                  subtitle={getDescription(item)}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredOverlays = overlays.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() => setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)}\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Background Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { onClone } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              user={user}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n    },\r\n    [dispatch, getZoomedCenterPosition, stageRef, frameSize, zoom]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      handleCloneLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar onClone={handleCloneLayer} />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}