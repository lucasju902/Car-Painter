{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","Math","max","min","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","length","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","shadowOffsetX","shadowOffsetY","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","sizeLocked","scaleLocked","enabledAnchors","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","css","palette","Palette","deferred","hideTextfield","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","PropertyBar","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","nullable","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON","hex","result","exec"],"mappings":"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","file":"static/js/6.b347a463.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport Helper from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    // if (node.width() < 2.5 || node.height() < 2.5) {\r\n    //   return 15;\r\n    // }\r\n    // if (node.width() < 5 || node.height() < 5) {\r\n    //   return 10;\r\n    // }\r\n    // if (node.width() < 10 || node.height() < 10) {\r\n    //   return 7;\r\n    // }\r\n    // if (node.width() < 30 || node.height() < 30) {\r\n    //   return 4;\r\n    // }\r\n    // if (node.width() < 50 || node.height() < 50) {\r\n    //   return 2;\r\n    // }\r\n    // if (node.width() < 200 || node.height() < 200) {\r\n    //   return 1.5;\r\n    // }\r\n    // return 1;\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(1, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor ? Helper.hexToRgba(filterColor).r : null}\r\n      green={filterColor ? Helper.hexToRgba(filterColor).g : null}\r\n      blue={filterColor ? Helper.hexToRgba(filterColor).b : null}\r\n      alpha={filterColor ? Helper.hexToRgba(filterColor).a / 255 : null}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      // onTransform={handleTransform}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left || 0)}\r\n          y={parseFloat(layer.layer_data.top || 0)}\r\n          filterColor={layer.layer_data.color}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          opacity={layer.layer_data.opacity}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          shadowColor={layer.layer_data.shadowColor}\r\n          shadowBlur={layer.layer_data.shadowBlur}\r\n          shadowOpacity={layer.layer_data.shadowOpacity}\r\n          shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n          shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        // width: Helper.mathRound2(Math.max(5, node.width())),\r\n        // height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n              shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n            shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked\r\n            ? true\r\n            : false\r\n        }\r\n        enabledAnchors={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <ColorPicker\r\n        value={value || \"\"}\r\n        onChange={(color) => onChange(color.css.backgroundColor)}\r\n        palette={Palette}\r\n        deferred\r\n        hideTextfield\r\n      />\r\n      <ColorInputField\r\n        value={value || \"\"}\r\n        onChange={(event) => onChange(event.target.value)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  if (errors !== {}) {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label=\"Width\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked ? <LinkIcon /> : <LinkOfficon />}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label=\"Height\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked ? <LinkIcon /> : <LinkOfficon />}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOpacity\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOffsetX\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowColor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowBlur\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOpacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n            shadowColor: null,\r\n            shadowBlur: 0,\r\n            shadowOpacity: 1,\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string().nullable(),\r\n              size: Yup.number(),\r\n              scolor: Yup.string().nullable(),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string().nullable(),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      (key === \"del\" || key === \"backspace\") &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n    if (key === \"esc\" && event.target.tagName !== \"INPUT\" && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n  hexToRgba,\r\n};\r\n"],"sourceRoot":""}