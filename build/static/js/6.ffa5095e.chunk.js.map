{"version":3,"sources":["components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","Popover","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","width","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","value","onChange","event","parseInt","target","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","useCallback","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","Undo","length","Redo","endIcon","toFixed","URLImage","src","tellSize","onSelect","onHover","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","useMemo","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","guide_data","right","RotateLeft","RotateRight","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","key","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleDiscardName","handleGoBack","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","base","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","CornerProperty","isDirty","PropertyBar","defaultValues","handleApply","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","origin","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","indexOf","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","enableCarMask","setAttrs","draw","baseLayerURL","toDataURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","dataURL","blob","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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","file":"static/js/6.ffa5095e.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = (event) => {\r\n    setZoom(parseInt(event.target.value || 0) / 100.0);\r\n  };\r\n  const handleZoom100 = () => {\r\n    setZoom(1);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const { onZoomIn, onZoomOut, onZoomFit, onChangePaintingGuides } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            (item.layer_type === LayerTypes.LOGO ||\r\n              item.layer_type === LayerTypes.UPLOAD ||\r\n              item.layer_type === LayerTypes.TEXT) &&\r\n            item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n    onHover,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: \"#000000\",\r\n              scolor: \"#000000\",\r\n              stroke: 1,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            currentLayer={currentLayer}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, baseColor, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (base) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flop\",\r\n                    values.layer_data.flop ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flip\",\r\n                    values.layer_data.flip ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    ...formProps\r\n  }) => {\r\n    const isDirty = useMemo(() => {\r\n      for (let i in formProps.values.layer_data) {\r\n        if (formProps.values.layer_data[i] != currentLayer.layer_data[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      for (let i in formProps.values) {\r\n        if (i != \"layer_data\" && formProps.values[i] != currentLayer[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }, [formProps.values, currentLayer]);\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n          {formProps.isValid && isDirty ? (\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n              Apply\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n        <GeneralProperty {...formProps} toggleField={toggleField} />\r\n        <FontProperty {...formProps} fontList={fontList} />\r\n        <ColorProperty {...formProps} />\r\n        <StrokeProperty {...formProps} />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n        />\r\n        <PositionProperty {...formProps} />\r\n        <RotationProperty {...formProps} toggleField={toggleField} />\r\n        <ShadowProperty {...formProps} />\r\n        <CornerProperty {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (enableCarMask = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const pixelRatio = 0.5;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && enableCarMask) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(\r\n          baseLayerImg,\r\n          0,\r\n          0,\r\n          baseLayerImg.width,\r\n          baseLayerImg.height\r\n        );\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(\r\n          mainLayerImg,\r\n          0,\r\n          0,\r\n          mainLayerImg.width,\r\n          mainLayerImg.height\r\n        );\r\n      }\r\n      if (carMaskLayerImg) {\r\n        ctx.drawImage(\r\n          carMaskLayerImg,\r\n          0,\r\n          0,\r\n          carMaskLayerImg.width,\r\n          carMaskLayerImg.height\r\n        );\r\n      }\r\n      return canvas.toDataURL(\"image/png\");\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        let dataURL = await takeScreenshot();\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}