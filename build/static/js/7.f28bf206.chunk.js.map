{"version":3,"sources":["utils/tga.js","dialogs/ZoomPopover.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/SubForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/GuidesSetting.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/SharingSetting.jsx","dialogs/scheme-settings-dialog/styles.jsx","dialogs/scheme-settings-dialog/SchemeSettingsDialog.jsx","dialogs/scheme-settings-dialog/index.js","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","components/Loader.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/LightTooltip.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","CustomInput","Input","SliderWrapper","Wrapper","Grid","SliderInput","props","label","disabled","min","max","setValue","step","handleBlur","container","item","xs","mr","Slider","aria-labelledby","ValueLabelComponent","Tooltip","enterTouchDelay","placement","title","children","margin","Math","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","error","helperText","handleInputKeyDown","key","bgcolor","borderRadius","m","css","backgroundColor","Palette","deferred","hideTextfield","CustomAccordionSummary","AccordionSummary","SubForm","editable","colorKey","opacityKey","errors","setFieldValue","handleChange","values","touched","extraChildren","useState","expanded","setExpanded","expandIcon","ExpandMore","sm","CustomFormControlLabel","FormControlLabel","CustomDialogContent","DialogContent","InnerForm","onCancel","formProps","onSubmit","handleSubmit","noValidate","dividers","maxHeight","pr","overflow","control","name","checked","show_wireframe","labelPlacement","show_sponsor","show_numberBlocks","grid_padding","grid_stroke","show_grid","show_carparts_on_top","isSubmitting","isValid","GuidesSetting","guide_data","onApply","initialValues","useMemo","carmask_color","carmask_opacity","wireframe_color","wireframe_opacity","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","grid_color","grid_opacity","validationSchema","Yup","shape","nullable","test","colorValidator","validate","console","log","CustomAutocomplete","Autocomplete","owner","currentUserID","schemeID","premiumUsers","unInvitedUsers","filter","user","sharedUsers","find","user_id","isOwner","handleNewUserChange","scheme_id","accepted","handleNewUserPermissionChange","handleSharedUserChange","options","getOptionLabel","option","toString","style","newValue","renderInput","params","newUser","flexGrow","ml","mt","drivername","map","sharedUser","SharingSetting","ownerID","userList","pro_user","TabPanel","other","role","hidden","a11yProps","StyledTabs","withStyles","indicator","root","paddingLeft","Tabs","TabIndicatorProps","StyledTab","theme","textTransform","fontWeight","typography","fontWeightRegular","fontSize","marginRight","padding","minWidth","opacity","Tab","disableRipple","SchemeSettingsDialog","onApplyGuideSettings","onApplySharingSetting","tabValue","setTabValue","handleTabChange","fullWidth","maxWidth","aria-label","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","div","ZoomButton","Toolbar","onChangePaintingGuides","onDownloadTGA","dialog","setDialog","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","showProperties","currentScheme","schemeReducer","current","userReducer","list","currentUser","authReducer","handleToggleProperties","setShowProperties","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","handleApplyProjectSettings","updateScheme","handleApplySharingSetting","createSharedUser","setMessage","message","deleteSharedUserItem","updateSharedUserItem","alignContent","ToggleButtonGroup","PaintingGuides","CARMASK","LightTooltip","arrow","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","DialogTypes","SETTINGS","Settings","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","useRef","shapeRef","image","setImage","filters","Konva","Filters","RGBA","getPixelRatio","node","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","handleDragStart","e","handleDragEnd","handleTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onTransformEnd","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","gridStroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","visible","Array","round","points","stroke","strokeWidth","PaintingGuideCarMask","PaintingGuideBottom","CarParts","layers","filteredLayers","_","orderBy","layer_type","LayerTypes","CAR","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","bgColor","paddingX","paddingY","imageshapeRef","imageNode","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","font","text","font_name","font_file","size","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","trRef","selectedLayer","pressedKey","hoveredTransform","keepRatio","sizeLocked","scaleLocked","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","boundBoxFunc","oldBoundBox","newBoundBox","diff","getSnapRotation","rotateAroundCenter","enabledAnchors","borderEnabled","rotateEnabled","borderStroke","RotationButton","Board","wrapperWidth","wrapperHeight","wrapperRef","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","activeTransformerRef","hoveredTransformerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","previousGuide","setPreviousGuide","currentCarMake","carMakeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","push","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","showGuideForRepositioning","show","newPaintingGuides","setPaintingGuides","handleLayerDragStart","handleLayerDragEnd","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","cursor","base_color","legacy_mode","right","RotateLeft","RotateRight","ScreenLoader","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Dialog","DialogTitle","Object","keys","CustomIcon","FontAwesomeIcon","NameInput","TitleBar","onBack","setName","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","px","my","Save","icon","faChevronLeft","SHORTCUTS","faQuestion","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","MuiButton","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","Root","Loader","CircularProgress","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","increaseData","dataLength","next","loader","scrollableTarget","cellHeight","cols","alt","DialogActions","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overlay_thumb","GridListTileBar","subtitle","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","logos","onOpenLogo","filteredLogos","filteredFlags","increaseLogoData","increaseFlagData","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","handleApplySettings","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","Accordion","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","handleChangeRotation","newRot","PI","boundBox","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","onDelete","SkewProperty","param","PropertyBar","defaultValues","handleClone","handleDelete","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","history","useHistory","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","useResizeDetector","useReducerRef","userRef","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","shared","setHoveredJSONItem","getAbsolutePosition","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleDeleteLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","stageAttrs","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","uploadLater","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","handleGoBack","clearFrameSize","clearSharedUsers","clearCurrentScheme","clearCurrentLayer","setLoadedStatusAll","setLoaded","getScheme","scheme","tempsharedUsers","getUploadListByUserID","getOverlayList","getLogoList","getFontList","getUserList","getSharedUsers","interval","setInterval","thumbnailInterval","clearInterval","SocketClient","connect","on","emit","updateLayerListItem","deleteLayerListItem","updateSchemeListItem","setCurrentScheme","insertToLayerList","disconnect","k","Helmet","handleKeys","onKeyEvent","handleEventType","tooltip","boxShadow","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","input"],"mappings":"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","file":"static/js/7.f28bf206.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, disabled, min, max, value, setValue, step } = props;\r\n\r\n  const handleBlur = useCallback(() => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  }, [value, min, max, setValue]);\r\n\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              disabled={disabled}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            disabled={disabled}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? Math.max(min, 0)\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, disabled, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onChange(event.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {disabled ? (\r\n          <Box\r\n            width=\"24px\"\r\n            height=\"24px\"\r\n            bgcolor={value || \"white\"}\r\n            borderRadius=\"5px\"\r\n            m=\"4px\"\r\n          ></Box>\r\n        ) : (\r\n          <ColorPicker\r\n            value={value || \"\"}\r\n            onChange={(color) => onChange(color.css.backgroundColor)}\r\n            palette={Palette}\r\n            deferred\r\n            hideTextfield\r\n          />\r\n        )}\r\n\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          disabled={disabled}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { AccordionSummary } from \"components/MaterialUI\";\r\n\r\nexport const CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { CustomAccordionSummary } from \"./styles\";\r\n\r\nexport const SubForm = (props) => {\r\n  const {\r\n    label,\r\n    editable,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            {colorKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Color\r\n                  </Typography>\r\n                  <ColorPickerInput\r\n                    disabled={!editable}\r\n                    value={values[colorKey]}\r\n                    onChange={(color) => setFieldValue(colorKey, color)}\r\n                    onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                    error={Boolean(errors[colorKey])}\r\n                    helperText={errors[colorKey]}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {opacityKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <SliderInput\r\n                  label=\"Opacity\"\r\n                  disabled={!editable}\r\n                  min={0}\r\n                  max={1}\r\n                  step={0.01}\r\n                  value={values[opacityKey]}\r\n                  setValue={(value) => setFieldValue(opacityKey, value)}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, FormControlLabel } from \"components/MaterialUI\";\r\n\r\nexport const CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Checkbox,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { SubForm } from \"./sub-form\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { CustomFormControlLabel, CustomDialogContent } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(({ editable, onCancel, ...formProps }) => {\r\n  return (\r\n    <Form onSubmit={formProps.handleSubmit} noValidate>\r\n      <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n        <Box maxHeight=\"70vh\" pr={5} overflow=\"auto\">\r\n          <SubForm\r\n            label=\"Car Mask\"\r\n            colorKey=\"carmask_color\"\r\n            opacityKey=\"carmask_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n          />\r\n          <SubForm\r\n            label=\"Wireframe\"\r\n            colorKey=\"wireframe_color\"\r\n            opacityKey=\"wireframe_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_wireframe\"\r\n                        checked={formProps.values.show_wireframe}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_wireframe\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Wireframe for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Sponsor Blocks\"\r\n            colorKey=\"sponsor_color\"\r\n            opacityKey=\"sponsor_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_sponsor\"\r\n                        checked={formProps.values.show_sponsor}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_sponsor\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Sponsor Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Number Blocks\"\r\n            colorKey=\"numberblock_color\"\r\n            opacityKey=\"numberblock_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_numberBlocks\"\r\n                        checked={formProps.values.show_numberBlocks}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_numberBlocks\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Number Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Grid\"\r\n            colorKey=\"grid_color\"\r\n            opacityKey=\"grid_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Column Size\"\r\n                    min={5}\r\n                    max={50}\r\n                    step={1}\r\n                    value={formProps.values.grid_padding}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_padding\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Stroke Width\"\r\n                    min={0.01}\r\n                    max={3}\r\n                    step={0.01}\r\n                    value={formProps.values.grid_stroke}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_stroke\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_grid\"\r\n                        checked={formProps.values.show_grid}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_grid\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Grid for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Car Parts\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_carparts_on_top\"\r\n                        checked={formProps.values.show_carparts_on_top}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_carparts_on_top\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Car Parts on top of other layers\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={formProps.isSubmitting || !formProps.isValid || !editable}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Form>\r\n  );\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const GuidesSetting = React.memo((props) => {\r\n  const { guide_data, editable, onCancel, onApply } = props;\r\n\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      carmask_color: guide_data.carmask_color || \"\",\r\n      carmask_opacity: guide_data.carmask_opacity || 1,\r\n      wireframe_color: guide_data.wireframe_color || \"\",\r\n      wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n      sponsor_color: guide_data.sponsor_color || \"\",\r\n      sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n      numberblock_color: guide_data.numberblock_color || \"\",\r\n      numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n      grid_color: guide_data.grid_color || \"\",\r\n      grid_opacity: guide_data.grid_opacity || 1,\r\n      grid_padding: guide_data.grid_padding || 10,\r\n      grid_stroke: guide_data.grid_stroke || 0.1,\r\n      show_wireframe: guide_data.show_wireframe || false,\r\n      show_sponsor: guide_data.show_sponsor || false,\r\n      show_numberBlocks: guide_data.show_numberBlocks || false,\r\n      show_grid: guide_data.show_grid || false,\r\n      show_carparts_on_top: guide_data.show_carparts_on_top || false,\r\n    }),\r\n    [guide_data]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={Yup.object().shape({\r\n        carmask_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        wireframe_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        sponsor_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        numberblock_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        grid_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n      })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm {...formProps} editable={editable} onCancel={onCancel} />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, Autocomplete } from \"components/MaterialUI\";\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n\r\nexport const CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from \"components/MaterialUI\";\r\n\r\nimport { CustomDialogContent, CustomAutocomplete } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(\r\n  ({\r\n    owner,\r\n    editable,\r\n    currentUserID,\r\n    schemeID,\r\n    premiumUsers,\r\n    onCancel,\r\n    ...formProps\r\n  }) => {\r\n    const {\r\n      isSubmitting,\r\n      isValid,\r\n      handleSubmit,\r\n      setFieldValue,\r\n      values,\r\n    } = formProps;\r\n\r\n    const unInvitedUsers = useMemo(\r\n      () =>\r\n        !owner\r\n          ? []\r\n          : premiumUsers.filter(\r\n              (user) =>\r\n                user.id !== owner.id &&\r\n                !values.sharedUsers.find((item) => item.user_id === user.id)\r\n            ),\r\n      [premiumUsers, owner, values]\r\n    );\r\n    const isOwner = useMemo(\r\n      () => (!owner ? false : owner.id === currentUserID),\r\n      [owner, currentUserID]\r\n    );\r\n\r\n    const handleNewUserChange = useCallback(\r\n      (user) => {\r\n        setFieldValue(\r\n          `newUser`,\r\n          user\r\n            ? {\r\n                user_id: user.id,\r\n                user: user,\r\n                scheme_id: schemeID,\r\n                accepted: 0,\r\n                editable: 0,\r\n              }\r\n            : null\r\n        );\r\n      },\r\n      [schemeID]\r\n    );\r\n\r\n    const handleNewUserPermissionChange = useCallback((value) => {\r\n      setFieldValue(`newUser['editable']`, value);\r\n    }, []);\r\n\r\n    const handleSharedUserChange = useCallback((value, index) => {\r\n      setFieldValue(`sharedUsers[${index}]['editable']`, value);\r\n    }, []);\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit} noValidate>\r\n        <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n          {isOwner ? (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={5} pr={5}>\r\n              <CustomAutocomplete\r\n                options={unInvitedUsers}\r\n                getOptionLabel={(option) => option.id.toString()}\r\n                style={{ width: 200 }}\r\n                onChange={(event, newValue) => {\r\n                  handleNewUserChange(newValue);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Enter Customer ID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              {values.newUser ? (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  flexGrow={1}\r\n                  ml={5}\r\n                >\r\n                  <Box mt=\"-7px\">\r\n                    <Typography>{values.newUser.user.drivername}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      ID #{values.newUser.user.id}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box height=\"31px\">\r\n                    <Select\r\n                      variant=\"outlined\"\r\n                      value={values.newUser.editable}\r\n                      onChange={(event) =>\r\n                        handleNewUserPermissionChange(event.target.value)\r\n                      }\r\n                    >\r\n                      <MenuItem value={0}>Can view</MenuItem>\r\n                      <MenuItem value={1}>{\"Can view & edit\"}</MenuItem>\r\n                      <MenuItem value={-1}>Cancel</MenuItem>\r\n                    </Select>\r\n                  </Box>\r\n                </Box>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box maxHeight=\"50vh\" pr={5} overflow=\"auto\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={4}>\r\n              <Typography color=\"textSecondary\">\r\n                {owner.drivername + (isOwner ? \" (you)\" : \"\")}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">Owner</Typography>\r\n            </Box>\r\n            {values.sharedUsers.map((sharedUser, index) => (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                key={index}\r\n                mb={4}\r\n              >\r\n                <Box mt=\"-7px\">\r\n                  <Typography color=\"textSecondary\">\r\n                    {sharedUser.user.drivername +\r\n                      (currentUserID === sharedUser.user.id ? \" (you)\" : \"\")}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    ID #{sharedUser.user.id}\r\n                  </Typography>\r\n                </Box>\r\n                <Box height=\"31px\">\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    value={sharedUser.editable}\r\n                    disabled={!isOwner && currentUserID !== sharedUser.user.id}\r\n                    onChange={(event) =>\r\n                      handleSharedUserChange(event.target.value, index)\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>Can view</MenuItem>\r\n                    <MenuItem value={1} disabled={!editable}>\r\n                      {\"Can view & edit\"}\r\n                    </MenuItem>\r\n                    <MenuItem value={-1}>Remove</MenuItem>\r\n                  </Select>\r\n                </Box>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </CustomDialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            disabled={isSubmitting || !isValid}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const SharingSetting = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    ownerID,\r\n    schemeID,\r\n    currentUserID,\r\n    userList,\r\n    sharedUsers,\r\n    onCancel,\r\n    onApply,\r\n  } = props;\r\n  const owner = useMemo(() => userList.find((item) => item.id === ownerID), [\r\n    ownerID,\r\n    userList,\r\n  ]);\r\n  const premiumUsers = useMemo(() => userList.filter((item) => item.pro_user), [\r\n    userList,\r\n  ]);\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      newUser: null,\r\n      sharedUsers: sharedUsers,\r\n    }),\r\n    [sharedUsers]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      // validationSchema={Yup.object().shape({\r\n      //   user_id: Yup.number().min(0),\r\n      // })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm\r\n          {...formProps}\r\n          editable={editable}\r\n          owner={owner}\r\n          currentUserID={currentUserID}\r\n          schemeID={schemeID}\r\n          premiumUsers={premiumUsers}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport { Tab, Tabs, Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`project-settings-tabpanel-${index}`}\r\n      aria-labelledby={`project-settings-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const a11yProps = (index) => {\r\n  return {\r\n    id: `project-settings-tab-${index}`,\r\n    \"aria-controls\": `project-settings-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nexport const StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n  root: {\r\n    paddingLeft: \"24px\",\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport const StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: \"10px\",\r\n    padding: \"6px 5px\",\r\n    minWidth: 120,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport { Box, Dialog, DialogTitle } from \"components/MaterialUI\";\r\nimport { GuidesSetting, SharingSetting } from \"./components\";\r\nimport { StyledTabs, StyledTab, TabPanel, a11yProps } from \"./styles\";\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const {\r\n    ownerID,\r\n    editable,\r\n    currentUserID,\r\n    schemeID,\r\n    userList,\r\n    sharedUsers,\r\n    guide_data,\r\n    onCancel,\r\n    open,\r\n    onApplyGuideSettings,\r\n    onApplySharingSetting,\r\n  } = props;\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n    },\r\n    [setTabValue]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Project Settings</DialogTitle>\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        aria-label=\"Project Settings Tab\"\r\n      >\r\n        <StyledTab label=\"Painting Guides\" {...a11yProps(0)} />\r\n        <StyledTab label=\"Sharing\" {...a11yProps(1)} />\r\n      </StyledTabs>\r\n      <Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <GuidesSetting\r\n            editable={editable}\r\n            guide_data={guide_data}\r\n            onApply={onApplyGuideSettings}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <SharingSetting\r\n            editable={editable}\r\n            ownerID={ownerID}\r\n            currentUserID={currentUserID}\r\n            schemeID={schemeID}\r\n            userList={userList}\r\n            sharedUsers={sharedUsers}\r\n            onApply={onApplySharingSetting}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import SchemeSettingsDialog from \"./SchemeSettingsDialog\";\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n  setShowProperties,\r\n} from \"redux/reducers/boardReducer\";\r\nimport {\r\n  updateScheme,\r\n  createSharedUser,\r\n  updateSharedUserItem,\r\n  deleteSharedUserItem,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n  Settings as SettingsIcon,\r\n} from \"@material-ui/icons\";\r\nimport { ChevronsLeft, ChevronsRight } from \"react-feather\";\r\n\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\nimport SchemeSettingsDialog from \"dialogs/scheme-settings-dialog\";\r\n\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [dialog, setDialog] = useState(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const currentUser = useSelector((state) => state.authReducer.user);\r\n\r\n  const handleToggleProperties = useCallback(() => {\r\n    dispatch(setShowProperties(!showProperties));\r\n  }, [dispatch, showProperties]);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleApplyProjectSettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  const handleApplySharingSetting = useCallback(\r\n    (data) => {\r\n      console.log(data);\r\n      let count = 0;\r\n      if (data.newUser && data.newUser.editable >= 0) {\r\n        count += 1;\r\n        dispatch(\r\n          createSharedUser(\r\n            {\r\n              user_id: data.newUser.user_id,\r\n              scheme_id: data.newUser.scheme_id,\r\n              accepted: data.newUser.accepted,\r\n              editable: data.newUser.editable,\r\n            },\r\n            () => {\r\n              dispatch(\r\n                setMessage({\r\n                  message: \"Shared Project successfully!\",\r\n                  type: \"success\",\r\n                })\r\n              );\r\n            }\r\n          )\r\n        );\r\n      }\r\n      for (let sharedUser of data.sharedUsers) {\r\n        if (sharedUser.editable === -1) {\r\n          dispatch(\r\n            deleteSharedUserItem(sharedUser.id, () => {\r\n              if (!count)\r\n                dispatch(\r\n                  setMessage({\r\n                    message: \"Applied Sharing Setting successfully!\",\r\n                    type: \"success\",\r\n                  })\r\n                );\r\n              count += 1;\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            updateSharedUserItem(\r\n              sharedUser.id,\r\n              {\r\n                editable: sharedUser.editable,\r\n              },\r\n              () => {\r\n                if (!count)\r\n                  dispatch(\r\n                    setMessage({\r\n                      message: \"Applied Sharing Setting successfully!\",\r\n                      type: \"success\",\r\n                    })\r\n                  );\r\n                count += 1;\r\n              }\r\n            )\r\n          );\r\n        }\r\n      }\r\n\r\n      setDialog(null);\r\n    },\r\n    [dispatch, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <LightTooltip title=\"Settings\" arrow>\r\n            <IconButton ml={2} onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n              <SettingsIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n\r\n          <LightTooltip title=\"Toggle Properties\" arrow>\r\n            <IconButton onClick={handleToggleProperties} ml={2}>\r\n              {showProperties ? <ChevronsRight /> : <ChevronsLeft />}\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      <SchemeSettingsDialog\r\n        ownerID={currentScheme.user_id}\r\n        editable={editable}\r\n        currentUserID={currentUser.id}\r\n        schemeID={currentScheme.id}\r\n        sharedUsers={sharedUsers}\r\n        userList={userList}\r\n        guide_data={guide_data}\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApplyGuideSettings={handleApplyProjectSettings}\r\n        onApplySharingSetting={handleApplySharingSetting}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            layer_data.shadowOffsetX * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            layer_data.shadowOffsetY * Math.abs(scaleY)\r\n          ),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          node.cache({\r\n            pixelRatio: getPixelRatio(shapeRef.current),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // node.getLayer().batchDraw();\r\n        } else {\r\n          node.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  editable,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const imageNode = imageshapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(imageNode.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            (layer_data.shadowOffsetX || 0) * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            (layer_data.shadowOffsetY || 0) * Math.abs(scaleY)\r\n          ),\r\n          paddingX: mathRound2((layer_data.paddingX || 0) * Math.abs(scaleX)),\r\n          paddingY: mathRound2((layer_data.paddingY || 0) * Math.abs(scaleY)),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          imageNode.cache({\r\n            pixelRatio: getPixelRatio(imageNode),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // imageNode.getLayer().batchDraw();\r\n        } else {\r\n          imageNode.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange && editable}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect\r\n        x={-paddingX || 0}\r\n        y={-paddingY || 0}\r\n        width={props.width + 2 * (paddingX || 0)}\r\n        height={props.height + 2 * (paddingY || 0)}\r\n        fill={bgColor}\r\n      />\r\n      <Image\r\n        x={0}\r\n        y={0}\r\n        width={props.width}\r\n        height={props.height}\r\n        shadowBlur={props.shadowBlur}\r\n        shadowOffsetX={props.shadowOffsetX}\r\n        shadowOffsetY={props.shadowOffsetY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    editable,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = useCallback(() => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  }, [id, fontFamily, fontFile, onFontLoad, onLoadLayer, setLoadedFontFamily]);\r\n\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [onChange, onDragEnd]\r\n  );\r\n\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n          scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n        });\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              editable={editable}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  editable,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n              top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [offsetsFromStroke, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        const width =\r\n          type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n        const height =\r\n          type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(node.x() - offsetsFromStroke.x),\r\n              top: mathRound2(node.y() - offsetsFromStroke.y),\r\n              width: mathRound2(\r\n                Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n              ),\r\n              height: mathRound2(\r\n                Math.max(1, height * Math.abs(scaleY)) -\r\n                  offsetsFromStroke.height\r\n              ),\r\n              radius: node.radius\r\n                ? mathRound2(\r\n                    Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.radius\r\n                  )\r\n                : 0,\r\n              innerRadius: node.innerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.innerRadius\r\n                  )\r\n                : 0,\r\n              outerRadius: node.outerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.outerRadius\r\n                  )\r\n                : 0,\r\n              rotation: mathRound2(node.rotation()) || 0,\r\n              flop: scaleX > 0 ? 0 : 1,\r\n              flip: scaleY > 0 ? 0 : 1,\r\n              stroke: mathRound2(node.strokeWidth() * xyScale),\r\n              shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n              shadowOffsetX: mathRound2(\r\n                layer_data.shadowOffsetX * Math.abs(scaleX)\r\n              ),\r\n              shadowOffsetY: mathRound2(\r\n                layer_data.shadowOffsetY * Math.abs(scaleY)\r\n              ),\r\n              cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n              cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n              cornerBottomLeft: mathRound2(\r\n                layer_data.cornerBottomLeft * xyScale\r\n              ),\r\n              cornerBottomRight: mathRound2(\r\n                layer_data.cornerBottomRight * xyScale\r\n              ),\r\n              points: points.map((point, index) =>\r\n                index % 2 === 0\r\n                  ? mathRound2(point * Math.abs(scaleX))\r\n                  : mathRound2(point * Math.abs(scaleY))\r\n              ),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [type, offsetsFromStroke, layer_data, points, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\nimport { getSnapRotation, rotateAroundCenter } from \"helper\";\r\n\r\nconst TransformerComponent = ({\r\n  trRef,\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = useCallback(() => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedLayer]);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [checkNode]);\r\n\r\n  const boundBoxFunc = useCallback(\r\n    (oldBoundBox, newBoundBox) => {\r\n      const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n      const diff = closesSnap - oldBoundBox.rotation;\r\n      if (pressedKey === \"shift\") {\r\n        if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n          return newBoundBox;\r\n        }\r\n        if (Math.abs(diff) > 0) {\r\n          return rotateAroundCenter(oldBoundBox, diff);\r\n        }\r\n        return oldBoundBox;\r\n      }\r\n      return newBoundBox;\r\n    },\r\n    [pressedKey, getSnapRotation, rotateAroundCenter]\r\n  );\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        id=\"defaultTransformer\"\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  wrapperWidth,\r\n  wrapperHeight,\r\n  wrapperRef,\r\n  hoveredLayerJSON,\r\n  editable,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n  activeTransformerRef,\r\n  hoveredTransformerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [previousGuide, setPreviousGuide] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showGuideForRepositioning = useCallback(\r\n    (show = true) => {\r\n      if (!show) {\r\n        dispatch(setPaintingGuides([...previousGuide]));\r\n        setPreviousGuide([]);\r\n      } else if (!previousGuide.length) {\r\n        setPreviousGuide([...paintingGuides]);\r\n        let newPaintingGuides = [...paintingGuides];\r\n        if (\r\n          currentScheme.guide_data.show_wireframe &&\r\n          !newPaintingGuides.includes(PaintingGuides.WIREFRAME)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.WIREFRAME);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_numberBlocks &&\r\n          !newPaintingGuides.includes(PaintingGuides.NUMBERBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.NUMBERBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_sponsor &&\r\n          !newPaintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.SPONSORBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_grid &&\r\n          !newPaintingGuides.includes(PaintingGuides.GRID)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.GRID);\r\n        }\r\n        dispatch(setPaintingGuides(newPaintingGuides));\r\n      }\r\n    },\r\n    [dispatch, paintingGuides, previousGuide, setPreviousGuide, currentScheme]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(true);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(false);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" position=\"relative\">\r\n      <Box\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        id=\"board-wrapper\"\r\n        position=\"relative\"\r\n        ref={wrapperRef}\r\n      >\r\n        <Stage\r\n          width={wrapperWidth}\r\n          height={wrapperHeight}\r\n          onMousedown={handleMouseDown}\r\n          onContentMousedown={handleContentMouseDown}\r\n          onContentMousemove={handleMouseMove}\r\n          onContentMouseup={handleMouseUp}\r\n          onDblClick={handleContentDoubleClick}\r\n          onTouchStart={handleMouseDown}\r\n          onWheel={handleZoomStage}\r\n          scaleX={zoom || 1}\r\n          scaleY={zoom || 1}\r\n          rotation={boardRotate}\r\n          x={wrapperWidth / 2}\r\n          y={wrapperHeight / 2}\r\n          offsetX={frameSize.width / 2}\r\n          offsetY={frameSize.height / 2}\r\n          ref={stageRef}\r\n          draggable={mouseMode === MouseModes.DEFAULT}\r\n          style={{\r\n            cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n          }}\r\n        >\r\n          <Layer ref={baseLayerRef} listening={false}>\r\n            {/* Background */}\r\n            <Rect\r\n              x={0}\r\n              y={0}\r\n              width={frameSize.width}\r\n              height={frameSize.height}\r\n              fill={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              listening={false}\r\n            />\r\n            <BasePaints\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              layers={layerList}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer listening={false}>\r\n            <PaintingGuideBottom\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              guideData={currentScheme.guide_data}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer ref={mainLayerRef}>\r\n            {!currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Overlays\r\n              editable={editable}\r\n              layers={layerList}\r\n              frameSize={frameSize}\r\n              boardRotate={boardRotate}\r\n              currentLayer={currentLayer}\r\n              mouseMode={mouseMode}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <Shapes\r\n              editable={editable}\r\n              layers={layerList}\r\n              drawingLayer={drawingLayerRef.current}\r\n              boardRotate={boardRotate}\r\n              mouseMode={mouseMode}\r\n              currentLayer={currentLayer}\r\n              loadedStatuses={loadedStatuses}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <LogosAndTexts\r\n              editable={editable}\r\n              layers={layerList}\r\n              fonts={fontList}\r\n              loadedFontList={loadedFontList}\r\n              frameSize={frameSize}\r\n              mouseMode={mouseMode}\r\n              boardRotate={boardRotate}\r\n              loadedStatuses={loadedStatuses}\r\n              currentLayer={currentLayer}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onFontLoad={handleAddFont}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            {currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n          <Layer ref={carMaskLayerRef} listening={false}>\r\n            <PaintingGuideCarMask\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer>\r\n            <PaintingGuideTop\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              frameSize={frameSize}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n            {editable ? (\r\n              <TransformerComponent\r\n                trRef={activeTransformerRef}\r\n                selectedLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {hoveredLayerJSON &&\r\n            (!currentLayer ||\r\n              !hoveredLayerJSON[currentLayer.id] ||\r\n              !editable) ? (\r\n              <TransformerComponent\r\n                trRef={hoveredTransformerRef}\r\n                selectedLayer={layerList.find(\r\n                  (item) => hoveredLayerJSON[item.id]\r\n                )}\r\n                hoveredTransform={true}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n        </Stage>\r\n        <Box position=\"absolute\" right={0} top={0}>\r\n          <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n              <RotateLeftIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n          <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n              <RotateRightIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ScreenLoader />\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { changeName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DialogTypes } from \"constant\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = (props) => {\r\n  const { onBack } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"158px\" : \"250px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={onBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disabled,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock &&\r\n          !disabled &&\r\n          (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {!disabled && (selected || hovered || !layer_visible) ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    disabled,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd && !disabled}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                  disabled={disabled}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Root = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 60px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Root>\r\n      <CircularProgress m={2} color=\"secondary\" />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? []\r\n        : legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? false\r\n        : legacyMode\r\n        ? limit < basePaints.length\r\n        : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3} spacing={8}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  const filteredOverlays = useMemo(\r\n    () =>\r\n      overlays.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(search.toLowerCase())\r\n      ),\r\n    [overlays, search]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 30;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const filteredLogos = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type !== \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const filteredFlags = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type === \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const increaseLogoData = useCallback(() => {\r\n    setLogoLimit(logoLimit + step);\r\n  }, [logoLimit, step, setLogoLimit]);\r\n\r\n  const increaseFlagData = useCallback(() => {\r\n    setFlagLimit(flagLimit + step);\r\n  }, [flagLimit, step, setFlagLimit]);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n      setSearch(\"\");\r\n    },\r\n    [setTabValue, setSearch]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 30;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, disabled, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = useCallback(\r\n    (fontFamily, fontFile) => {\r\n      let fontObject = new FontFace(fontFamily, fontFile);\r\n      fontObject\r\n        .load()\r\n        .then(function (loaded_face) {\r\n          document.fonts.add(loaded_face);\r\n          dispatch(insertToLoadedFontList(fontFamily));\r\n        })\r\n        .catch(function (error) {\r\n          // error occurred\r\n          console.warn(error, fontFamily);\r\n        });\r\n    },\r\n    [insertToLoadedFontList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef, editable }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              disabled={!editable}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              disabled={!editable}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() =>\r\n                  editable\r\n                    ? setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)\r\n                    : null\r\n                }\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    editable,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onBack,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar onBack={onBack} />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n          editable={editable}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  disabled={!editable}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              disabled={!editable}\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                disabled={!editable}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              disabled={!editable}\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                disabled={!editable}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                disabled={!editable}\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    BG Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  disabled={!editable}\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { rotateAroundCenter } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    stageRef,\r\n    currentLayer,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  const handleChangeRotation = useCallback(\r\n    (value) => {\r\n      if (\r\n        ![\r\n          MouseModes.CIRCLE,\r\n          MouseModes.ELLIPSE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n          MouseModes.ARROW,\r\n          MouseModes.PEN,\r\n        ].includes(currentLayer.layer_data.type)\r\n      ) {\r\n        const stage = stageRef.current;\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n        const newRot = (value / 180) * Math.PI;\r\n        const boundBox = {\r\n          x: selectedNode.x(),\r\n          y: selectedNode.y(),\r\n          width: selectedNode.width(),\r\n          height: selectedNode.height(),\r\n          rotation: (selectedNode.rotation() / 180) * Math.PI,\r\n        };\r\n\r\n        const newBoundBox = rotateAroundCenter(\r\n          boundBox,\r\n          newRot - boundBox.rotation\r\n        );\r\n\r\n        setFieldValue(\"layer_data.left\", newBoundBox.x);\r\n        setFieldValue(\"layer_data.top\", newBoundBox.y);\r\n      }\r\n      setFieldValue(\"layer_data.rotation\", value);\r\n    },\r\n    [currentLayer, rotateAroundCenter]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              disabled={!editable}\r\n              setValue={handleChangeRotation}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Shadow Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              disabled={!editable}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n    onDelete,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"clone\") &&\r\n    !AllowedLayerTypes.includes(\"delete\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {editable && AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {editable && AllowedLayerTypes.includes(\"delete\") ? (\r\n        <Box width=\"100%\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    editable,\r\n    stageRef,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onDelete,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        if (!currentLayer) return false;\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          stageRef={stageRef}\r\n          currentLayer={currentLayer}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          editable={editable}\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onClone={onClone}\r\n          onDelete={onDelete}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { editable, stageRef, onClone, onDelete } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const initialValues = useMemo(\r\n    () =>\r\n      currentLayer\r\n        ? {\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }\r\n        : { ...defaultValues },\r\n    [defaultValues, currentLayer]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleDelete = useCallback(() => {\r\n    if (currentLayer) onDelete(currentLayer);\r\n  }, [onDelete, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              editable={editable}\r\n              user={user}\r\n              stageRef={stageRef}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onDelete={handleDelete}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper py={5} px={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        height=\"34px\"\r\n      >\r\n        <Typography variant=\"h5\" noWrap>\r\n          Properties\r\n        </Typography>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport {\r\n  getScheme,\r\n  setSaving,\r\n  setLoaded,\r\n  getSharedUsers,\r\n  updateListItem as updateSchemeListItem,\r\n  setCurrent as setCurrentScheme,\r\n  clearSharedUsers,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  updateListItem as updateLayerListItem,\r\n  deleteListItem as deleteLayerListItem,\r\n  insertToList as insertToLayerList,\r\n  clearCurrent as clearCurrentLayer,\r\n  setLoadedStatusAll,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n  clearFrameSize,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\nimport { getUserList } from \"redux/reducers/userReducer\";\r\nimport SocketClient from \"utils/socketClient\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const {\r\n    width: wrapperWidth,\r\n    height: wrapperHeight,\r\n    ref: wrapperRef,\r\n  } = useResizeDetector();\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n  const activeTransformerRef = useRef(null);\r\n  const hoveredTransformerRef = useRef(null);\r\n\r\n  const [user, userRef] = useReducerRef(\r\n    useSelector((state) => state.authReducer.user)\r\n  );\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const editable = useMemo(\r\n    () =>\r\n      !user || !currentScheme\r\n        ? false\r\n        : user.id === currentScheme.user_id ||\r\n          sharedUsers.find(\r\n            (shared) => shared.user_id === user.id && shared.editable\r\n          ),\r\n    [user, currentScheme, sharedUsers]\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoom = useCallback(\r\n    (newScale) => {\r\n      if (currentLayer && currentLayer.layer_data) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n\r\n        const { x: pointerX, y: pointerY } = selectedNode.getAbsolutePosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n\r\n        dispatch(setZoom(newScale));\r\n\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      } else {\r\n        dispatch(setZoom(newScale));\r\n      }\r\n    },\r\n    [dispatch, currentLayer, stageRef.current]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n\r\n  const handleZoomOut = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n    },\r\n    [dispatch, getZoomedCenterPosition, stageRef, frameSize, zoom]\r\n  );\r\n  const handleDeleteLayer = useCallback(\r\n    (layer) => {\r\n      setConfirmMessage(`Are you sure to delete \"${layer.layer_data.name}\"?`);\r\n    },\r\n    [setConfirmMessage]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR &&\r\n          editable\r\n        ) {\r\n          handleDeleteLayer(currentLayer);\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer &&\r\n          editable\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer &&\r\n          editable\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (\r\n          event.key === \"z\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionBack());\r\n        } else if (\r\n          event.key === \"y\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\" && editable) {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\" && editable) {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\" && editable) {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\" && editable) {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\" && editable) {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          } else if (currentLayer) {\r\n            dispatch(setCurrentLayer(null));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\" && editable) {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      editable,\r\n      handleCloneLayer,\r\n      handleDeleteLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let stageAttrs = { ...stageRef.current.attrs };\r\n\r\n      wrapperRef.current.style.width = `${frameSizeRef.current.width}px`;\r\n      wrapperRef.current.style.height = `${frameSizeRef.current.height}px`;\r\n\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: frameSizeRef.current.width / 2,\r\n        offsetY: frameSizeRef.current.width / 2,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: -frameSizeRef.current.width / 2,\r\n          y: -frameSizeRef.current.width / 2,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(stageAttrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      wrapperRef.current.style.width = `100%`;\r\n      wrapperRef.current.style.height = `100%`;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(\r\n    async (uploadLater = true) => {\r\n      if (stageRef.current && currentSchemeRef.current) {\r\n        try {\r\n          console.log(\"Uploading Thumbnail\");\r\n          dispatch(setSaving(true));\r\n          let dataURL = await takeScreenshot();\r\n          if (uploadLater) dispatch(setSaving(false));\r\n          let blob = dataURItoBlob(dataURL);\r\n          var fileOfBlob = new File(\r\n            [blob],\r\n            `${currentSchemeRef.current.id}.png`,\r\n            {\r\n              type: \"image/png\",\r\n            }\r\n          );\r\n\r\n          let formData = new FormData();\r\n          formData.append(\"files\", fileOfBlob);\r\n          formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n          await SchemeService.uploadThumbnail(formData);\r\n          if (!uploadLater) dispatch(setSaving(false));\r\n          console.log(\"Uploaded Thumbnail\");\r\n        } catch (err) {\r\n          dispatch(setMessage({ message: err.message }));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]\r\n  );\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `car_${userRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        await handleUploadThumbnail();\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    userRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n    handleUploadThumbnail,\r\n  ]);\r\n\r\n  const handleGoBack = useCallback(async () => {\r\n    await handleUploadThumbnail(false);\r\n    dispatch(clearFrameSize());\r\n    dispatch(clearSharedUsers());\r\n    dispatch(clearCurrentScheme());\r\n    dispatch(clearCurrentLayer());\r\n    dispatch(setLoadedStatusAll({}));\r\n    dispatch(setLoaded(false));\r\n    history.push(\"/\");\r\n  }, [history, dispatch, handleUploadThumbnail]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(\r\n          getScheme(params.id, (scheme, tempsharedUsers) => {\r\n            if (\r\n              user.id !== scheme.user_id &&\r\n              !tempsharedUsers.find((shared) => shared.user_id === user.id)\r\n            ) {\r\n              dispatch(\r\n                setMessage({\r\n                  message: \"You don't have permission for this project!\",\r\n                })\r\n              );\r\n              history.push(\"/\");\r\n            } else {\r\n              if (!uploadsInitialized) {\r\n                dispatch(getUploadListByUserID(user.id));\r\n              }\r\n              if (!overlayList.length) dispatch(getOverlayList());\r\n              if (!logoList.length) dispatch(getLogoList());\r\n              if (!fontList.length) dispatch(getFontList());\r\n              if (!userList.length) dispatch(getUserList());\r\n              if (!sharedUsers.length) dispatch(getSharedUsers(params.id));\r\n            }\r\n          })\r\n        );\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (editable) {\r\n      const interval = setInterval(() => {\r\n        tick.current += 1;\r\n      }, 200);\r\n      const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n        clearInterval(thumbnailInterval);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  // Socket.io Stuffs\r\n  useEffect(() => {\r\n    SocketClient.connect();\r\n\r\n    SocketClient.on(\"connect\", () => {\r\n      SocketClient.emit(\"room\", params.id);\r\n    });\r\n\r\n    SocketClient.on(\"client-update-layer\", (response) => {\r\n      dispatch(updateLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-delete-layer\", (response) => {\r\n      dispatch(deleteLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-update-scheme\", (response) => {\r\n      dispatch(updateSchemeListItem(response.data));\r\n      dispatch(setCurrentScheme(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-create-layer\", (response) => {\r\n      dispatch(insertToLayerList(response.data));\r\n    });\r\n\r\n    return () => {\r\n      SocketClient.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).length &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n      setTimeout(handleUploadThumbnail, 5000);\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box\r\n            width=\"100%\"\r\n            height=\"calc(100% - 50px)\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              editable={editable}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onBack={handleGoBack}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper background=\"#282828\" overflow=\"hidden\" flexGrow=\"1\">\r\n              <Board\r\n                wrapperWidth={wrapperWidth}\r\n                wrapperHeight={wrapperHeight}\r\n                wrapperRef={wrapperRef}\r\n                hoveredLayerJSON={hoveredJSON}\r\n                editable={editable}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n                activeTransformerRef={activeTransformerRef}\r\n                hoveredTransformerRef={hoveredTransformerRef}\r\n              />\r\n            </Wrapper>\r\n            {showProperties ? (\r\n              <PropertyBar\r\n                stageRef={stageRef}\r\n                editable={editable}\r\n                onClone={handleCloneLayer}\r\n                onDelete={handleDeleteLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Toolbar\r\n            editable={editable}\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    height: \"26px\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      onChange(event.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}