{"version":3,"sources":["dialogs/CreateProjectDialog.jsx","pages/project/ProjectItem.jsx","pages/project/index.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["Button","styled","MuiButton","spacing","Autocomplete","MuiAutocomplete","CustomDialogActions","DialogActions","NameField","TextField","ProjectSelectDialog","props","onContinue","onCancel","open","carMakeList","predefinedCarMakeID","useState","carMake","setCarMake","name","setName","useEffect","make","find","item","id","toString","sortedCarMakesList","_","orderBy","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","Box","display","flexDirection","length","value","options","groupBy","option","car_type","getOptionLabel","style","width","mb","onChange","event","newValue","renderInput","params","label","variant","target","onClick","color","disabled","React","memo","CustomImg","img","ItemWrapper","StyledMenu","Menu","ProjectItem","scheme","onDelete","onCloneProject","actionMenuEl","setActionMenuEl","showDeleteDialog","setShowDeleteDialog","history","useHistory","handleActionMenuClose","src","config","assetsURL","alt","schemeID","push","justifyContent","p","Typography","getDifferenceFromToday","date_modified","alignItems","IconButton","aria-haspopup","aria-controls","currentTarget","elevation","getContentAnchorEl","anchorEl","keepMounted","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","onClose","MenuItem","ConfirmDialog","text","onConfirm","CustomFormControl","FormControl","CustomAutocomplete","CustomInfiniteScroll","InfiniteScroll","Wrapper","Scheme","dispatch","useDispatch","user","useSelector","state","authReducer","carMakeReducer","list","schemeList","schemeReducer","schemeLoading","loading","carMakeLoading","dialog","setDialog","limit","setLimit","search","setSearch","selectedVehicle","setSelectedVehicle","sortBy","setSortBy","setPredefinedCarMakeID","useMemo","filteredSchemeList","filter","toLowerCase","includes","getSchemeList","getCarMakeList","makeID","URL","window","location","href","searchParams","get","openScheme","handleDeleteProject","deleteScheme","handleCloneProject","cloneScheme","height","m","SearchBox","startIcon","Add","InputLabel","Select","labelId","e","overflow","position","ScreenLoader","dataLength","next","hasMore","loader","Loader","scrollableTarget","Grid","container","slice","map","xs","sm","md","lg","xl","CreateProjectDialog","createScheme","createSchemeFromCarMake","useStyles","makeStyles","theme","borderRadius","shape","backgroundColor","border","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","className","placeholder","root","input","inputProps","autoFocus"],"mappings":"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","file":"static/js/5.057cbc20.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomDialogActions = styled(DialogActions)`\r\n  padding-right: 24px;\r\n`;\r\nconst NameField = styled(TextField)`\r\n  .MuiInputBase-root {\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const {\r\n    onContinue,\r\n    onCancel,\r\n    open,\r\n    carMakeList,\r\n    predefinedCarMakeID,\r\n  } = props;\r\n  const [carMake, setCarMake] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (predefinedCarMakeID) {\r\n      const make = carMakeList.find(\r\n        (item) => item.id.toString() === predefinedCarMakeID\r\n      );\r\n      setCarMake(make);\r\n    }\r\n  }, [predefinedCarMakeID]);\r\n\r\n  let sortedCarMakesList = _.orderBy(\r\n    [...carMakeList],\r\n    [\"name\", \"car_type\"],\r\n    [\"asc\", \"asc\"]\r\n  );\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Create a new paint</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {carMakeList && carMakeList.length ? (\r\n            <Autocomplete\r\n              id=\"car-make-select\"\r\n              value={carMake}\r\n              options={sortedCarMakesList}\r\n              groupBy={(option) => option.car_type}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 500 }}\r\n              mb={4}\r\n              onChange={(event, newValue) => {\r\n                setCarMake(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Vehicle\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <NameField\r\n            label=\"Name\"\r\n            value={name}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <CustomDialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onContinue(carMake, name)}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!carMake ? true : false}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </CustomDialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProjectSelectDialog);\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport config from \"config\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography, Menu, MenuItem } from \"@material-ui/core\";\r\nimport { MoreVert as ActionIcon } from \"@material-ui/icons\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getDifferenceFromToday } from \"helper\";\r\n\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n  cursor: pointer;\r\n`;\r\nconst ItemWrapper = styled(Box)`\r\n  border: 1px solid grey;\r\n`;\r\nconst StyledMenu = styled(Menu)`\r\n  .MuiMenu-paper {\r\n    border: 1px solid grey;\r\n  }\r\n`;\r\n\r\nconst ProjectItem = (props) => {\r\n  const { scheme, onDelete, onCloneProject } = props;\r\n  const [actionMenuEl, setActionMenuEl] = useState(null);\r\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false);\r\n  const history = useHistory();\r\n\r\n  const handleActionMenuClick = (event) => {\r\n    setActionMenuEl(event.currentTarget);\r\n  };\r\n  const handleActionMenuClose = () => {\r\n    setActionMenuEl(null);\r\n  };\r\n  const handleDeleteItem = () => {\r\n    onDelete(scheme.id);\r\n    handleActionMenuClose();\r\n  };\r\n  const handleCloneProject = () => {\r\n    onCloneProject(scheme.id);\r\n    handleActionMenuClose();\r\n  };\r\n  const openScheme = (schemeID) => {\r\n    history.push(`/scheme/${schemeID}`);\r\n  };\r\n  const schemeThumbnailURL = (id) => {\r\n    return `${config.assetsURL}/scheme_thumbnails/${id}.png`;\r\n  };\r\n\r\n  return (\r\n    <ItemWrapper display=\"flex\" flexDirection=\"column\">\r\n      <CustomImg\r\n        src={schemeThumbnailURL(scheme.id)}\r\n        alt={scheme.name}\r\n        onClick={() => openScheme(scheme.id)}\r\n      />\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Box display=\"flex\" flexDirection=\"column\" p={4}>\r\n          <Typography variant=\"body1\">{scheme.name}</Typography>\r\n          <Typography variant=\"body2\">\r\n            Edited {getDifferenceFromToday(scheme.date_modified)}\r\n          </Typography>\r\n          <Typography variant=\"body2\">{scheme.carMake.name}</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton\r\n            aria-haspopup=\"true\"\r\n            aria-controls={`action-menu-${scheme.id}`}\r\n            onClick={handleActionMenuClick}\r\n          >\r\n            <ActionIcon />\r\n          </IconButton>\r\n          <StyledMenu\r\n            id={`action-menu-${scheme.id}`}\r\n            elevation={0}\r\n            getContentAnchorEl={null}\r\n            anchorEl={actionMenuEl}\r\n            keepMounted\r\n            anchorOrigin={{\r\n              vertical: \"top\",\r\n              horizontal: \"right\",\r\n            }}\r\n            transformOrigin={{\r\n              vertical: \"bottom\",\r\n              horizontal: \"right\",\r\n            }}\r\n            open={Boolean(actionMenuEl)}\r\n            onClose={handleActionMenuClose}\r\n          >\r\n            <MenuItem onClick={handleCloneProject}>Clone</MenuItem>\r\n            <MenuItem onClick={() => setShowDeleteDialog(true)}>\r\n              Delete\r\n            </MenuItem>\r\n          </StyledMenu>\r\n        </Box>\r\n      </Box>\r\n      <ConfirmDialog\r\n        text={`Are you sure to delete \"${scheme.name}\"?`}\r\n        open={showDeleteDialog}\r\n        onCancel={() => setShowDeleteDialog(false)}\r\n        onConfirm={handleDeleteItem}\r\n      />\r\n    </ItemWrapper>\r\n  );\r\n};\r\n\r\nexport default ProjectItem;\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"components/Loader\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport CreateProjectDialog from \"dialogs/CreateProjectDialog\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport ProjectItem from \"./ProjectItem\";\r\n\r\nimport {\r\n  getSchemeList,\r\n  createScheme,\r\n  deleteScheme,\r\n  cloneScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getCarMakeList } from \"redux/reducers/carMakeReducer\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomFormControl = styled(FormControl)`\r\n  .MuiInputBase-root {\r\n    height: 38px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nconst CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  background-color: #444;\r\n  border-radius: 10px;\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const carMakeList = useSelector((state) => state.carMakeReducer.list);\r\n  const schemeList = useSelector((state) => state.schemeReducer.list);\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n\r\n  const step = 15;\r\n  const [dialog, setDialog] = useState();\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n  const [sortBy, setSortBy] = useState(3);\r\n  const [predefinedCarMakeID, setPredefinedCarMakeID] = useState();\r\n\r\n  let sortedCarMakesList = useMemo(\r\n    () => _.orderBy([...carMakeList], [\"name\", \"car_type\"], [\"asc\", \"asc\"]),\r\n    [carMakeList]\r\n  );\r\n\r\n  const filteredSchemeList = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        schemeList.filter(\r\n          (item) =>\r\n            (item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n              item.carMake.name.toLowerCase().includes(search.toLowerCase())) &&\r\n            (!selectedVehicle || selectedVehicle.id === item.carMake.id)\r\n        ),\r\n        sortBy === 1\r\n          ? [\"name\"]\r\n          : sortBy === 2\r\n          ? [\"carMake.name\"]\r\n          : [\"date_modified\"],\r\n        sortBy === 1 ? [\"asc\"] : sortBy === 2 ? [\"asc\"] : [\"desc\"]\r\n      ),\r\n    [schemeList, search, selectedVehicle, sortBy]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!schemeList.length) dispatch(getSchemeList(user.id));\r\n      if (!carMakeList.length) dispatch(getCarMakeList());\r\n\r\n      const url = new URL(window.location.href);\r\n      const makeID = url.searchParams.get(\"make\");\r\n      if (makeID) {\r\n        setPredefinedCarMakeID(makeID);\r\n        setDialog(\"CreateProjectDialog\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  const openScheme = (schemeID) => {\r\n    history.push(`/scheme/${schemeID}`);\r\n  };\r\n\r\n  const createSchemeFromCarMake = (carMake, name) => {\r\n    setDialog(null);\r\n    dispatch(createScheme(carMake, name, user.id, openScheme));\r\n  };\r\n\r\n  const handleCreateNew = () => {\r\n    setDialog(\"CreateProjectDialog\");\r\n  };\r\n  const handleDeleteProject = (schemeID) => {\r\n    dispatch(deleteScheme(schemeID));\r\n  };\r\n  const handleCloneProject = (schemeID) => {\r\n    dispatch(cloneScheme(schemeID));\r\n  };\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      <>\r\n        <Wrapper\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          justifyContent=\"flex-start\"\r\n          m={2}\r\n          p={5}\r\n          height=\"calc(100% - 16px)\"\r\n        >\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            mb={3}\r\n          >\r\n            <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n            <Button\r\n              onClick={handleCreateNew}\r\n              color=\"default\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n            >\r\n              New\r\n            </Button>\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            width=\"100%\"\r\n            mb={3}\r\n          >\r\n            <CustomFormControl variant=\"outlined\">\r\n              <InputLabel id=\"sort-label\">Sort By</InputLabel>\r\n              <Select\r\n                labelId=\"sort-label\"\r\n                value={sortBy}\r\n                onChange={(e) => setSortBy(e.target.value)}\r\n                label=\"Sort By\"\r\n              >\r\n                <MenuItem value={1}>Project Name</MenuItem>\r\n                <MenuItem value={2}>Vehicle Name</MenuItem>\r\n                <MenuItem value={3}>Last Modified</MenuItem>\r\n              </Select>\r\n            </CustomFormControl>\r\n            {carMakeList && carMakeList.length ? (\r\n              <CustomAutocomplete\r\n                id=\"car-make-filter\"\r\n                options={sortedCarMakesList}\r\n                groupBy={(option) => option.car_type}\r\n                getOptionLabel={(option) => option.name}\r\n                style={{ width: 500 }}\r\n                onChange={(event, newValue) => {\r\n                  setSelectedVehicle(newValue);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Filter By Vehicle\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            id=\"scheme-list-content\"\r\n            overflow=\"auto\"\r\n            position=\"relative\"\r\n            height=\"100%\"\r\n          >\r\n            {schemeLoading || carMakeLoading || !schemeList || !carMakeList ? (\r\n              <ScreenLoader />\r\n            ) : (\r\n              <CustomInfiniteScroll\r\n                dataLength={limit} //This is important field to render the next data\r\n                next={increaseData}\r\n                hasMore={limit < filteredSchemeList.length}\r\n                loader={<Loader />}\r\n                scrollableTarget=\"scheme-list-content\"\r\n              >\r\n                <Grid container spacing={4}>\r\n                  {filteredSchemeList.slice(0, limit).map((scheme) => (\r\n                    <Grid\r\n                      key={scheme.id}\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                      lg={3}\r\n                      xl={3}\r\n                    >\r\n                      <ProjectItem\r\n                        scheme={scheme}\r\n                        onDelete={handleDeleteProject}\r\n                        onCloneProject={handleCloneProject}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </CustomInfiniteScroll>\r\n            )}\r\n          </Box>\r\n        </Wrapper>\r\n        <CreateProjectDialog\r\n          carMakeList={carMakeList}\r\n          predefinedCarMakeID={predefinedCarMakeID}\r\n          open={dialog === \"CreateProjectDialog\"}\r\n          onContinue={(carMake, name) => createSchemeFromCarMake(carMake, name)}\r\n          onCancel={() => setDialog(null)}\r\n        />\r\n      </>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}