{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","CustomSelect","Select","Wrapper","div","CustomOutlinedInput","OutlinedInput","CustomFontAwesomeIcon","FontAwesomeIcon","props","isstretch","modes","value","MouseModes","DEFAULT","icon","faMousePointer","RECT","faSquare","CIRCLE","faCircle","ELLIPSE","STAR","faStar","RING","faDotCircle","REGULARPOLYGON","size","WEDGE","fontSize","ARC","faCuttlefish","POLYGON","faDrawPolygon","LINE","ARROW","PEN","faPaintBrush","Toolbar","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","mouseMode","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","setMouseMode","target","setCurrentLayer","renderValue","mode","find","item","map","MenuItem","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","useState","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","layer_type","LayerTypes","CAR","layer_visible","layer","color","BasePaints","BASE","Overlays","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","text","font_name","font_file","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","sides","closed","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","prevPosition","setPrevPosition","setDrawingLayer","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","CLEAR_COMMAND","setDrawingStatus","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","hitGraphEnabled","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","Tooltip","open","enterTouchDelay","placement","title","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","MuiSelect","FontImage","FontSelect","labelId","font_preview","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","my","TextDialog","onCreate","required","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","hex","result","exec","num","EPSILON","validateColor","getAbsoluteTransform","copy","invert","pos","offset","new_points"],"mappings":"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","file":"static/js/6.10c012dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom, setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport { setCurrent as setCurrentLayer } from \"redux/reducers/layerReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  ZoomOut as ZoomOutIcon,\r\n  Octagon as OctagonIcon,\r\n} from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { PaintingGuides, MouseModes } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-select {\r\n    padding-left: 10px;\r\n  }\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n];\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n  const handleModeChange = (event) => {\r\n    dispatch(setMouseMode(event.target.value));\r\n    if (event.target.value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <CustomSelect\r\n            value={mouseMode}\r\n            onChange={handleModeChange}\r\n            renderValue={(value) => {\r\n              const mode = modes.find((item) => item.value === value);\r\n              if (!mode) {\r\n                return <></>;\r\n              }\r\n              return mode.icon;\r\n            }}\r\n          >\r\n            {modes.map((mode) => (\r\n              <MenuItem value={mode.value} key={mode.value}>\r\n                {mode.icon}\r\n              </MenuItem>\r\n            ))}\r\n          </CustomSelect>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.STAR:\r\n      return (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.RING:\r\n      return (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.REGULARPOLYGON:\r\n      return (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.WEDGE:\r\n      return (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ARC:\r\n      return (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.LINE:\r\n    case MouseModes.PEN:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.POLYGON:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ARROW:\r\n      return (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport { Stage, Layer, FastLayer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst Board = () => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const [drawingLayer, setDrawingLayer] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayer) {\r\n          let layer = {\r\n            ...drawingLayer,\r\n            layer_data: {\r\n              ...drawingLayer.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayer.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        setDrawingLayer(null);\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayer) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        // dispatch(setDrawingLayer(newLayer));\r\n        setDrawingLayer(newLayer);\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayer,\r\n            layer_data: {\r\n              ...drawingLayer.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayer.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayer.layer_data.left,\r\n            position.y - drawingLayer.layer_data.top,\r\n            position.x - drawingLayer.layer_data.left,\r\n            position.y - drawingLayer.layer_data.top,\r\n          ]);\r\n          // dispatch(setDrawingLayer(layer));\r\n          setDrawingLayer(layer);\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayer.layer_data.left;\r\n      const height = position.y - drawingLayer.layer_data.top;\r\n\r\n      let layer = {\r\n        ...drawingLayer,\r\n        layer_data: {\r\n          ...drawingLayer.layer_data,\r\n          points: [...drawingLayer.layer_data.points],\r\n          width: width,\r\n          height: height,\r\n          radius: Math.abs(width),\r\n          innerRadius: Math.abs(width) / 2.5,\r\n          outerRadius: Math.abs(width),\r\n        },\r\n      };\r\n      if (\r\n        [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n          mouseMode\r\n        )\r\n      ) {\r\n        layer.layer_data.points.splice(\r\n          -2,\r\n          2,\r\n          position.x - drawingLayer.layer_data.left,\r\n          position.y - drawingLayer.layer_data.top\r\n        );\r\n      }\r\n      if (mouseMode === MouseModes.PEN) {\r\n        layer.layer_data.points.push(position.x - drawingLayer.layer_data.left);\r\n        layer.layer_data.points.push(position.y - drawingLayer.layer_data.top);\r\n      }\r\n      // dispatch(setDrawingLayer(layer));\r\n      setDrawingLayer(layer);\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayer &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <FastLayer hitGraphEnabled={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n        </FastLayer>\r\n        <Layer>\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayer}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n        </Layer>\r\n        <FastLayer hitGraphEnabled={false}>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n        </FastLayer>\r\n        <Layer>\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE\r\n        )}\r\n      />\r\n      <PartGroup\r\n        title=\"Overlays\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  !AllowedLayerTypes.includes(\"layer_data.text\")\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n              radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              innerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              outerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n              angle: Yup.number(),\r\n              pointerLength: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              pointerWidth: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\nimport { removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const drawingLayer = useSelector((state) => state.layerReducer.drawingLayer);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n\r\nexport const getRelativePointerPosition = (node) => {\r\n  var transform = node.getAbsoluteTransform().copy();\r\n  // to detect relative position we need to invert transform\r\n  transform.invert();\r\n  // get pointer (say mouse or touch) position\r\n  var pos = node.getStage().getPointerPosition();\r\n  // now we can find relative point\r\n  return transform.point(pos);\r\n};\r\n\r\nexport const getRelativeShadowOffset = (boardRotate, offset) => {\r\n  let shadowOffset = { ...offset };\r\n  if (boardRotate === 90) {\r\n    shadowOffset.x = -offset.y;\r\n    shadowOffset.y = offset.x;\r\n  } else if (boardRotate === 180) {\r\n    shadowOffset.x = -offset.x;\r\n    shadowOffset.y = -offset.y;\r\n  } else if (boardRotate === 270) {\r\n    shadowOffset.x = offset.y;\r\n    shadowOffset.y = -offset.x;\r\n  }\r\n  return shadowOffset;\r\n};\r\n\r\nexport const removeDuplicatedPointFromEnd = (points) => {\r\n  let new_points = [...points];\r\n  if (new_points.length >= 4) {\r\n    while (\r\n      new_points[new_points.length - 1] === new_points[new_points.length - 3] &&\r\n      new_points[new_points.length - 2] === new_points[new_points.length - 4]\r\n    ) {\r\n      new_points.splice(-2, 2);\r\n    }\r\n  }\r\n  return new_points;\r\n};\r\n"],"sourceRoot":""}