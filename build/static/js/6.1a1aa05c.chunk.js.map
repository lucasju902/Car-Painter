{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","useEffect","loadImage","current","removeEventListener","handleLoad","a","height","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","node","baseVal","resize","render","cache","pixelRatio","getLayer","batchDraw","left","Helper","mathRound2","x","top","y","img","window","Image","crossOrigin","addEventListener","onTap","ref","draggable","length","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","Math","max","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","checkNode","keepRatio","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","css","palette","Palette","deferred","hideTextfield","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","SizeProperty","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","PropertyBar","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","Date","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON","hex","result","exec"],"mappings":"qUAqBMA,EAAaC,YAAOC,KAAV,0EAAGD,CAAsBE,KACnCC,EAAeH,YAAOI,KAAV,4EAAGJ,CAAwBE,KACvCG,EAASL,YAAOM,KAAV,sEAAGN,CAAkBE,KAC3BK,EAAaP,YAAOQ,KAAV,0EAAGR,CAAsBE,KAEnCO,EAAUT,IAAOU,IAAV,uEAAGV,CAAH,4FAQPW,EAAsBX,YAAOY,KAAV,mFAAGZ,CAAH,8EAoGVa,EA5FC,SAACC,GACf,IAAMC,EAAWC,cACXC,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BI,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,QAevD,OACE,cAACZ,EAAD,UACE,eAACa,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfC,aAAa,SACbC,MAAM,OAJR,UAME,eAACJ,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,QAAQC,aAAa,SAAxD,UACE,cAAC,EAAD,CAAYE,QAAQ,YAAYC,GAAI,EAApC,8BAGA,eAACC,EAAA,EAAD,CACEC,MAAOb,EACPc,SA3ByB,SAACC,EAAOC,GACzClB,EAASmB,YAAkBD,KA2BnBE,aAAW,kBAHb,UAKE,cAAC,EAAD,CAAcL,MAAOM,IAAeC,QAASF,aAAW,WAAxD,SACE,cAAC,EAAD,CAAYR,QAAQ,UAApB,wBAEF,cAAC,EAAD,CACEG,MAAOM,IAAeE,UACtBH,aAAW,YAFb,SAIE,cAAC,EAAD,CAAYR,QAAQ,UAApB,yBAEF,cAAC,EAAD,CACEG,MAAOM,IAAeG,cACtBJ,aAAW,iBAFb,SAIE,cAAC,EAAD,CAAYR,QAAQ,UAApB,8BAEF,cAAC,EAAD,CACEG,MAAOM,IAAeI,aACtBL,aAAW,gBAFb,SAIE,cAAC,EAAD,CAAYR,QAAQ,UAApB,6BAEF,cAAC,EAAD,CAAcG,MAAOM,IAAeK,KAAMN,aAAW,OAArD,SACE,cAAC,EAAD,CAAYR,QAAQ,UAApB,0BAIN,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,WAAWC,aAAa,SAA3D,UACE,cAAC,EAAD,CAAQG,GAAI,EAAGD,QAAQ,WAAvB,uBAGA,cAAC,EAAD,CAAQC,GAAI,EAAGD,QAAQ,WAAvB,yBAGA,cAAC,EAAD,CAAYe,QAzDE,WACpB3B,EAAS4B,YAAQtB,EAAO,QAwDlB,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CAAYqB,QA/DC,WACnB3B,EAAS4B,YAAe,KAAPtB,KA8DwBO,GAAI,EAAvC,SACE,cAAC,IAAD,MAEF,cAACjB,EAAD,CACEiC,GAAG,aACHd,MAAc,IAAPT,EACPU,SA/De,SAACC,GACxBjB,EAAS4B,YAAQE,SAASb,EAAMc,OAAOhB,OAAS,GAAK,OA+D7CiB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,eAIdC,WAAY,a,8FCSTC,EAjIE,SAAC,GAQX,IAPLC,EAOI,EAPJA,IACAC,EAMI,EANJA,SAEAC,GAII,EALJC,WAKI,EAJJD,UACAvB,EAGI,EAHJA,SACAyB,EAEI,EAFJA,YACG1C,EACC,mFACE2C,EAAWC,iBAAO,MAClBC,EAAWD,mBAFb,EAGsBE,mBAAS,MAH/B,mBAGGC,EAHH,KAGUC,EAHV,KAIEC,EAAU,GAEZP,GACFO,EAAQC,KAAKC,IAAMC,QAAQC,MAG7BC,qBAAU,WAER,OADAC,IACO,WACDZ,EAASa,SACXb,EAASa,QAAQC,oBAAoB,OAAQC,MAGhD,IAEH,IAAMA,EAAU,uCAAG,oCAAAC,EAAA,yDACb/C,EAAQZ,EAAMY,OAAS+B,EAASa,QAAQ5C,MACxCgD,EAAS5D,EAAM4D,QAAUjB,EAASa,QAAQI,QAE5CtB,EAAIuB,cAAcC,SAAS,SACzBnB,EAASa,QAAQ5C,OAAU+B,EAASa,QAAQI,OAL/B,wBAOXG,EAASC,SAASC,cAAc,UAC9BC,EAAMH,EAAOI,WAAW,MARf,SASCC,IAAMC,KAAKH,EAAK5B,EAAK,CACnCgC,cAAc,IAVD,cASTC,EATS,OAYfC,QAAQC,IAAIF,GACZ3D,EAAQA,GAAS2D,EAAEG,gBAAgBC,KAAK/D,MAAMgE,QAAQ5D,OAAS,IAC/D4C,EAASA,GAAUW,EAAEG,gBAAgBC,KAAKf,OAAOgB,QAAQ5D,OAAS,IAClEuD,EAAEM,OAAOjE,EAAOgD,EAAQ,QAfT,UAgBTW,EAAEO,SAhBO,QAiBf9B,EAASe,GAjBM,wBAmBff,EAASL,EAASa,SAnBH,QAsBjBX,EAASW,QAAQuB,MAAM,CAAEC,WAAY,IACrCnC,EAASW,QAAQyB,WAAWC,aAExBjE,GAAajB,EAAMY,OAAUZ,EAAM4D,QACrC3C,EAAS,CACPkE,KAAMC,IAAOC,WAAWrF,EAAMsF,EAAI1E,EAAQ,GAC1C2E,IAAKH,IAAOC,WAAWrF,EAAMwF,EAAI5B,EAAS,GAC1ChD,MAAOwE,IAAOC,WAAWzE,GACzBgD,OAAQwB,IAAOC,WAAWzB,KAG1BrB,GACFA,EAAS,CACP3B,MAAOA,EACPgD,OAAQA,IApCK,4CAAH,qDAwCVL,EAAS,uCAAG,4BAAAI,EAAA,uDACV8B,EAAM,IAAIC,OAAOC,OACnBrD,IAAMA,EACVmD,EAAIG,YAAc,YAClBjD,EAASa,QAAUiC,EACnB9C,EAASa,QAAQqC,iBAAiB,OAAQnC,GAL1B,2CAAH,qDA0Cf,OACE,cAAC,IAAD,2BACM1D,GADN,IAEE+C,MAAOA,EACPnB,QAASY,EACTsD,MAAOtD,EACPuD,IAAKlD,EACLmD,UAAW/E,EACXgC,QAASA,EAAQgD,OAAShD,EAAU,KACpCiD,IAAKxD,EAAc0C,IAAOe,UAAUzD,GAAa0D,EAAI,KACrDC,MAAO3D,EAAc0C,IAAOe,UAAUzD,GAAa4D,EAAI,KACvDC,KAAM7D,EAAc0C,IAAOe,UAAUzD,GAAa8D,EAAI,KACtDC,MAAO/D,EAAc0C,IAAOe,UAAUzD,GAAaiB,EAAI,IAAM,KAC7D+C,YAhDoB,SAACC,GACvBnE,KAgDEoE,UA9CkB,SAACD,GACjB1F,GACFA,EAAS,CACPkE,KAAMC,IAAOC,WAAWsB,EAAE3E,OAAOsD,KACjCC,IAAKH,IAAOC,WAAWsB,EAAE3E,OAAOwD,QA2ClCqB,eAvCuB,SAACF,GAC1B,GAAI1F,EAAU,CACZ,IAAM0D,EAAO9B,EAASW,QAChBsD,EAASnC,EAAKmC,SACdC,EAASpC,EAAKoC,SACpBvC,QAAQC,IAAI,mBAAoBqC,EAAQC,GAExCpC,EAAKmC,OAAOA,EAAS,EAAI,GAAK,GAC9BnC,EAAKoC,OAAOA,EAAS,EAAI,GAAK,GAC9B9F,EAAS,CACPkE,KAAMC,IAAOC,WAAWV,EAAKW,KAC7BC,IAAKH,IAAOC,WAAWV,EAAKa,KAE5B5E,MAAOwE,IAAOC,WAAW2B,KAAKC,IAAI,EAAGtC,EAAK/D,QAAUoG,KAAKE,IAAIJ,KAC7DlD,OAAQwB,IAAOC,WACb2B,KAAKC,IAAI,EAAGtC,EAAKf,SAAWoD,KAAKE,IAAIH,KAEvCI,SAAUxC,EAAKwC,WACfC,KAAMN,EAAS,EAAI,EAAI,EACvBO,KAAMN,EAAS,EAAI,EAAI,U,QCtBhBO,EAjFU,SAACtH,GACxB,IAAMuH,EAAc,GACZpH,EAA+DH,EAA/DG,eAAgBqH,EAA+CxH,EAA/CwH,eAAgBC,EAA+BzH,EAA/ByH,gBAAiBC,EAAc1H,EAAd0H,UACzD,OACE,qCACGvH,EAAe2D,SAASxC,IAAeC,SACtC,cAAC,EAAD,CACEe,IAAG,UACDqF,IAAOC,UADN,sBAEWJ,EAAeK,iBAAiBC,QAC5C,IACA,KAJC,aAMHvF,SAAUkF,EACVM,WAAW,IAGb,6BAED5H,EAAe2D,SAASxC,IAAeE,WACtC,cAAC,EAAD,CACEc,IAAG,UACDqF,IAAOC,UADN,sBAEWJ,EAAeK,iBAAiBC,QAC5C,IACA,KAJC,kBAMHvF,SAAUkF,EACVM,WAAW,IAGb,6BAED5H,EAAe2D,SAASxC,IAAeK,MACtC,qCACGqG,MAAM3D,KACL2D,MAAMhB,KAAKiB,MAAMP,EAAU9G,MAAQ2G,KACnC,SAACZ,EAAGuB,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACNnB,KAAKiB,MAAMC,EAAIX,GACf,EACAP,KAAKiB,MAAMC,EAAIX,GACfG,EAAU9G,OAEZwH,OAAO,OACPC,YAAa,GACbN,WAAW,GAVb,YACYG,OAcjBF,MAAM3D,KACL2D,MAAMhB,KAAKiB,MAAMP,EAAU9D,OAAS2D,KACpC,SAACZ,EAAGuB,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACN,EACAnB,KAAKiB,MAAMC,EAAIX,GACfG,EAAU9D,OACVoD,KAAKiB,MAAMC,EAAIX,IAEjBa,OAAO,OACPC,YAAa,GACbN,WAAW,GAVb,YACYG,UAgBpB,iCCvCOI,EArCa,SAACtI,GAAW,IAC9BG,EAAoDH,EAApDG,eAAgBqH,EAAoCxH,EAApCwH,eAAgBC,EAAoBzH,EAApByH,gBAExC,OACE,qCACGtH,EAAe2D,SAASxC,IAAeG,eACtC,cAAC,EAAD,CACEa,IAAG,UACDqF,IAAOC,UADN,sBAEWJ,EAAeK,iBAAiBC,QAC5C,IACA,KAJC,uBAMHvF,SAAUkF,EACVM,WAAW,IAGb,6BAED5H,EAAe2D,SAASxC,IAAeI,cACtC,cAAC,EAAD,CACEY,IAAG,UACDqF,IAAOC,UADN,sBAEWJ,EAAeK,iBAAiBC,QAC5C,IACA,KAJC,sBAMHvF,SAAUkF,EACVM,WAAW,IAGb,iC,kBCDOQ,EA7BE,SAACvI,GAAW,IACnBwI,EAA4CxI,EAA5CwI,OAAQhB,EAAoCxH,EAApCwH,eAAgBC,EAAoBzH,EAApByH,gBAEhC,OACE,mCACGgB,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,KAAOH,EAAKI,iBAEvD,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACE5G,IACEqF,IAAOC,UACP,cACAJ,EAAeK,iBAAiBC,QAAQ,IAAK,KAF7C,WAGIoB,EAAMC,WAAW1D,KAEvBlD,SAAUkF,EACV/E,YAAawG,EAAMC,WAAWC,MAE9BrB,WAAW,GADNmB,EAAMpH,UCGNuH,EAxBI,SAACrJ,GAAW,IACrBwI,EAA4BxI,EAA5BwI,OAAQf,EAAoBzH,EAApByH,gBAEhB,OACE,mCACGgB,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWQ,MAAQV,EAAKI,iBAExD,CAAC,cAAe,SAChBC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACE5G,IAAG,UAAKqF,IAAOC,UAAZ,kBAA+BsB,EAAMC,WAAWrH,GAAhD,YAAsDoH,EAAMC,WAAW1D,KAC1ElD,SAAUkF,EACV8B,QAASL,EAAMC,WAAWI,QAC1B7G,YAAawG,EAAMC,WAAWC,MAE9BrB,WAAW,GADNmB,EAAMpH,UCmBN0H,EAnCE,SAACxJ,GAAW,IACnBwI,EAAoDxI,EAApDwI,OAAQiB,EAA4CzJ,EAA5CyJ,aAAcC,EAA8B1J,EAA9B0J,gBAAiBzI,EAAajB,EAAbiB,SAE/C,OACE,mCACGwH,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWa,SAAWf,EAAKI,iBAE3D,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACEU,KAAMV,EAAMpH,GAAG+H,WACfvH,IAAG,UAAKqF,IAAOC,UAAZ,YAAyBsB,EAAMC,WAAWW,aAE7CxE,EAAGyE,WAAWb,EAAMC,WAAWhE,MAAQ,GACvCK,EAAGuE,WAAWb,EAAMC,WAAW5D,KAAO,GACtC7C,YAAawG,EAAMC,WAAWC,MAC9BxI,MAAOsI,EAAMC,WAAWvI,MACxBgD,OAAQsF,EAAMC,WAAWvF,OACzBuD,SAAU+B,EAAMC,WAAWhC,SAC3BoC,QAASL,EAAMC,WAAWI,QAC1BzC,OAAkC,IAA1BoC,EAAMC,WAAW/B,MAAc,EAAI,EAC3CL,OAAkC,IAA1BmC,EAAMC,WAAW9B,MAAc,EAAI,EAC3C7E,SAAU,kBAAMkH,EAAgBR,IAChCzG,WAAYgH,GAAgBA,EAAa3H,KAAOoH,EAAMpH,GACtDiG,WAAYmB,EAAMc,aAClB/I,SAAU,SAACgJ,GAAD,OAAYhJ,EAASiI,EAAOe,KAbjCf,EAAMpH,UCmFNoI,EApGE,SAAC,GAUX,IATLC,EASI,EATJA,WACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,eAGA7H,GAII,EANJ8H,WAMI,EALJ7H,WAKI,EAJJD,UACAvB,EAGI,EAHJA,SACAsJ,EAEI,EAFJA,WACGvK,EACC,yHAC4C8C,mBAAS,MADrD,mBACG0H,EADH,KACqBC,EADrB,KAEE5H,EAAWD,mBACjBU,qBAAU,WACJ6G,GAAcC,IACXC,EAAevG,SAASqG,GAG3BM,EAAoBN,GAFpBO,OAKH,CAACP,EAAYC,IAkBhB,IAAMM,EAAW,WACE,IAAIC,SAASR,EAAYC,GAEvCQ,OACAC,MAAK,SAAUC,GACd9G,SAAS+G,MAAMC,IAAIF,GACnBP,EAAWJ,GACXM,EAAoBN,MAErBc,OAAM,SAAUC,GAEf1G,QAAQ2G,KAAKD,EAAOf,OAmC1B,OACE,cAAC,IAAD,2BACMnK,GADN,IAEEmK,WAAYK,EACZ5I,QAASY,EACTsD,MAAOtD,EACPuD,IAAKlD,EACLmD,UAAW/E,EACXyF,YAvCoB,SAACC,GACvBnE,KAuCEoE,UArCkB,SAACD,GACjB1F,GACFA,EAAS,CACPkE,KAAMC,IAAOC,WAAWsB,EAAE3E,OAAOsD,KACjCC,IAAKH,IAAOC,WAAWsB,EAAE3E,OAAOwD,QAkClCqB,eA9BuB,SAACF,GAC1B,GAAI1F,EAAU,CACZ,IAAM0D,EAAO9B,EAASW,QAChBsD,EAASnC,EAAKmC,SACdC,EAASpC,EAAKoC,SACpB9F,EAAS,CACPkE,KAAMC,IAAOC,WAAWV,EAAKW,KAC7BC,IAAKH,IAAOC,WAAWV,EAAKa,KAI5B2B,SAAU/B,IAAOC,WAAWV,EAAKwC,YACjCL,OAAQ1B,IAAOC,WAAW2B,KAAKC,IAAI,IAAMH,IACzCC,OAAQ3B,IAAOC,WAAW2B,KAAKC,IAAI,IAAMF,IACzCK,KAAMN,EAAS,EAAI,EAAI,EACvBO,KAAMN,EAAS,EAAI,EAAI,UCahBqE,EA1FO,SAACpL,GAAW,IAE9BwI,EAOExI,EAPFwI,OACA6B,EAMErK,EANFqK,eACAU,EAKE/K,EALF+K,MACAtB,EAIEzJ,EAJFyJ,aACAC,EAGE1J,EAHF0J,gBACAzI,EAEEjB,EAFFiB,SACAsJ,EACEvK,EADFuK,WAEIc,EAAiB7C,EAAOG,QAC5B,SAACC,GAAD,OACGA,EAAKC,aAAeC,IAAWwC,MAC9B1C,EAAKC,aAAeC,IAAWyC,QAC/B3C,EAAKC,aAAeC,IAAW0C,OACjC5C,EAAKI,iBAGT,OACE,mCACGP,IAAEC,QAAQ2C,EAAgB,CAAC,eAAgB,CAAC,SAASpC,KAAI,SAACC,GACzD,GAAIA,EAAML,aAAeC,IAAW0C,KAClC,OACE,cAAC,EAAD,CACE5B,KAAMV,EAAMpH,GAAG+H,WACfvH,IAAG,UAAKqF,IAAOC,UAAZ,YAAyBsB,EAAMC,WAAWW,aAE7CxE,EAAGyE,WAAWb,EAAMC,WAAWhE,MAAQ,GACvCK,EAAGuE,WAAWb,EAAMC,WAAW5D,KAAO,GACtC3E,MAAOsI,EAAMC,WAAWvI,MACxBgD,OAAQsF,EAAMC,WAAWvF,OACzBuD,SAAU+B,EAAMC,WAAWhC,SAC3BL,OAAkC,IAA1BoC,EAAMC,WAAW/B,MAAc,EAAI,EAC3CL,OAAkC,IAA1BmC,EAAMC,WAAW9B,MAAc,EAAI,EAC3CkC,QAASL,EAAMC,WAAWI,QAC1B/G,SAAU,kBAAMkH,EAAgBR,IAChCzG,WAAYgH,GAAgBA,EAAa3H,KAAOoH,EAAMpH,GACtDiG,WAAYmB,EAAMc,aAClB/I,SAAU,SAACgJ,GAAD,OAAYhJ,EAASiI,EAAOe,KAZjCf,EAAMpH,IAgBjB,IAAI2J,EAAOV,EAAM9E,OACb8E,EAAMW,MAAK,SAAC9C,GAAD,OAAUA,EAAK9G,KAAOoH,EAAMC,WAAWsC,QAClD,GACJ,OACE,cAAC,EAAD,CACE7B,KAAMV,EAAMpH,GAAG+H,WACf8B,KAAMzC,EAAMC,WAAWwC,KACvBxB,WAAYsB,EAAKG,UACjBxB,SACEqB,EAAKI,UAAL,cACWlE,IAAOC,UADlB,YAC+B6D,EAAKI,UADpC,KAEI,KAENxB,eAAgBA,EAChBE,WAAYA,EACZuB,SAAU5C,EAAMC,WAAW4C,KAC3BC,KAAM9C,EAAMC,WAAWC,MACvBf,YAAaa,EAAMC,WAAWf,OAC9BA,OAAQc,EAAMC,WAAW8C,OACzBC,eAAe,EAEf5G,EAAGyE,WAAWb,EAAMC,WAAWhE,MAAQ,GACvCK,EAAGuE,WAAWb,EAAMC,WAAW5D,KAAO,GACtC4G,QAAS,EACTC,QAAS,EAGT7C,QAASL,EAAMC,WAAWI,QAC1BpC,SAAU+B,EAAMC,WAAWhC,SAC3BL,QACGoC,EAAMC,WAAWrC,QAAU,IACD,IAA1BoC,EAAMC,WAAW/B,MAAc,EAAI,GAEtCL,QACGmC,EAAMC,WAAWpC,QAAU,IACD,IAA1BmC,EAAMC,WAAW9B,MAAc,EAAI,GAEtC7E,SAAU,kBAAMkH,EAAgBR,IAChCzG,WAAYgH,GAAgBA,EAAa3H,KAAOoH,EAAMpH,GACtDiG,WAAYmB,EAAMc,aAClB/I,SAAU,SAACgJ,GAAD,OAAYhJ,EAASiI,EAAOe,KApBjCf,EAAMpH,UCtCRuK,GA5Bc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACxBC,EAAQ3J,mBAuBd,OAJAU,qBAAU,YAjBQ,WAChB,GAAIgJ,EAAe,CACjB,IAEME,EAFQD,EAAM/I,QAAQiJ,WAEDC,QAAQ,IAAMJ,EAAcxK,IACvD,GAAI0K,IAAiBD,EAAM/I,QAAQmB,OACjC,OAGE6H,EACFD,EAAM/I,QAAQmJ,MAAM,CAACH,IAErBD,EAAM/I,QAAQoJ,SAEhBL,EAAM/I,QAAQyB,WAAWC,aAI3B2H,MAGEP,EAAsB,cAAC,IAAD,CAAavG,IAAKwG,EAAOO,WAAW,IACvD,8B,mBC4JMC,GAnKD,WACZ,IAAMC,EAAWpK,iBAAO,MAClB3C,EAAWC,cAFC,EAGa+M,cAAvBrM,EAHU,EAGVA,MAAOgD,EAHG,EAGHA,OAAQmC,EAHL,EAGKA,IACjB2B,EAAYtH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoH,aACtDnH,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,QACjDJ,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BqH,EAAiBpH,aAAY,SAACC,GAAD,OAAWA,EAAM6M,eAAe1J,WAC7D2J,EAAgB/M,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAc5J,WAC3D6J,EAAYjN,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAaC,QACtDC,EAAWpN,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAYF,QACpDlD,EAAiBjK,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAYnD,cAC1Db,EAAerJ,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAa9J,WAIzDkK,EAAkB,SAAC/G,GAEAA,EAAE3E,SAAW2E,EAAE3E,OAAOyK,YACvBhD,GACpBxJ,EAASyJ,aAAgB,QA8BvBjC,EAAkB,SAACsE,IACnBrE,EAAU9G,MAAQmL,EAAKnL,OAAS8G,EAAU9D,OAASmI,EAAKnI,SAC1D3D,EACE0N,YAAkB,CAChB/M,MAAOoG,KAAKC,IAAIS,EAAU9G,MAAOmL,EAAKnL,OACtCgD,OAAQoD,KAAKC,IAAIS,EAAU9D,OAAQmI,EAAKnI,YAK1CgK,EAAwB,SAAC1E,EAAOe,GACpChK,EACE4N,aAAY,2BACP3E,GADM,IAETC,WAAW,2BACND,EAAMC,YACNc,QAKL6D,EAAoB,SAAC5E,GACzBjJ,EAASyJ,aAAgBR,KAM3B,OACE,cAAC1I,EAAA,EAAD,CACEI,MAAM,OACNgD,OAAO,OACPnD,QAAQ,OACRC,eAAe,SACfqN,WAAW,SACXC,OAAO,OACPjI,IAAKA,EAPP,SASE,cAAC,IAAD,CACEnF,MAAOA,EACPgD,OAAQA,EACRqK,YAAaP,EACbQ,YArEkB,SAACvH,KAsEnBwH,UAnEgB,SAACxH,KAoEjByH,aAAcV,EACdW,QAlEkB,SAACnN,GAEvB,GADAA,EAAMoN,IAAIC,iBACe,OAArBvB,EAASxJ,QAAkB,CAC7B,IAAMgL,EAAQxB,EAASxJ,QACjBiL,EAAWD,EAAM1H,SAFM,EAGQ0H,EAAME,qBAAhCC,EAHkB,EAGrBrJ,EAAgBsJ,EAHK,EAGRpJ,EACfqJ,EAAe,CACnBvJ,GAAIqJ,EAAWH,EAAMlJ,KAAOmJ,EAC5BjJ,GAAIoJ,EAAWJ,EAAMhJ,KAAOiJ,GAExBK,EACJ5N,EAAMoN,IAAIS,OAAS,EA1BT,IA0BaN,EAAqBA,EA1BlC,IA2BZxO,EAAS4B,YAAQiN,IACjB,IAAME,EAAS,CACb1J,EAAGqJ,EAAWE,EAAavJ,EAAIwJ,EAC/BtJ,EAAGoJ,EAAWC,EAAarJ,EAAIsJ,GAEjCN,EAAMrM,SAAS6M,GACfR,EAAMtJ,cAiDJ4B,OAAQvG,GAAQ,EAChBwG,OAAQxG,GAAQ,EAChBwF,IAAKiH,EACLhH,WAAS,EAXX,SAaE,eAAC,IAAD,WAEE,cAAC,IAAD,CACEV,EAAG,EACHE,EAAG,EACH5E,MAAO8G,EAAU9G,MACjBgD,OAAQ8D,EAAU9D,OAClBoI,KAC+B,gBAA7BmB,EAAc8B,WACV9B,EAAc8B,WACd,IAAM9B,EAAc8B,WAE1BlH,WAAW,IAEb,cAAC,EAAD,CAAYS,OAAQ6E,EAAW5F,gBAAiBA,IAEhD,cAAC,EAAD,CACED,eAAgBA,EAChBrH,eAAgBA,EAChBsH,gBAAiBA,IAGnB,cAAC,EAAD,CACEe,OAAQ6E,EACR7F,eAAgBA,EAChBC,gBAAiBA,IAEnB,cAAC,EAAD,CACEe,OAAQ6E,EACR5F,gBAAiBA,EACjBC,UAAWA,EACX+B,aAAcA,EACdC,gBAAiBoE,EACjB7M,SAAU2M,IAGZ,cAAC,EAAD,CACEpF,OAAQ6E,EACRtC,MAAOyC,EACPnD,eAAgBA,EAChBZ,aAAcA,EACdC,gBAAiBoE,EACjB7M,SAAU2M,EACVrD,WAtEY,SAACJ,GACrBlK,EAASiP,aAAuB/E,OAwE1B,cAAC,EAAD,CACE3C,eAAgBA,EAChBrH,eAAgBA,EAChBsH,gBAAiBA,EACjBC,UAAWA,IAGb,cAAC,GAAD,CAAsB4E,cAAe7C,Y,qDClIhC0F,GAxCE,WACf,IAAMlP,EAAWC,cADI,EAGa4C,oBAAS,GAHtB,mBAGdsM,EAHc,KAGHC,EAHG,KAIflC,EAAgB/M,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAc5J,WAWjE,OACE,eAAChD,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfqN,WAAW,SACXuB,GAAI,EACJC,GAAI,EALN,UAOE,eAAC/O,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,MAAlC,UACE,cAACC,GAAA,EAAD,CAAWzO,MAAOmM,EAAcvD,KAAM3I,SAlBnB,SAACC,GACxBjB,EAASyP,aAAexO,EAAMc,OAAOhB,QACrCqO,GAAa,MAiBRD,EACC,cAAC7P,EAAA,EAAD,CAAQqC,QAhBO,WACrB3B,EAAS0P,aAAWxC,EAAcrL,GAAIqL,EAAcvD,OACpDyF,GAAa,IAc0BxO,QAAQ,WAAzC,kBAIA,gCAGJ,cAACpB,EAAA,EAAD,UACE,cAACmQ,GAAA,EAAD,U,qLC9BFjQ,GAAUT,YAAOsB,KAAV,wEAAGtB,CAAH,kHAyEE2Q,GA/DE,SAAC7P,GAAW,IAEzBgJ,EAQEhJ,EARFgJ,cACAgB,EAOEhK,EAPFgK,aACA2B,EAME3L,EANF2L,KACAmE,EAKE9P,EALF8P,cACAC,EAIE/P,EAJF+P,aACAC,EAGEhQ,EAHFgQ,SACAC,EAEEjQ,EAFFiQ,YACAzN,EACExC,EADFwC,SAeF,OACE,cAAC,GAAD,CACE0N,EAAG,EACHX,GAAI,EACJ9O,QAAQ,OACRG,MAAM,OACNuP,OAAQ,EACRC,YAAY,WACZC,aAAc,EACdzO,QAASY,EACT8N,UAAWC,aAAKP,GAAY,cAT9B,SAWE,eAACQ,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgB3C,WAAW,SAAS3O,QAAS,EAArE,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAf,SACE,eAACH,GAAA,EAAD,CAAMC,WAAS,EAACG,KAAK,SAAS7C,WAAW,SAAS3O,QAAS,EAA3D,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAClR,EAAA,EAAD,CAAYmC,QA5BI,SAAC+E,GAC3BA,EAAEkK,kBACFlK,EAAEmK,YAAYC,2BACdjB,KAyBoD/D,KAAK,QAA/C,SACG/C,EAAgB,cAACgI,GAAA,EAAD,IAAqB,cAACC,GAAA,EAAD,QAG1C,cAACT,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAf,SACE,cAAC1R,EAAA,EAAD,CAAYiS,QAAM,EAAlB,SAAoBvF,WAIxBsE,EAOA,6BANA,cAACO,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAClR,EAAA,EAAD,CAAYmC,QAjCG,SAAC+E,GACxBA,EAAEkK,kBACFlK,EAAEmK,YAAYC,2BACdhB,KA8B+ChE,KAAK,QAA5C,SACG/B,EAAe,cAACmH,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,cC1CvCC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYJ,EAAMK,YAAYC,OAAO,YAAa,CAChDC,SAAUP,EAAMK,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAITlS,GAASL,YAAOM,KAAV,oEAAGN,CAAkBE,KAC3B6S,GAAc/S,YAAOgT,MAAV,yEAAGhT,CAAuBE,KACrC+S,GAAYjT,YAAOK,IAAV,uEAAGL,CAAH,qJAyIAkT,GA3HG,SAACpS,GACjB,IAAMqS,EAAUhB,KACVpR,EAAWC,cAFU,EAGK4C,oBAAS,GAHd,mBAGpBwP,EAHoB,KAGVC,EAHU,KAIrB9I,EAAerJ,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAa9J,WAE7D6J,EAMErN,EANFqN,UACAmF,EAKExS,EALFwS,MACAC,EAIEzS,EAJFyS,QACAC,EAGE1S,EAHF0S,cACAzC,EAEEjQ,EAFFiQ,YACA0C,EACE3S,EADF2S,WAEIC,EAAanK,IAAEC,QAAQ2E,EAAW,CAAC,eAAgB,CAAC,QAE1D/J,qBAAU,WACR,IAAK,IAAIuP,KAASD,EACZA,EAAWC,GAAOC,cAAgB/Q,SAAS8Q,GAAS,GACtD5S,EACE4N,aAAY,2BACP+E,EAAWC,IADL,IAETC,YAAa/Q,SAAS8Q,GAAS,QAKtC,CAACxF,EAAUpH,SAEd,IAgBM8M,EAAc,SAACjR,EAAIkR,GACvB,IAAM9J,EAAQmE,EAAU3B,MAAK,SAAC9C,GAAD,OAAUA,EAAK9G,KAAOA,KACnD7B,EACE4N,aAAY,2BACP3E,GADM,mBAER8J,EAAQ9J,EAAM8J,GAAS,EAAI,OAQlC,OACE,cAACxS,EAAA,EAAD,CAAK+O,GAAI,EAAT,SACE,eAAC0D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEV,MAAOA,EACPW,OACE,eAAC3S,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGgS,EACC,cAAC,GAAD,CAAa3R,GAAI,EAAjB,SACG2R,EAAQxJ,KAAI,SAACkK,EAAQN,GAAT,OACX,cAACV,GAAD,CAEEvQ,QAASuR,EAAOvR,QAChBmK,KAAK,QACLqH,UAAW,cAACC,GAAA,EAAD,IACXC,QAAS,cAAC,KAAD,CAAiBC,KAAMJ,EAAOI,KAAMxH,KAAK,OAClDlL,QAAQ,YALHgS,QAUX,6BAEF,cAACpT,EAAA,EAAD,CACEmC,QArDY,WACxB2Q,GAAY,SAACiB,GAAD,OAAeA,MAqDflD,UAAWC,aAAK8B,EAAQb,OAAT,gBACZa,EAAQL,WAAaM,IAH1B,SAME,cAACmB,GAAA,EAAD,WAKR,cAACC,GAAA,EAAD,CAAUC,GAAIrB,EAAd,SACE,eAACsB,GAAA,EAAD,WACE,cAAC,iBAAD,CACErG,KAAMqF,EACNiB,QAhEc,SAACtG,GAAU,IAAD,WACzBsF,GACP,IAAM3J,EAAQmE,EAAU3B,MAAK,SAAC9C,GAAD,OAAUA,EAAK9G,IAAMyL,EAAKsF,GAAO/Q,MAC1DoH,GAASA,EAAM4J,cAAgB/Q,SAAS8Q,GAAS,GACnD5S,EACE4N,aAAY,2BACP3E,GADM,IAET4J,YAAa/Q,SAAS8Q,GAAS,OANvC,IAAK,IAAIA,KAAStF,EAAO,EAAhBsF,IAgECiB,UAAW,IACXC,SAAU,SAACzF,GAAD,OAAS9J,QAAQC,IAAI6J,IAC/B9L,SAAU,SAAC8L,GAAD,OAAS9J,QAAQC,IAAI6J,IAC/B0F,MAAOrB,EANT,SAQGC,EAAW3J,KAAI,SAACL,GAAD,OACd,cAAC,GAAD,CACE+C,KAAM/C,EAAKO,WAAWS,KACtBZ,cAAeJ,EAAKI,cACpBgB,aAAcpB,EAAKoB,aAEnB8F,cAAe,kBAAMiD,EAAYnK,EAAK9G,GAAI,kBAC1CiO,aAAc,kBAAMgD,EAAYnK,EAAK9G,GAAI,iBACzCkO,SAAUvG,GAAgBA,EAAa3H,KAAO8G,EAAK9G,GACnDU,SAAU,kBAzDL0G,EAyDuBN,OAxD1C3I,EAASyJ,aAAgBR,IADP,IAACA,GA0DL+G,YAAaA,GALRrH,EAAK9G,SASf4Q,a,iGC9JPnT,GAASL,YAAOM,KAAV,8EAAGN,CAAkBE,KAE3B6U,GAAuB/U,YAAOgV,MAAV,4FAAGhV,CAAH,6DAMpBiV,GAAiBjV,YAAOkV,MAAV,sFAAGlV,CAAH,qDAIdmV,GAAqBnV,YAAOoV,MAAV,0FAAGpV,CAAH,qBAGlBqV,GAAYrV,IAAOuG,IAAV,iFAAGvG,CAAH,kEAuDAsV,GAhDS,SAACxU,GACvB,IADiC,EAEP8C,mBADb,IADoB,mBAE1B2R,EAF0B,KAEnBC,EAFmB,KAGzBC,EAA2C3U,EAA3C2U,WAAYC,EAA+B5U,EAA/B4U,SAAUC,EAAqB7U,EAArB6U,KAAMC,EAAe9U,EAAf8U,WAKpC,OACE,eAACC,GAAA,EAAD,CAAQC,kBAAgB,oBAAoBH,KAAMA,EAAMI,QAASL,EAAjE,UACE,cAACM,GAAA,EAAD,CAAapT,GAAG,oBAAhB,+BACA,cAACqT,GAAA,EAAD,CAAeC,UAAQ,EAACtT,GAAG,4BAA3B,SACE,cAACmS,GAAD,CACEoB,WAAYZ,EACZa,KATa,WACnBZ,EAASD,EALE,KAcLc,QAASd,EAAQE,EAAW1O,OAC5BuP,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,4BALnB,SAOE,cAACvB,GAAD,CAAgBwB,WAAY,IAAKC,KAAM,EAAvC,SACGjB,EAAWkB,MAAM,EAAGpB,GAAOxL,KAAI,SAAC6M,GAAD,OAC9B,eAACzB,GAAD,CAEEuB,KAAM,EACNhU,QAAS,kBAAMkT,EAAWgB,IAH5B,UAKE,cAACvB,GAAD,CACEjS,IAAG,UAAKqF,IAAOC,UAAZ,kBAA+BkO,EAAUhU,GAAzC,gBACHiU,IAAKD,EAAUE,mBAEjB,cAACC,GAAA,EAAD,CACEzD,MAAOsD,EAAUI,UACjBC,SAAUL,EAAUE,qBAVjBF,EAAUhU,aAiBzB,cAACsU,GAAA,EAAD,UACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,UAAjC,0B,gCC5EFiI,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvC8E,OAAO,cACLlU,SAAU,WACVkO,aAAckB,EAAM+E,MAAMjG,aAC1BkG,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnBpG,OAAQ,oBACRvP,MAAO,QACN2Q,EAAMiF,YAAYC,GAAG,MAAQ,CAC5B7V,MAAO,SAGX8V,WAAY,CACVC,QAASpF,EAAMnS,QAAQ,EAAG,GAC1BwE,OAAQ,OACRzB,SAAU,WACVyU,cAAe,OACfnW,QAAS,OACTsN,WAAY,SACZrN,eAAgB,UAElBmW,UAAW,CACTzN,MAAO,UACPxI,MAAO,QAETkW,WAAY,CACVH,QAASpF,EAAMnS,QAAQ,EAAG,EAAG,EAAG,GAEhC2X,YAAY,cAAD,OAAgBxF,EAAMnS,QAAQ,GAA9B,OACXuS,WAAYJ,EAAMK,YAAYC,OAAO,SACrCjR,MAAO,YA+BIoW,GA3BG,SAAChX,GAAW,IACpBgB,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SAEToR,EAAUhB,KAKhB,OACE,sBAAKf,UAAW+B,EAAQgE,OAAxB,UACE,qBAAK/F,UAAW+B,EAAQqE,WAAxB,SACE,cAAC,KAAD,MAEF,cAACO,GAAA,EAAD,CACEC,YAAY,SACZ7E,QAAS,CACP8E,KAAM9E,EAAQwE,UACdO,MAAO/E,EAAQyE,YAEjB9V,MAAOA,EACPqW,WAAY,CAAE,aAAc,UAC5BpW,SAjBe,SAACC,GACpBD,EAASC,EAAMc,OAAOhB,cCzBpBzB,GAASL,YAAOM,KAAV,0EAAGN,CAAkBE,KAE3B6U,GAAuB/U,YAAOgV,MAAV,wFAAGhV,CAAH,6DAMpBiV,GAAiBjV,YAAOkV,MAAV,kFAAGlV,CAAH,qDAIdmV,GAAqBnV,YAAOoV,MAAV,sFAAGpV,CAAH,qBAGlBoY,GAAsBpY,YAAOiW,MAAV,uFAAGjW,CAAH,kBAGnBqV,GAAYrV,IAAOuG,IAAV,6EAAGvG,CAAH,kEAoEAqY,GA7DK,SAACvX,GACnB,IAD6B,EAEH8C,mBADb,IADgB,mBAEtB2R,EAFsB,KAEfC,EAFe,OAGD5R,mBAAS,IAHR,mBAGtBuT,EAHsB,KAGdmB,EAHc,KAIrBC,EAAwCzX,EAAxCyX,OAAQ7C,EAAgC5U,EAAhC4U,SAAUC,EAAsB7U,EAAtB6U,KAAM6C,EAAgB1X,EAAhB0X,YAM1BC,EAAiBF,EAAO9O,QAC5B,SAACC,GAAD,OACEA,EAAKgB,KAAK/F,cAAcC,SAASuS,EAAOxS,gBACxC+E,EAAKgP,YAAY/T,cAAcC,SAASuS,EAAOxS,kBAGnD,OACE,eAACkR,GAAA,EAAD,CAAQC,kBAAgB,cAAcH,KAAMA,EAAMI,QAASL,EAA3D,UACE,cAACM,GAAA,EAAD,CAAapT,GAAG,cAAhB,0BACA,eAACwV,GAAD,CAAqBlC,UAAQ,EAA7B,UACE,cAAC5U,EAAA,EAAD,CAAK+O,GAAI,EAAT,SACE,cAAC,GAAD,CAAWvO,MAAOqV,EAAQpV,SAAU,SAACD,GAAD,OAAWwW,EAAUxW,QAE3D,cAACR,EAAA,EAAD,CAAKsB,GAAG,uBAAuB+V,SAAS,OAAOjU,OAAO,OAAtD,SACE,cAAC,GAAD,CACEyR,WAAYZ,EACZa,KApBW,WACnBZ,EAASD,EANE,KA0BHc,QAASd,EAAQkD,EAAe1R,OAChCuP,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,uBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG+B,EAAe9B,MAAM,EAAGpB,GAAOxL,KAAI,SAACqN,GAAD,OAClC,eAAC,GAAD,CAEEV,KAAM,EACNhU,QAAS,kBAAM8V,EAAYpB,IAH7B,UAKE,cAAC,GAAD,CACEhU,IAAG,UAAKqF,IAAOC,UAAZ,YAAyB0O,EAAMwB,eAClC/B,IAAKO,EAAM1M,OAEb,cAACqM,GAAA,EAAD,CACEzD,MAAO8D,EAAM1M,KACbuM,SAAUG,EAAMsB,gBAVbtB,EAAMxU,gBAkBvB,cAACsU,GAAA,EAAD,UACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,UAAjC,0B,+BC1EF7J,GAASL,YAAOM,KAAV,wEAAGN,CAAkBE,KAC3BH,GAAaC,YAAOC,KAAV,4EAAGD,CAAsBE,KAEnC6U,GAAuB/U,YAAOgV,MAAV,sFAAGhV,CAAH,6DAMpBiV,GAAiBjV,YAAOkV,MAAV,gFAAGlV,CAAH,qDAIdmV,GAAqBnV,YAAOoV,MAAV,oFAAGpV,CAAH,qBAGlBoY,GAAsBpY,YAAOiW,MAAV,qFAAGjW,CAAH,kBAGnBqV,GAAYrV,IAAOuG,IAAV,2EAAGvG,CAAH,kEAOT6Y,GAAaC,aAAW,CAC5BC,UAAW,CACTxX,QAAS,OACTC,eAAgB,SAChB6V,gBAAiB,cACjB,WAAY,CACV2B,SAAU,GACVtX,MAAO,OACP2V,gBAAiB,aARJyB,EAWhB,SAAChY,GAAD,OAAW,cAACmY,GAAA,EAAD,2BAAUnY,GAAV,IAAiBoY,kBAAmB,CAAEC,SAAU,gCAExDC,GAAYN,cAAW,SAACzG,GAAD,MAAY,CACvC4F,KAAM,CACJoB,cAAe,OACfnP,MAAO,OACPoP,WAAYjH,EAAMkH,WAAWC,kBAC7B5M,SAAU,OACV6M,YAAa,EACbhC,QAAS,UACTiC,SAAU,GACV,UAAW,CACTrP,QAAS,OAVGyO,EAad,SAAChY,GAAD,OAAW,cAAC6Y,GAAA,EAAD,aAAKC,eAAa,GAAK9Y,OAEhC+Y,GAAW,SAAC/Y,GAAW,IACnBqY,EAAqCrY,EAArCqY,SAAUrX,EAA2BhB,EAA3BgB,MAAO6R,EAAoB7S,EAApB6S,MAAUmG,EADT,YACmBhZ,EADnB,8BAG1B,OACE,6CACEiZ,KAAK,WACLC,OAAQlY,IAAU6R,EAClB/Q,GAAE,wBAAmB+Q,GACrBmC,kBAAA,mBAA6BnC,IACzBmG,GALN,aAOGhY,IAAU6R,GAAS,mCAAGwF,QAK7B,SAASc,GAAUtG,GACjB,MAAO,CACL/Q,GAAG,YAAD,OAAc+Q,GAChB,gBAAgB,iBAAhB,OAAkCA,IAItC,IAmHeuG,GAnHI,SAACpZ,GAClB,IAD4B,EAEM8C,mBADrB,IADe,mBAErBuW,EAFqB,KAEVC,EAFU,OAGMxW,mBAFrB,IADe,mBAGrByW,EAHqB,KAGVC,EAHU,OAII1W,mBAAS,GAJb,mBAIrB2W,EAJqB,KAIXC,EAJW,OAKA5W,mBAAS,IALT,mBAKrBuT,EALqB,KAKbmB,EALa,KAMpBmC,EAAsC3Z,EAAtC2Z,MAAO/E,EAA+B5U,EAA/B4U,SAAUC,EAAqB7U,EAArB6U,KAAM+E,EAAe5Z,EAAf4Z,WAazBC,EAAgBF,EAAMhR,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAK/F,cAAcC,SAASuS,EAAOxS,gBAC1B,SAAd+E,EAAKkR,QAEHC,EAAgBJ,EAAMhR,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAK/F,cAAcC,SAASuS,EAAOxS,gBAC1B,SAAd+E,EAAKkR,QAGT,OACE,eAAC/E,GAAA,EAAD,CAAQC,kBAAgB,aAAaH,KAAMA,EAAMI,QAASL,EAA1D,UACE,cAACM,GAAA,EAAD,CAAapT,GAAG,aAAhB,SACE,eAACtB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,MAAMzB,WAAW,SAAnD,UACE,cAAC,GAAD,CAAYlN,QAAQ,KAAKC,GAAI,EAA7B,qBAGA,eAACiX,GAAD,CACE/W,MAAOyY,EACPxY,SAzBc,SAACC,EAAO8Y,GAC9BN,EAAYM,GACZxC,EAAU,KAwBFnW,aAAW,WAHb,UAKE,cAACiX,GAAD,aAAW2B,MAAM,QAAWd,GAAU,KACtC,cAACb,GAAD,aAAW2B,MAAM,QAAWd,GAAU,aAI5C,eAAC,GAAD,CAAqB/D,UAAQ,EAA7B,UACE,cAAC5U,EAAA,EAAD,CAAK+O,GAAI,EAAT,SACE,cAAC,GAAD,CAAWvO,MAAOqV,EAAQpV,SAAU,SAACD,GAAD,OAAWwW,EAAUxW,QAE3D,cAAC,GAAD,CAAUA,MAAOyY,EAAU5G,MAAO,EAAlC,SACE,cAACrS,EAAA,EAAD,CAAKsB,GAAG,sBAAsB+V,SAAS,OAAOjU,OAAO,OAArD,SACE,cAAC,GAAD,CACEyR,WAAYgE,EACZ/D,KA/Ca,WACvBgE,EAAaD,EARF,KAuDD9D,QAAS8D,EAAYQ,EAAc5T,OACnCuP,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGiE,EAAchE,MAAM,EAAGwD,GAAWpQ,KAAI,SAACiR,GAAD,OACrC,eAAC,GAAD,CAEEtE,KAAM,EACNhU,QAAS,kBAAMgY,EAAWM,IAH5B,UAKE,cAAC,GAAD,CACE5X,IAAG,UAAKqF,IAAOC,UAAZ,YAAyBsS,EAAKC,cACjCpE,IAAKmE,EAAKtQ,OAEZ,cAACqM,GAAA,EAAD,CAAiBzD,MAAO0H,EAAKtQ,SARxBsQ,EAAKpY,eAetB,cAAC,GAAD,CAAUd,MAAOyY,EAAU5G,MAAO,EAAlC,SACE,cAACrS,EAAA,EAAD,CAAKsB,GAAG,sBAAsB+V,SAAS,OAAOjU,OAAO,OAArD,SACE,cAAC,GAAD,CACEyR,WAAYkE,EACZjE,KAvEa,WACvBkE,EAAaD,EAXF,KAkFDhE,QAASgE,EAAYQ,EAAc9T,OACnCuP,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGmE,EAAclE,MAAM,EAAG0D,GAAWtQ,KAAI,SAACiR,GAAD,OACrC,eAAC,GAAD,CAEEtE,KAAM,EACNhU,QAAS,kBAAMgY,EAAWM,IAH5B,UAKE,cAAC,GAAD,CACE5X,IAAG,UAAKqF,IAAOC,UAAZ,YAAyBsS,EAAKC,cACjCpE,IAAKmE,EAAKtQ,OAEZ,cAACqM,GAAA,EAAD,CAAiBzD,MAAO0H,EAAKtQ,SARxBsQ,EAAKpY,kBAgBxB,cAACsU,GAAA,EAAD,UACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,UAAjC,0B,qBC1LF7J,GAASL,YAAOM,KAAV,uEAAGN,CAAkBE,KAE3B6U,GAAuB/U,YAAOgV,MAAV,qFAAGhV,CAAH,6DAMpBiV,GAAiBjV,YAAOkV,MAAV,+EAAGlV,CAAH,qDAIdmV,GAAqBnV,YAAOoV,MAAV,mFAAGpV,CAAH,qBAGlBoY,GAAsBpY,YAAOiW,MAAV,oFAAGjW,CAAH,kBAGnBqV,GAAYrV,IAAOuG,IAAV,0EAAGvG,CAAH,kEAoGAkb,GA7FM,SAACpa,GACpB,IACMC,EAAWC,cACXma,EAAOja,aAAY,SAACC,GAAD,OAAWA,EAAMia,YAAYD,QAChDlN,EAAgB/M,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAc5J,WAJnC,EAMJV,mBALb,IADiB,mBAMvB2R,EANuB,KAMhBC,EANgB,OAOJ5R,mBAAS,IAPL,mBAOvByX,EAPuB,KAOhBC,EAPgB,OAQQ1X,mBAAS,GARjB,mBAQvB2X,EARuB,KAQVC,EARU,KAStBC,EAA0C3a,EAA1C2a,QAAS/F,EAAiC5U,EAAjC4U,SAAUC,EAAuB7U,EAAvB6U,KAAM+F,EAAiB5a,EAAjB4a,aAK3BC,EAAsB,SAACC,GAC3B,OAAOA,EAAUC,UACfD,EAAUE,YAAY,YAAc,WAAW/U,OAC/C6U,EAAUE,YAAY,OAc1B,OACE,eAACjG,GAAA,EAAD,CAAQC,kBAAgB,eAAeH,KAAMA,EAAMI,QAASL,EAA5D,UACE,cAACM,GAAA,EAAD,CAAapT,GAAG,eAAhB,wBACA,eAAC,GAAD,CAAqBsT,UAAQ,EAA7B,UACE,cAAC,KAAD,CACEnU,SAhBqB,SAACga,GAC5BT,EAASS,GACTzW,QAAQC,IAAIwW,IAeNja,MAAOuZ,EACPW,wBAAwB,EACxBC,eAAe,EACfC,SAAU,IACLX,GAENF,EAAMtU,OACL,cAACzF,EAAA,EAAD,CAAK6a,GAAI,EAAGza,MAAM,OAAOH,QAAQ,OAAOC,eAAe,SAAvD,SACE,cAAC,GAAD,CACEG,QAAQ,YACRuI,MAAM,UACNxH,QAxBc,WACxB4C,QAAQC,IAAI8V,GACZta,EAASqb,aAAYjB,EAAKvY,GAAIqL,EAAcrL,GAAIyY,IAChDC,EAAS,IACTE,EAAeD,EAAc,IAiBrB,sCASF,6BAEF,cAACja,EAAA,EAAD,CAAKsB,GAAG,wBAAwB+V,SAAS,OAAOjU,OAAO,OAAOyX,GAAI,EAAlE,SACE,cAAC,GAAD,CACEhG,WAAYZ,EACZa,KAhDW,WACnBZ,EAASD,EAXE,KA2DHc,QAASd,EAAQkG,EAAQ1U,OACzBuP,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,wBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG+E,EAAQ9E,MAAM,EAAGpB,GAAOxL,KAAI,SAACsS,GAAD,OAC3B,eAAC,GAAD,CAEE3F,KAAM,EACNhU,QAAS,kBAAMgZ,EAAaW,IAH9B,UAKE,cAAC,GAAD,CACEjZ,IAAG,UAAKqF,IAAOC,UAAZ,YAAyB2T,EAAWT,WACvC/E,IAAK8E,EAAoBU,EAAWT,aAEtC,cAAC7E,GAAA,EAAD,CACEzD,MAAOqI,EAAoBU,EAAWT,eATnCS,EAAWzZ,gBAiB5B,cAACsU,GAAA,EAAD,UACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,UAAjC,0B,2ECzHFnK,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnCoc,GAActc,YAAOuc,MAAV,8EAAGvc,CAAH,oFAOXwc,GAAgBxc,YAAOsB,KAAV,gFAAGtB,CAAH,8DAqEJyc,GA9DK,SAAC3b,GAAW,IACtBia,EAA2Cja,EAA3Cia,MAAO2B,EAAoC5b,EAApC4b,IAAK3U,EAA+BjH,EAA/BiH,IAAKjG,EAA0BhB,EAA1BgB,MAAO6a,EAAmB7b,EAAnB6b,SAAUC,EAAS9b,EAAT8b,KAQ1C,OACE,eAACtL,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC,GAAD,CAAY9P,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,SACGmZ,MAGL,cAACzJ,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,eAACnQ,EAAA,EAAD,CAAKC,QAAQ,OAAOsN,WAAW,SAA/B,UACE,cAAC2N,GAAD,UACE,cAACK,GAAA,EAAD,CACEH,IAAKA,EACL3U,IAAKA,EACL6U,KAAMA,EACN9a,MAAOA,EACPC,SAAU,SAACC,EAAOF,GAAR,OAAkB6a,EAAS7a,IACrCgU,kBAAgB,aAChBgH,oBAAqB,SAAChc,GAAD,OACnB,cAACic,GAAA,EAAD,CACEpH,KAAM7U,EAAM6U,KACZqH,gBAAiB,EACjBC,UAAU,MACV3J,MAAOxS,EAAMgB,MAJf,SAMGhB,EAAMqY,gBAKf,cAACmD,GAAD,CACExa,MAAOA,EACPgN,OAAO,QACP8L,KAAK,SACL7Y,SAAU,SAACC,GAAD,OACR2a,EACyB,KAAvB3a,EAAMc,OAAOhB,MACT4a,GAAO,EACPQ,OAAOlb,EAAMc,OAAOhB,SAG5Bqb,OA/CS,WACbrb,EAAQ4a,EACVC,EAASD,GACA5a,EAAQiG,GACjB4U,EAAS5U,IA4CHoQ,WAAY,CACVuE,IAAKA,EACL3U,IAAKA,EACL,kBAAmB,2B,sBCvE3BqV,GAASpd,YAAOqd,MAAV,wEAAGrd,CAAkBE,KAE3Bod,GAAetd,YAAOod,IAAV,8EAAGpd,CAAH,yEAOZud,GAAYvd,IAAOuG,IAAV,2EAAGvG,CAAH,mCAyCAwd,GApCI,SAAC1c,GAAW,IACrBwN,EAA8BxN,EAA9BwN,SAAUxM,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SAEzB,OACE,cAACub,GAAD,CACEG,QAAQ,oBACR7a,GAAG,uBACHd,MAAOA,EACPC,SAAUA,EACVgZ,MAAM,OACN1K,GAAI,EACJqN,YAAa,SAAC9a,GACZ,IAAM2J,EAAO+B,EAAS9B,MAAK,SAAC9C,GAAD,OAAUA,EAAK9G,KAAOA,KACjD,OAAK2J,EAIH,cAACgR,GAAD,CACEna,IAAG,UAAKqF,IAAOC,UAAZ,YAAyB6D,EAAKoR,cACjC9G,IAAKtK,EAAKG,YALL,oDAVb,SAoBG4B,EAASvE,KAAI,SAACwC,GAAD,OACZ,cAACqR,GAAA,EAAD,CAAU9b,MAAOyK,EAAK3J,GAAtB,SACE,cAAC2a,GAAD,CACEna,IAAG,UAAKqF,IAAOC,UAAZ,YAAyB6D,EAAKoR,cACjC9G,IAAKtK,EAAKG,aAHiBH,EAAK3J,UCzCtCib,GAAkB7d,YAAOuQ,MAAV,uFAAGvQ,CAAH,iBAwBN8d,GApBU,SAAChd,GAAW,IAC3BgB,EAAoBhB,EAApBgB,MAAOC,EAAajB,EAAbiB,SAEf,OACE,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOsN,WAAW,SAA/B,UACE,cAAC,KAAD,CACE/M,MAAOA,GAAS,GAChBC,SAAU,SAACmI,GAAD,OAAWnI,EAASmI,EAAM6T,IAAI1G,kBACxC2G,QAASC,IACTC,UAAQ,EACRC,eAAa,IAEf,cAACN,GAAD,CACE/b,MAAOA,GAAS,GAChBC,SAAU,SAACC,GAAD,OAAWD,EAASC,EAAMc,OAAOhB,cCA7CzB,GAASL,YAAOM,KAAV,yEAAGN,CAAkBE,KAC3BqQ,GAAYvQ,YAAOoe,MAAV,4EAAGpe,CAAqBE,KACjCH,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnCme,GAAmBre,YAAOuQ,IAAV,mFAAGvQ,CAAH,uCAMhBse,GAAY,SAACxd,GAAW,IAE1BwN,EAOExN,EAPFwN,SACAiQ,EAMEzd,EANFyd,OACAC,EAKE1d,EALF0d,WACAC,EAIE3d,EAJF2d,aACAC,EAGE5d,EAHF4d,cACAC,EAEE7d,EAFF6d,QACA5T,EACEjK,EADFiK,OAEF,OACE,qCACE,cAACsT,GAAD,CACE3T,KAAK,OACLqQ,MAAM,OACN/C,YAAY,kBACZrW,QAAQ,WACRG,MAAOiJ,EAAO0B,KACdT,MAAO4S,QAAQD,EAAQlS,MAAQ8R,EAAO9R,MACtCoS,WAAYF,EAAQlS,MAAQ8R,EAAO9R,KACnC0Q,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAGZ,eAACC,GAAA,EAAD,CAAatd,QAAQ,WAArB,UACE,cAACud,GAAA,EAAD,CAAYtc,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEd,MAAOiJ,EAAOwB,KACdxK,SAAU,SAAC0F,GAAD,OAAOiX,EAAc,OAAQjX,EAAE3E,OAAOhB,QAChDwM,SAAUA,OAGd,eAACgD,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAI0N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEpE,MAAM,YACN2B,IAAK,EACL3U,IAAK,GACLjG,MAAOiJ,EAAO8B,KACd8P,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,OAAQ5c,QAG/C,cAACwP,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAI0N,GAAI,EAAvB,SACE,eAAC7d,EAAA,EAAD,CACEC,QAAQ,OACR+O,cAAc,MACdzB,WAAW,SACXrN,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYG,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,wBAGA,cAAC,GAAD,CACEE,MAAOiJ,EAAOb,MACdnI,SAAU,SAACmI,GAAD,OAAWwU,EAAc,QAASxU,cAMpD,eAACoH,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAI0N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEpE,MAAM,eACN2B,IAAK,EACL3U,IAAK,GACLjG,MAAOiJ,EAAO7B,OACdyT,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,SAAU5c,QAGjD,cAACwP,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAI0N,GAAI,EAAvB,SACE,eAAC7d,EAAA,EAAD,CACEC,QAAQ,OACR+O,cAAc,MACdzB,WAAW,SACXrN,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYG,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,0BAGA,cAAC,GAAD,CACEE,MAAOiJ,EAAOgC,OACdhL,SAAU,SAACmI,GAAD,OAAWwU,EAAc,SAAUxU,cAMrD,cAACoH,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,SACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,GAAI0N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEpE,MAAM,WACN2B,KAAM,IACN3U,IAAK,IACLjG,MAAOiJ,EAAO9C,SACd0U,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,WAAY5c,cA0D5Csd,GAlDI,SAACte,GAAW,IACrBwN,EAAuCxN,EAAvCwN,SAAUoH,EAA6B5U,EAA7B4U,SAAUC,EAAmB7U,EAAnB6U,KAAM0J,EAAave,EAAbue,SAElC,OACE,eAACxJ,GAAA,EAAD,CAAQC,kBAAgB,oBAAoBH,KAAMA,EAAMI,QAASL,EAAjE,UACE,cAACM,GAAA,EAAD,CAAapT,GAAG,oBAAhB,yBACA,cAAC,KAAD,CACE0c,cAAe,CACb7S,KAAM,GACNF,KAAM,EACNM,KAAM,GACN3C,MAAO,UACPhB,OAAQ,EACR6D,OAAQ,UACR9E,SAAU,GAEZsX,iBAAkBC,OAAapI,MAAM,CACnC3K,KAAM+S,OAAaC,SAAS,cAE9BC,SAAU,SAAC3U,GAET,OADAzF,QAAQC,IAAIwF,GACL,IAET4U,SAAUN,EAjBZ,SAmBG,SAACO,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAA1B,UACE,cAAC5J,GAAA,EAAD,CAAeC,UAAQ,EAACtT,GAAG,6BAA3B,SACE,cAAC,GAAD,2BAAegd,GAAf,IAA0BtR,SAAUA,OAEtC,eAAC4I,GAAA,EAAD,WACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACE0Q,KAAK,SACL1Q,MAAM,UACNvI,QAAQ,WACRme,SAAUF,EAAUG,aAJtB,iCC7IRC,GAAoBhgB,YAAOigB,MAAV,iFAAGjgB,CAAH,sEAMjB6d,GAAkB7d,YAAOuQ,MAAV,+EAAGvQ,CAAH,+DAMfS,GAAUT,YAAOsB,KAAV,uEAAGtB,CAAH,mDAkKEkgB,GA5JC,WACd,IAAMnf,EAAWC,cADG,EAGQ4C,mBAAS,MAHjB,mBAGbuc,EAHa,KAGLC,EAHK,KAIdnS,EAAgB/M,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAc5J,WAC3D6J,EAAYjN,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAaC,QACtDgS,EAAcnf,aAAY,SAACC,GAAD,OAAWA,EAAMmf,eAAejS,QAC1DkS,EAAWrf,aAAY,SAACC,GAAD,OAAWA,EAAMqf,YAAYnS,QACpDoS,EAAavf,aAAY,SAACC,GAAD,OAAWA,EAAMuf,cAAcrS,QACxDC,EAAWpN,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAYF,QACpD7F,EAAYtH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoH,aACtDiN,EAAavU,aAAY,SAACC,GAAD,OAAWA,EAAMwf,iBAAiBtS,QA4BjE,OACE,eAAC,GAAD,CAAS2C,EAAG,EAAZ,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEsC,MAAM,YACNnF,UAAWA,EAAU1E,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OAE3CkH,aAAa,EACb0C,YAAY,IAEd,cAAC,GAAD,CACEH,MAAM,eACNnF,UAAWA,EAAU1E,QACnB,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAWwC,MAC/B1C,EAAKC,aAAeC,IAAW0C,MAC/B5C,EAAKC,aAAeC,IAAWyC,UAEnCkH,QAAS,CACP,CACE7Q,QAAS,kBAAM0d,EAAUQ,IAAYvU,SACrCgI,KAAMwM,MAER,CACEne,QAAS,kBAAM0d,EAAUQ,IAAYxU,OACrCiI,KAAMyM,MAER,CACEpe,QAAS,kBAAM0d,EAAUQ,IAAYtU,OACrC+H,KAAM0M,SAIZ,cAAC,GAAD,CACEzN,MAAM,SACNnF,UAAWA,EAAU1E,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWa,WAE3C8I,QAAS,CACP,CACE7Q,QAAS,kBAAM0d,EAAUQ,IAAYI,QACrC3M,KAAM4M,SAIZ,cAAC,GAAD,CACE3N,MAAM,aACNnF,UAAWA,EAAU1E,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWQ,QAE3CmJ,QAAS,CACP,CACE7Q,QAAS,kBAAM0d,EAAUQ,IAAYM,YACrC7M,KAAM8M,OAGVpQ,aAAa,EACbyC,cACE,eAAClS,EAAA,EAAD,CAAKC,QAAQ,OAAOsN,WAAW,SAA/B,UACE,cAACmR,GAAD,CACEle,MAC+B,gBAA7BmM,EAAc8B,WACV9B,EAAc8B,WACd,IAAM9B,EAAc8B,WAE1BmO,UAAQ,EACRnc,SAxEuB,SAACmI,GAClC5E,QAAQC,IAAI,UAAW2E,GACvBnJ,EAASqgB,aAAgBnT,EAAcrL,GAAIsH,EAAM6T,IAAI1G,mBAuE3C2G,QAASC,IACTE,eAAa,IAEf,cAAC,GAAD,CACErc,MAC+B,gBAA7BmM,EAAc8B,WACV9B,EAAc8B,WACd,IAAM9B,EAAc8B,WAE1B+P,UAAQ,SAMhB,cAAC,GAAD,CACEnK,KAAMwK,IAAWS,IAAYM,UAC7BzL,WAAYA,EACZG,WAhHiB,SAACyL,GACtBtgB,EAASugB,aAA0BrT,EAAcrL,GAAIye,IACrDjB,EAAU,OA+GN1K,SAAU,kBAAM0K,EAAU,SAE5B,cAAC,GAAD,CACEzK,KAAMwK,IAAWS,IAAYI,MAC7BzI,OAAQ8H,EACR7H,YAlHkB,SAACpB,GACvBrW,EAASwgB,aAAqBtT,EAAcrL,GAAIwU,EAAO5O,IACvD4X,EAAU,OAiHN1K,SAAU,kBAAM0K,EAAU,SAE5B,cAAC,GAAD,CACEzK,KAAMwK,IAAWS,IAAYxU,KAC7BqO,MAAO8F,EACP7F,WApHiB,SAACM,GACtBja,EAASygB,aAAoBvT,EAAcrL,GAAIoY,EAAMxS,IACrD4X,EAAU,OAmHN1K,SAAU,kBAAM0K,EAAU,SAE5B,cAAC,GAAD,CACEzK,KAAMwK,IAAWS,IAAYvU,OAC7BoP,QAASgF,EACT/E,aAtHmB,SAAC+F,GACxB1gB,EAAS2gB,aAAsBzT,EAAcrL,GAAI6e,EAAQjZ,IACzD4X,EAAU,OAqHN1K,SAAU,kBAAM0K,EAAU,SAE5B,cAAC,GAAD,CACEzK,KAAMwK,IAAWS,IAAYtU,KAC7BgC,SAAUA,EACV+Q,SAxHmB,SAACtU,GACxBhK,EAAS4gB,aAAgB1T,EAAcrL,GAAImI,EAAQvC,IACnD4X,EAAU,OAuHN1K,SAAU,kBAAM0K,EAAU,a,iCCrL5B/B,GAAmBre,YAAOuQ,MAAV,uFAAGvQ,CAAH,uCAgJP4hB,GA1IS,SAAC9gB,GAAW,IAEhCyd,EAMEzd,EANFyd,OACAC,EAKE1d,EALF0d,WACAC,EAIE3d,EAJF2d,aACAC,EAGE5d,EAHF4d,cACAC,EAEE7d,EAFF6d,QACA5T,EACEjK,EADFiK,OAP+B,EAUDnH,oBAAS,GAVR,mBAU1BwP,EAV0B,KAUhBC,EAVgB,KAYjC,OADA/N,QAAQC,IAAIgZ,GAETsD,IAAkB9W,EAAOpB,YAAY/E,SAAS,oBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,wBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAC7C,cAAC,GAAD,CACE8F,KAAK,kBACLqQ,MAAM,OACNpZ,QAAQ,WACRG,MAAOiJ,EAAOd,WAAWS,KACzBsB,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWS,MACnB6T,EAAOtU,YACPsU,EAAOtU,WAAWS,MAEtBmU,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWS,MACnB6T,EAAOtU,YACPsU,EAAOtU,WAAWS,KAEpByS,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAC7C,cAAC,GAAD,CACE8F,KAAK,kBACLqQ,MAAM,OACNpZ,QAAQ,WACRG,MAAOiJ,EAAOd,WAAWwC,KACzBT,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWwC,MACnB8R,EAAOtU,YACPsU,EAAOtU,WAAWwC,MAEtBoS,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWwC,MACnB8R,EAAOtU,YACPsU,EAAOtU,WAAWwC,KAEpB0Q,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SAAS,iBAC7C,eAACtD,EAAA,EAAD,CACEC,QAAQ,OACRsN,WAAW,SACXyB,cAAc,MACd9O,eAAe,gBAJjB,UAME,cAACzB,EAAA,EAAD,CAAY4B,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,wBAGA,cAACrB,EAAA,EAAD,CACEmC,QAAS,kBACPgc,EAAc,gBAAiB,EAAI3T,EAAOjB,gBAE5C+C,KAAK,QAJP,SAMG9B,EAAOjB,cACN,cAACgI,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,SAKN,6BAED8P,IAAkB9W,EAAOpB,YAAY/E,SAAS,gBAC7C,eAACtD,EAAA,EAAD,CACEC,QAAQ,OACRsN,WAAW,SACXyB,cAAc,MACd9O,eAAe,gBAJjB,UAME,cAACzB,EAAA,EAAD,CAAY4B,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,qBAGA,cAACrB,EAAA,EAAD,CACEmC,QAAS,kBACPgc,EAAc,eAAgB,EAAI3T,EAAOD,eAE3C+B,KAAK,QAJP,SAMG9B,EAAOD,aAAe,cAACmH,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,SAI1C,qCAlHD,8BC5BLmM,GAAmBre,YAAOuQ,MAAV,oFAAGvQ,CAAH,uCAuKPkiB,GAjKM,SAACphB,GAAW,IAE7Byd,EAMEzd,EANFyd,OACAC,EAKE1d,EALF0d,WACAC,EAIE3d,EAJF2d,aAEAE,GAEE7d,EAHF4d,cAGE5d,EAFF6d,SACA5T,EACEjK,EADFiK,OAP4B,EASEnH,oBAAS,GATX,mBASvBwP,EATuB,KASbC,EATa,KAW9B,OACGwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,qBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,sBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,sBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,qBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,qBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SAAS,oBAC7C,cAAC,GAAD,CACE8F,KAAK,mBACLqQ,MAAM,QACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAWvI,OAC3CsK,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWvI,OACnB6c,EAAOtU,YACPsU,EAAOtU,WAAWvI,OAEtBmd,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWvI,OACnB6c,EAAOtU,YACPsU,EAAOtU,WAAWvI,MAEpByb,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SACpC,qBAEA,cAAC,GAAD,CACE8F,KAAK,oBACLqQ,MAAM,SACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAWvF,QAC3CsH,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWvF,QACnB6Z,EAAOtU,YACPsU,EAAOtU,WAAWvF,QAEtBma,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWvF,QACnB6Z,EAAOtU,YACPsU,EAAOtU,WAAWvF,OAEpByY,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SACpC,qBAEA,cAAC,GAAD,CACE8F,KAAK,oBACLqQ,MAAM,SACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAWrC,QAC3CoE,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWrC,QACnB2W,EAAOtU,YACPsU,EAAOtU,WAAWrC,QAEtBiX,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWrC,QACnB2W,EAAOtU,YACPsU,EAAOtU,WAAWrC,OAEpBuV,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SACpC,qBAEA,cAAC,GAAD,CACE8F,KAAK,oBACLqQ,MAAM,SACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAWpC,QAC3CmE,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWpC,QACnB0W,EAAOtU,YACPsU,EAAOtU,WAAWpC,QAEtBgX,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWpC,QACnB0W,EAAOtU,YACPsU,EAAOtU,WAAWpC,OAEpBsV,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,qCAxID,8BCvBLX,GAAmBre,YAAOuQ,MAAV,yFAAGvQ,CAAH,uCAiGPmiB,GA3FU,SAACrhB,GAAW,IAEjCyd,EAMEzd,EANFyd,OACAC,EAKE1d,EALF0d,WACAC,EAIE3d,EAJF2d,aAEAE,GAEE7d,EAHF4d,cAGE5d,EAFF6d,SACA5T,EACEjK,EADFiK,OAPgC,EASFnH,oBAAS,GATP,mBAS3BwP,EAT2B,KASjBC,EATiB,KAWlC,OACGwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,oBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,kBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,yBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAC7C,cAAC,GAAD,CACE8F,KAAK,kBACLqQ,MAAM,OACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAWhE,MAC3C+F,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAWhE,MACnBsY,EAAOtU,YACPsU,EAAOtU,WAAWhE,MAEtB4Y,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAWhE,MACnBsY,EAAOtU,YACPsU,EAAOtU,WAAWhE,KAEpBkX,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,6BAED6C,IAAkB9W,EAAOpB,YAAY/E,SAAS,kBAC7C,cAAC,GAAD,CACE8F,KAAK,iBACLqQ,MAAM,MACNpZ,QAAQ,WACRiZ,KAAK,SACL9Y,MAAOoE,IAAOC,WAAW4E,EAAOd,WAAW5D,KAC3C2F,MAAO4S,QACLD,EAAQ1U,YACN0U,EAAQ1U,WAAW5D,KACnBkY,EAAOtU,YACPsU,EAAOtU,WAAW5D,KAEtBwY,WACEF,EAAQ1U,YACR0U,EAAQ1U,WAAW5D,KACnBkY,EAAOtU,YACPsU,EAAOtU,WAAW5D,IAEpB8W,OAAQqB,EACRzc,SAAU0c,EACVK,WAAS,EACThQ,OAAO,SACPuB,GAAI,EACJ0O,gBAAiB,CACfC,QAAQ,KAIZ,qCApED,8BChBLC,GAAcjf,YAAOoiB,MAAV,+EAAGpiB,CAAuBE,KAuE5BmiB,GArEM,SAACvhB,GAShBA,EAPFyd,OAOEzd,EANF0d,WAME1d,EALF2d,aAJ6B,IAK7BC,EAIE5d,EAJF4d,cAEA3T,GAEEjK,EAHF6d,QAGE7d,EAFFiK,QACAuD,EACExN,EADFwN,SAR4B,EAUE1K,oBAAS,GAVX,mBAUvBwP,EAVuB,KAUbC,EAVa,KAY9B,OAAKwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAGjD,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,qBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAC7C,eAAC,GAAD,CAAajD,QAAQ,WAAWwa,GAAI,EAApC,UACE,cAAC+C,GAAA,EAAD,CAAYtc,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEd,MAAOiJ,EAAOd,WAAWsC,KACzBxK,SAAU,SAAC0F,GAAD,OACRiX,EAAc,kBAAmBjX,EAAE3E,OAAOhB,QAE5CwM,SAAUA,OAId,6BAEDuT,IAAkB9W,EAAOpB,YAAY/E,SAAS,oBAC7C,eAAC0M,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC1R,EAAA,EAAD,CAAY4B,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,0BAIF,cAAC0P,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC,GAAD,CACE3P,MAAOiJ,EAAOd,WAAWC,MACzBnI,SAAU,SAACmI,GAAD,OAAWwU,EAAc,mBAAoBxU,WAK7D,6BAED2X,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAC7C,cAAC,GAAD,CACEmW,MAAM,YACN2B,IAAK,EACL3U,IAAK,GACLjG,MAAOiJ,EAAOd,WAAW4C,KACzB8P,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,kBAAmB5c,MAGxD,qCAhDD,8BC6CIwgB,GA/DQ,SAACxhB,GAQlBA,EANFyd,OAMEzd,EALF0d,WAKE1d,EAJF2d,aAJ+B,IAK/BC,EAGE5d,EAHF4d,cAEA3T,GACEjK,EAFF6d,QAEE7d,EADFiK,QAP8B,EASAnH,oBAAS,GATT,mBASzBwP,EATyB,KASfC,EATe,KAWhC,OACGwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,sBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,qBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,uBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SACpC,qBAEA,eAAC0M,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC1R,EAAA,EAAD,CAAY4B,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,4BAIF,cAAC0P,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC,GAAD,CACE3P,MAAOiJ,EAAOd,WAAW8C,OACzBhL,SAAU,SAACmI,GAAD,OACRwU,EAAc,oBAAqBxU,WAM3C,6BAED2X,IAAkB9W,EAAOpB,YAAY/E,SACpC,qBAEA,cAAC,GAAD,CACEmW,MAAM,eACN2B,IAAK,EACL3U,IAAK,GACLjG,MAAOiJ,EAAOd,WAAWf,OACzByT,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,oBAAqB5c,MAG1D,qCAxCD,8BC8CIygB,GA7DO,SAACzhB,GAQjBA,EANFyd,OAMEzd,EALF0d,WAKE1d,EAJF2d,aAJ8B,IAK9BC,EAGE5d,EAHF4d,cAEA3T,GACEjK,EAFF6d,QAEE7d,EADFiK,QAP6B,EASCnH,oBAAS,GATV,mBASxBwP,EATwB,KASdC,EATc,KAW/B,OACGwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,qBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,sBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,8BAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SAAS,qBAC/CmG,EAAOpB,aAAeC,IAAW0C,KAC/B,eAACgF,GAAA,EAAD,CAAMC,WAAS,EAACrR,QAAS,EAAzB,UACE,cAACoR,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC1R,EAAA,EAAD,CAAY4B,QAAQ,QAAQuI,MAAM,gBAAgBtI,GAAI,EAAtD,qBAIF,cAAC0P,GAAA,EAAD,CAAM5H,MAAI,EAAC+H,GAAI,EAAf,SACE,cAAC,GAAD,CACE3P,MAAOiJ,EAAOd,WAAWC,MACzBnI,SAAU,SAACmI,GAAD,OAAWwU,EAAc,mBAAoBxU,WAK7D,6BAED2X,IAAkB9W,EAAOpB,YAAY/E,SACpC,sBAEA,cAAC,GAAD,CACEmW,MAAM,UACN2B,IAAK,EACL3U,IAAK,EACL6U,KAAM,IACN9a,MAAOiJ,EAAOd,WAAWI,QACzBsS,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,qBAAsB5c,MAG3D,qCAtCD,8B,sBC8EI0gB,GA7FU,SAAC1hB,GAQpBA,EANFyd,OAMEzd,EALF0d,WAKE1d,EAJF2d,aAJiC,IAKjCC,EAGE5d,EAHF4d,cAEA3T,GACEjK,EAFF6d,QAEE7d,EADFiK,QAPgC,EASFnH,oBAAS,GATP,mBAS3BwP,EAT2B,KASjBC,EATiB,KAWlC,OACGwO,IAAkB9W,EAAOpB,YAAY/E,SAAS,wBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,oBAC9Cid,IAAkB9W,EAAOpB,YAAY/E,SAAS,mBAI/C,eAACkd,GAAA,EAAD,CAAW1O,SAAUA,EAAUrR,SAAU,kBAAMsR,GAAaD,IAA5D,UACE,cAAC2O,GAAA,EAAD,CAAkBC,WAAY,cAACzN,GAAA,EAAD,IAA9B,SACE,cAACxU,EAAA,EAAD,yBAEF,cAACkiB,GAAA,EAAD,UACE,eAAC3gB,EAAA,EAAD,CAAKC,QAAQ,OAAO+O,cAAc,SAAS5O,MAAM,OAAjD,UACGmgB,IAAkB9W,EAAOpB,YAAY/E,SACpC,uBAEA,cAAC,GAAD,CACEmW,MAAM,WACN2B,KAAM,IACN3U,IAAK,IACLjG,MAAOgG,KAAKiB,MAAMgC,EAAOd,WAAWhC,UACpC0U,SAAU,SAAC7a,GAAD,OAAW4c,EAAc,sBAAuB5c,MAG5D,6BAEF,eAACR,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,eAAnC,UACGqgB,IAAkB9W,EAAOpB,YAAY/E,SACpC,mBAEA,cAACqa,GAAA,EAAD,CAAawD,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACE1Y,MAAM,UACN2Y,QAASjE,QAAQ7T,EAAOd,WAAW/B,MACnCnG,SAAU,SAACC,GAAD,OACR0c,EACE,kBACA1c,EAAMc,OAAO+f,QAAU,EAAI,MAKnC9H,MAAM,OACN+H,eAAe,YAInB,6BAEDjB,IAAkB9W,EAAOpB,YAAY/E,SACpC,mBAEA,cAACqa,GAAA,EAAD,CAAawD,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACE1Y,MAAM,UACN2Y,QAASjE,QAAQ7T,EAAOd,WAAW9B,MACnCpG,SAAU,SAACC,GAAD,OACR0c,EACE,kBACA1c,EAAMc,OAAO+f,QAAU,EAAI,MAKnC9H,MAAM,OACN+H,eAAe,YAInB,wCApEH,8BCdLriB,GAAUT,YAAOsB,KAAV,2EAAGtB,CAAH,yGA8KE+iB,GApKK,WAClB,IAAMhiB,EAAWC,cACXuJ,EAAerJ,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAa9J,WACzDgK,EAAWpN,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAYF,QAMpD2U,EAAa,SAACjY,GAClB,IAAK,IAAI/B,KAAK+B,EAAOd,WACnB,GAAIc,EAAOd,WAAWjB,KAAOuB,EAAaN,WAAWjB,GACnD,OAAO,EAGX,IAAK,IAAIA,KAAK+B,EACZ,GAAS,cAAL/B,GAAqB+B,EAAO/B,KAAOuB,EAAavB,GAClD,OAAO,EAGX,OAAO,GAGT,GAAIuB,EAAc,CAChB,IAAM0Y,EAAgB1Z,IAAE2Z,KACtB,CACEpZ,cAAe,EACfgB,aAAc,EACdb,WAAYV,IAAE2Z,KACZ,CACExY,KAAM,GACN+B,KAAM,GACN/K,MAAO,EACPgD,OAAQ,EACRuB,KAAM,EACNI,IAAK,EACL4B,SAAU,EACVC,KAAM,EACNC,KAAM,EACNP,OAAQ,EACRC,OAAQ,EACRqB,OAAQ,EACRqD,KAAM,EACNM,KAAM,EACNE,OAAQ,UACR7C,MAAO,KACPG,QAAS,GAEXwX,IAAkBtX,EAAaZ,YAC5BF,QAAO,SAACC,GAAD,OAAUA,EAAK9E,SAAS,kBAC/BmF,KAAI,SAACL,GAAD,OAAUA,EAAKd,QAAQ,cAAe,SAGjDiZ,IAAkBtX,EAAaZ,YAAYF,QACzC,SAACC,GAAD,OAAWA,EAAK9E,SAAS,mBAI7B,OACE,cAAC,GAAD,CAASue,GAAI,EAAG/S,GAAI,EAApB,SACE,cAAC,KAAD,CACEkP,cAAa,uCACR2D,GACA1Y,GAFQ,IAGXN,WAAW,2BACNgZ,EAAchZ,YACdM,EAAaN,cAGpBsV,iBAAkBC,KAAW,CAC3B5L,YAAa4L,OACb1V,cAAe0V,OACf1U,aAAc0U,OACdvV,WAAYuV,KAAW,CACrB9U,KAAM8U,OAAaC,SAAS,YAC5BhT,KAAM+S,OAAa4D,KACjB,kBACA,YACA,SAACthB,GAAD,OACGA,GAASA,EAAMiF,QAChBwD,EAAaZ,aAAeC,IAAW0C,QAE3C5K,MAAO8d,OACJ6D,SAAS,EAAG,0BACZD,KACC,mBACA,YACA,SAACthB,GAAD,OACEA,GACAyI,EAAaZ,aAAeC,IAAW0C,MACvC/B,EAAaZ,aAAeC,IAAWC,KACvCU,EAAaZ,aAAeC,IAAWQ,QAE7C1F,OAAQ8a,OACL6D,SAAS,EAAG,0BACZD,KACC,oBACA,YACA,SAACthB,GAAD,OACEA,GACAyI,EAAaZ,aAAeC,IAAW0C,MACvC/B,EAAaZ,aAAeC,IAAWC,KACvCU,EAAaZ,aAAeC,IAAWQ,QAE7CnE,KAAMuZ,OACNnZ,IAAKmZ,OACLvX,SAAUuX,OACP6D,UAAU,IAAK,6BACfC,SAAS,IAAK,yBACjBpb,KAAMsX,OACNrX,KAAMqX,OACN5X,OAAQ4X,OAAa6D,SAAS,EAAG,0BACjCxb,OAAQ2X,OAAa6D,SAAS,EAAG,0BACjCnZ,MAAOsV,OACP3S,KAAM2S,OACNzS,OAAQyS,OACRtW,OAAQsW,OACRjT,KAAMiT,OACNnV,QAASmV,WAGb+D,oBAAkB,EAClB7D,SAAU,SAAC3U,GAET,OADAzF,QAAQC,IAAIwF,GACL,IAET4U,SAzHY,SAAC5U,GACnBhK,EAAS4N,aAAY5D,KAsDjB,SAoEG,SAAC6U,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAc2D,YAAU,EAAlD,UACE,eAACliB,EAAA,EAAD,CACEC,QAAQ,OACR+O,cAAc,MACd9O,eAAe,gBACfqN,WAAW,SACXnK,OAAO,OALT,UAOE,cAAC3E,EAAA,EAAD,CAAY4B,QAAQ,KAAKqQ,QAAM,EAA/B,wBAGC4N,EAAU6D,SAAWT,EAAWpD,EAAU7U,QACzC,cAAC1K,EAAA,EAAD,CAAQua,KAAK,SAAS1Q,MAAM,UAAUvI,QAAQ,WAA9C,mBAIA,gCAGJ,cAAC,GAAD,eAAqBie,IACrB,cAAC,GAAD,2BAAkBA,GAAlB,IAA6BtR,SAAUA,KACvC,cAAC,GAAD,eAAmBsR,IACnB,cAAC,GAAD,eAAoBA,IACpB,cAAC,GAAD,eAAkBA,IAClB,cAAC,GAAD,eAAsBA,IACtB,cAAC,GAAD,eAAsBA,YAOlC,OAAO,8BCjLHvf,GAASL,YAAOM,KAAV,4EAAGN,CAAkBE,KA4BlBwjB,GA1BO,SAAC5iB,GAAW,IACxB2L,EAAoC3L,EAApC2L,KAAMkJ,EAA8B7U,EAA9B6U,KAAMD,EAAwB5U,EAAxB4U,SAAUiO,EAAc7iB,EAAd6iB,UAE9B,OACE,eAAC9N,GAAA,EAAD,CAAQC,kBAAgB,gBAAgBH,KAAMA,EAA9C,UACE,cAACK,GAAA,EAAD,CAAapT,GAAG,gBAAhB,qBACA,cAACqT,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACnW,EAAA,EAAD,CAAY4B,QAAQ,QAApB,SAA6B8K,MAE/B,eAACyK,GAAA,EAAD,WACE,cAAC,GAAD,CAAQxU,QAASgT,EAAUxL,MAAM,UAAjC,oBAGA,cAAC,GAAD,CACExH,QAASihB,EACTzZ,MAAM,UACNvI,QAAQ,WACRiiB,WAAS,EAJX,4B,oBCFFnjB,GAAUT,YAAOsB,KAAV,sEAAGtB,CAAH,2BACS,SAACc,GAAD,OAAWA,EAAM+iB,cA4FxBC,UAzFA,WACb,IAAM/iB,EAAWC,cACX+iB,EAASC,cAFI,EAGyBpgB,mBAAS,IAHlC,mBAGZqgB,EAHY,KAGIC,EAHJ,KAIb/I,EAAOja,aAAY,SAACC,GAAD,OAAWA,EAAMia,YAAYD,QAChDlN,EAAgB/M,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAc5J,WAC3DiG,EAAerJ,aAAY,SAACC,GAAD,OAAWA,EAAMiN,aAAa9J,WACzD+b,EAAcnf,aAAY,SAACC,GAAD,OAAWA,EAAMmf,eAAejS,QAC1DkS,EAAWrf,aAAY,SAACC,GAAD,OAAWA,EAAMqf,YAAYnS,QACpDC,EAAWpN,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAYF,QAEpD8V,EAAgBjjB,aAAY,SAACC,GAAD,OAAWA,EAAM+M,cAAckW,WAC3DC,EAAiBnjB,aAAY,SAACC,GAAD,OAAWA,EAAM6M,eAAeoW,WAC7DE,EAAcpjB,aAAY,SAACC,GAAD,OAAWA,EAAMoN,YAAY6V,WACvDG,EAAqBrjB,aACzB,SAACC,GAAD,OAAWA,EAAMuf,cAAc8D,eAwCjC,OAfApgB,qBAAU,WACJ+W,GAAQA,EAAKvY,IAAMmhB,EAAOnhB,KACvBqL,GACHlN,EAAS0jB,aAAUV,EAAOnhB,KAEvB2hB,GACHxjB,EAAS2jB,aAAsBvJ,EAAKvY,KAEjCyd,EAAYtZ,QAAQhG,EAAS4jB,gBAC7BpE,EAASxZ,QAAQhG,EAAS6jB,gBAC1BtW,EAASvH,QAAQhG,EAAS8jB,mBAGhC,CAAC1J,IAGF,qCACGgJ,GAAiBE,GAAkBC,IAAgBrW,EAClD,cAAC6W,EAAA,EAAD,IAEA,eAACxjB,EAAA,EAAD,CAAKI,MAAM,OAAOgD,OAAO,OAAOnD,QAAQ,OAAO+O,cAAc,SAA7D,UACE,cAAC,IAAD,CACEyU,WAAY,CAAC,OACbC,WA7Ca,SAACC,EAAKjjB,GAE3BsD,QAAQC,IAAI,aAAc0f,EAAKjjB,GAEpB,QAARijB,GAAyB,cAARA,GACO,UAAzBjjB,EAAMc,OAAOoiB,UACb3a,GACAA,EAAaZ,aAAeC,IAAWC,KAEvCqa,EAAkB,2BAAD,OACY3Z,EAAaN,WAAWS,KADpC,OAIP,QAARua,GAA0C,UAAzBjjB,EAAMc,OAAOoiB,SAAuB3a,GACvDxJ,EAASyJ,aAAgB,UAiCrB,eAAClJ,EAAA,EAAD,CAAKI,MAAM,OAAOgD,OAAO,oBAAoBnD,QAAQ,OAArD,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEG,MAAM,qBACNmiB,WAAW,UACXlL,SAAS,SAHX,SAKE,cAAC,GAAD,MAEF,cAAC,GAAD,OAEF,cAAC,EAAD,OAGJ,cAAC,GAAD,CACElM,KAAMwX,EACNtO,KAAgC,IAA1BsO,EAAeld,OACrB2O,SAAU,kBAAMwO,EAAkB,KAClCP,UAhDgB,WACpB5iB,EAASokB,aAAY5a,IACrB2Z,EAAkB,Y,iCCnEtB,OAoCe,KACbkB,uBAnC6B,SAACC,GAC9B,IAAMC,GACJ,IAAIC,MAAOC,UAAY,IAAO,IAAID,KAAKF,GAAWG,UACpD,GAAIF,EAAuB,GACzB,MAAM,GAAN,OAAUxd,KAAKiB,MAAMuc,GAArB,gBAEF,IAAMG,EAAoBH,EAAuB,GACjD,GAAIG,EAAoB,GACtB,MAAM,GAAN,OAAU3d,KAAKiB,MAAM0c,GAArB,gBAEF,IAAMC,EAAqBD,EAAoB,GAC/C,GAAIC,EAAqB,GACvB,MAAM,GAAN,OAAU5d,KAAKiB,MAAM2c,GAArB,cAEF,IAAMC,EAAoBD,EAAqB,GAC/C,MAAM,GAAN,OAAU5d,KAAKiB,MAAM4c,GAArB,cAqBAxf,WAJiB,SAACyf,GAAD,OAAS9d,KAAKiB,MAA+B,KAAxB6c,EAAM1I,OAAO2I,UAAkB,KAKrE5e,UAnBgB,SAAC6e,GACjB,IAAIC,EACFD,EAAI/e,OAAS,EACT,wDAAwDif,KAAKF,GAC7D,4CAA4CE,KAAKF,GACvD,OAAKC,EACE,CACL7e,EAAGrE,SAASkjB,EAAO,GAAI,IACvB3e,EAAGvE,SAASkjB,EAAO,GAAI,IACvBze,EAAGzE,SAASkjB,EAAO,GAAI,IACvBthB,EAAGqhB,EAAI/e,OAAS,EAAIlE,SAASkjB,EAAO,GAAI,IAAM,KAL5B","file":"static/js/6.1a1aa05c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport Helper from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    shapeRef.current.cache({ pixelRatio: 1 });\r\n    shapeRef.current.getLayer().batchDraw();\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    img.src = src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(5, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(5, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor ? Helper.hexToRgba(filterColor).r : null}\r\n      green={filterColor ? Helper.hexToRgba(filterColor).g : null}\r\n      blue={filterColor ? Helper.hexToRgba(filterColor).b : null}\r\n      alpha={filterColor ? Helper.hexToRgba(filterColor).a / 255 : null}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left || 0)}\r\n          y={parseFloat(layer.layer_data.top || 0)}\r\n          filterColor={layer.layer_data.color}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          opacity={layer.layer_data.opacity}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  // useEffect(() => {\r\n  //   const node = shapeRef.current;\r\n  //   if (\r\n  //     node &&\r\n  //     (node.width() !== props.width || node.height() !== props.height) &&\r\n  //     loadedFontFamily\r\n  //   ) {\r\n  //     if (onChange) {\r\n  //       onChange({\r\n  //         width: Helper.mathRound2(node.width()),\r\n  //         height: Helper.mathRound2(node.height()),\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }, [shapeRef.current, loadedFontFamily]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        // width: Helper.mathRound2(Math.max(5, node.width())),\r\n        // height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()),\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer) return <Transformer ref={trRef} keepRatio={false} />;\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <ColorPicker\r\n        value={value || \"\"}\r\n        onChange={(color) => onChange(color.css.backgroundColor)}\r\n        palette={Palette}\r\n        deferred\r\n        hideTextfield\r\n      />\r\n      <ColorInputField\r\n        value={value || \"\"}\r\n        onChange={(event) => onChange(event.target.value)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  console.log(errors);\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_visible\", 1 - values.layer_visible)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_locked\", 1 - values.layer_locked)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.width\"\r\n              label=\"Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.width)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.width &&\r\n                errors.layer_data &&\r\n                errors.layer_data.width\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.height\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.height\"\r\n              label=\"Height\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.height)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.height &&\r\n                errors.layer_data &&\r\n                errors.layer_data.height\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleX\"\r\n              label=\"ScaleX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleY\"\r\n              label=\"ScaleY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] !== currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] !== currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string(),\r\n              size: Yup.number(),\r\n              scolor: Yup.string(),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty {...formProps} />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      (key === \"del\" || key === \"backspace\") &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n    if (key === \"esc\" && event.target.tagName !== \"INPUT\" && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n  hexToRgba,\r\n};\r\n"],"sourceRoot":""}