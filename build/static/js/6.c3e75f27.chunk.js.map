{"version":3,"sources":["components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","Popover","open","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","width","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","value","onChange","event","parseInt","target","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","useCallback","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","Undo","length","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","visible","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","useMemo","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","guide_data","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleDiscardName","handleGoBack","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","base","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","CornerProperty","isDirty","PropertyBar","defaultValues","handleApply","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","origin","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","indexOf","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","enableCarMask","setAttrs","draw","baseLayerURL","toDataURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","blob","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","every","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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","file":"static/js/6.c3e75f27.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = (event) => {\r\n    setZoom(parseInt(event.target.value || 0) / 100.0);\r\n  };\r\n  const handleZoom100 = () => {\r\n    setZoom(1);\r\n  };\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const { onZoomIn, onZoomOut, onZoomFit, onChangePaintingGuides } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/wireframe.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={`${\r\n        config.assetsURL\r\n      }/templates/${currentCarMake.folder_directory.replace(\r\n        \" \",\r\n        \"_\"\r\n      )}/mask.png`}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/sponsor_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/number_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    currentCarMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, loadedStatuses, handleImageSize, onLoadLayer } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: \"#000000\",\r\n              scolor: \"#000000\",\r\n              stroke: 1,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, baseColor, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (base) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flop\",\r\n                    values.layer_data.flop ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\r\n                    \"layer_data.flip\",\r\n                    values.layer_data.flip ? 0 : 1\r\n                  )\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    ...formProps\r\n  }) => {\r\n    const isDirty = useMemo(() => {\r\n      for (let i in formProps.values.layer_data) {\r\n        if (formProps.values.layer_data[i] != currentLayer.layer_data[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      for (let i in formProps.values) {\r\n        if (i != \"layer_data\" && formProps.values[i] != currentLayer[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }, [formProps.values, currentLayer]);\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n          {formProps.isValid && isDirty ? (\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n              Apply\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n        <GeneralProperty {...formProps} toggleField={toggleField} />\r\n        <FontProperty {...formProps} fontList={fontList} />\r\n        <ColorProperty {...formProps} />\r\n        <StrokeProperty {...formProps} />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n        />\r\n        <PositionProperty {...formProps} />\r\n        <RotationProperty {...formProps} toggleField={toggleField} />\r\n        <ShadowProperty {...formProps} />\r\n        <CornerProperty {...formProps} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (enableCarMask = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const pixelRatio = 0.5;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && enableCarMask) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(\r\n          baseLayerImg,\r\n          0,\r\n          0,\r\n          baseLayerImg.width,\r\n          baseLayerImg.height\r\n        );\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(\r\n          mainLayerImg,\r\n          0,\r\n          0,\r\n          mainLayerImg.width,\r\n          mainLayerImg.height\r\n        );\r\n      }\r\n      if (carMaskLayerImg) {\r\n        ctx.drawImage(\r\n          carMaskLayerImg,\r\n          0,\r\n          0,\r\n          carMaskLayerImg.width,\r\n          carMaskLayerImg.height\r\n        );\r\n      }\r\n      return canvas.toDataURL(\"image/png\");\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses]);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}