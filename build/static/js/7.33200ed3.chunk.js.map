{"version":3,"sources":["dialogs/ShortCutsDialog.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx"],"names":["ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","Grid","styled","MuiGrid","spacing","KeyText","Typography","DescriptionText","ShortCutsDialog","props","onCancel","open","Dialog","aria-labelledby","onClose","fullWidth","maxWidth","DialogTitle","id","DialogContent","dividers","Object","keys","map","item","index","container","mb","xs","MuiTypography","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","CustomSelect","Select","Wrapper","div","CustomOutlinedInput","OutlinedInput","CustomFontAwesomeIcon","FontAwesomeIcon","isstretch","modes","value","MouseModes","DEFAULT","icon","faMousePointer","RECT","faSquare","CIRCLE","faCircle","ELLIPSE","STAR","faStar","RING","faDotCircle","REGULARPOLYGON","size","WEDGE","fontSize","ARC","faCuttlefish","POLYGON","faDrawPolygon","LINE","ARROW","PEN","faPaintBrush","Dialogs","Toolbar","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","useState","dialog","setDialog","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","mouseMode","handleChangeBoardRotation","newBoardRotate","isRight","handleUndoRedo","isUndo","historyActionBack","historyActionUp","Box","display","justifyContent","alignContent","width","ToggleButtonGroup","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","variant","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","setMouseMode","target","setCurrentLayer","renderValue","mode","find","MenuItem","mr","onClick","Undo","Redo","RotateLeft","RotateRight","setZoom","parseInt","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","layer_type","LayerTypes","CAR","layer_visible","layer","color","BasePaints","BASE","Overlays","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","text","font_name","font_file","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","sides","closed","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","positionX","positionY","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","SliderInput","label","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","title","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","Boolean","SchemeSettingsDialog","onApply","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","MuiSelect","FontImage","FontSelect","labelId","font_preview","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","my","TextDialog","onCreate","required","ColorApplyButton","Sidebar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer"],"mappings":"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","file":"static/js/7.33200ed3.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">ShortCuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShortCutsDialog;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  setMouseMode,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { setCurrent as setCurrentLayer } from \"redux/reducers/layerReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  ZoomIn as ZoomInIcon,\r\n  ZoomOut as ZoomOutIcon,\r\n  Octagon as OctagonIcon,\r\n} from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { PaintingGuides, MouseModes } from \"constant\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-select {\r\n    padding-left: 10px;\r\n  }\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n];\r\n\r\nconst Dialogs = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n};\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const [dialog, setDialog] = useState(null);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n  const handleUndoRedo = (isUndo = true) => {\r\n    if (isUndo) {\r\n      dispatch(historyActionBack());\r\n    } else {\r\n      dispatch(historyActionUp());\r\n    }\r\n  };\r\n  const handleModeChange = (event) => {\r\n    dispatch(setMouseMode(event.target.value));\r\n    if (event.target.value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <CustomSelect\r\n            value={mouseMode}\r\n            onChange={handleModeChange}\r\n            renderValue={(value) => {\r\n              const mode = modes.find((item) => item.value === value);\r\n              if (!mode) {\r\n                return <></>;\r\n              }\r\n              return mode.icon;\r\n            }}\r\n          >\r\n            {modes.map((mode) => (\r\n              <MenuItem value={mode.value} key={mode.value}>\r\n                {mode.icon}\r\n              </MenuItem>\r\n            ))}\r\n          </CustomSelect>\r\n          <Button\r\n            mr={2}\r\n            variant=\"outlined\"\r\n            onClick={() => setDialog(Dialogs.SHORTCUTS)}\r\n          >\r\n            SHORTCUTS\r\n          </Button>\r\n          <IconButton onClick={() => handleUndoRedo(true)}>\r\n            <UndoIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleUndoRedo(false)}>\r\n            <RedoIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <ShortCutsDialog\r\n        open={dialog === Dialogs.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.STAR:\r\n      return (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.RING:\r\n      return (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.REGULARPOLYGON:\r\n      return (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.WEDGE:\r\n      return (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ARC:\r\n      return (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.LINE:\r\n    case MouseModes.PEN:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.POLYGON:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ARROW:\r\n      return (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst Board = () => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayerRef.current) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        drawingLayerRef.current = newLayer;\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n          ]);\r\n\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = () => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayerRef.current &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...layer,\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE\r\n        )}\r\n      />\r\n      <PartGroup\r\n        title=\"Overlays\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  !AllowedLayerTypes.includes(\"layer_data.text\")\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n              radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              innerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              outerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n              angle: Yup.number(),\r\n              pointerLength: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              pointerWidth: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"D\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      } else if (event.key === \"B\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.PEN));\r\n      } else if (event.key === \"R\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RECT));\r\n      } else if (event.key === \"C\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.CIRCLE));\r\n      } else if (event.key === \"E\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n      } else if (event.key === \"S\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.STAR));\r\n      } else if (event.key === \"G\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RING));\r\n      } else if (event.key === \"O\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n      } else if (event.key === \"W\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.WEDGE));\r\n      } else if (event.key === \"A\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARC));\r\n      } else if (event.key === \"P\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.POLYGON));\r\n      } else if (event.key === \"L\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.LINE));\r\n      } else if (event.key === \">\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARROW));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionBack());\r\n      } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionUp());\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}