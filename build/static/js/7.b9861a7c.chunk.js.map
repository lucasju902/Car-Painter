{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","imageRef","useRef","shapeRef","useState","image","setImage","useEffect","loadImage","current","removeEventListener","handleLoad","a","height","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","node","baseVal","resize","render","left","x","top","y","img","window","Image","crossOrigin","addEventListener","onTap","ref","draggable","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","Math","max","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","BasePaints","BASE","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","length","find","text","font_name","font_file","fontSize","size","fill","color","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","toggleField","field","Card","CardHeader","action","index","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","layer_order","animation","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","opacity","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","step","MuiTextField","Select","MuiSelect","CustomeTextField","FontImage","FontSelect","ColorInputField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","labelId","renderValue","font_preview","MenuItem","sm","css","palette","Palette","deferred","hideTextfield","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","count","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer"],"mappings":"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","file":"static/js/7.b9861a7c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"../../constants\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: props.x - width / 2,\r\n        top: props.y - height / 2,\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    img.src = src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: e.target.x(),\r\n        top: e.target.y(),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: node.x(),\r\n        top: node.y(),\r\n        // set minimal value\r\n        width: Math.max(5, node.width() * Math.abs(scaleX)),\r\n        height: Math.max(5, node.height() * Math.abs(scaleY)),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"../../../constants\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"../../../constants\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left)}\r\n          y={parseFloat(layer.layer_data.top)}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          scaleX={layer.layer_data.flop === 0 ? 1 : -1}\r\n          scaleY={layer.layer_data.flip === 0 ? 1 : -1}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile && !loadedFontList.includes(fontFamily)) {\r\n      loadFont();\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: e.target.x(),\r\n        top: e.target.y(),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      onChange({\r\n        left: node.x(),\r\n        top: node.y(),\r\n        // set minimal value\r\n        width: Math.max(5, node.width()),\r\n        height: Math.max(5, node.height()),\r\n        rotation: node.rotation(),\r\n        scaleX: scaleX,\r\n        scaleY: scaleY,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left)}\r\n              y={parseFloat(layer.layer_data.top)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 0 ? 1 : -1}\r\n              scaleY={layer.layer_data.flip === 0 ? 1 : -1}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file}`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left)}\r\n            y={parseFloat(layer.layer_data.top)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={layer.layer_data.scaleX}\r\n            scaleY={layer.layer_data.scaleY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer) return <Transformer ref={trRef} keepRatio={false} />;\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onClick,\r\n  } = props;\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onClick}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={() => toggleVisible()} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={() => toggleLocked()} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id === list[index].id);\r\n      if (layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? false : true,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onClick={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, width } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n        {label}\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <SliderWrapper>\r\n          <Slider\r\n            min={min}\r\n            max={max}\r\n            value={value}\r\n            onChange={(event, value) => setValue(value)}\r\n            aria-labelledby=\"shape-size\"\r\n            ValueLabelComponent={(props) => (\r\n              <Tooltip\r\n                open={props.open}\r\n                enterTouchDelay={0}\r\n                placement=\"top\"\r\n                title={props.value}\r\n              >\r\n                {props.children}\r\n              </Tooltip>\r\n            )}\r\n          />\r\n        </SliderWrapper>\r\n        <CustomInput\r\n          value={value}\r\n          margin=\"dense\"\r\n          onChange={(event) =>\r\n            setValue(\r\n              event.target.value === \"\" ? min || 0 : Number(event.target.value)\r\n            )\r\n          }\r\n          onBlur={handleBlur}\r\n          inputProps={{\r\n            step: 1,\r\n            min: min,\r\n            max: max,\r\n            type: \"number\",\r\n            \"aria-labelledby\": \"input-slider\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport config from \"config\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  Select as MuiSelect,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { Palette } from \"../constants\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Select = styled(MuiSelect)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\nconst FontSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          labelId=\"font-select-label\"\r\n          id=\"font-select-outlined\"\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          label=\"Font\"\r\n          mb={4}\r\n          renderValue={(id) => {\r\n            const font = fontList.find((item) => item.id === id);\r\n            if (!font) {\r\n              return <>Select Font</>;\r\n            }\r\n            return (\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            );\r\n          }}\r\n        >\r\n          {fontList.map((font) => (\r\n            <MenuItem value={font.id} key={font.id}>\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            </MenuItem>\r\n          ))}\r\n        </FontSelect>\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            width={80}\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.color}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"color\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.color}\r\n                onChange={(event) => setFieldValue(\"color\", event.target.value)}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            width={80}\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.scolor}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"scolor\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.scolor}\r\n                onChange={(event) =>\r\n                  setFieldValue(\"scolor\", event.target.value)\r\n                }\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            width={80}\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"default\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"../../../constants\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.BASE === item.layer_type\r\n    ).length;\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base, count + 1));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.OVERLAY === item.layer_type\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromShape(currentScheme.id, shape, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromUpload(currentScheme.id, upload, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createTextLayer(currentScheme.id, values, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"../../constants\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\n// import PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { deleteLayer } from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      key === \"del\" &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            {/* <PropertyBar /> */}\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}