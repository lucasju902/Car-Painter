{"version":3,"sources":["helper/index.js","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx"],"names":["getDifferenceFromToday","past_date","difference_In_Second","Date","getTime","Math","round","difference_In_Min","difference_In_Hour","difference_In_Day","sortBy","a","b","attribute","inc","Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","isSelected","onSelect","imageRef","useRef","trRef","shapeRef","useState","image","setImage","useEffect","loadImage","current","removeEventListener","handleLoad","listening","nodes","getLayer","batchDraw","height","img","window","Image","crossOrigin","addEventListener","onTap","ref","draggable","onDragStart","e","onDragEnd","left","x","top","y","onTransformEnd","node","scaleX","scaleY","console","log","max","abs","rotation","flop","flip","keepRatio","centeredScaling","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","includes","config","assetsURL","folder_directory","replace","Array","from","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","filter","item","layer_type","LayerTypes","CAR","layer_visible","sort","Helper","map","layer","layer_data","BasePaints","BASE","Overlays","currentLayer","setCurrentLayer","OVERLAY","source_file","parseFloat","layer_locked","values","TextNode","LogosAndTexts","fonts","LOGO","UPLOAD","TEXT","text","fontFamily","length","find","font","font_name","fontSize","size","fill","color","scolor","strokeEnabled","offsetX","offsetY","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","getStage","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","name","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Visibility","VisibilityOff","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","_","toggleField","field","Card","CardHeader","action","index","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","layer_order","animation","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","toLowerCase","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","opacity","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","match","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","step","MuiTextField","Select","MuiSelect","CustomeTextField","FontImage","FontSelect","ColorInputField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","error","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","labelId","renderValue","font_preview","MenuItem","Grid","container","xs","sm","css","palette","Palette","deferred","hideTextfield","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","count","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","ConfirmDialog","onConfirm","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","FontFace","font_file","load","then","loaded_face","document","add","catch","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer"],"mappings":"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","file":"static/js/6.4fc56c10.chunk.js","sourcesContent":["const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\nconst sortBy = (a, b, attribute, inc = true) => {\r\n  if (a[attribute] > b[attribute]) {\r\n    if (inc) return -1;\r\n    return 1;\r\n  }\r\n  if (b[attribute] < a[attribute]) {\r\n    if (inc) return 1;\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  sortBy,\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"../../constants\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Image, Transformer } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const trRef = useRef();\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n  }, [props.src]);\r\n  useEffect(() => {\r\n    if (isSelected && props.listening !== false) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [isSelected, props.listening]);\r\n\r\n  const handleLoad = () => {\r\n    setImage(imageRef.current);\r\n    tellSize({\r\n      width: props.width || imageRef.current.width,\r\n      height: props.height || imageRef.current.height,\r\n    });\r\n  };\r\n  const loadImage = () => {\r\n    const img = new window.Image();\r\n    img.src = src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: e.target.x(),\r\n        top: e.target.y(),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: node.x(),\r\n        top: node.y(),\r\n        // set minimal value\r\n        width: Math.max(5, node.width() * Math.abs(scaleX)),\r\n        height: Math.max(5, node.height() * Math.abs(scaleY)),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Image\r\n        {...props}\r\n        image={image}\r\n        onClick={onSelect}\r\n        onTap={onSelect}\r\n        ref={shapeRef}\r\n        draggable={onChange}\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n        onTransformEnd={handleTransformEnd}\r\n      />\r\n      {isSelected && props.listening !== false && onChange ? (\r\n        <Transformer ref={trRef} keepRatio={false} centeredScaling={true} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"../../../constants\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"../../../constants\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport Helper from \"helper\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {layers\r\n        .filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        )\r\n        .sort((a, b) => Helper.sortBy(a, b, \"layer_order\"))\r\n        .map((layer) => (\r\n          <URLImage\r\n            src={\r\n              config.assetsURL +\r\n              \"/templates/\" +\r\n              currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n              `/${layer.layer_data.img}`\r\n            }\r\n            tellSize={handleImageSize}\r\n            key={layer.id}\r\n            listening={false}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport Helper from \"helper\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {layers\r\n        .filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        )\r\n        .sort((a, b) => Helper.sortBy(a, b, \"layer_order\"))\r\n        .map((layer) => (\r\n          <URLImage\r\n            src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n            tellSize={handleImageSize}\r\n            key={layer.id}\r\n            listening={false}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport Helper from \"helper\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    handleImageSize,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n  } = props;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      {layers\r\n        .filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        )\r\n        .sort((a, b) => Helper.sortBy(a, b, \"layer_order\"))\r\n        .map((layer) => (\r\n          <URLImage\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            tellSize={handleImageSize}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left)}\r\n            y={parseFloat(layer.layer_data.top)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={layer.layer_data.flop === 0 ? 1 : -1}\r\n            scaleY={layer.layer_data.flip === 0 ? 1 : -1}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text, Transformer } from \"react-konva\";\r\n\r\nconst TextNode = ({ isSelected, onSelect, onChange, ...props }) => {\r\n  const trRef = useRef();\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (isSelected && props.listening !== false) {\r\n      // we need to attach transformer manually\r\n      trRef.current.nodes([shapeRef.current]);\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [isSelected, props.listening]);\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: e.target.x(),\r\n        top: e.target.y(),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      onChange({\r\n        left: node.x(),\r\n        top: node.y(),\r\n        // set minimal value\r\n        width: Math.max(5, node.width()),\r\n        height: Math.max(5, node.height()),\r\n        rotation: node.rotation(),\r\n        scaleX: scaleX,\r\n        scaleY: scaleY,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Text\r\n        {...props}\r\n        onClick={onSelect}\r\n        onTap={onSelect}\r\n        ref={shapeRef}\r\n        draggable={onChange}\r\n        onDragStart={handleDragStart}\r\n        onDragEnd={handleDragEnd}\r\n        onTransformEnd={handleTransformEnd}\r\n      />\r\n      {isSelected && props.listening !== false && onChange ? (\r\n        <Transformer ref={trRef} keepRatio={false} />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"../../../constants\";\r\nimport Helper from \"helper\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    fonts,\r\n    handleImageSize,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n  } = props;\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  return (\r\n    <>\r\n      {layers\r\n        .filter(\r\n          (item) =>\r\n            (item.layer_type === LayerTypes.LOGO ||\r\n              item.layer_type === LayerTypes.UPLOAD ||\r\n              item.layer_type === LayerTypes.TEXT) &&\r\n            item.layer_visible\r\n        )\r\n        .sort((a, b) => Helper.sortBy(a, b, \"layer_order\"))\r\n        .map((layer) =>\r\n          layer.layer_type !== LayerTypes.TEXT ? (\r\n            <URLImage\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              tellSize={handleImageSize}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left)}\r\n              y={parseFloat(layer.layer_data.top)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 0 ? 1 : -1}\r\n              scaleY={layer.layer_data.flip === 0 ? 1 : -1}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          ) : (\r\n            <TextNode\r\n              text={layer.layer_data.text}\r\n              fontFamily={\r\n                fonts.length\r\n                  ? fonts.find((font) => font.id === layer.layer_data.font)\r\n                      .font_name\r\n                  : null\r\n              }\r\n              fontSize={layer.layer_data.size}\r\n              fill={layer.layer_data.color}\r\n              strokeWidth={layer.layer_data.stroke}\r\n              stroke={layer.layer_data.scolor}\r\n              strokeEnabled={true}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left)}\r\n              y={parseFloat(layer.layer_data.top)}\r\n              offsetX={0}\r\n              offsetY={0}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.scaleX}\r\n              scaleY={layer.layer_data.scaleY}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          )\r\n        )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onClick,\r\n  } = props;\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onClick}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <IconButton onClick={() => toggleVisible()} size=\"small\">\r\n          {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n        </IconButton>\r\n        <Typography>{text}</Typography>\r\n      </Box>\r\n      {!disableLock ? (\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton onClick={() => toggleLocked()} size=\"small\">\r\n            {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n          </IconButton>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.sortBy(layerList, [\"layer_order\"]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id === list[index].id);\r\n      if (layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? false : true,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onClick={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <img\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <img\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <img\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <img\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.match(/(?<=uploads\\/)(.*)(?=\\.)/g)[0];\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <img\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, width } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n        {label}\r\n      </Typography>\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <SliderWrapper>\r\n          <Slider\r\n            min={min}\r\n            max={max}\r\n            value={value}\r\n            onChange={(event, value) => setValue(value)}\r\n            aria-labelledby=\"shape-size\"\r\n            ValueLabelComponent={(props) => (\r\n              <Tooltip\r\n                open={props.open}\r\n                enterTouchDelay={0}\r\n                placement=\"top\"\r\n                title={props.value}\r\n              >\r\n                {props.children}\r\n              </Tooltip>\r\n            )}\r\n          />\r\n        </SliderWrapper>\r\n        <CustomInput\r\n          value={value}\r\n          margin=\"dense\"\r\n          onChange={(event) =>\r\n            setValue(\r\n              event.target.value === \"\" ? min || 0 : Number(event.target.value)\r\n            )\r\n          }\r\n          onBlur={handleBlur}\r\n          inputProps={{\r\n            step: 1,\r\n            min: min,\r\n            max: max,\r\n            type: \"number\",\r\n            \"aria-labelledby\": \"input-slider\",\r\n          }}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport config from \"config\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  Select as MuiSelect,\r\n  MenuItem,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { Palette } from \"../constants\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Select = styled(MuiSelect)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\nconst FontSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          labelId=\"font-select-label\"\r\n          id=\"font-select-outlined\"\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          label=\"Font\"\r\n          mb={4}\r\n          renderValue={(id) => {\r\n            const font = fontList.find((item) => item.id === id);\r\n            if (!font) {\r\n              return <>Select Font</>;\r\n            }\r\n            return (\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            );\r\n          }}\r\n        >\r\n          {fontList.map((font) => (\r\n            <MenuItem value={font.id} key={font.id}>\r\n              <FontImage\r\n                src={`${config.assetsURL}/${font.font_preview}`}\r\n                alt={font.font_name}\r\n              />\r\n            </MenuItem>\r\n          ))}\r\n        </FontSelect>\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            width={80}\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.color}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"color\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.color}\r\n                onChange={(event) => setFieldValue(\"color\", event.target.value)}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            width={80}\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <ColorPicker\r\n                value={values.scolor}\r\n                onChange={(color) =>\r\n                  setFieldValue(\"scolor\", color.css.backgroundColor)\r\n                }\r\n                palette={Palette}\r\n                deferred\r\n                hideTextfield\r\n              />\r\n              <ColorInputField\r\n                value={values.scolor}\r\n                onChange={(event) =>\r\n                  setFieldValue(\"scolor\", event.target.value)\r\n                }\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            width={80}\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"primary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"default\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"../../../constants\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.BASE === item.layer_type\r\n    ).length;\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base, count + 1));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    const count = layerList.filter(\r\n      (item) => LayerTypes.OVERLAY === item.layer_type\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromShape(currentScheme.id, shape, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(\r\n      createLayerFromUpload(currentScheme.id, upload, count + 1, frameSize)\r\n    );\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    const count = layerList.filter((item) =>\r\n      [LayerTypes.LOGO, LayerTypes.UPLOAD, LayerTypes.TEXT].includes(\r\n        item.layer_type\r\n      )\r\n    ).length;\r\n    dispatch(createTextLayer(currentScheme.id, values, count + 1, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={onConfirm} color=\"default\" variant=\"outlined\">\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport config from \"config\";\r\nimport { LayerTypes } from \"../../constants\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { deleteLayer } from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      key === \"del\" &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n  useEffect(() => {\r\n    if (fontList && fontList.length) {\r\n      for (let font of fontList) {\r\n        let fontObject = new FontFace(\r\n          font.font_name,\r\n          `url(${config.assetsURL}/${font.font_file}`\r\n        );\r\n        fontObject\r\n          .load()\r\n          .then(function (loaded_face) {\r\n            document.fonts.add(loaded_face);\r\n          })\r\n          .catch(function (error) {\r\n            // error occurred\r\n            console.log(error, font.id, font.font_name);\r\n          });\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [fontList]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}