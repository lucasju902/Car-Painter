{"version":3,"sources":["dialogs/CreateProjectDialog.jsx","pages/project/index.jsx","components/SearchBox.jsx"],"names":["Button","styled","MuiButton","spacing","Autocomplete","MuiAutocomplete","CustomDialogActions","DialogActions","NameField","TextField","ProjectSelectDialog","props","useState","carMake","setCarMake","name","setName","onContinue","onCancel","open","carMakeList","sortedCarMakesList","_","orderBy","Dialog","aria-labelledby","DialogTitle","id","DialogContent","dividers","Box","display","flexDirection","length","options","groupBy","option","car_type","getOptionLabel","style","width","mb","onChange","event","newValue","renderInput","params","label","variant","value","target","onClick","color","disabled","React","memo","CustomFormControl","FormControl","CustomAutocomplete","CustomInfiniteScroll","InfiniteScroll","CustomImg","img","Wrapper","ItemWrapper","Scheme","dispatch","useDispatch","history","useHistory","user","useSelector","state","authReducer","carMakeReducer","list","schemeList","schemeReducer","currentScheme","current","schemeLoading","loading","carMakeLoading","dialog","setDialog","limit","setLimit","search","setSearch","selectedVehicle","setSelectedVehicle","sortBy","setSortBy","useMemo","filteredSchemeList","filter","item","toLowerCase","includes","useEffect","getSchemeList","getCarMakeList","push","height","ScreenLoader","justifyContent","m","p","alignItems","SearchBox","startIcon","Add","InputLabel","Select","labelId","e","MenuItem","overflow","position","dataLength","next","hasMore","loader","Loader","scrollableTarget","Grid","container","slice","map","scheme","xs","sm","md","lg","xl","schemeID","console","log","getScheme","src","config","assetsURL","alt","Typography","getDifferenceFromToday","date_modified","CreateProjectDialog","createScheme","createSchemeFromCarMake","useStyles","makeStyles","theme","borderRadius","shape","backgroundColor","border","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","className","placeholder","root","input","inputProps"],"mappings":"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","file":"static/js/5.24d89fa1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomDialogActions = styled(DialogActions)`\r\n  padding-right: 24px;\r\n`;\r\nconst NameField = styled(TextField)`\r\n  .MuiInputBase-root {\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const [carMake, setCarMake] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n  const { onContinue, onCancel, open, carMakeList } = props;\r\n\r\n  let sortedCarMakesList = _.orderBy(\r\n    [...carMakeList],\r\n    [\"name\", \"car_type\"],\r\n    [\"asc\", \"asc\"]\r\n  );\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Create a new paint</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {carMakeList && carMakeList.length ? (\r\n            <Autocomplete\r\n              id=\"car-make-select\"\r\n              options={sortedCarMakesList}\r\n              groupBy={(option) => option.car_type}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 500 }}\r\n              mb={4}\r\n              onChange={(event, newValue) => {\r\n                setCarMake(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Vehicle\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <NameField\r\n            label=\"Name\"\r\n            value={name}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <CustomDialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onContinue(carMake, name)}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!carMake ? true : false}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </CustomDialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProjectSelectDialog);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport config from \"config\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"components/Loader\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport CreateProjectDialog from \"dialogs/CreateProjectDialog\";\r\nimport SearchBox from \"components/SearchBox\";\r\n\r\nimport { getDifferenceFromToday } from \"helper\";\r\n\r\nimport {\r\n  getSchemeList,\r\n  createScheme,\r\n  getScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getCarMakeList } from \"redux/reducers/carMakeReducer\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomFormControl = styled(FormControl)`\r\n  .MuiInputBase-root {\r\n    height: 38px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nconst CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  background-color: #444;\r\n  border-radius: 10px;\r\n`;\r\nconst ItemWrapper = styled(Box)`\r\n  border: 1px solid grey;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const carMakeList = useSelector((state) => state.carMakeReducer.list);\r\n  const schemeList = useSelector((state) => state.schemeReducer.list);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n\r\n  const step = 15;\r\n  const [dialog, setDialog] = useState();\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n  const [sortBy, setSortBy] = useState(3);\r\n\r\n  let sortedCarMakesList = useMemo(\r\n    () => _.orderBy([...carMakeList], [\"name\", \"car_type\"], [\"asc\", \"asc\"]),\r\n    [carMakeList]\r\n  );\r\n\r\n  const filteredSchemeList = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        schemeList.filter(\r\n          (item) =>\r\n            (item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n              item.carMake.name.toLowerCase().includes(search.toLowerCase())) &&\r\n            (!selectedVehicle || selectedVehicle.id === item.carMake.id)\r\n        ),\r\n        sortBy === 1\r\n          ? [\"name\"]\r\n          : sortBy === 2\r\n          ? [\"carMake.name\"]\r\n          : [\"date_modified\"],\r\n        sortBy === 1 ? [\"asc\"] : sortBy === 2 ? [\"asc\"] : [\"desc\"]\r\n      ),\r\n    [schemeList, search, selectedVehicle, sortBy]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!schemeList.length) dispatch(getSchemeList(user.id));\r\n      if (!carMakeList.length) dispatch(getCarMakeList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      history.push(`/scheme/${currentScheme.id}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentScheme]);\r\n\r\n  const openScheme = (schemeID) => {\r\n    console.log(\"Opening scheme: \", schemeID);\r\n    dispatch(getScheme(schemeID));\r\n    setDialog(null);\r\n  };\r\n\r\n  const createSchemeFromCarMake = (carMake, name) => {\r\n    dispatch(createScheme(carMake, name, user.id));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleCreateNew = () => {\r\n    setDialog(\"CreateProjectDialog\");\r\n  };\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const schemeThumbnailURL = (id) => {\r\n    return `${config.assetsURL}/scheme_thumbnails/${id}.png`;\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      {schemeLoading || carMakeLoading || !schemeList || !carMakeList ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <>\r\n          <Wrapper\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"flex-start\"\r\n            m={2}\r\n            p={5}\r\n            height=\"calc(100% - 16px)\"\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              width=\"100%\"\r\n              mb={3}\r\n            >\r\n              <SearchBox\r\n                value={search}\r\n                onChange={(value) => setSearch(value)}\r\n              />\r\n              <Button\r\n                onClick={handleCreateNew}\r\n                color=\"default\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                New\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              width=\"100%\"\r\n              mb={3}\r\n            >\r\n              <CustomFormControl variant=\"outlined\">\r\n                <InputLabel id=\"sort-label\">Sort By</InputLabel>\r\n                <Select\r\n                  labelId=\"sort-label\"\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  label=\"Sort By\"\r\n                >\r\n                  <MenuItem value={1}>Project Name</MenuItem>\r\n                  <MenuItem value={2}>Vehicle Name</MenuItem>\r\n                  <MenuItem value={3}>Last Modified</MenuItem>\r\n                </Select>\r\n              </CustomFormControl>\r\n              {carMakeList && carMakeList.length ? (\r\n                <CustomAutocomplete\r\n                  id=\"car-make-select\"\r\n                  options={sortedCarMakesList}\r\n                  groupBy={(option) => option.car_type}\r\n                  getOptionLabel={(option) => option.name}\r\n                  style={{ width: 500 }}\r\n                  onChange={(event, newValue) => {\r\n                    setSelectedVehicle(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Filter By Vehicle\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n            <Box id=\"scheme-list-content\" overflow=\"auto\" position=\"relative\">\r\n              <CustomInfiniteScroll\r\n                dataLength={limit} //This is important field to render the next data\r\n                next={increaseData}\r\n                hasMore={limit < filteredSchemeList.length}\r\n                loader={<Loader />}\r\n                scrollableTarget=\"scheme-list-content\"\r\n              >\r\n                <Grid container spacing={4}>\r\n                  {filteredSchemeList.slice(0, limit).map((scheme) => (\r\n                    <Grid\r\n                      key={scheme.id}\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                      lg={3}\r\n                      xl={3}\r\n                      onClick={() => openScheme(scheme.id)}\r\n                    >\r\n                      <ItemWrapper display=\"flex\" flexDirection=\"column\">\r\n                        <CustomImg\r\n                          src={schemeThumbnailURL(scheme.id)}\r\n                          alt={scheme.name}\r\n                        />\r\n                        <Box display=\"flex\" flexDirection=\"column\" p={4}>\r\n                          <Typography variant=\"body1\">{scheme.name}</Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Edited{\" \"}\r\n                            {getDifferenceFromToday(scheme.date_modified)}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {scheme.carMake.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </ItemWrapper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </CustomInfiniteScroll>\r\n            </Box>\r\n          </Wrapper>\r\n          <CreateProjectDialog\r\n            carMakeList={carMakeList}\r\n            open={dialog === \"CreateProjectDialog\"}\r\n            onContinue={(carMake, name) =>\r\n              createSchemeFromCarMake(carMake, name)\r\n            }\r\n            onCancel={() => setDialog(null)}\r\n          />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}