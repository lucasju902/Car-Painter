{"version":3,"sources":["dialogs/CreateProjectDialog.jsx","pages/project/index.jsx","components/SearchBox.jsx"],"names":["Button","styled","MuiButton","spacing","Autocomplete","MuiAutocomplete","CustomDialogActions","DialogActions","NameField","TextField","ProjectSelectDialog","props","onContinue","onCancel","open","carMakeList","predefinedCarMakeID","useState","carMake","setCarMake","name","setName","useEffect","make","find","item","id","toString","sortedCarMakesList","_","orderBy","Dialog","aria-labelledby","DialogTitle","DialogContent","dividers","Box","display","flexDirection","length","value","options","groupBy","option","car_type","getOptionLabel","style","width","mb","onChange","event","newValue","renderInput","params","label","variant","target","onClick","color","disabled","React","memo","CustomFormControl","FormControl","CustomAutocomplete","CustomInfiniteScroll","InfiniteScroll","CustomImg","img","Wrapper","ItemWrapper","Scheme","dispatch","useDispatch","history","useHistory","user","useSelector","state","authReducer","carMakeReducer","list","schemeList","schemeReducer","schemeLoading","loading","carMakeLoading","dialog","setDialog","limit","setLimit","search","setSearch","selectedVehicle","setSelectedVehicle","sortBy","setSortBy","setPredefinedCarMakeID","useMemo","filteredSchemeList","filter","toLowerCase","includes","getSchemeList","getCarMakeList","makeID","URL","window","location","href","searchParams","get","openScheme","schemeID","push","height","ScreenLoader","justifyContent","m","p","alignItems","SearchBox","startIcon","Add","InputLabel","Select","labelId","e","MenuItem","overflow","position","dataLength","next","hasMore","loader","Loader","scrollableTarget","Grid","container","slice","map","scheme","xs","sm","md","lg","xl","src","config","assetsURL","alt","Typography","getDifferenceFromToday","date_modified","CreateProjectDialog","createScheme","createSchemeFromCarMake","useStyles","makeStyles","theme","borderRadius","shape","backgroundColor","border","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","transition","transitions","create","classes","className","placeholder","root","input","inputProps"],"mappings":"wZAgBMA,EAASC,YAAOC,KAAV,8EAAGD,CAAkBE,KAC3BC,EAAeH,YAAOI,KAAV,oFAAGJ,CAAwBE,KACvCG,EAAsBL,YAAOM,KAAV,2FAAGN,CAAH,yBAGnBO,EAAYP,YAAOQ,KAAV,iFAAGR,CAAH,sCAMTS,EAAsB,SAACC,GAAW,IAEpCC,EAKED,EALFC,WACAC,EAIEF,EAJFE,SACAC,EAGEH,EAHFG,KACAC,EAEEJ,EAFFI,YACAC,EACEL,EADFK,oBANmC,EAQPC,mBAAS,MARF,mBAQ9BC,EAR8B,KAQrBC,EARqB,OASbF,mBAAS,IATI,mBAS9BG,EAT8B,KASxBC,EATwB,KAWrCC,qBAAU,WACR,GAAIN,EAAqB,CACvB,IAAMO,EAAOR,EAAYS,MACvB,SAACC,GAAD,OAAUA,EAAKC,GAAGC,aAAeX,KAEnCG,EAAWI,MAEZ,CAACP,IAEJ,IAAIY,EAAqBC,IAAEC,QAAF,YACnBf,GACJ,CAAC,OAAQ,YACT,CAAC,MAAO,QAEV,OACE,eAACgB,EAAA,EAAD,CAAQC,kBAAgB,uBAAuBlB,KAAMA,EAArD,UACE,cAACmB,EAAA,EAAD,CAAaP,GAAG,uBAAhB,gCACA,cAACQ,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACGvB,GAAeA,EAAYwB,OAC1B,cAAC,EAAD,CACEb,GAAG,kBACHc,MAAOtB,EACPuB,QAASb,EACTc,QAAS,SAACC,GAAD,OAAYA,EAAOC,UAC5BC,eAAgB,SAACF,GAAD,OAAYA,EAAOvB,MACnC0B,MAAO,CAAEC,MAAO,KAChBC,GAAI,EACJC,SAAU,SAACC,EAAOC,GAChBhC,EAAWgC,IAEbC,YAAa,SAACC,GAAD,OACX,cAAC5C,EAAA,EAAD,2BACM4C,GADN,IAEEC,MAAM,iBACNC,QAAQ,iBAKd,6BAEF,cAAC/C,EAAD,CACE8C,MAAM,OACNd,MAAOpB,EACPmC,QAAQ,WACRN,SAAU,SAACC,GAAD,OAAW7B,EAAQ6B,EAAMM,OAAOhB,eAIhD,eAAClC,EAAD,WACE,cAAC,EAAD,CAAQmD,QAAS5C,EAAU6C,MAAM,YAAYH,QAAQ,WAArD,oBAGA,cAAC,EAAD,CACEE,QAAS,kBAAM7C,EAAWM,EAASE,IACnCsC,MAAM,UACNH,QAAQ,WACRI,UAAWzC,EAJb,6BAaO0C,MAAMC,KAAKnD,G,iCCvEpBV,EAASC,YAAOC,KAAV,kEAAGD,CAAkBE,KAC3BC,EAAeH,YAAOI,KAAV,wEAAGJ,CAAwBE,KACvC2D,EAAoB7D,YAAO8D,KAAV,6EAAG9D,CAAH,wDAMjB+D,EAAqB/D,YAAOG,GAAV,8EAAGH,CAAH,6LAYlBgE,EAAuBhE,YAAOiE,KAAV,gFAAGjE,CAAH,8DAKpBkE,EAAYlE,IAAOmE,IAAV,qEAAGnE,CAAH,kEAMToE,EAAUpE,YAAOmC,KAAV,mEAAGnC,CAAH,+CAIPqE,EAAcrE,YAAOmC,KAAV,uEAAGnC,CAAH,2CAwNFsE,UAnNA,WACb,IAAMC,EAAWC,cACXC,EAAUC,cAEVC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,QAChD7D,EAAc8D,aAAY,SAACC,GAAD,OAAWA,EAAME,eAAeC,QAC1DC,EAAaL,aAAY,SAACC,GAAD,OAAWA,EAAMK,cAAcF,QACxDG,EAAgBP,aAAY,SAACC,GAAD,OAAWA,EAAMK,cAAcE,WAC3DC,EAAiBT,aAAY,SAACC,GAAD,OAAWA,EAAME,eAAeK,WARhD,EAWSpE,qBAXT,mBAWZsE,EAXY,KAWJC,EAXI,OAYOvE,mBAFb,IAVM,mBAYZwE,EAZY,KAYLC,EAZK,OAaSzE,mBAAS,IAblB,mBAaZ0E,EAbY,KAaJC,EAbI,OAc2B3E,mBAAS,MAdpC,mBAcZ4E,EAdY,KAcKC,EAdL,QAeS7E,mBAAS,GAflB,qBAeZ8E,GAfY,MAeJC,GAfI,SAgBmC/E,qBAhBnC,qBAgBZD,GAhBY,MAgBSiF,GAhBT,MAkBfrE,GAAqBsE,mBACvB,kBAAMrE,IAAEC,QAAF,YAAcf,GAAc,CAAC,OAAQ,YAAa,CAAC,MAAO,UAChE,CAACA,IAGGoF,GAAqBD,mBACzB,kBACErE,IAAEC,QACAoD,EAAWkB,QACT,SAAC3E,GAAD,OACGA,EAAKL,KAAKiF,cAAcC,SAASX,EAAOU,gBACvC5E,EAAKP,QAAQE,KAAKiF,cAAcC,SAASX,EAAOU,mBAChDR,GAAmBA,EAAgBnE,KAAOD,EAAKP,QAAQQ,OAElD,IAAXqE,GACI,CAAC,QACU,IAAXA,GACA,CAAC,gBACD,CAAC,iBACM,IAAXA,IAAoC,IAAXA,GAAV,CAAC,OAAkC,CAAC,WAEvD,CAACb,EAAYS,EAAQE,EAAiBE,KAGxCzE,qBAAU,WACR,GAAIsD,EAAM,CACHM,EAAW3C,QAAQiC,EAAS+B,YAAc3B,EAAKlD,KAC/CX,EAAYwB,QAAQiC,EAASgC,eAElC,IACMC,EADM,IAAIC,IAAIC,OAAOC,SAASC,MACjBC,aAAaC,IAAI,QAChCN,IACFR,GAAuBQ,GACvBjB,EAAU,2BAIb,CAACZ,IAEJ,IAAMoC,GAAa,SAACC,GAClBvC,EAAQwC,KAAR,kBAAwBD,KAoB1B,OACE,cAAC7E,EAAA,EAAD,CAAKW,MAAM,OAAOoE,OAAO,OAAO9E,QAAQ,OAAOC,cAAc,SAA7D,SACG8C,GAAiBE,IAAmBJ,IAAenE,EAClD,cAACqG,EAAA,EAAD,IAEA,qCACE,eAAC/C,EAAD,CACEhC,QAAQ,OACRC,cAAc,SACd+E,eAAe,aACfC,EAAG,EACHC,EAAG,EACHJ,OAAO,oBANT,UAQE,eAAC/E,EAAA,EAAD,CACEC,QAAQ,OACRgF,eAAe,gBACfG,WAAW,SACXzE,MAAM,OACNC,GAAI,EALN,UAOE,cAACyE,EAAA,EAAD,CACEjF,MAAOmD,EACP1C,SAAU,SAACT,GAAD,OAAWoD,EAAUpD,MAEjC,cAAC,EAAD,CACEiB,QAtCU,WACtB+B,EAAU,wBAsCE9B,MAAM,UACNH,QAAQ,WACRmE,UAAW,cAACC,EAAA,EAAD,IAJb,oBASF,eAACvF,EAAA,EAAD,CACEC,QAAQ,OACRgF,eAAe,aACfG,WAAW,SACXzE,MAAM,OACNC,GAAI,EALN,UAOE,eAACc,EAAD,CAAmBP,QAAQ,WAA3B,UACE,cAACqE,EAAA,EAAD,CAAYlG,GAAG,aAAf,qBACA,eAACmG,EAAA,EAAD,CACEC,QAAQ,aACRtF,MAAOuD,GACP9C,SAAU,SAAC8E,GAAD,OAAO/B,GAAU+B,EAAEvE,OAAOhB,QACpCc,MAAM,UAJR,UAME,cAAC0E,EAAA,EAAD,CAAUxF,MAAO,EAAjB,0BACA,cAACwF,EAAA,EAAD,CAAUxF,MAAO,EAAjB,0BACA,cAACwF,EAAA,EAAD,CAAUxF,MAAO,EAAjB,iCAGHzB,GAAeA,EAAYwB,OAC1B,cAACyB,EAAD,CACEtC,GAAG,kBACHe,QAASb,GACTc,QAAS,SAACC,GAAD,OAAYA,EAAOC,UAC5BC,eAAgB,SAACF,GAAD,OAAYA,EAAOvB,MACnC0B,MAAO,CAAEC,MAAO,KAChBE,SAAU,SAACC,EAAOC,GAChB2C,EAAmB3C,IAErBC,YAAa,SAACC,GAAD,OACX,cAAC5C,EAAA,EAAD,2BACM4C,GADN,IAEEC,MAAM,oBACNC,QAAQ,iBAKd,gCAGJ,cAACnB,EAAA,EAAD,CAAKV,GAAG,sBAAsBuG,SAAS,OAAOC,SAAS,WAAvD,SACE,cAACjE,EAAD,CACEkE,WAAY1C,EACZ2C,KAvFO,WACnB1C,EAASD,EA7DE,KAoJC4C,QAAS5C,EAAQU,GAAmB5D,OACpC+F,OAAQ,cAACC,EAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACvI,QAAS,EAAzB,SACGgG,GAAmBwC,MAAM,EAAGlD,GAAOmD,KAAI,SAACC,GAAD,OACtC,cAACJ,EAAA,EAAD,CAEEhH,MAAI,EACJqH,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJC,GAAI,EACJzF,QAAS,kBAAMuD,GAAW6B,EAAOnH,KARnC,SAUE,eAAC4C,EAAD,CAAajC,QAAQ,OAAOC,cAAc,SAA1C,UACE,cAAC6B,EAAD,CACEgF,KAtGIzH,EAsGoBmH,EAAOnH,GArG/C,GAAN,OAAU0H,IAAOC,UAAjB,8BAAgD3H,EAAhD,SAsGsB4H,IAAKT,EAAOzH,OAEd,eAACgB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASiF,EAAG,EAA9C,UACE,cAACgC,EAAA,EAAD,CAAYhG,QAAQ,QAApB,SAA6BsF,EAAOzH,OACpC,eAACmI,EAAA,EAAD,CAAYhG,QAAQ,QAApB,mBACS,IACNiG,YAAuBX,EAAOY,kBAEjC,cAACF,EAAA,EAAD,CAAYhG,QAAQ,QAApB,SACGsF,EAAO3H,QAAQE,cArBjByH,EAAOnH,IA3FL,IAACA,cA0HpB,cAACgI,EAAD,CACE3I,YAAaA,EACbC,oBAAqBA,GACrBF,KAAiB,wBAAXyE,EACN3E,WAAY,SAACM,EAASE,GAAV,OA3IU,SAACF,EAASE,GACxCoE,EAAU,MACVhB,EAASmF,YAAazI,EAASE,EAAMwD,EAAKlD,GAAIsF,KA0IpC4C,CAAwB1I,EAASE,IAEnCP,SAAU,kBAAM2E,EAAU,gB,iGCjRhCqE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCpE,OAAO,aACLuC,SAAU,WACV8B,aAAcD,EAAME,MAAMD,aAC1BE,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnBC,OAAQ,oBACRpH,MAAO,QACNgH,EAAMK,YAAYC,GAAG,MAAQ,CAC5BtH,MAAO,SAGXuH,WAAY,CACVC,QAASR,EAAM5J,QAAQ,EAAG,GAC1BgH,OAAQ,OACRe,SAAU,WACVsC,cAAe,OACfnI,QAAS,OACTmF,WAAY,SACZH,eAAgB,UAElBoD,UAAW,CACT/G,MAAO,UACPX,MAAO,QAET2H,WAAY,CACVH,QAASR,EAAM5J,QAAQ,EAAG,EAAG,EAAG,GAEhCwK,YAAY,cAAD,OAAgBZ,EAAM5J,QAAQ,GAA9B,OACXyK,WAAYb,EAAMc,YAAYC,OAAO,SACrC/H,MAAO,YA+BI0E,IA3BG,SAAC9G,GAAW,IACpB6B,EAAoB7B,EAApB6B,MAAOS,EAAatC,EAAbsC,SAET8H,EAAUlB,IAKhB,OACE,sBAAKmB,UAAWD,EAAQpF,OAAxB,UACE,qBAAKqF,UAAWD,EAAQT,WAAxB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEW,YAAY,SACZF,QAAS,CACPG,KAAMH,EAAQN,UACdU,MAAOJ,EAAQL,YAEjBlI,MAAOA,EACP4I,WAAY,CAAE,aAAc,UAC5BnI,SAjBe,SAACC,GACpBD,EAASC,EAAMM,OAAOhB","file":"static/js/5.6d81720b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomDialogActions = styled(DialogActions)`\r\n  padding-right: 24px;\r\n`;\r\nconst NameField = styled(TextField)`\r\n  .MuiInputBase-root {\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const {\r\n    onContinue,\r\n    onCancel,\r\n    open,\r\n    carMakeList,\r\n    predefinedCarMakeID,\r\n  } = props;\r\n  const [carMake, setCarMake] = useState(null);\r\n  const [name, setName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (predefinedCarMakeID) {\r\n      const make = carMakeList.find(\r\n        (item) => item.id.toString() === predefinedCarMakeID\r\n      );\r\n      setCarMake(make);\r\n    }\r\n  }, [predefinedCarMakeID]);\r\n\r\n  let sortedCarMakesList = _.orderBy(\r\n    [...carMakeList],\r\n    [\"name\", \"car_type\"],\r\n    [\"asc\", \"asc\"]\r\n  );\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Create a new paint</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {carMakeList && carMakeList.length ? (\r\n            <Autocomplete\r\n              id=\"car-make-select\"\r\n              value={carMake}\r\n              options={sortedCarMakesList}\r\n              groupBy={(option) => option.car_type}\r\n              getOptionLabel={(option) => option.name}\r\n              style={{ width: 500 }}\r\n              mb={4}\r\n              onChange={(event, newValue) => {\r\n                setCarMake(newValue);\r\n              }}\r\n              renderInput={(params) => (\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Select Vehicle\"\r\n                  variant=\"outlined\"\r\n                />\r\n              )}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <NameField\r\n            label=\"Name\"\r\n            value={name}\r\n            variant=\"outlined\"\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </Box>\r\n      </DialogContent>\r\n      <CustomDialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\" variant=\"outlined\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onContinue(carMake, name)}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!carMake ? true : false}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </CustomDialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ProjectSelectDialog);\r\n","import React, { useEffect, useState, useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport config from \"config\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Typography,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  Select,\r\n  InputLabel,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { Add as AddIcon } from \"@material-ui/icons\";\r\n\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { Autocomplete as MuiAutocomplete } from \"@material-ui/lab\";\r\nimport Loader from \"components/Loader\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport CreateProjectDialog from \"dialogs/CreateProjectDialog\";\r\nimport SearchBox from \"components/SearchBox\";\r\n\r\nimport { getDifferenceFromToday } from \"helper\";\r\n\r\nimport { getSchemeList, createScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getCarMakeList } from \"redux/reducers/carMakeReducer\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Autocomplete = styled(MuiAutocomplete)(spacing);\r\nconst CustomFormControl = styled(FormControl)`\r\n  .MuiInputBase-root {\r\n    height: 38px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\nconst CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  background-color: #444;\r\n  border-radius: 10px;\r\n`;\r\nconst ItemWrapper = styled(Box)`\r\n  border: 1px solid grey;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const carMakeList = useSelector((state) => state.carMakeReducer.list);\r\n  const schemeList = useSelector((state) => state.schemeReducer.list);\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n\r\n  const step = 15;\r\n  const [dialog, setDialog] = useState();\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedVehicle, setSelectedVehicle] = useState(null);\r\n  const [sortBy, setSortBy] = useState(3);\r\n  const [predefinedCarMakeID, setPredefinedCarMakeID] = useState();\r\n\r\n  let sortedCarMakesList = useMemo(\r\n    () => _.orderBy([...carMakeList], [\"name\", \"car_type\"], [\"asc\", \"asc\"]),\r\n    [carMakeList]\r\n  );\r\n\r\n  const filteredSchemeList = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        schemeList.filter(\r\n          (item) =>\r\n            (item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n              item.carMake.name.toLowerCase().includes(search.toLowerCase())) &&\r\n            (!selectedVehicle || selectedVehicle.id === item.carMake.id)\r\n        ),\r\n        sortBy === 1\r\n          ? [\"name\"]\r\n          : sortBy === 2\r\n          ? [\"carMake.name\"]\r\n          : [\"date_modified\"],\r\n        sortBy === 1 ? [\"asc\"] : sortBy === 2 ? [\"asc\"] : [\"desc\"]\r\n      ),\r\n    [schemeList, search, selectedVehicle, sortBy]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!schemeList.length) dispatch(getSchemeList(user.id));\r\n      if (!carMakeList.length) dispatch(getCarMakeList());\r\n\r\n      const url = new URL(window.location.href);\r\n      const makeID = url.searchParams.get(\"make\");\r\n      if (makeID) {\r\n        setPredefinedCarMakeID(makeID);\r\n        setDialog(\"CreateProjectDialog\");\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  const openScheme = (schemeID) => {\r\n    history.push(`/scheme/${schemeID}`);\r\n  };\r\n\r\n  const createSchemeFromCarMake = (carMake, name) => {\r\n    setDialog(null);\r\n    dispatch(createScheme(carMake, name, user.id, openScheme));\r\n  };\r\n\r\n  const handleCreateNew = () => {\r\n    setDialog(\"CreateProjectDialog\");\r\n  };\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const schemeThumbnailURL = (id) => {\r\n    return `${config.assetsURL}/scheme_thumbnails/${id}.png`;\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      {schemeLoading || carMakeLoading || !schemeList || !carMakeList ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <>\r\n          <Wrapper\r\n            display=\"flex\"\r\n            flexDirection=\"column\"\r\n            justifyContent=\"flex-start\"\r\n            m={2}\r\n            p={5}\r\n            height=\"calc(100% - 16px)\"\r\n          >\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"space-between\"\r\n              alignItems=\"center\"\r\n              width=\"100%\"\r\n              mb={3}\r\n            >\r\n              <SearchBox\r\n                value={search}\r\n                onChange={(value) => setSearch(value)}\r\n              />\r\n              <Button\r\n                onClick={handleCreateNew}\r\n                color=\"default\"\r\n                variant=\"outlined\"\r\n                startIcon={<AddIcon />}\r\n              >\r\n                New\r\n              </Button>\r\n            </Box>\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"flex-start\"\r\n              alignItems=\"center\"\r\n              width=\"100%\"\r\n              mb={3}\r\n            >\r\n              <CustomFormControl variant=\"outlined\">\r\n                <InputLabel id=\"sort-label\">Sort By</InputLabel>\r\n                <Select\r\n                  labelId=\"sort-label\"\r\n                  value={sortBy}\r\n                  onChange={(e) => setSortBy(e.target.value)}\r\n                  label=\"Sort By\"\r\n                >\r\n                  <MenuItem value={1}>Project Name</MenuItem>\r\n                  <MenuItem value={2}>Vehicle Name</MenuItem>\r\n                  <MenuItem value={3}>Last Modified</MenuItem>\r\n                </Select>\r\n              </CustomFormControl>\r\n              {carMakeList && carMakeList.length ? (\r\n                <CustomAutocomplete\r\n                  id=\"car-make-filter\"\r\n                  options={sortedCarMakesList}\r\n                  groupBy={(option) => option.car_type}\r\n                  getOptionLabel={(option) => option.name}\r\n                  style={{ width: 500 }}\r\n                  onChange={(event, newValue) => {\r\n                    setSelectedVehicle(newValue);\r\n                  }}\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      label=\"Filter By Vehicle\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n            <Box id=\"scheme-list-content\" overflow=\"auto\" position=\"relative\">\r\n              <CustomInfiniteScroll\r\n                dataLength={limit} //This is important field to render the next data\r\n                next={increaseData}\r\n                hasMore={limit < filteredSchemeList.length}\r\n                loader={<Loader />}\r\n                scrollableTarget=\"scheme-list-content\"\r\n              >\r\n                <Grid container spacing={4}>\r\n                  {filteredSchemeList.slice(0, limit).map((scheme) => (\r\n                    <Grid\r\n                      key={scheme.id}\r\n                      item\r\n                      xs={12}\r\n                      sm={6}\r\n                      md={4}\r\n                      lg={3}\r\n                      xl={3}\r\n                      onClick={() => openScheme(scheme.id)}\r\n                    >\r\n                      <ItemWrapper display=\"flex\" flexDirection=\"column\">\r\n                        <CustomImg\r\n                          src={schemeThumbnailURL(scheme.id)}\r\n                          alt={scheme.name}\r\n                        />\r\n                        <Box display=\"flex\" flexDirection=\"column\" p={4}>\r\n                          <Typography variant=\"body1\">{scheme.name}</Typography>\r\n                          <Typography variant=\"body2\">\r\n                            Edited{\" \"}\r\n                            {getDifferenceFromToday(scheme.date_modified)}\r\n                          </Typography>\r\n                          <Typography variant=\"body2\">\r\n                            {scheme.carMake.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </ItemWrapper>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </CustomInfiniteScroll>\r\n            </Box>\r\n          </Wrapper>\r\n          <CreateProjectDialog\r\n            carMakeList={carMakeList}\r\n            predefinedCarMakeID={predefinedCarMakeID}\r\n            open={dialog === \"CreateProjectDialog\"}\r\n            onContinue={(carMake, name) =>\r\n              createSchemeFromCarMake(carMake, name)\r\n            }\r\n            onCancel={() => setDialog(null)}\r\n          />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}