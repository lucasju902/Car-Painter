{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","CustomSelect","Select","Wrapper","div","CustomOutlinedInput","OutlinedInput","CustomFontAwesomeIcon","FontAwesomeIcon","props","stretch","modes","value","MouseModes","DEFAULT","icon","faMousePointer","RECT","faSquare","CIRCLE","faCircle","ELLIPSE","STAR","faStar","Toolbar","onZoomIn","onZoomOut","onChangePaintingGuides","onChangeBoardRotation","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","boardRotate","mouseMode","handleChangeBoardRotation","newBoardRotate","isRight","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","setMouseMode","target","setCurrentLayer","renderValue","mode","find","item","map","MenuItem","onClick","RotateLeft","RotateRight","id","setZoom","parseInt","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","imageRef","useRef","shapeRef","useState","image","setImage","filters","length","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","layer_type","LayerTypes","CAR","layer_visible","layer","layer_data","color","BasePaints","BASE","Overlays","OVERLAY","shadowOffset","getRelativeShadowOffset","shadowOffsetX","shadowOffsetY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","cornerRadius","radiusX","radiusY","handleDragStart","handleDragEnd","handleTransformEnd","data","Shapes","drawingLayer","SHAPE","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","point","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMousedown","onContentMousedown","getRelativePointerPosition","newLayer","DefaultLayer","setDrawingLayer","onContentMousemove","onContentMouseup","createShape","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","Tooltip","open","enterTouchDelay","placement","title","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","flexDirection","css","backgroundColor","palette","Palette","deferred","hideTextfield","onKeyDown","key","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","disabled","isSubmitting","isValid","TitleBar","dirtyName","setDirtyName","openSettings","setOpenSettings","px","setCurrentName","changeName","Settings","updateScheme","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","justify","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","actions","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","MuiSelect","FontImage","FontSelect","labelId","font_preview","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","my","TextDialog","onCreate","required","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","AllowedLayerTypes","AllowedLayerProps","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","CornerProperty","PropertyBar","defaultValues","pick","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","hex","result","exec","num","EPSILON","validateColor","getAbsoluteTransform","copy","invert","pos","offset"],"mappings":"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","file":"static/js/6.3894f6bf.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom, setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport { setCurrent as setCurrentLayer } from \"redux/reducers/layerReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faMousePointer,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { PaintingGuides, MouseModes } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-select {\r\n    padding-left: 10px;\r\n  }\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) => (props.stretch ? \"scaleX(1.2) scaleY(0.8)\" : \"none\")};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    icon: faMousePointer,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    icon: faSquare,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    icon: faCircle,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    icon: faCircle,\r\n    stretch: true,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    icon: faStar,\r\n  },\r\n];\r\n\r\nconst Toolbar = (props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onChangePaintingGuides,\r\n    onChangeBoardRotation,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n  const handleModeChange = (event) => {\r\n    dispatch(setMouseMode(event.target.value));\r\n    if (event.target.value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <CustomSelect\r\n            value={mouseMode}\r\n            onChange={handleModeChange}\r\n            renderValue={(value) => {\r\n              const mode = modes.find((item) => item.value === value);\r\n              if (!mode) {\r\n                return <></>;\r\n              }\r\n              return (\r\n                <CustomFontAwesomeIcon\r\n                  icon={mode.icon}\r\n                  stretch={mode.stretch}\r\n                />\r\n              );\r\n            }}\r\n          >\r\n            {modes.map((mode) => (\r\n              <MenuItem value={mode.value} key={mode.value}>\r\n                <CustomFontAwesomeIcon\r\n                  icon={mode.icon}\r\n                  stretch={mode.stretch}\r\n                />\r\n              </MenuItem>\r\n            ))}\r\n          </CustomSelect>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </IconButton>\r\n          <IconButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport { Rect, Circle, Ellipse } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  radiusX,\r\n  radiusY,\r\n  cornerRadius,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      let data = {\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      };\r\n      if (type === MouseModes.CIRCLE)\r\n        data.radius = mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)));\r\n      onChange(data);\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        selectedLayer.layer_data.type === MouseModes.CIRCLE ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { getRelativePointerPosition } from \"helper\";\r\n\r\nconst Board = () => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingLayer = useSelector((state) => state.layerReducer.drawingLayer);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      let newLayer = {\r\n        ...DefaultLayer,\r\n        layer_type: LayerTypes.SHAPE,\r\n        layer_data: {\r\n          ...DefaultLayer.layer_data,\r\n          type: mouseMode,\r\n          name: mouseMode,\r\n          left: position.x,\r\n          top: position.y,\r\n          color: \"#000000\",\r\n          scolor: \"#000000\",\r\n          stroke: 1,\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(newLayer));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayer.layer_data.left;\r\n      const height = position.y - drawingLayer.layer_data.top;\r\n\r\n      let layer = {\r\n        ...drawingLayer,\r\n        layer_data: {\r\n          ...drawingLayer.layer_data,\r\n          width: width,\r\n          height: height,\r\n          radius: Math.abs(width),\r\n        },\r\n      };\r\n      dispatch(setDrawingLayer(layer));\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayer) {\r\n      dispatch(createShape(currentScheme.id, drawingLayer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayer}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [openSettings, setOpenSettings] = useState(false);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setOpenSettings(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton onClick={() => setOpenSettings(true)}>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n      <SchemeSettingsDialog\r\n        open={openSettings}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setOpenSettings(false)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE\r\n        )}\r\n      />\r\n      <PartGroup\r\n        title=\"Overlays\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value ||\r\n                  currentLayer.layer_type === LayerTypes.TEXT ||\r\n                  currentLayer.layer_type === LayerTypes.CAR ||\r\n                  currentLayer.layer_type === LayerTypes.BASE\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value ||\r\n                  currentLayer.layer_type === LayerTypes.TEXT ||\r\n                  currentLayer.layer_type === LayerTypes.CAR ||\r\n                  currentLayer.layer_type === LayerTypes.BASE\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onChangeBoardRotation={handleChangeBoardRotation}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\nimport validateColor from \"validate-color\";\r\n\r\nexport const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport const hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nexport const mathRound2 = (num) =>\r\n  Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport const colorValidator = (color) => {\r\n  if (!color || !color.length) return true;\r\n  return validateColor(color);\r\n};\r\n\r\nexport const getRelativePointerPosition = (node) => {\r\n  var transform = node.getAbsoluteTransform().copy();\r\n  // to detect relative position we need to invert transform\r\n  transform.invert();\r\n  // get pointer (say mouse or touch) position\r\n  var pos = node.getStage().getPointerPosition();\r\n  // now we can find relative point\r\n  return transform.point(pos);\r\n};\r\n\r\nexport const getRelativeShadowOffset = (boardRotate, offset) => {\r\n  let shadowOffset = { ...offset };\r\n  if (boardRotate === 90) {\r\n    shadowOffset.x = -offset.y;\r\n    shadowOffset.y = offset.x;\r\n  } else if (boardRotate === 180) {\r\n    shadowOffset.x = -offset.x;\r\n    shadowOffset.y = -offset.y;\r\n  } else if (boardRotate === 270) {\r\n    shadowOffset.x = offset.y;\r\n    shadowOffset.y = -offset.x;\r\n  }\r\n  return shadowOffset;\r\n};\r\n"],"sourceRoot":""}