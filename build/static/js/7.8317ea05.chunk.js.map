{"version":3,"sources":["components/LightTooltip.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx"],"names":["LightTooltip","withStyles","theme","tooltip","backgroundColor","color","boxShadow","fontSize","arrow","Tooltip","Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","onZoomIn","onZoomOut","onChangePaintingGuides","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","zoom","handleUndoRedo","isUndo","historyActionBack","historyActionUp","Box","display","justifyContent","alignContent","width","ToggleButtonGroup","value","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","variant","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","title","disabled","onClick","Undo","length","Redo","mr","id","setZoom","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","filterColor","frameSize","allowFit","layer_data","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","PaintingGuideTop","currentCarMake","handleImageSize","guideData","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","carmask_color","opacity","carmask_opacity","listening","wireframe_color","wireframe_opacity","Array","round","i","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","shadowOffset","getRelativeShadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","isSelected","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","size","fill","scolor","strokeEnabled","offsetX","offsetY","Shape","type","radius","lineCap","lineJoin","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","index","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","removeDuplicatedPointFromEnd","TransformerComponent","selectedLayer","pressedKey","trRef","keepRatio","useMemo","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","RotationButton","Board","onChangeBoardRotation","stageRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleChangeBoardRotation","newBoardRotate","isRight","flexDirection","alignItems","margin","onMousedown","onContentMousedown","getRelativePointerPosition","concat","newLayer","DefaultLayer","onContentMousemove","positionX","positionY","splice","onContentMouseup","onDblClick","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","guide_data","insertToLoadedFontList","right","RotateLeft","RotateRight","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","Slider","aria-labelledby","ValueLabelComponent","open","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","key","Button","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","mb","sm","Boolean","SchemeSettingsDialog","onCancel","onApply","Dialog","onClose","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","TitleBar","dirtyName","setDirtyName","dialog","setDialog","px","my","setCurrentName","changeName","icon","faQuestion","Settings","updateScheme","CustomTypography","active","PartItem","toggleVisible","toggleLocked","selected","disableLock","hover","setHover","p","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","justify","wrap","noWrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","Lock","LockOpen","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","PartGroup","classes","actions","disableDnd","sortedList","layer_order","toggleField","field","Card","action","startIcon","Add","endIcon","preValue","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","search","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","autoFocus","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","user","authReducer","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","actionIcon","handleClickDeleteUpload","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","TextPreview","rotate","InnerForm","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","mode","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","pr","pb","changeBaseColor","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","CornerProperty","PropertyBar","defaultValues","checkDirty","py","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","cloneLayer","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","newRotation","setBoardRotate","deleteLayer"],"mappings":"gXAeeA,EAZMC,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiB,QACjBC,MAAO,sBACPC,UAAW,qBACXC,SAAU,IAEZC,MAAO,CACLH,MAAO,YARUJ,CAUjBQ,K,OCcEC,EAAaC,YAAOC,KAAV,0EAAGD,CAAsBE,KACnCC,EAAeH,YAAOI,KAAV,4EAAGJ,CAAwBE,KACvCG,EAAaL,YAAOM,KAAV,0EAAGN,CAAsBE,KAEnCK,EAAUP,IAAOQ,IAAV,uEAAGR,CAAH,4FAQPS,EAAsBT,YAAOU,KAAV,mFAAGV,CAAH,8EAwHVW,EAhHC,SAACC,GAAW,IAClBC,EAAgDD,EAAhDC,SAAUC,EAAsCF,EAAtCE,UAAWC,EAA2BH,EAA3BG,uBAEvBC,EAAWC,cACXC,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BI,EAAqBH,aACzB,SAACC,GAAD,OAAWA,EAAMC,aAAaC,sBAE1BC,EAAgBJ,aACpB,SAACC,GAAD,OAAWA,EAAMC,aAAaE,iBAE1BC,EAAOL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaG,QAUjDC,EAAiB,WAAoB,IAAnBC,IAAkB,yDAEtCV,EADEU,EACOC,cAEAC,gBAIb,OACE,cAACrB,EAAD,UACE,eAACsB,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfC,aAAa,SACbC,MAAM,OAJR,UAME,cAACJ,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,QAAQC,aAAa,SAAxD,SACE,eAACE,EAAA,EAAD,CACEC,MAAOjB,EACPkB,SA3ByB,SAACC,EAAOC,GACzCvB,EAAuBuB,IA2BfC,aAAW,kBAHb,UAKE,cAAC,EAAD,CAAcJ,MAAOK,IAAeC,QAASF,aAAW,WAAxD,SACE,cAAC,EAAD,CAAYG,QAAQ,UAApB,wBAEF,cAAC,EAAD,CACEP,MAAOK,IAAeG,UACtBJ,aAAW,YAFb,SAIE,cAAC,EAAD,CAAYG,QAAQ,UAApB,yBAEF,cAAC,EAAD,CACEP,MAAOK,IAAeI,cACtBL,aAAW,iBAFb,SAIE,cAAC,EAAD,CAAYG,QAAQ,UAApB,8BAEF,cAAC,EAAD,CACEP,MAAOK,IAAeK,aACtBN,aAAW,gBAFb,SAIE,cAAC,EAAD,CAAYG,QAAQ,UAApB,6BAEF,cAAC,EAAD,CAAcP,MAAOK,IAAeM,KAAMP,aAAW,OAArD,SACE,cAAC,EAAD,CAAYG,QAAQ,UAApB,yBAIN,eAACb,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,WAAWC,aAAa,SAA3D,UACE,cAAC,EAAD,CAAce,MAAM,OAAOlD,OAAK,EAAhC,SACE,cAAC,EAAD,CACEmD,UAAkC,IAAxB1B,EACV2B,QAAS,kBAAMxB,GAAe,IAFhC,SAIE,cAACyB,EAAA,EAAD,QAIJ,cAAC,EAAD,CAAcH,MAAM,OAAOlD,OAAK,EAAhC,SACE,cAAC,EAAD,CACEmD,SAAU1B,IAAuBC,EAAc4B,OAAS,EACxDF,QAAS,kBAAMxB,GAAe,IAFhC,SAIE,cAAC2B,EAAA,EAAD,QAIJ,cAAC,EAAD,CAAYH,QAASnC,EAArB,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CAAYmC,QAASpC,EAAUwC,GAAI,EAAnC,SACE,cAAC,IAAD,MAEF,cAAC5C,EAAD,CACE6C,GAAG,aACHnB,MAAc,IAAPX,EACPY,SAhFe,SAACC,GACxBrB,EAASuC,YAAQC,SAASnB,EAAMoB,OAAOtB,OAAS,GAAK,OAgF7CuB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,eAIdC,WAAY,a,2HCmDTC,EApME,SAAC,GAUX,IATLC,EASI,EATJA,IACAC,EAQI,EARJA,SACAC,EAOI,EAPJA,SACA7B,EAMI,EANJA,SACA8B,EAKI,EALJA,YACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,WACGzD,EACC,0GACE0D,EAAWC,iBAAO,MAClBC,EAAWD,mBAFb,EAGsBE,mBAAS,MAH/B,mBAGGC,EAHH,KAGUC,EAHV,KAIEC,EAAU,GAEZV,GAAeA,EAAYf,QAC7ByB,EAAQC,KAAKC,IAAMC,QAAQC,MAE7B,IAAMC,EAAgB,SAACC,GACrB,OAAIZ,EAASa,QACJC,KAAKC,IACV,EACAf,EAASa,QAAQlD,MAAQiD,EAAKjD,QAC9BqC,EAASa,QAAQG,OAASJ,EAAKI,UAG5B,GAGTC,qBAAU,WAER,OADAC,IACO,WACDlB,EAASa,SACXb,EAASa,QAAQM,oBAAoB,OAAQC,MAGhD,IAEHH,qBAAU,WACJf,EAASW,UACPjB,GAAeA,EAAYf,OAC7BqB,EAASW,QAAQQ,MAAM,CACrBC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIzBrB,EAASW,QAAQW,gBAGpB,CAAC5B,IAEJ,IAAMwB,EAAU,uCAAG,wCAAAK,EAAA,yDACbC,GACD5B,GACAE,EAASa,QAAQlD,OAASkC,EAAUlC,MAAQ,GAC3CqC,EAASa,QAAQG,QAAUnB,EAAUmB,OAAS,EAC5ChB,EAASa,QAAQlD,MACjBkC,EAAUlC,MAAQ,EACpBgE,GACD7B,GACAE,EAASa,QAAQlD,OAASkC,EAAUlC,MAAQ,GAC3CqC,EAASa,QAAQG,QAAUnB,EAAUmB,OAAS,EAC5ChB,EAASa,QAAQG,OACfnB,EAAUlC,MAAQ,EAAKqC,EAASa,QAAQG,OAC1ChB,EAASa,QAAQlD,MACnBA,EAAQrB,EAAMqB,OAAS+D,EACvBV,EAAS1E,EAAM0E,QAAUW,GAG3BlC,EAAImC,cAAcC,SAAS,SACzB7B,EAASa,QAAQlD,OAAUqC,EAASa,QAAQG,OAnB/B,wBAqBXc,EAASC,SAASC,cAAc,UAC9BC,EAAMH,EAAOI,WAAW,MAtBf,SAuBCC,IAAMC,KAAKH,EAAKxC,EAAK,CACnC4C,cAAc,IAxBD,cAuBTC,EAvBS,OA0BfC,QAAQC,IAAIF,GACZ3E,EAAQA,GAAS2E,EAAEG,gBAAgB7B,KAAKjD,MAAM+E,QAAQ7E,OAAS,IAC/DmD,EAASA,GAAUsB,EAAEG,gBAAgB7B,KAAKI,OAAO0B,QAAQ7E,OAAS,IAClEyE,EAAEK,OAAOhF,EAAOqD,EAAQ,QA7BT,UA8BTsB,EAAEM,SA9BO,QA+BfvC,EAASyB,GA/BM,wBAiCfzB,EAASL,EAASa,SAjCH,SAoCb/C,GAAaxB,EAAMqB,OAAUrB,EAAM0E,QACrClD,EAAS,CACP+E,KAAMC,YAAWxG,EAAMyG,EAAIpF,EAAQ,GACnCqF,IAAKF,YAAWxG,EAAM2G,EAAIjC,EAAS,GACnCrD,MAAOmF,YAAWnF,GAClBqD,OAAQ8B,YAAW9B,KAInBpB,GAAeA,EAAYf,QAC7BqB,EAASW,QAAQQ,MAAM,CACrBC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIvB7B,GACFA,EAAS,CACP/B,MAAOA,EACPqD,OAAQA,IAvDK,4CAAH,qDA2DVE,EAAS,uCAAG,4BAAAO,EAAA,uDACVyB,EAAM,IAAIC,OAAOC,OAEnB3D,IAAMA,EAAG,sBAAiB,IAAI4D,MAAOC,eACzCJ,EAAIK,YAAc,YAClBvD,EAASa,QAAUqC,EACnBlD,EAASa,QAAQ2C,iBAAiB,OAAQpC,GAN1B,2CAAH,qDAwDf,OACE,cAAC,IAAD,2BACM9E,GADN,IAEE8D,MAAOA,EACPzB,QAASgB,EACT8D,MAAO9D,EACP+D,IAAKxD,EACLyD,UAAW7F,EACXwC,QAASA,EAAQzB,OAASyB,EAAU,KACpCsD,IAAKhE,GAAeA,EAAYf,OAASgF,YAAUjE,GAAakE,EAAI,KACpEC,MACEnE,GAAeA,EAAYf,OAASgF,YAAUjE,GAAaoE,EAAI,KAEjEC,KAAMrE,GAAeA,EAAYf,OAASgF,YAAUjE,GAAasE,EAAI,KACrEC,MACEvE,GAAeA,EAAYf,OACvBgF,YAAUjE,GAAa6B,EAAI,IAC3B,KAEN2C,YAnEoB,SAACC,GACvB1E,KAmEE2E,UAjEkB,SAACD,GACjBvG,GACFA,EAAS,CACP+E,KAAMC,YAAWuB,EAAElF,OAAO4D,KAC1BC,IAAKF,YAAWuB,EAAElF,OAAO8D,QA8D3BsB,eA1DuB,SAACF,GAC1B,GAAIvG,EAAU,CACZ,IAAM8C,EAAOV,EAASW,QAChB2D,EAAS5D,EAAK4D,SACdC,EAAS7D,EAAK6D,SACpBlC,QAAQC,IAAI,mBAAoBgC,EAAQC,GAExC7D,EAAK4D,OAAOA,EAAS,EAAI,GAAK,GAC9B5D,EAAK6D,OAAOA,EAAS,EAAI,GAAK,GAC9B,IAAMC,EAAU5D,KAAK6D,IACc,IAAjC7D,KAAK6D,IAAI7B,YAAW2B,IAAiBA,EAASD,GAEhD1G,EAAS,CACP+E,KAAMC,YAAWlC,EAAKmC,KACtBC,IAAKF,YAAWlC,EAAKqC,KAErBtF,MAAOmF,YAAWhC,KAAKC,IAAI,EAAGH,EAAKjD,QAAUmD,KAAK6D,IAAIH,KACtDxD,OAAQ8B,YAAWhC,KAAKC,IAAI,EAAGH,EAAKI,SAAWF,KAAK6D,IAAIF,KACxDG,SAAU9B,YAAWlC,EAAKgE,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBM,WAAYjC,YAAWlC,EAAKmE,aAAeL,GAC3CM,cAAelC,YAAW/C,EAAWiF,cAAgBlE,KAAK6D,IAAIH,IAC9DS,cAAenC,YAAW/C,EAAWkF,cAAgBnE,KAAK6D,IAAIF,MAE5D7E,GAAeA,EAAYf,OAC7B+B,EAAKS,MAAM,CACTC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIzBX,EAAKY,eA2BP0D,oBAAoB,EACpBC,wBAAwB,M,QC/FfC,GA/FU,SAAC9I,GAAW,IAEjCM,EAKEN,EALFM,eACAyI,EAIE/I,EAJF+I,eACAC,EAGEhJ,EAHFgJ,gBACAzF,EAEEvD,EAFFuD,UACA0F,EACEjJ,EADFiJ,UAEIC,EAAcD,EAAUE,cAAgB,GACxCC,EAAaH,EAAUI,aAAe,GAE5C,OACE,qCACG/I,EAAeiF,SAAS3D,IAAeC,SACtC,cAAC,EAAD,CACEsB,IAAG,UACDmG,IAAOC,UADN,sBAEWR,EAAeS,iBAAiBC,QAC5C,IACA,KAJC,aAMHrG,SAAU4F,EACV1F,YAAa2F,EAAUS,cACvBC,QAASV,EAAUW,gBACnBC,WAAW,IAGb,6BAEDvJ,EAAeiF,SAAS3D,IAAeG,WACtC,cAAC,EAAD,CACEoB,IAAG,UACDmG,IAAOC,UADN,sBAEWR,EAAeS,iBAAiBC,QAC5C,IACA,KAJC,kBAMHrG,SAAU4F,EACV1F,YAAa2F,EAAUa,gBACvBH,QAASV,EAAUc,kBACnBF,WAAW,IAGb,6BAEDvJ,EAAeiF,SAAS3D,IAAeM,MACtC,qCACG8H,MAAMlE,KACLkE,MAAMxF,KAAKyF,MAAM1G,EAAUlC,MAAQ6H,KACnC,SAACnB,EAAGmC,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACN3F,KAAKyF,MAAMC,EAAIhB,GACf,EACA1E,KAAKyF,MAAMC,EAAIhB,GACf3F,EAAUlC,OAEZ+I,OAAQnB,EAAUoB,YAAc,OAChCV,QAASV,EAAUqB,cAAgB,EACnCC,YAAanB,EACbS,WAAW,GAXb,YACYK,OAejBF,MAAMlE,KACLkE,MAAMxF,KAAKyF,MAAM1G,EAAUmB,OAASwE,KACpC,SAACnB,EAAGmC,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACN,EACA3F,KAAKyF,MAAMC,EAAIhB,GACf3F,EAAUmB,OACVF,KAAKyF,MAAMC,EAAIhB,IAEjBkB,OAAQnB,EAAUoB,YAAc,OAChCV,QAASV,EAAUqB,cAAgB,EACnCC,YAAanB,EACbS,WAAW,GAXb,YACYK,UAiBpB,iCCjDOM,GAzCa,SAACxK,GAAW,IAC9BM,EAA+DN,EAA/DM,eAAgByI,EAA+C/I,EAA/C+I,eAAgBC,EAA+BhJ,EAA/BgJ,gBAAiBC,EAAcjJ,EAAdiJ,UAEzD,OACE,qCACG3I,EAAeiF,SAAS3D,IAAeI,eACtC,cAAC,EAAD,CACEmB,IAAG,UACDmG,IAAOC,UADN,sBAEWR,EAAeS,iBAAiBC,QAC5C,IACA,KAJC,uBAMHrG,SAAU4F,EACV1F,YAAa2F,EAAUwB,cACvBd,QAASV,EAAUyB,gBACnBb,WAAW,IAGb,6BAEDvJ,EAAeiF,SAAS3D,IAAeK,cACtC,cAAC,EAAD,CACEkB,IAAG,UACDmG,IAAOC,UADN,sBAEWR,EAAeS,iBAAiBC,QAC5C,IACA,KAJC,sBAMHrG,SAAU4F,EACV1F,YAAa2F,EAAU0B,kBACvBhB,QAASV,EAAU2B,oBACnBf,WAAW,IAGb,iC,oBCLOgB,GA7BE,SAAC7K,GAAW,IACnB8K,EAA4C9K,EAA5C8K,OAAQ/B,EAAoC/I,EAApC+I,eAAgBC,EAAoBhJ,EAApBgJ,gBAEhC,OACE,mCACG+B,KAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,KAAOH,EAAKI,iBAEvD,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACErI,IACEmG,IAAOC,UACP,cACAR,EAAeS,iBAAiBC,QAAQ,IAAK,KAF7C,WAGI+B,EAAM/H,WAAWmD,KAEvBxD,SAAU4F,EACV1F,YAAakI,EAAM/H,WAAW3E,MAE9B+K,WAAW,GADN2B,EAAM9I,UCGN+I,GAxBI,SAACzL,GAAW,IACrB8K,EAA4B9K,EAA5B8K,OAAQ9B,EAAoBhJ,EAApBgJ,gBAEhB,OACE,mCACG+B,KAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWM,MAAQR,EAAKI,iBAExD,CAAC,cAAe,SAChBC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACErI,IAAG,UAAKmG,IAAOC,UAAZ,kBAA+BiC,EAAM/H,WAAWf,GAAhD,YAAsD8I,EAAM/H,WAAWmD,KAC1ExD,SAAU4F,EACVW,QAAS6B,EAAM/H,WAAWkG,QAC1BrG,YAAakI,EAAM/H,WAAW3E,MAE9B+K,WAAW,GADN2B,EAAM9I,UC0CNiJ,GAzDE,SAAC3L,GAAW,IAEzB8K,EAME9K,EANF8K,OACAc,EAKE5L,EALF4L,gBACArI,EAIEvD,EAJFuD,UACAsI,EAGE7L,EAHF6L,UACAC,EAEE9L,EAFF8L,YACAtK,EACExB,EADFwB,SAGF,OACE,mCACGuJ,KAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWW,SAAWb,EAAKI,iBAE3D,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GACL,IAAIQ,EAAeC,YAAwBH,EAAa,CACtDrF,EAAG+E,EAAM/H,WAAWiF,cACpB/B,EAAG6E,EAAM/H,WAAWkF,gBAGtB,OACE,cAAC,EAAD,CACEuD,KAAMV,EAAM9I,GAAGyJ,WACfhJ,IAAG,UAAKmG,IAAOC,UAAZ,YAAyBiC,EAAM/H,WAAW2I,aAE7C3F,EAAG4F,WAAWb,EAAM/H,WAAW8C,MAAQ,GACvCI,EAAG0F,WAAWb,EAAM/H,WAAWiD,KAAO,GACtClD,UAAU,EACVF,YAAakI,EAAM/H,WAAW3E,MAC9BuC,MAAOmK,EAAM/H,WAAWpC,MACxBqD,OAAQ8G,EAAM/H,WAAWiB,OACzB4D,SAAUkD,EAAM/H,WAAW6E,SAC3BwD,YAAaA,EACbnC,QAAS6B,EAAM/H,WAAWkG,QAC1BzB,OAAkC,IAA1BsD,EAAM/H,WAAW8E,MAAc,EAAI,EAC3CJ,OAAkC,IAA1BqD,EAAM/H,WAAW+E,MAAc,EAAI,EAC3C8D,YAAad,EAAM/H,WAAW6I,YAC9B7D,WAAY+C,EAAM/H,WAAWgF,WAC7B8D,cAAef,EAAM/H,WAAW8I,cAChC7D,cAAesD,EAAavF,EAC5BkC,cAAeqD,EAAarF,EAC5BtD,SAAU,kBAAMuI,EAAgBJ,IAChC3B,WAAY2B,EAAMgB,cAAgBX,IAAcY,IAAWC,QAC3DnJ,UAAWA,EACXE,WAAY+H,EAAM/H,WAClBjC,SAAU,SAACmL,GAAD,OAAYnL,EAASgK,EAAOmB,KArBjCnB,EAAM9I,UCmERkK,GAlGE,SAAC,GAeX,IAdLC,EAcI,EAdJA,WACAC,EAaI,EAbJA,SACAC,EAYI,EAZJA,eAGAT,GASI,EAXJU,WAWI,EAVJC,WAUI,EATJX,aACA7D,EAQI,EARJA,WACA8D,EAOI,EAPJA,cACA7D,EAMI,EANJA,cACAC,EAKI,EALJA,cACAtF,EAII,EAJJA,SACA7B,EAGI,EAHJA,SACA0L,EAEI,EAFJA,WACGlN,EACC,oMAC4C6D,mBAAS,MADrD,mBACGsJ,EADH,KACqBC,EADrB,KAEExJ,EAAWD,mBACjBgB,qBAAU,WACJkI,GAAcC,IACXC,EAAexH,SAASsH,GAG3BO,EAAoBP,GAFpBQ,OAKH,CAACR,EAAYC,IAEhB,IAAMO,EAAW,WACE,IAAIC,SAAST,EAAYC,GAEvCS,OACAC,MAAK,SAAUC,GACdhI,SAASiI,MAAMC,IAAIF,GACnBP,EAAWL,GACXO,EAAoBP,MAErBe,OAAM,SAAUC,GAEf5H,QAAQ6H,KAAKD,EAAOhB,OAqC1B,OACE,cAAC,IAAD,2BACM7M,GADN,IAEE6M,WAAYM,EACZ9K,QAASgB,EACT8D,MAAO9D,EACP+D,IAAKxD,EACL0I,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXsG,YA9CoB,SAACC,GACvB1E,KA8CE2E,UA5CkB,SAACD,GACrB,GAAIvG,EAAU,CACZ,IAAM8C,EAAOV,EAASW,QACtB/C,EAAS,CACP+E,KAAMC,YAAWuB,EAAElF,OAAO4D,KAC1BC,IAAKF,YAAWuB,EAAElF,OAAO8D,KACzBtF,MAAOmF,YAAWhC,KAAKC,IAAI,EAAGH,EAAKjD,UACnCqD,OAAQ8B,YAAWhC,KAAKC,IAAI,EAAGH,EAAKI,eAsCtCuD,eAlCuB,SAACF,GAC1B,GAAIvG,EAAU,CACZ,IAAM8C,EAAOV,EAASW,QAChB2D,EAAS5D,EAAK4D,SACdC,EAAS7D,EAAK6D,SACpB3G,EAAS,CACP+E,KAAMC,YAAWlC,EAAKmC,KACtBC,IAAKF,YAAWlC,EAAKqC,KAErBtF,MAAOmF,YAAWhC,KAAKC,IAAI,EAAGH,EAAKjD,UACnCqD,OAAQ8B,YAAWhC,KAAKC,IAAI,EAAGH,EAAKI,WACpC4D,SAAU9B,YAAWlC,EAAKgE,aAAe,EACzCJ,OAAQ1B,YAAWhC,KAAKC,IAAI,IAAMyD,IAClCC,OAAQ3B,YAAWhC,KAAKC,IAAI,IAAM0D,IAClCI,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,MAoBzBS,oBAAoB,EACpBC,wBAAwB,MCsBfkF,GA/GO,SAAC/N,GAAW,IAE9B8K,EASE9K,EATF8K,OACAiC,EAQE/M,EARF+M,eACAW,EAOE1N,EAPF0N,MACAnK,EAMEvD,EANFuD,UACAsI,EAKE7L,EALF6L,UACAD,EAIE5L,EAJF4L,gBACAE,EAGE9L,EAHF8L,YACAtK,EAEExB,EAFFwB,SACA0L,EACElN,EADFkN,WAEIc,EAAiBlD,EAAOG,QAC5B,SAACC,GAAD,OACGA,EAAKC,aAAeC,IAAW6C,MAC9B/C,EAAKC,aAAeC,IAAW8C,QAC/BhD,EAAKC,aAAeC,IAAW+C,OACjCjD,EAAKI,iBAGT,OACE,mCACGP,KAAEC,QAAQgD,EAAgB,CAAC,eAAgB,CAAC,SAASzC,KAAI,SAACC,GACzD,IAAIQ,EAAeC,YAAwBH,EAAa,CACtDrF,EAAG+E,EAAM/H,WAAWiF,cACpB/B,EAAG6E,EAAM/H,WAAWkF,gBAGtB,GAAI6C,EAAML,aAAeC,IAAW+C,KAClC,OACE,cAAC,EAAD,CACEjC,KAAMV,EAAM9I,GAAGyJ,WACfhJ,IAAG,UAAKmG,IAAOC,UAAZ,YAAyBiC,EAAM/H,WAAW2I,aAE7C3F,EAAG4F,WAAWb,EAAM/H,WAAW8C,MAAQ,GACvCI,EAAG0F,WAAWb,EAAM/H,WAAWiD,KAAO,GACtClD,UAAU,EACVnC,MAAOmK,EAAM/H,WAAWpC,MACxBqD,OAAQ8G,EAAM/H,WAAWiB,OACzBnB,UAAWA,EACX+E,SAAUkD,EAAM/H,WAAW6E,SAC3BwD,YAAaA,EACb5D,OAAkC,IAA1BsD,EAAM/H,WAAW8E,MAAc,EAAI,EAC3CJ,OAAkC,IAA1BqD,EAAM/H,WAAW+E,MAAc,EAAI,EAC3C8D,YAAad,EAAM/H,WAAW6I,YAC9B7D,WAAY+C,EAAM/H,WAAWgF,WAC7B8D,cAAef,EAAM/H,WAAW8I,cAChC7D,cAAesD,EAAavF,EAC5BkC,cAAeqD,EAAarF,EAC5BgD,QAAS6B,EAAM/H,WAAWkG,QAC1BlG,WAAY+H,EAAM/H,WAClBJ,SAAU,kBAAMuI,EAAgBJ,IAChC3B,WACG2B,EAAMgB,cAAgBX,IAAcY,IAAWC,QAElDlL,SAAU,SAACmL,GAAD,OAAYnL,EAASgK,EAAOmB,KAtBjCnB,EAAM9I,IA0BjB,IAAI0L,EAAOV,EAAMnL,OACbmL,EAAMW,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,KAAO8I,EAAM/H,WAAW2K,QAClD,GACJ,OACE,cAAC,GAAD,CACElC,KAAMV,EAAM9I,GAAGyJ,WACfmC,KAAM9C,EAAM/H,WAAW6K,KACvBzB,WAAYuB,EAAKG,UACjBzB,SACEsB,EAAKI,UAAL,cACWlF,IAAOC,UADlB,YAC+B6E,EAAKI,UADpC,KAEI,KAENzB,eAAgBA,EAChBG,WAAYA,EACZlO,SAAUwM,EAAM/H,WAAWgL,KAC3BC,KAAMlD,EAAM/H,WAAW3E,MACvByL,YAAaiB,EAAM/H,WAAW2G,OAC9BA,OAAQoB,EAAM/H,WAAWkL,OACzBC,eAAe,EAEfnI,EAAG4F,WAAWb,EAAM/H,WAAW8C,MAAQ,GACvCI,EAAG0F,WAAWb,EAAM/H,WAAWiD,KAAO,GACtCmI,QAAS,EACTC,QAAS,EAGTnF,QAAS6B,EAAM/H,WAAWkG,QAC1BrB,SAAUkD,EAAM/H,WAAW6E,SAC3BJ,QACGsD,EAAM/H,WAAWyE,QAAU,IACD,IAA1BsD,EAAM/H,WAAW8E,MAAc,EAAI,GAEtCJ,QACGqD,EAAM/H,WAAW0E,QAAU,IACD,IAA1BqD,EAAM/H,WAAW+E,MAAc,EAAI,GAEtC8D,YAAad,EAAM/H,WAAW6I,YAC9B7D,WAAY+C,EAAM/H,WAAWgF,WAC7B8D,cAAef,EAAM/H,WAAW8I,cAChC7D,cAAesD,EAAavF,EAC5BkC,cAAeqD,EAAarF,EAC5BtD,SAAU,kBAAMuI,EAAgBJ,IAChC3B,WAAY2B,EAAMgB,cAAgBX,IAAcY,IAAWC,QAC3DlL,SAAU,SAACmL,GAAD,OAAYnL,EAASgK,EAAOmB,KAxBjCnB,EAAM9I,UCuSRqM,GA7WD,SAAC,GA0BR,IAzBLC,EAyBI,EAzBJA,KACAvI,EAwBI,EAxBJA,EACAE,EAuBI,EAvBJA,EACAtF,EAsBI,EAtBJA,MACAqD,EAqBI,EArBJA,OACAuK,EAoBI,EApBJA,OACA9E,EAmBI,EAnBJA,OACA+E,EAkBI,EAlBJA,QACAC,EAiBI,EAjBJA,SACAC,EAgBI,EAhBJA,cACAC,EAeI,EAfJA,aACAC,EAcI,EAdJA,YACAC,EAaI,EAbJA,YACAC,EAYI,EAZJA,aACAC,EAWI,EAXJA,UACAC,EAUI,EAVJA,MACArM,EASI,EATJA,SACA7B,EAQI,EARJA,SACA8K,EAOI,EAPJA,YACA7D,EAMI,EANJA,WACA8D,EAKI,EALJA,cACA7D,EAII,EAJJA,cACAC,EAGI,EAHJA,cACAlF,EAEI,EAFJA,WACGzD,EACC,oSACE4D,EAAWD,mBACXgM,EAAkB,SAAC5H,GACvB1E,KAEIuM,EAAgB,SAAC7H,GACrB,GAAIvG,EAAU,CACZ,IAAMqO,EAAoBC,IAAkB1E,IAAW2E,OAAOf,GAC9DxN,EACEuJ,KAAEiF,KACA,CACEzJ,KAAMC,YAAWuB,EAAElF,OAAO4D,KAC1BC,IAAKF,YAAWuB,EAAElF,OAAO8D,MAE3BkJ,EAAkB5E,QAAO,SAACC,GAAD,OACvBA,EAAK3F,SAAS,kBACdgG,KAAI,SAACL,GAAD,OAAUA,EAAKzB,QAAQ,cAAe,WAK9CwG,EAAqB,SAAClI,GAC1B,GAAIvG,EAAU,CACZ,IAAMqO,EAAoBC,IAAkB1E,IAAW2E,OAAOf,GACxD1K,EAAOV,EAASW,QAChB2D,EAAS5D,EAAK4D,SACdC,EAAS7D,EAAK6D,SACd9G,EAAQ2N,IAASvC,IAAWyD,QAAU5L,EAAKjD,QAAUiD,EAAK6L,UAC1DzL,EACJsK,IAASvC,IAAWyD,QAAU5L,EAAKI,SAAWJ,EAAK8L,UAC/ChI,EAAU5D,KAAK6D,IACc,IAAjC7D,KAAK6D,IAAI7B,YAAW2B,IAAiBA,EAASD,GAIhD5D,EAAK4D,OAAOA,EAAS,EAAI,GAAK,GAC9B5D,EAAK6D,OAAOA,EAAS,EAAI,GAAK,GAE9B3G,EACEuJ,KAAEiF,KACA,CACEzJ,KAAMC,YAAWlC,EAAKmC,KACtBC,IAAKF,YAAWlC,EAAKqC,KACrBtF,MAAOmF,YAAWhC,KAAKC,IAAI,EAAGpD,EAAQmD,KAAK6D,IAAIH,KAC/CxD,OAAQ8B,YAAWhC,KAAKC,IAAI,EAAGC,EAASF,KAAK6D,IAAIF,KACjD8G,OAAQ3K,EAAK2K,OACTzI,YAAWhC,KAAKC,IAAI,EAAGH,EAAK2K,SAAWzK,KAAK6D,IAAIF,KAChD,EACJmH,YAAahL,EAAKgL,YACd9I,YAAWhC,KAAKC,IAAI,EAAGH,EAAKgL,cAAgB9K,KAAK6D,IAAIF,KACrD,EACJoH,YAAajL,EAAKiL,YACd/I,YAAWhC,KAAKC,IAAI,EAAGH,EAAKiL,cAAgB/K,KAAK6D,IAAIF,KACrD,EACJG,SAAU9B,YAAWlC,EAAKgE,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBiC,OAAQ5D,YAAWlC,EAAKiG,cAAgBnC,GACxCK,WAAYjC,YAAWlC,EAAKmE,aAAeL,GAC3CM,cAAelC,YACb/C,EAAWiF,cAAgBlE,KAAK6D,IAAIH,IAEtCS,cAAenC,YACb/C,EAAWkF,cAAgBnE,KAAK6D,IAAIF,IAEtCkI,cAAe7J,YAAW/C,EAAW4M,cAAgBjI,GACrDkI,eAAgB9J,YAAW/C,EAAW6M,eAAiBlI,GACvDmI,iBAAkB/J,YAAW/C,EAAW8M,iBAAmBnI,GAC3DoI,kBAAmBhK,YACjB/C,EAAW+M,kBAAoBpI,GAEjC+B,OAAQA,EAAOoB,KAAI,SAACkF,EAAOC,GAAR,OACjBA,EAAQ,IAAM,EACVlK,YAAWiK,EAAQjM,KAAK6D,IAAIH,IAC5B1B,YAAWiK,EAAQjM,KAAK6D,IAAIF,QAGpC0H,EAAkB5E,QAAO,SAACC,GAAD,OACvBA,EAAK3F,SAAS,kBACdgG,KAAI,SAACL,GAAD,OAAUA,EAAKzB,QAAQ,cAAe,WAMpD,OAAQuF,GACN,KAAKvC,IAAWkE,KACd,OACE,cAAC,IAAD,2BACM3Q,GADN,IAEEoH,IAAKxD,EACL0I,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClD6G,aAAcA,EACd/I,EAAGA,EACHE,EAAGA,EACHtF,MAAOA,EACPqD,OAAQA,EACR2C,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWmE,OACd,OACE,cAAC,IAAD,2BACM5Q,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHsI,OAAQA,EACR3C,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWyD,QACd,OACE,cAAC,IAAD,2BACMlQ,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHwJ,QAAS9O,EACT+O,QAAS1L,EACT4H,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWoE,KACd,OACE,cAAC,IAAD,2BACM7Q,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACH2I,YAAaA,EACbC,YAAaA,EACbE,UAAWA,EACXnD,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWqE,KACd,OACE,cAAC,IAAD,2BACM9Q,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACH2I,YAAaA,EACbC,YAAaA,EACbjD,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWsE,eACd,OACE,cAAC,IAAD,2BACM/Q,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHsI,OAAQA,EACR+B,MAAOvB,EACPnD,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWwE,MACd,OACE,cAAC,IAAD,2BACMjR,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHsI,OAAQA,EACRS,MAAOA,EACPpD,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAWyE,IACd,OACE,cAAC,IAAD,2BACMlR,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACH2I,YAAaA,EACbC,YAAaA,EACbG,MAAOA,EACPpD,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,EAChBpH,wBAAwB,KAG9B,KAAK4D,IAAW0E,KAChB,KAAK1E,IAAW2E,IACd,OACE,cAAC,IAAD,2BACMpR,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHwD,OAAQA,EACR+E,QAASA,EACTC,SAAUA,EACV7C,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,KAGtB,KAAKxD,IAAW4E,QACd,OACE,cAAC,IAAD,2BACMrR,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHwD,OAAQA,EACR+E,QAASA,EACTC,SAAUA,EACV7C,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACX8P,QAAQ,EACRjP,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,KAGtB,KAAKxD,IAAW8E,MACd,OACE,cAAC,IAAD,2BACMvR,GADN,IAEEoH,IAAKxD,EACL6C,EAAGA,EACHE,EAAGA,EACHwD,OAAQA,EACR+E,QAASA,EACTC,SAAUA,EACVC,cAAeA,EACfC,aAAcA,EACd/C,YAAa1I,EAASW,QAAU+H,EAAc,KAC9C7D,WAAY7E,EAASW,QAAUkE,EAAa,KAC5C8D,cAAe3I,EAASW,QAAUgI,EAAgB,KAClD7D,cAAe9E,EAASW,QAAUmE,EAAgB,KAClDC,cAAe/E,EAASW,QAAUoE,EAAgB,KAClDtB,UAAW7F,EACXa,QAASgB,EACTyE,YAAa6H,EACb3H,UAAW4H,EACX3H,eAAgBgI,KAGtB,QACE,OAAO,+BCvQEuB,GA7GA,SAACxR,GAAW,IAEvB8K,EAME9K,EANF8K,OACA2G,EAKEzR,EALFyR,aACA7F,EAIE5L,EAJF4L,gBACAE,EAGE9L,EAHF8L,YACAD,EAEE7L,EAFF6L,UACArK,EACExB,EADFwB,SAGF,OACE,qCACGuJ,KAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAW2E,OAAS7E,EAAKI,iBAEzD,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GACL,IAAIQ,EAAeC,YAAwBH,EAAa,CACtDrF,EAAG+E,EAAM/H,WAAWiF,cACpB/B,EAAG6E,EAAM/H,WAAWkF,gBAGtB,OACE,cAAC,GAAD,CACEqG,KAAMxD,EAAM/H,WAAWuL,KACvBvI,EAAG4F,WAAWb,EAAM/H,WAAW8C,MAAQ,GACvCI,EAAG0F,WAAWb,EAAM/H,WAAWiD,KAAO,GACtCrF,MAAOmK,EAAM/H,WAAWpC,MACxBqD,OAAQ8G,EAAM/H,WAAWiB,OACzBuK,OAAQzD,EAAM/H,WAAWwL,OACzB9E,OACEqB,EAAM/H,WAAW0G,OACbuH,YAA6BlG,EAAM/H,WAAW0G,QAC9C,GAENiF,cAAe5D,EAAM/H,WAAW2L,cAChCC,aAAc7D,EAAM/H,WAAW4L,aAC/BH,QAAS1D,EAAM/H,WAAWyL,QAC1BC,SAAU3D,EAAM/H,WAAW0L,SAC3BG,YAAa9D,EAAM/H,WAAW6L,YAC9BC,YAAa/D,EAAM/H,WAAW8L,YAC9BE,UAAWjE,EAAM/H,WAAWgM,UAC5BD,aAAc,CACZhE,EAAM/H,WAAW4M,cACjB7E,EAAM/H,WAAW6M,eACjB9E,EAAM/H,WAAW8M,iBACjB/E,EAAM/H,WAAW+M,mBAEnBlI,SAAUkD,EAAM/H,WAAW6E,SAC3BoH,MAAOlE,EAAM/H,WAAWiM,MACxB/F,QAAS6B,EAAM/H,WAAWkG,QAC1BzB,OAAkC,IAA1BsD,EAAM/H,WAAW8E,MAAc,EAAI,EAC3CJ,OAAkC,IAA1BqD,EAAM/H,WAAW+E,MAAc,EAAI,EAC3C8D,YAAad,EAAM/H,WAAW6I,YAC9B7D,WAAY+C,EAAM/H,WAAWgF,WAC7B8D,cAAef,EAAM/H,WAAW8I,cAChC7D,cAAesD,EAAavF,EAC5BkC,cAAeqD,EAAarF,EAC5B+H,KAAMlD,EAAM/H,WAAW3E,MACvByL,YAAaiB,EAAM/H,WAAW2G,OAC9BA,OAAQoB,EAAM/H,WAAWkL,OACzBC,eAAe,EACf1C,KAAMV,EAAM9I,GAAGyJ,WAEf1I,WAAY+H,EAAM/H,WAClBmF,oBAAoB,EACpBvF,SAAU,kBAAMuI,EAAgBJ,IAChC3B,WAAY2B,EAAMgB,cAAgBX,IAAcY,IAAWC,QAC3DlL,SAAU,SAACmL,GAAD,OAAYnL,EAASgK,EAAOmB,KALjCnB,EAAM9I,OAShB+O,EACC,cAAC,GAAD,CACEzC,KAAMyC,EAAahO,WAAWuL,KAC9BvI,EAAG4F,WAAWoF,EAAahO,WAAW8C,MAAQ,GAC9CI,EAAG0F,WAAWoF,EAAahO,WAAWiD,KAAO,GAC7CrF,MAAOoQ,EAAahO,WAAWpC,MAC/BqD,OAAQ+M,EAAahO,WAAWiB,OAChCuK,OAAQwC,EAAahO,WAAWwL,OAChCS,MAAO+B,EAAahO,WAAWiM,MAC/BvF,OACEsH,EAAahO,WAAW0G,OACpBuH,YAA6BD,EAAahO,WAAW0G,QACrD,GAENiF,cAAeqC,EAAahO,WAAW2L,cACvCC,aAAcoC,EAAahO,WAAW4L,aACtCH,QAASuC,EAAahO,WAAWyL,QACjCC,SAAUsC,EAAahO,WAAW0L,SAClCG,YAAamC,EAAahO,WAAW6L,YACrCC,YAAakC,EAAahO,WAAW8L,YACrCE,UAAWgC,EAAahO,WAAWgM,UACnCf,KAAM+C,EAAahO,WAAW3E,MAC9ByL,YAAakH,EAAahO,WAAW2G,OACrCA,OAAQqH,EAAahO,WAAWkL,OAChCC,eAAe,EACfnL,WAAYgO,EAAahO,WACzBmF,oBAAoB,IAGtB,iCCkBO+I,GA3Hc,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cAAeC,EAAiB,EAAjBA,WACvCC,EAAQnO,mBACRoO,EAAYC,mBAChB,kBACEJ,IACCA,EAAcnO,WAAWwO,YACxBL,EAAcnO,WAAWyO,aACzB,CACEzF,IAAWmE,OACXnE,IAAWoE,KACXpE,IAAWqE,KACXrE,IAAWsE,eACXtE,IAAWwE,MACXxE,IAAWyE,KACX3L,SAASqM,EAAcnO,WAAWuL,OACrB,UAAf6C,KACJ,CAACD,EAAeC,IAoBlBlN,qBAAU,YAjBQ,WAChB,GAAIiN,EAAe,CACjB,IAEMO,EAFQL,EAAMvN,QAAQ6N,WAEDC,QAAQ,IAAMT,EAAclP,IACvD,GAAIyP,IAAiBL,EAAMvN,QAAQD,OACjC,OAGE6N,EACFL,EAAMvN,QAAQ+N,MAAM,CAACH,IAErBL,EAAMvN,QAAQgO,SAEhBT,EAAMvN,QAAQiO,WAAWC,aAI3BC,MAGF,IAiCMC,EAAqB,SAACC,EAAOC,GAEjC,OAtBwB,SAACD,EAAOC,EAAUpC,GAC1C,IAAMhK,EAAIjC,KAAKyF,MACbwG,EAAMhK,GACHmM,EAAMnM,EAAIgK,EAAMhK,GAAKjC,KAAKsO,IAAID,IAC9BD,EAAMjM,EAAI8J,EAAM9J,GAAKnC,KAAKuO,IAAIF,IAE7BlM,EAAInC,KAAKyF,MACbwG,EAAM9J,GACHiM,EAAMnM,EAAIgK,EAAMhK,GAAKjC,KAAKuO,IAAIF,IAC9BD,EAAMjM,EAAI8J,EAAM9J,GAAKnC,KAAKsO,IAAID,IAGnC,OAAO,2BACFD,GADL,IAEEtK,SAAUsK,EAAMtK,SAAWuK,EAC3BpM,IACAE,MAMKqM,CAAkBJ,EAAOC,EAnChB,SAACD,GACjB,MAAO,CACLnM,EACEmM,EAAMnM,EACLmM,EAAMvR,MAAQ,EAAKmD,KAAKsO,IAAIF,EAAMtK,UAClCsK,EAAMlO,OAAS,EAAKF,KAAKuO,KAAKH,EAAMtK,UACvC3B,EACEiM,EAAMjM,EACLiM,EAAMlO,OAAS,EAAKF,KAAKsO,IAAIF,EAAMtK,UACnCsK,EAAMvR,MAAQ,EAAKmD,KAAKuO,IAAIH,EAAMtK,WAyBxB2K,CAAUL,KAwB3B,OAAIhB,EAEA,cAAC,IAAD,CACExK,IAAK0K,EACLC,UAAWA,EACXmB,eACEnB,EACI,CAAC,WAAY,YAAa,cAAe,gBACzC,CACE,WACA,aACA,YACA,eACA,cACA,cACA,gBACA,gBAGRoB,aAlCe,SAACC,EAAaC,GACjC,IACMC,EAPgB,SAACC,GACvB,IAAMjL,EAAWiL,EAAM,EAAI,EAAI/O,KAAKgP,GAAKD,EAAMA,EACzCE,EAAMjP,KAAKgP,GAAK,GACtB,OAAOhP,KAAKyF,MAAM3B,EAAWmL,GAAOA,EAGjBC,CAAgBL,EAAY/K,UACrB8K,EAAY9K,SACtC,MAAmB,UAAfuJ,EACEwB,EAAY/K,SAAW8K,EAAY9K,WAAa,EAC3C+K,EAEL7O,KAAK6D,IAAIiL,GAAQ,EACZX,EAAmBS,EAAaE,GAElCF,EAEFC,KAyBF,8B,mBClFH5T,GAAaL,YAAOM,KAAV,wEAAGN,CAAsBE,KACnCqU,GAAiBvU,YAAOK,IAAV,4EAAGL,CAAH,gEAwaLwU,GAhaD,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBAETC,EAAWnQ,iBAAO,MAFmB,EAGHE,mBAAS,IAHN,mBAGpCkQ,EAHoC,KAGtBC,EAHsB,KAIrCC,EAAkBtQ,iBAAO,MACzBuQ,EAAWvQ,iBAAO,GAClBwQ,EAAcxQ,iBAAO,GANgB,EAOnBE,mBAAS,GAPU,mBAOpCuQ,EAPoC,KAO9BC,EAP8B,KASrCjU,EAAWC,cAT0B,EAUZiU,cAAvBjT,EAVmC,EAUnCA,MAAOqD,EAV4B,EAU5BA,OAAQ0C,EAVoB,EAUpBA,IAEjB7D,EAAYhD,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa8C,aACtD3C,EAAOL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaG,QACjDN,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BuR,EAAatR,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoR,cACvD/F,EAAcvL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaqL,eACxDD,EAAYtL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoL,aACtD9C,EAAiBxI,aAAY,SAACC,GAAD,OAAWA,EAAM+T,eAAehQ,WAC7DiQ,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAC3DmQ,EAAWnU,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAYC,QACpD7H,EAAiBxM,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAY3H,cAC1D6H,EAAYtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAaF,QACtDG,EAAexU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAavQ,WACzDyQ,EAAgBzU,aACpB,SAACC,GAAD,OAAWA,EAAMsU,aAAaE,iBAGhCrQ,qBAAU,WACR,OAAQqQ,GACN,KAAKC,KAAcC,aACjB,GAAIjB,EAAgB1P,QAAS,CAC3B,IAAIiH,EAAK,2BACJyI,EAAgB1P,SADZ,IAEPd,WAAW,2BACNwQ,EAAgB1P,QAAQd,YADnB,IAER0G,OAAQuH,YACNuC,EAAgB1P,QAAQd,WAAW0G,YAIzC/J,EAAS+U,aAAYX,EAAc9R,GAAI8I,IACvCpL,EAASgV,YAAa3I,IAAWC,UAEnC,MACF,KAAKuI,KAAcI,cAEjBpB,EAAgB1P,QAAU,KAC1BnE,EAASkV,aAAiB,UAK7B,CAACN,IAEJO,KAAY,WACN1J,IAAcY,IAAWC,SAC3B2H,EAAQD,EAAO,KAEhB,IAAM5P,KAAKgR,IAAIrB,EAAY5P,QAAU2P,EAAS3P,QAAU,EAAI4P,EAAY5P,QAAU2P,EAAS3P,SAAW4P,EAAY5P,QAAU2P,EAAS3P,SAAW,EAAG,KAAO,IAE7JgR,KAAY,WACN1J,IAAcY,IAAWC,UAC3ByH,EAAY5P,QAAU4P,EAAY5P,QAAU,KAE7C,GAEH,IAAMkR,EAAkB,SAAC1N,GAEnB8D,IAAcY,IAAWC,UACJ3E,EAAElF,SAAWkF,EAAElF,OAAOuP,YACvB2C,GACpB3U,EAASwL,aAAgB,SAyLzB5C,EAAkB,SAACyF,IACnBlL,EAAUlC,MAAQoN,EAAKpN,OAASkC,EAAUmB,OAAS+J,EAAK/J,SAC1DtE,EACEsV,YAAkB,CAChBrU,MAAOmD,KAAKC,IAAIlB,EAAUlC,MAAOoN,EAAKpN,OACtCqD,OAAQF,KAAKC,IAAIlB,EAAUmB,OAAQ+J,EAAK/J,YAK1CiR,EAAwB,SAACnK,EAAOmB,GACpCvM,EACEwV,aAAY,2BACPpK,GADM,IAET/H,WAAW,2BACN+H,EAAM/H,YACNkJ,QAKLkJ,EAAoB,SAACrK,GACzBpL,EAASwL,aAAgBJ,KAMrBsK,EAA4B,WAAqB,IACjDC,EAD6BC,IAAmB,yDAEhDA,GACFD,EAAiBjK,EAAc,KACT,MAAKiK,EAAiB,IAE5CA,EAAiBjK,EAAc,IACV,IAAGiK,EAAiB,KAE3ClC,EAAsBkC,IAGxB,OACE,eAAC9U,EAAA,EAAD,CACEI,MAAM,OACNqD,OAAO,OACPxD,QAAQ,OACRC,eAAe,SACf8U,cAAc,SACdC,WAAW,SACXC,OAAO,OACPnT,SAAS,WACToE,IAAKA,EATP,UAWE,cAAC,IAAD,CACE/F,MAAOA,EACPqD,OAAQA,EACR0R,YAAaX,EACbY,mBA7OyB,SAACtO,GAC9B,GAAI8D,IAAcY,IAAWC,QAAS,CACpC,IAAM1J,EAAWsT,YAA2BxC,EAASvP,SACrD,GAAK0P,EAAgB1P,SA8BnB,GACE,CAACkI,IAAW0E,KAAM1E,IAAW8E,MAAO9E,IAAW4E,SAAS9L,SACtDsG,GAEF,CACA,IAAIL,EAAK,2BACJyI,EAAgB1P,SADZ,IAEPd,WAAW,2BACNwQ,EAAgB1P,QAAQd,YADnB,IAER0G,OAAQuH,YACNuC,EAAgB1P,QAAQd,WAAW0G,YAIzCqB,EAAM/H,WAAW0G,OAASqB,EAAM/H,WAAW0G,OAAOoM,OAAO,CACvDvT,EAASyD,EAAIwN,EAAgB1P,QAAQd,WAAW8C,KAChDvD,EAAS2D,EAAIsN,EAAgB1P,QAAQd,WAAWiD,IAChD1D,EAASyD,EAAIwN,EAAgB1P,QAAQd,WAAW8C,KAChDvD,EAAS2D,EAAIsN,EAAgB1P,QAAQd,WAAWiD,MAGlDuN,EAAgB1P,QAAUiH,OAnDA,CAC5B,IAAIgL,EAAQ,2BACPC,KADO,IAEVtL,WAAYC,IAAW2E,MACvBtM,WAAW,2BACNgT,IAAahT,YADR,IAERuL,KAAMnD,EACNK,KAAML,EACNtF,KAAMvD,EAASyD,EACfC,IAAK1D,EAAS2D,EACd7H,MAAO,UACP6P,OAAQ,UACRvE,OAAQ,MAKV,CAACqC,IAAW0E,KAAM1E,IAAW8E,MAAO9E,IAAW4E,SAAS9L,SACtDsG,KAGF2K,EAAS/S,WAAW2G,OAAS,EAC7BoM,EAAS/S,WAAW0G,OAAS,CAAC,EAAG,EAAG,EAAG,IAErC0B,IAAcY,IAAW2E,MAC3BoF,EAAS/S,WAAW2G,OAAS,EAC7BoM,EAAS/S,WAAW0G,OAAS,CAAC,EAAG,IAEnC8J,EAAgB1P,QAAUiS,KA+M1BE,mBAnLkB,WAGtB,GAAI7K,IAAcY,IAAWC,SAAWuH,EAAgB1P,QAAS,CAC/D,IAAMvB,EAAWsT,YAA2BxC,EAASvP,SAC/ClD,EAAQ2B,EAASyD,EAAIwN,EAAgB1P,QAAQd,WAAW8C,KACxD7B,EAAS1B,EAAS2D,EAAIsN,EAAgB1P,QAAQd,WAAWiD,IACzDiQ,EAAY3T,EAASyD,EAAIwN,EAAgB1P,QAAQd,WAAW8C,KAC5DqQ,EAAY5T,EAAS2D,EAAIsN,EAAgB1P,QAAQd,WAAWiD,IAClE,IACEuN,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,GACnDoU,IACE1C,EAAgB1P,QAAQd,WAAW0G,OACjC8J,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,IAEvDqU,IACE3C,EAAgB1P,QAAQd,WAAW0G,OACjC8J,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,MAIrD4R,EAAY5P,QAAU2P,EAAS3P,QAAU,GACzC0P,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,GACnDiC,KAAK6D,IACHsO,EACE1C,EAAgB1P,QAAQd,WAAW0G,OACjC8J,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,IAErD,IACJiC,KAAK6D,IACHuO,EACE3C,EAAgB1P,QAAQd,WAAW0G,OACjC8J,EAAgB1P,QAAQd,WAAW0G,OAAO5H,OAAS,IAErD,IACJ,CACA,IAAIiJ,EAAK,2BACJyI,EAAgB1P,SADZ,IAEPd,WAAW,2BACNwQ,EAAgB1P,QAAQd,YADnB,IAER0G,OAAO,YAAK8J,EAAgB1P,QAAQd,WAAW0G,QAC/C9I,MAAOA,EACPqD,OAAQA,EACRuK,OAAQzK,KAAK6D,IAAIhH,GACjBiO,YAAa9K,KAAK6D,IAAIhH,GAAS,IAC/BkO,YAAa/K,KAAK6D,IAAIhH,OAIxB,CAACoL,IAAW0E,KAAM1E,IAAW8E,MAAO9E,IAAW4E,SAAS9L,SACtDsG,IAGFL,EAAM/H,WAAW0G,OAAO0M,QAAQ,EAAG,EAAGF,EAAWC,GAE/C/K,IAAcY,IAAW2E,MAC3B5F,EAAM/H,WAAW0G,OAAOlG,KAAK0S,GAC7BnL,EAAM/H,WAAW0G,OAAOlG,KAAK2S,IAE/B3C,EAAgB1P,QAAUiH,EAG9B0I,EAAS3P,QAAU4P,EAAY5P,UAsH7BuS,iBAnHgB,SAAC/O,GAGlB,CACC0E,IAAWC,QACXD,IAAW0E,KACX1E,IAAW8E,MACX9E,IAAW4E,SACX9L,SAASsG,IAEXzL,EAASkV,aAAiBL,KAAcC,eAE1C,IAAMlS,EAAWsT,YAA2BxC,EAASvP,SACrDyP,EAAgBhR,IAuGZ+T,WArG2B,SAAChP,GAChC,IAAM/E,EAAWsT,YAA2BxC,EAASvP,SAEnD,CACEkI,IAAWC,QACXD,IAAW0E,KACX1E,IAAW8E,MACX9E,IAAW4E,SACX9L,SAASsG,IACXoI,EAAgB1P,SAChBwP,EAAatN,IAAMzD,EAASyD,GAC5BsN,EAAapN,IAAM3D,EAAS2D,GAE5BvG,EAASkV,aAAiBL,KAAcC,gBAyFtC8B,aAAcvB,EACdwB,QAvFkB,SAACxV,GAEvB,GADAA,EAAMyV,IAAIC,iBACe,OAArBrD,EAASvP,SAAoB9C,EAAMyV,IAAIE,QAAS,CAClD,IAAMC,EAAQvD,EAASvP,QACjB+S,EAAWD,EAAMnP,SAF2B,EAGbmP,EAAME,qBAAhCC,EAHuC,EAG1C/Q,EAAgBgR,EAH0B,EAG7B9Q,EACf+Q,EAAe,CACnBjR,GAAI+Q,EAAWH,EAAM5Q,KAAO6Q,EAC5B3Q,GAAI8Q,EAAWJ,EAAM1Q,KAAO2Q,GAExBK,EAAWnT,KAAKC,IACpBD,KAAKgR,IACH/T,EAAMyV,IAAIU,OAAS,EAAIN,EApPf,QAoPoCA,EAC5C,IAEF,KAEFlX,EAASuC,YAAQgV,IACjB,IAAME,EAAS,CACbpR,EAAG+Q,EAAWE,EAAajR,EAAIkR,EAC/BhR,EAAG8Q,EAAWC,EAAa/Q,EAAIgR,GAEjCN,EAAMrU,SAAS6U,GACfR,EAAM5E,cAiEJvK,OAAQtH,GAAQ,EAChBuH,OAAQvH,GAAQ,EAChB0H,SAAUwD,EACVrF,EAAGpF,EAAQ,EACXsF,EAAGjC,EAAS,EACZmK,QAASxN,EAAQ,EACjByN,QAASpK,EAAS,EAClB0C,IAAK0M,EACLzM,UAAWwE,IAAcY,IAAWC,QAlBtC,SAoBE,eAAC,IAAD,WAEE,cAAC,IAAD,CACEjG,EAAG,EACHE,EAAG,EACHtF,MAAOkC,EAAUlC,MACjBqD,OAAQnB,EAAUmB,OAClBgK,KAC+B,gBAA7B8F,EAAcsD,WACVtD,EAAcsD,WACd,IAAMtD,EAAcsD,WAE1BjO,WAAW,IAEb,cAAC,GAAD,CAAYiB,OAAQ+J,EAAW7L,gBAAiBA,IAEhD,cAAC,GAAD,CACED,eAAgBA,EAChBzI,eAAgBA,EAChB0I,gBAAiBA,EACjBC,UAAWuL,EAAcuD,aAG3B,cAAC,GAAD,CACEjN,OAAQ+J,EACR9L,eAAgBA,EAChBC,gBAAiBA,IAEnB,cAAC,GAAD,CACE8B,OAAQ+J,EACR7L,gBAAiBA,EACjBzF,UAAWA,EACXuI,YAAaA,EACbD,UAAWA,EACXD,gBAAiBiK,EACjBrU,SAAUmU,IAEZ,cAAC,GAAD,CACE7K,OAAQ+J,EACRpD,aAAcwC,EAAgB1P,QAC9BuH,YAAaA,EACbD,UAAWA,EACXD,gBAAiBiK,EACjBrU,SAAUmU,IAEZ,cAAC,GAAD,CACE7K,OAAQ+J,EACRnH,MAAOgH,EACP3H,eAAgBA,EAChBxJ,UAAWA,EACXsI,UAAWA,EACXC,YAAaA,EACbF,gBAAiBiK,EACjBrU,SAAUmU,EACVzI,WAtGY,SAACL,GACrBzM,EAAS4X,aAAuBnL,OAuG1B,cAAC,GAAD,CACE9D,eAAgBA,EAChBzI,eAAgBA,EAChB0I,gBAAiBA,EACjBzF,UAAWA,EACX0F,UAAWuL,EAAcuD,aAE3B,cAAC,GAAD,CACEnG,cAAemD,EACflD,WAAYA,SAIlB,eAAC5Q,EAAA,EAAD,CAAK+B,SAAS,WAAWiV,MAAOlD,EAAe,QAAU,EAAGrO,IAAK,EAAjE,UACE,cAAC,EAAD,CAAcvE,MAAM,cAAca,SAAS,SAAS/D,OAAK,EAAzD,SACE,cAAC0U,GAAD,CAAgBtR,QAAS,kBAAMyT,GAA0B,IAAzD,SACE,cAACoC,EAAA,EAAD,QAGJ,cAAC,EAAD,CAAc/V,MAAM,eAAea,SAAS,SAAS/D,OAAK,EAA1D,SACE,cAAC0U,GAAD,CAAgBtR,QAAS,kBAAMyT,GAA0B,IAAzD,SACE,cAACqC,EAAA,EAAD,e,0MCjcNhZ,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnC8Y,GAAchZ,YAAOiZ,MAAV,8EAAGjZ,CAAH,oFAOXkZ,GAAgBlZ,YAAO6B,KAAV,gFAAG7B,CAAH,8DAMbO,GAAUP,YAAOmZ,MAAV,0EAAGnZ,CAAH,qCAoEEoZ,GA/DK,SAACxY,GAAW,IACtByY,EAA2CzY,EAA3CyY,MAAOjD,EAAoCxV,EAApCwV,IAAK/Q,EAA+BzE,EAA/ByE,IAAKlD,EAA0BvB,EAA1BuB,MAAOmX,EAAmB1Y,EAAnB0Y,SAAUC,EAAS3Y,EAAT2Y,KAQ1C,OACE,eAAC,GAAD,CAASC,WAAS,EAAlB,UACE,cAACL,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC,GAAD,CAAY/W,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,SACGgW,MAGL,cAACF,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,eAAC5X,EAAA,EAAD,CAAKC,QAAQ,OAAOgV,WAAW,SAA/B,UACE,cAACoC,GAAD,UACE,cAACQ,GAAA,EAAD,CACEtD,IAAKA,EACL/Q,IAAKA,EACLkU,KAAMA,EACNpX,MAAOA,EACPC,SAAU,SAACC,EAAOF,GAAR,OAAkBmX,EAASnX,IACrCwX,kBAAgB,aAChBC,oBAAqB,SAAChZ,GAAD,OACnB,cAACd,EAAA,EAAD,CACE+Z,KAAMjZ,EAAMiZ,KACZC,gBAAiB,EACjBC,UAAU,MACVhX,MAAOnC,EAAMuB,MAJf,SAMGvB,EAAMoZ,gBAKf,cAAChB,GAAD,CACE7W,MAAOA,EACP4U,OAAO,QACPnH,KAAK,SACL2J,KAAMA,GAAQ,EACdnX,SAAU,SAACC,GAAD,OACRiX,EACyB,KAAvBjX,EAAMoB,OAAOtB,MACTiU,GAAO,EACP6D,OAAO5X,EAAMoB,OAAOtB,SAG5B+X,OAhDS,WACb/X,EAAQiU,EACVkD,EAASlD,GACAjU,EAAQkD,GACjBiU,EAASjU,IA6CH8U,WAAY,CACV/D,IAAKA,EACL/Q,IAAKA,EACL,kBAAmB,2B,UC9E3B+U,GAAkBpa,YAAOqa,MAAV,uFAAGra,CAAH,iBAwCNsa,GApCU,SAAC1Z,GAAW,IAC3BuB,EAAsDvB,EAAtDuB,MAAOC,EAA+CxB,EAA/CwB,SAAUmY,EAAqC3Z,EAArC2Z,cAAe9L,EAAsB7N,EAAtB6N,MAAO+L,EAAe5Z,EAAf4Z,WAQ/C,OACE,eAAC3Y,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAASC,WAAW,SAAtD,UACE,eAACjV,EAAA,EAAD,CAAKC,QAAQ,OAAOgV,WAAW,SAA/B,UACE,cAAC,KAAD,CACE3U,MAAOA,GAAS,GAChBC,SAAU,SAAC1C,GAAD,OAAW0C,EAAS1C,EAAM+a,IAAIhb,kBACxCib,QAASC,IACTC,UAAQ,EACRC,eAAa,IAEf,cAACT,GAAD,CACEjY,MAAOA,GAAS,GAChBC,SAAU,SAACC,GAAD,OAAWkY,EAAclY,EAAMoB,OAAOtB,QAChD2Y,UAnBmB,SAACzY,GACR,UAAdA,EAAM0Y,KACR3Y,EAASC,EAAMoB,OAAOtB,aAoBrBsM,EACC,cAAC1O,EAAA,EAAD,CAAYL,MAAM,YAAYgD,QAAQ,QAAtC,SACG8X,IAGH,iCCdFQ,GAAShb,YAAOib,MAAV,mFAAGjb,CAAkBE,KAC3BH,GAAaC,YAAOC,KAAV,uFAAGD,CAAsBE,KACnCgb,GAAyBlb,YAAOmb,MAAV,mGAAGnb,CAAH,2CAKtBob,GAAU,SAACxa,GAAW,IAExByY,EAUEzY,EAVFyY,MACAgC,EASEza,EATFya,SACAC,EAQE1a,EARF0a,WACAC,EAOE3a,EAPF2a,OAGAC,GAIE5a,EANF6a,WAME7a,EALF8a,aAKE9a,EAJF4a,eAEAjO,GAEE3M,EAHF+a,QAGE/a,EAFF2M,QACAqO,EACEhb,EADFgb,cAXuB,EAaOnX,oBAAS,GAbhB,mBAalBoX,EAbkB,KAaRC,EAbQ,KAczB,OACE,eAACC,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACX,GAAD,CAAwBc,WAAY,cAACC,GAAA,EAAD,IAApC,SACE,cAAC,GAAD,UAAa5C,MAEf,cAAC6C,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAOka,GAAI,EAA5D,UACE,eAAChD,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,eAACva,EAAA,EAAD,CACEC,QAAQ,OACR+U,cAAc,MACdC,WAAW,SACX/U,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYW,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,mBAGA,cAAC,GAAD,CACElB,MAAOoL,EAAO8N,GACdjZ,SAAU,SAAC1C,GAAD,OAAW8b,EAAcH,EAAU3b,IAC7C6a,cAAe,SAAC7a,GAAD,OAAW8b,EAAcH,EAAU3b,IAClD+O,MAAO4N,QAAQd,EAAOF,IACtBb,WAAYe,EAAOF,UAIzB,cAAClC,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,UACNjD,IAAK,EACL/Q,IAAK,EACLkU,KAAM,IACNpX,MAAOoL,EAAO+N,GACdhC,SAAU,SAACnX,GAAD,OAAWqZ,EAAcF,EAAYnZ,WAIpDyZ,WA8IIU,GAvIc,SAAC1b,GAAW,IAC/B2b,EAA4B3b,EAA5B2b,SAAU1C,EAAkBjZ,EAAlBiZ,KAAM2C,EAAY5b,EAAZ4b,QAClB7D,EAAaxX,aACjB,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,QAAQwT,cAGzC,OACE,eAAC8D,GAAA,EAAD,CACE9C,kBAAgB,oBAChBE,KAAMA,EACN6C,QAASH,EACTI,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAavZ,GAAG,oBAAhB,sBACA,cAAC,KAAD,CACEwZ,cAAe,CACbxS,cAAeqO,EAAWrO,eAAiB,GAC3CE,gBAAiBmO,EAAWnO,iBAAmB,EAC/CE,gBAAiBiO,EAAWjO,iBAAmB,GAC/CC,kBAAmBgO,EAAWhO,mBAAqB,EACnDU,cAAesN,EAAWtN,eAAiB,GAC3CC,gBAAiBqN,EAAWrN,iBAAmB,EAC/CC,kBAAmBoN,EAAWpN,mBAAqB,GACnDC,oBAAqBmN,EAAWnN,qBAAuB,EACvDP,WAAY0N,EAAW1N,YAAc,GACrCC,aAAcyN,EAAWzN,cAAgB,EACzCnB,aAAc4O,EAAW5O,cAAgB,GACzCE,YAAa0O,EAAW1O,aAAe,IAEzC8S,iBAAkBC,OAAaxJ,MAAM,CACnClJ,cAAe0S,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,KACtDzS,gBAAiBsS,OACdC,WACAC,KAAK,mBAAoB,yBAA0BC,KACtD9R,cAAe2R,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,KACtD5R,kBAAmByR,OAChBC,WACAC,KAAK,mBAAoB,yBAA0BC,KACtDlS,WAAY+R,OACTC,WACAC,KAAK,mBAAoB,yBAA0BC,OAExDC,SAAU,SAAC7P,GAET,OADA1G,QAAQC,IAAIyG,GACL,IAET8P,SAAUb,EApCZ,SAsCG,SAACc,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAACpa,GAAG,6BAA3B,UACE,cAAC,GAAD,aACE+V,MAAM,WACNgC,SAAS,gBACTC,WAAW,mBACPgC,IAEN,cAAC,GAAD,aACEjE,MAAM,YACNgC,SAAS,kBACTC,WAAW,qBACPgC,IAEN,cAAC,GAAD,aACEjE,MAAM,iBACNgC,SAAS,gBACTC,WAAW,mBACPgC,IAEN,cAAC,GAAD,aACEjE,MAAM,gBACNgC,SAAS,oBACTC,WAAW,uBACPgC,IAEN,cAAC,GAAD,yBACEjE,MAAM,OACNgC,SAAS,aACTC,WAAW,gBACPgC,GAJN,IAKE1B,cACE,eAACzC,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,cACNjD,IAAK,EACL/Q,IAAK,GACLkU,KAAM,EACNpX,MAAOmb,EAAU/P,OAAOxD,aACxBuP,SAAU,SAACnX,GAAD,OACRmb,EAAU9B,cAAc,eAAgBrZ,QAI9C,cAACgX,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,eACNjD,IAAK,IACL/Q,IAAK,EACLkU,KAAM,IACNpX,MAAOmb,EAAU/P,OAAOtD,YACxBqP,SAAU,SAACnX,GAAD,OACRmb,EAAU9B,cAAc,cAAerZ,iBAQrD,eAACwb,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEkQ,KAAK,SACLlQ,MAAM,UACNgD,QAAQ,WACRM,SAAUsa,EAAUM,eAAiBN,EAAUO,QAJjD,gCCtMRC,GAAY,CAChBC,OAAQ,eACRC,MAAO,mBACPC,EAAG,wBACHC,EAAG,yBACHC,EAAG,6BACHC,EAAG,4BACHC,EAAG,oBACHC,EAAG,cACHC,EAAG,iBACHC,EAAG,cACHC,EAAG,mBACH,SAAK,gBACL,SAAK,kBACL,SAAK,iBACL,SAAK,kBACL,eAAW,oBACX,eAAW,sBACX,eAAW,qBACX,eAAW,sBACX,UAAW,UACX,UAAW,WACX,UAAW,eACX,UAAW,qBACX,UAAW,qBACX,UAAW,yBACX,UAAW,sBACX,UAAW,uBACX,UAAW,oBACX,UAAW,oBACX,UAAW,+BACX,UAAW,qBACX,UAAW,mBACX,UAAW,uBACX,UAAW,oBACX,UAAW,qBACX,cAAe,0BACf,cAAe,8BAGXtF,GAAOnZ,YAAO0e,MAAV,2EAAG1e,CAAgBE,KACvBye,GAAU3e,YAAOD,KAAV,8EAAGC,CAAH,4FAOP4e,GAAkB5e,YAAOD,KAAV,sFAAGC,CAAH,oCAiCN6e,GA5BS,SAACje,GAAW,IAC1B2b,EAAmB3b,EAAnB2b,SAAU1C,EAASjZ,EAATiZ,KAElB,OACE,eAAC4C,GAAA,EAAD,CACE9C,kBAAgB,mBAChBE,KAAMA,EACN6C,QAASH,EACTI,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAavZ,GAAG,mBAAhB,uBACA,cAACma,GAAA,EAAD,CAAeC,UAAQ,EAACpa,GAAG,4BAA3B,SACGwb,OAAOC,KAAKjB,IAAW3R,KAAI,SAACL,EAAMwF,GAAP,OAC1B,eAAC,GAAD,CAAMkI,WAAS,EAAa2C,GAAI,EAAhC,UACE,cAAC,GAAD,CAAMrQ,MAAI,EAAC2N,GAAI,EAAf,SACE,cAACkF,GAAD,UAAU7S,MAEZ,cAAC,GAAD,CAAMA,MAAI,EAAC2N,GAAI,EAAf,SACE,cAACmF,GAAD,UAAkBd,GAAUhS,SALXwF,YC9DzB0N,GAAahf,YAAOif,MAAV,0EAAGjf,CAAH,4BAIVkf,GACO,YADPA,GAEM,WA4EGC,GAzEE,WACf,IAAMne,EAAWC,cADI,EAGawD,oBAAS,GAHtB,mBAGd2a,EAHc,KAGHC,EAHG,OAIO5a,mBAAS,MAJhB,mBAId6a,EAJc,KAINC,EAJM,KAMfnK,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAoBjE,OACE,eAACtD,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACf+U,WAAW,SACX0I,GAAI,EACJC,GAAI,EALN,UAOE,eAAC5d,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,MAAlC,UACE,cAACwD,GAAA,EAAD,CACElY,MAAOiT,EAAgBA,EAActI,KAAO,GAC5C1K,SA7BiB,SAACC,GACxBrB,EAAS0e,aAAerd,EAAMoB,OAAOtB,QACrCkd,GAAa,MA6BRD,EACC,cAACpE,GAAA,EAAD,CAAQ/X,QA5BO,WACrBjC,EAAS2e,aAAWvK,EAAc9R,GAAI8R,EAActI,OACpDuS,GAAa,IA0B0B3c,QAAQ,WAAzC,kBAIA,gCAGJ,eAACb,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACE,cAAC,EAAD,CAAciB,MAAM,YAAYlD,OAAK,EAArC,SACE,cAACQ,EAAA,EAAD,CAAY4C,QAAS,kBAAMsc,EAAUL,KAArC,SACE,cAACF,GAAD,CAAYY,KAAMC,KAAYxQ,KAAK,WAGvC,cAAC,EAAD,CAActM,MAAM,WAAWlD,OAAK,EAApC,SACE,cAACQ,EAAA,EAAD,CAAY4C,QAAS,kBAAMsc,EAAUL,KAArC,SACE,cAACY,GAAA,EAAD,WAKN,cAAC,GAAD,CACEjG,KAAMyF,IAAWJ,GACjB3C,SAAU,kBAAMgD,EAAU,SAE5B,cAAC,GAAD,CACE1F,KAAMyF,IAAWJ,GACjB1C,QAlDsB,SAAC7D,GAC3B3X,EACE+e,aAAa,2BACR3K,GADO,IAEVuD,WAAYA,MAGhB4G,EAAU,OA4CNhD,SAAU,kBAAMgD,EAAU,a,qJClF5Bhf,GAAUP,YAAO6B,KAAV,wEAAG7B,CAAH,4JAYPggB,GAAmBhgB,YAAOD,KAAV,iFAAGC,CAAH,gBACX,SAACY,GAAD,MAA6B,SAAjBA,EAAMqf,OAAoB,QAAU,cA8E5CC,GA3EE,SAACtf,GAAW,IAEzBsL,EAQEtL,EARFsL,cACAkB,EAOExM,EAPFwM,aACA8B,EAMEtO,EANFsO,KACAiR,EAKEvf,EALFuf,cACAC,EAIExf,EAJFwf,aACAC,EAGEzf,EAHFyf,SACAC,EAEE1f,EAFF0f,YACArc,EACErD,EADFqD,SATwB,EAWAQ,oBAAS,GAXT,mBAWnB8b,EAXmB,KAWZC,EAXY,KAyB1B,OACE,cAAC,GAAD,CACEC,EAAG,EACHtE,GAAI,EACJra,QAAQ,OACRG,MAAM,OACNye,OAAQ,EACRC,YAAY,WACZC,aAAc,EACd3d,QAASgB,EACT4c,aAAc,kBAAML,GAAS,IAC7BM,aAAc,kBAAMN,GAAS,IAC7BO,UAAWC,aAAKX,GAAY,aAAcE,GAAS,eAXrD,SAaE,eAACpH,GAAA,EAAD,CAAMK,WAAS,EAACyH,QAAQ,gBAAgBnK,WAAW,SAAS5W,QAAS,EAArE,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI6G,EAAc,GAAK,GAAlC,SACE,eAACnH,GAAA,EAAD,CAAMK,WAAS,EAAC0H,KAAK,SAASpK,WAAW,SAAS5W,QAAS,EAA3D,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAf,SACE,cAACuG,GAAD,CACEC,OAAQ/T,EAAgB,OAAS,QACjCiV,QAAM,EAFR,SAIGjS,MAGJmR,GAAYE,IAAUrU,EACrB,cAACiN,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAACpZ,EAAA,EAAD,CAAY4C,QAvCE,SAAC0F,GAC3BA,EAAEyY,kBACFzY,EAAE0Y,YAAYC,2BACdnB,KAoCsD9Q,KAAK,QAA/C,SACGnD,EAAgB,cAACqV,GAAA,EAAD,IAAqB,cAACC,GAAA,EAAD,QAI1C,mCAIJlB,IAAgBD,GAAYE,GAASnT,GACrC,cAAC+L,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAACpZ,EAAA,EAAD,CAAY4C,QA5CG,SAAC0F,GACxBA,EAAEyY,kBACFzY,EAAE0Y,YAAYC,2BACdlB,KAyC+C/Q,KAAK,QAA5C,SACGjC,EAAe,cAACqU,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,QAInC,mCC9DJC,GAAYC,cAAW,SAACriB,GAAD,MAAY,CACvCsiB,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYziB,EAAM0iB,YAAYC,OAAO,YAAa,CAChDC,SAAU5iB,EAAM0iB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAIT9G,GAAShb,YAAOib,MAAV,oEAAGjb,CAAkBE,KAC3BoiB,GAActiB,YAAOuiB,MAAV,yEAAGviB,CAAuBE,KACrCsiB,GAAYxiB,YAAOgb,IAAV,uEAAGhb,CAAH,qJAaTyiB,GAAmBziB,YAAO0iB,MAAV,8EAAG1iB,CAAH,sIA6IP2iB,GAlIG,SAAC/hB,GACjB,IAAMgiB,EAAUjB,KACV3gB,EAAWC,cAFU,EAGKwD,oBAAS,GAHd,mBAGpBoX,EAHoB,KAGVC,EAHU,KAIrBnG,EAAexU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAavQ,WAE7DsQ,EAME7U,EANF6U,UACA1S,EAKEnC,EALFmC,MACA8f,EAIEjiB,EAJFiiB,QACAjH,EAGEhb,EAHFgb,cACA0E,EAEE1f,EAFF0f,YACAwC,EACEliB,EADFkiB,WAEIC,EAAapX,KAAEC,QAAQ6J,EAAW,CAAC,eAAgB,CAAC,QAE1DlQ,qBAAU,WACR,IAAK,IAAI+L,KAASyR,EACZA,EAAWzR,GAAO0R,cAAgBxf,SAAS8N,GAAS,GACtDtQ,EACEwV,aAAY,2BAELuM,EAAWzR,IAFP,IAGP0R,YAAaxf,SAAS8N,GAAS,KAEjC,MAKP,CAACmE,EAAUtS,SAEd,IAmBM8f,EAAc,SAAC3f,EAAI4f,GACvB,IAAM9W,EAAQqJ,EAAUxG,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,KAAOA,KACnDtC,EACEwV,aAAY,2BACPpK,GADM,mBAER8W,EAAQ9W,EAAM8W,GAAS,EAAI,OASlC,OACE,cAACrhB,EAAA,EAAD,CAAKsa,GAAI,EAAT,SACE,eAACgH,GAAA,EAAD,WACE,cAACV,GAAD,CACE1f,MAAOA,EACPqgB,OACE,eAACvhB,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACG+gB,EACC,cAAC,GAAD,CAAaxf,GAAI,EAAjB,SACGwf,EAAQ1W,KAAI,SAACiX,EAAQ9R,GAAT,OACX,cAACkR,GAAD,CAEEvf,QAASmgB,EAAOngB,QAChBoM,KAAK,QACLgU,UAAW,cAACC,GAAA,EAAD,IACXC,QAAS,cAAC,KAAD,CAAiB3D,KAAMwD,EAAOxD,KAAMvQ,KAAK,OAClD3M,QAAQ,YALH4O,QAUX,6BAEF,cAACjR,EAAA,EAAD,CACE4C,QAzDY,WACxB6Y,GAAY,SAAC0H,GAAD,OAAeA,MAyDfzC,UAAWC,aAAK4B,EAAQf,OAAT,gBACZe,EAAQP,WAAaxG,IAH1B,SAME,cAACI,GAAA,EAAD,WAKR,cAACwH,GAAA,EAAD,CAAUC,GAAI7H,EAAd,SACE,eAAC8H,GAAA,EAAD,WACE,cAAC,iBAAD,CACEnO,KAAMuN,EACNa,QApEc,SAACpO,GAAU,IAAD,WACzBlE,GACP,IAAMlF,EAAQqJ,EAAUxG,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,IAAMkS,EAAKlE,GAAOhO,MAC1D8I,GAASA,EAAM4W,cAAgBxf,SAAS8N,GAAS,GACnDtQ,EACEwV,aAAY,2BAELpK,GAFI,IAGP4W,YAAaxf,SAAS8N,GAAS,KAEjC,KATR,IAAK,IAAIA,KAASkE,EAAO,EAAhBlE,IAoECuS,UAAW,IACXC,SAAU,SAAChM,GAAD,OAASjR,QAAQC,IAAIgR,IAC/B7T,SAAU,SAAC6T,GAAD,OAASjR,QAAQC,IAAIgR,IAC/BiM,MAAOjB,EANT,SAQGC,EAAW5W,KAAI,SAACL,GAAD,OACd,cAAC,GAAD,CACEoD,KAAMpD,EAAKzH,WAAWyI,KACtBZ,cAAeJ,EAAKI,cACpBkB,aAActB,EAAKsB,aAEnB+S,cAAe,kBAAM8C,EAAYnX,EAAKxI,GAAI,kBAC1C8c,aAAc,kBAAM6C,EAAYnX,EAAKxI,GAAI,iBACzC+c,SAAU1K,GAAgBA,EAAarS,KAAOwI,EAAKxI,GACnDW,SAAU,kBA1DLmI,EA0DuBN,EAzD1C9K,EAASwL,aAAgBJ,SACzBpL,EAASgV,YAAa3I,IAAWC,UAFf,IAAClB,GA2DLkU,YAAaA,GALRxU,EAAKxI,SASfsY,a,kICjLPZ,GAAShb,YAAOib,MAAV,8EAAGjb,CAAkBE,KAE3B8jB,GAAuBhkB,YAAOikB,MAAV,4FAAGjkB,CAAH,6DAMpBkkB,GAAiBlkB,YAAOmkB,MAAV,sFAAGnkB,CAAH,qDAIdokB,GAAqBpkB,YAAOqkB,MAAV,0FAAGrkB,CAAH,qBAGlBskB,GAAYtkB,IAAOwH,IAAV,iFAAGxH,CAAH,kEAuDAukB,GAhDS,SAAC3jB,GACvB,IADiC,EAEP6D,mBADb,IADoB,mBAE1B+f,EAF0B,KAEnBC,EAFmB,KAGzBC,EAA2C9jB,EAA3C8jB,WAAYnI,EAA+B3b,EAA/B2b,SAAU1C,EAAqBjZ,EAArBiZ,KAAM8K,EAAe/jB,EAAf+jB,WAKpC,OACE,eAAClI,GAAA,EAAD,CAAQ9C,kBAAgB,oBAAoBE,KAAMA,EAAM6C,QAASH,EAAjE,UACE,cAACM,GAAA,EAAD,CAAavZ,GAAG,oBAAhB,+BACA,cAACma,GAAA,EAAD,CAAeC,UAAQ,EAACpa,GAAG,4BAA3B,SACE,cAAC0gB,GAAD,CACEY,WAAYJ,EACZK,KATa,WACnBJ,EAASD,EALE,KAcLM,QAASN,EAAQE,EAAWvhB,OAC5B4hB,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,4BALnB,SAOE,cAACf,GAAD,CAAgBgB,WAAY,IAAKC,KAAM,EAAvC,SACGT,EAAWU,MAAM,EAAGZ,GAAOrY,KAAI,SAACkZ,GAAD,OAC9B,eAACjB,GAAD,CAEEe,KAAM,EACNliB,QAAS,kBAAM0hB,EAAWU,IAH5B,UAKE,cAACf,GAAD,CACEvgB,IAAG,UAAKmG,IAAOC,UAAZ,kBAA+Bkb,EAAU/hB,GAAzC,gBACHgiB,IAAKD,EAAUE,mBAEjB,cAACC,GAAA,EAAD,CACEziB,MAAOsiB,EAAUI,UACjBC,SAAUL,EAAUE,qBAVjBF,EAAU/hB,aAiBzB,cAACqa,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,UAAjC,0B,gCC5EFiiB,GAAYC,cAAW,SAACriB,GAAD,MAAY,CACvComB,OAAO,cACL/hB,SAAU,WACVgd,aAAcrhB,EAAMiU,MAAMoN,aAC1BnhB,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnBihB,OAAQ,oBACRze,MAAO,QACN1C,EAAMqmB,YAAYC,GAAG,MAAQ,CAC5B5jB,MAAO,SAGX6jB,WAAY,CACVC,QAASxmB,EAAMW,QAAQ,EAAG,GAC1BoF,OAAQ,OACR1B,SAAU,WACVoiB,cAAe,OACflkB,QAAS,OACTgV,WAAY,SACZ/U,eAAgB,UAElBkkB,UAAW,CACTvmB,MAAO,UACPuC,MAAO,QAETikB,WAAY,CACVH,QAASxmB,EAAMW,QAAQ,EAAG,EAAG,EAAG,GAEhCimB,YAAY,cAAD,OAAgB5mB,EAAMW,QAAQ,GAA9B,OACX8hB,WAAYziB,EAAM0iB,YAAYC,OAAO,SACrCjgB,MAAO,YA+BImkB,GA3BG,SAACxlB,GAAW,IACpBuB,EAAoBvB,EAApBuB,MAAOC,EAAaxB,EAAbwB,SAETwgB,EAAUjB,KAKhB,OACE,sBAAKZ,UAAW6B,EAAQ+C,OAAxB,UACE,qBAAK5E,UAAW6B,EAAQkD,WAAxB,SACE,cAAC,KAAD,MAEF,cAACO,GAAA,EAAD,CACEC,YAAY,SACZ1D,QAAS,CACP2D,KAAM3D,EAAQqD,UACdO,MAAO5D,EAAQsD,YAEjB/jB,MAAOA,EACPgY,WAAY,CAAE,aAAc,UAC5B/X,SAjBe,SAACC,GACpBD,EAASC,EAAMoB,OAAOtB,cCzBpB6Y,GAAShb,YAAOib,MAAV,0EAAGjb,CAAkBE,KAE3B8jB,GAAuBhkB,YAAOikB,MAAV,wFAAGjkB,CAAH,6DAMpBkkB,GAAiBlkB,YAAOmkB,MAAV,kFAAGnkB,CAAH,qDAIdokB,GAAqBpkB,YAAOqkB,MAAV,sFAAGrkB,CAAH,qBAGlBymB,GAAsBzmB,YAAOyd,MAAV,uFAAGzd,CAAH,kBAGnBskB,GAAYtkB,IAAOwH,IAAV,6EAAGxH,CAAH,kEAoEA0mB,GA7DK,SAAC9lB,GACnB,IAD6B,EAEH6D,mBADb,IADgB,mBAEtB+f,EAFsB,KAEfC,EAFe,OAGDhgB,mBAAS,IAHR,mBAGtBkhB,EAHsB,KAGdgB,EAHc,KAIrBC,EAAwChmB,EAAxCgmB,OAAQrK,EAAgC3b,EAAhC2b,SAAU1C,EAAsBjZ,EAAtBiZ,KAAMgN,EAAgBjmB,EAAhBimB,YAM1BC,EAAiBF,EAAO/a,QAC5B,SAACC,GAAD,OACEA,EAAKgB,KAAK5G,cAAcC,SAASwf,EAAOzf,gBACxC4F,EAAKib,YAAY7gB,cAAcC,SAASwf,EAAOzf,kBAGnD,OACE,eAACuW,GAAA,EAAD,CAAQ9C,kBAAgB,cAAcE,KAAMA,EAAM6C,QAASH,EAA3D,UACE,cAACM,GAAA,EAAD,CAAavZ,GAAG,cAAhB,0BACA,eAACmjB,GAAD,CAAqB/I,UAAQ,EAA7B,UACE,cAAC7b,EAAA,EAAD,CAAKsa,GAAI,EAAT,SACE,cAAC,GAAD,CAAWha,MAAOwjB,EAAQvjB,SAAU,SAACD,GAAD,OAAWwkB,EAAUxkB,QAE3D,cAACN,EAAA,EAAD,CAAKyB,GAAG,uBAAuB0jB,SAAS,OAAO1hB,OAAO,OAAtD,SACE,cAAC,GAAD,CACEsf,WAAYJ,EACZK,KApBW,WACnBJ,EAASD,EANE,KA0BHM,QAASN,EAAQsC,EAAe3jB,OAChC4hB,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,uBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG2B,EAAe1B,MAAM,EAAGZ,GAAOrY,KAAI,SAACqH,GAAD,OAClC,eAAC,GAAD,CAEE2R,KAAM,EACNliB,QAAS,kBAAM4jB,EAAYrT,IAH7B,UAKE,cAAC,GAAD,CACEzP,IAAG,UAAKmG,IAAOC,UAAZ,YAAyBqJ,EAAMyT,eAClC3B,IAAK9R,EAAM1G,OAEb,cAAC0Y,GAAA,EAAD,CACEziB,MAAOyQ,EAAM1G,KACb4Y,SAAUlS,EAAMuT,gBAVbvT,EAAMlQ,gBAkBvB,cAACqa,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,UAAjC,0B,sBC1EFsb,GAAShb,YAAOib,MAAV,wEAAGjb,CAAkBE,KAC3BH,GAAaC,YAAOC,KAAV,4EAAGD,CAAsBE,KAEnC8jB,GAAuBhkB,YAAOikB,MAAV,sFAAGjkB,CAAH,6DAMpBkkB,GAAiBlkB,YAAOmkB,MAAV,gFAAGnkB,CAAH,qDAIdokB,GAAqBpkB,YAAOqkB,MAAV,oFAAGrkB,CAAH,qBAGlBymB,GAAsBzmB,YAAOyd,MAAV,qFAAGzd,CAAH,kBAGnBskB,GAAYtkB,IAAOwH,IAAV,2EAAGxH,CAAH,kEAOTknB,GAAa5nB,YAAW,CAC5B6nB,UAAW,CACTrlB,QAAS,OACTC,eAAgB,SAChBtC,gBAAiB,cACjB,WAAY,CACVmd,SAAU,GACV3a,MAAO,OACPxC,gBAAiB,aARJH,EAWhB,SAACsB,GAAD,OAAW,cAACwmB,GAAA,EAAD,2BAAUxmB,GAAV,IAAiBymB,kBAAmB,CAAErN,SAAU,gCAExDsN,GAAYhoB,aAAW,SAACC,GAAD,MAAY,CACvCgnB,KAAM,CACJgB,cAAe,OACf7nB,MAAO,OACP8nB,WAAYjoB,EAAMkoB,WAAWC,kBAC7B9nB,SAAU,OACV+nB,YAAa,EACb5B,QAAS,UACT6B,SAAU,GACV,UAAW,CACTrd,QAAS,OAVGjL,EAad,SAACsB,GAAD,OAAW,cAACinB,GAAA,EAAD,aAAKC,eAAa,GAAKlnB,OAEhCmnB,GAAW,SAACnnB,GAAW,IACnBoZ,EAAqCpZ,EAArCoZ,SAAU7X,EAA2BvB,EAA3BuB,MAAOmP,EAAoB1Q,EAApB0Q,MAAU0W,EADT,YACmBpnB,EADnB,8BAG1B,OACE,6CACEqnB,KAAK,WACLC,OAAQ/lB,IAAUmP,EAClBhO,GAAE,wBAAmBgO,GACrBqI,kBAAA,mBAA6BrI,IACzB0W,GALN,aAOG7lB,IAAUmP,GAAS,mCAAG0I,QAK7B,SAASmO,GAAU7W,GACjB,MAAO,CACLhO,GAAG,YAAD,OAAcgO,GAChB,gBAAgB,iBAAhB,OAAkCA,IAItC,IAmHe8W,GAnHI,SAACxnB,GAClB,IAD4B,EAEM6D,mBADrB,IADe,mBAErB4jB,EAFqB,KAEVC,EAFU,OAGM7jB,mBAFrB,IADe,mBAGrB8jB,EAHqB,KAGVC,EAHU,OAII/jB,mBAAS,GAJb,mBAIrBgkB,EAJqB,KAIXC,EAJW,OAKAjkB,mBAAS,IALT,mBAKrBkhB,EALqB,KAKbgB,EALa,KAMpBgC,EAAsC/nB,EAAtC+nB,MAAOpM,EAA+B3b,EAA/B2b,SAAU1C,EAAqBjZ,EAArBiZ,KAAM+O,EAAehoB,EAAfgoB,WAazBC,EAAgBF,EAAM9c,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAK5G,cAAcC,SAASwf,EAAOzf,gBAC1B,SAAd4F,EAAK8D,QAEHkZ,EAAgBH,EAAM9c,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAK5G,cAAcC,SAASwf,EAAOzf,gBAC1B,SAAd4F,EAAK8D,QAGT,OACE,eAAC6M,GAAA,EAAD,CAAQ9C,kBAAgB,aAAaE,KAAMA,EAAM6C,QAASH,EAA1D,UACE,cAACM,GAAA,EAAD,CAAavZ,GAAG,aAAhB,SACE,eAACzB,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,MAAMC,WAAW,SAAnD,UACE,cAAC,GAAD,CAAYpU,QAAQ,KAAKW,GAAI,EAA7B,qBAGA,eAAC6jB,GAAD,CACE/kB,MAAOsmB,EACPrmB,SAzBc,SAACC,EAAO0mB,GAC9BL,EAAYK,GACZpC,EAAU,KAwBFpkB,aAAW,WAHb,UAKE,cAAC+kB,GAAD,aAAWjO,MAAM,QAAW8O,GAAU,KACtC,cAACb,GAAD,aAAWjO,MAAM,QAAW8O,GAAU,aAI5C,eAAC,GAAD,CAAqBzK,UAAQ,EAA7B,UACE,cAAC7b,EAAA,EAAD,CAAKsa,GAAI,EAAT,SACE,cAAC,GAAD,CAAWha,MAAOwjB,EAAQvjB,SAAU,SAACD,GAAD,OAAWwkB,EAAUxkB,QAE3D,cAAC,GAAD,CAAUA,MAAOsmB,EAAUnX,MAAO,EAAlC,SACE,cAACzP,EAAA,EAAD,CAAKyB,GAAG,sBAAsB0jB,SAAS,OAAO1hB,OAAO,OAArD,SACE,cAAC,GAAD,CACEsf,WAAYyD,EACZxD,KA/Ca,WACvByD,EAAaD,EARF,KAuDDvD,QAASuD,EAAYQ,EAAc1lB,OACnC4hB,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG0D,EAAczD,MAAM,EAAGiD,GAAWlc,KAAI,SAAC6c,GAAD,OACrC,eAAC,GAAD,CAEE7D,KAAM,EACNliB,QAAS,kBAAM2lB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEjlB,IAAG,UAAKmG,IAAOC,UAAZ,YAAyB6e,EAAKC,cACjC3D,IAAK0D,EAAKlc,OAEZ,cAAC0Y,GAAA,EAAD,CAAiBziB,MAAOimB,EAAKlc,SARxBkc,EAAK1lB,eAetB,cAAC,GAAD,CAAUnB,MAAOsmB,EAAUnX,MAAO,EAAlC,SACE,cAACzP,EAAA,EAAD,CAAKyB,GAAG,sBAAsB0jB,SAAS,OAAO1hB,OAAO,OAArD,SACE,cAAC,GAAD,CACEsf,WAAY2D,EACZ1D,KAvEa,WACvB2D,EAAaD,EAXF,KAkFDzD,QAASyD,EAAYO,EAAc3lB,OACnC4hB,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG2D,EAAc1D,MAAM,EAAGmD,GAAWpc,KAAI,SAAC6c,GAAD,OACrC,eAAC,GAAD,CAEE7D,KAAM,EACNliB,QAAS,kBAAM2lB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEjlB,IAAG,UAAKmG,IAAOC,UAAZ,YAAyB6e,EAAKC,cACjC3D,IAAK0D,EAAKlc,OAEZ,cAAC0Y,GAAA,EAAD,CAAiBziB,MAAOimB,EAAKlc,SARxBkc,EAAK1lB,kBAgBxB,cAACqa,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,UAAjC,0BCnMFsb,GAAShb,YAAOib,MAAV,4EAAGjb,CAAkBE,KA4BlBgpB,GA1BO,SAACtoB,GAAW,IACxBsO,EAAoCtO,EAApCsO,KAAM2K,EAA8BjZ,EAA9BiZ,KAAM0C,EAAwB3b,EAAxB2b,SAAU4M,EAAcvoB,EAAduoB,UAE9B,OACE,eAAC1M,GAAA,EAAD,CAAQ9C,kBAAgB,gBAAgBE,KAAMA,EAA9C,UACE,cAACgD,GAAA,EAAD,CAAavZ,GAAG,gBAAhB,qBACA,cAACma,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAAC3d,EAAA,EAAD,CAAY2C,QAAQ,QAApB,SAA6BwM,MAE/B,eAACyO,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,UAAjC,oBAGA,cAAC,GAAD,CACEuD,QAASkmB,EACTzpB,MAAM,UACNgD,QAAQ,WACR0mB,WAAS,EAJX,4BCfFpO,GAAShb,YAAOib,MAAV,sEAAGjb,CAAkBE,KAC3BmpB,GAAcrpB,YAAO6B,KAAV,2EAAG7B,CAAH,qBAyBFspB,GArBK,SAAC1oB,GAAW,IACtBsO,EAA4BtO,EAA5BsO,KAAM2K,EAAsBjZ,EAAtBiZ,KAAM0P,EAAgB3oB,EAAhB2oB,MAAOC,EAAS5oB,EAAT4oB,KAE3B,OACE,eAAC/M,GAAA,EAAD,CAAQ9C,kBAAgB,gBAAgBE,KAAMA,EAA9C,UACE,cAACgD,GAAA,EAAD,CAAavZ,GAAG,gBAAhB,qBACA,cAACma,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAAC2L,GAAD,UAAcna,MAEhB,eAACyO,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1a,QAASsmB,EAAO7pB,MAAM,YAAYgD,QAAQ,WAAW0mB,WAAS,EAAtE,iBAGA,cAAC,GAAD,CAAQnmB,QAASumB,EAAM9pB,MAAM,UAAUgD,QAAQ,WAA/C,uB,kDCEFsY,GAAShb,YAAOib,MAAV,uEAAGjb,CAAkBE,KAE3B8jB,GAAuBhkB,YAAOikB,MAAV,qFAAGjkB,CAAH,6DAMpBkkB,GAAiBlkB,YAAOmkB,MAAV,+EAAGnkB,CAAH,qDAIdokB,GAAqBpkB,YAAOqkB,MAAV,mFAAGrkB,CAAH,qBAGlBymB,GAAsBzmB,YAAOyd,MAAV,oFAAGzd,CAAH,kBAGnBskB,GAAYtkB,IAAOwH,IAAV,0EAAGxH,CAAH,kEAMTypB,GAAezpB,YAAOK,KAAV,6EAAGL,CAAH,iBA4KH0pB,GAxKM,SAAC9oB,GACpB,IACMI,EAAWC,cACX0oB,EAAOxoB,aAAY,SAACC,GAAD,OAAWA,EAAMwoB,YAAYD,QAChDvU,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAJnC,EAKcV,mBAAS,MALvB,mBAKvBolB,EALuB,KAKPC,EALO,OAMoBrlB,mBAAS,IAN7B,mBAMvBslB,EANuB,KAMJC,EANI,OAQJvlB,mBAPb,IADiB,mBAQvB+f,EARuB,KAQhBC,EARgB,OASJhgB,mBAAS,IATL,mBASvBwlB,EATuB,KAShBC,EATgB,OAUQzlB,mBAAS,GAVjB,mBAUvB0lB,EAVuB,KAUVC,EAVU,KAWtBC,EAA0CzpB,EAA1CypB,QAAS9N,EAAiC3b,EAAjC2b,SAAU1C,EAAuBjZ,EAAvBiZ,KAAMyQ,EAAiB1pB,EAAjB0pB,aAK3BC,EAAsB,SAACC,GAC3B,OAAOA,EAAUC,UACfD,EAAUE,YAAY,YAAc,WAAWvnB,OAC/CqnB,EAAUE,YAAY,OAkBpBC,EAAyB,uCAAG,4BAAA5kB,EAAA,6DAChCc,QAAQC,IAAI,aAAc+iB,GADM,kBAGVe,KAAcC,wBAChChB,EAAevmB,IAJa,QAG1BwnB,EAH0B,QAMlB3nB,OACV6mB,EAAqBc,IAErB9pB,EAAS+pB,aAAalB,GAAgB,IACtCC,EAAkB,OAVU,gDAa9B9oB,EAASgqB,aAAW,CAAEC,QAAS,KAAIA,WACnCnB,EAAkB,MAdY,yDAAH,qDAkBzBoB,EAA4B,WAA2B,IAA1BC,IAAyB,yDACtDA,IACFnqB,EAASoqB,aAA2BvB,EAAevmB,KACnDtC,EAASwL,aAAgB,QAE3BxL,EAAS+pB,aAAalB,EAAgBsB,IACtCrB,EAAkB,MAClBE,EAAqB,KAGvB,OACE,eAACvN,GAAA,EAAD,CAAQ9C,kBAAgB,eAAeE,KAAMA,EAAM6C,QAASH,EAA5D,UACE,cAACM,GAAA,EAAD,CAAavZ,GAAG,eAAhB,wBACA,eAAC,GAAD,CAAqBoa,UAAQ,EAA7B,UACE,cAAC,KAAD,CACEtb,SAhDqB,SAACipB,GAC5BnB,EAASmB,GACTxkB,QAAQC,IAAIukB,IA+CNlpB,MAAO8nB,EACPqB,wBAAwB,EACxBC,eAAe,EACfC,SAAU,IACLrB,GAENF,EAAM9mB,OACL,cAACtB,EAAA,EAAD,CAAK4pB,GAAI,EAAGxpB,MAAM,OAAOH,QAAQ,OAAOC,eAAe,SAAvD,SACE,cAAC,GAAD,CACEW,QAAQ,YACRhD,MAAM,UACNuD,QAxDc,WACxB4D,QAAQC,IAAImjB,GACZjpB,EAAS0qB,aAAY/B,EAAKrmB,GAAI8R,EAAc9R,GAAI2mB,IAChDC,EAAS,IACTE,EAAeD,EAAc,IAiDrB,sCASF,6BAEF,cAACtoB,EAAA,EAAD,CAAKyB,GAAG,wBAAwB0jB,SAAS,OAAO1hB,OAAO,OAAOmmB,GAAI,EAAlE,SACE,cAAC,GAAD,CACE7G,WAAYJ,EACZK,KAhFW,WACnBJ,EAASD,EAbE,KA6FHM,QAASN,EAAQ6F,EAAQlnB,OACzB4hB,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,wBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGkF,EAAQjF,MAAM,EAAGZ,GAAOrY,KAAI,SAACwf,GAAD,OAC3B,eAAC,GAAD,CAEExG,KAAM,EACNliB,QAAS,kBAAMqnB,EAAaqB,IAH9B,UAKE,cAAC,GAAD,CACE5nB,IAAG,UAAKmG,IAAOC,UAAZ,YAAyBwhB,EAAWnB,WACvClF,IAAKiF,EAAoBoB,EAAWnB,aAEtC,cAAChF,GAAA,EAAD,CACEziB,MAAOwnB,EAAoBoB,EAAWnB,WACtCoB,WACE,cAACnC,GAAD,CACExmB,QAAS,SAACZ,GAAD,OAjFC,SAACA,EAAOspB,GACtCtpB,EAAM+e,kBACN/e,EAAMgf,YAAYC,2BAClBwI,EAAkB6B,GA+EIE,CAAwBxpB,EAAOspB,IAFnC,SAKE,cAACG,GAAA,EAAD,UAhBDH,EAAWroB,gBA0B5B,cAACqa,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,UAAjC,sBAIF,cAAC,GAAD,CACEwP,KACE2a,EAAc,kCACiBU,EACzBV,EAAeW,WAFP,MAIV,GAEN3Q,OAAQgQ,EACRtN,SAAU,kBAAMuN,EAAkB,OAClCX,UAAWwB,IAEb,cAAC,GAAD,CACEzb,KACE6a,EAAkB5mB,OAChB,oFAEE,6BACG4mB,EAAkB5d,KAAI,SAACL,EAAMwF,GAAP,OACrB,6BAAiBxF,EAAKgB,MAAbwE,QAJf,wCAUA,GAGJuI,OAAQkQ,EAAkB5mB,OAC1BomB,MAAO,kBAAM2B,GAA0B,IACvC1B,KAAM,kBAAM0B,GAA0B,U,iCCvNxCa,GAAS/rB,YAAOgsB,MAAV,wEAAGhsB,CAAkBE,KAE3B+rB,GAAejsB,YAAO+rB,IAAV,8EAAG/rB,CAAH,yEAOZksB,GAAYlsB,IAAOwH,IAAV,2EAAGxH,CAAH,mCAyCAmsB,GApCI,SAACvrB,GAAW,IACrB0U,EAA8B1U,EAA9B0U,SAAUnT,EAAoBvB,EAApBuB,MAAOC,EAAaxB,EAAbwB,SAEzB,OACE,cAAC6pB,GAAD,CACEG,QAAQ,oBACR9oB,GAAG,uBACHnB,MAAOA,EACPC,SAAUA,EACViX,MAAM,OACN8C,GAAI,EACJkQ,YAAa,SAAC/oB,GACZ,IAAM0L,EAAOsG,EAASrG,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,KAAOA,KACjD,OAAK0L,EAIH,cAACkd,GAAD,CACEnoB,IAAG,UAAKmG,IAAOC,UAAZ,YAAyB6E,EAAKsd,cACjChH,IAAKtW,EAAKG,YALL,oDAVb,SAoBGmG,EAASnJ,KAAI,SAAC6C,GAAD,OACZ,cAACud,GAAA,EAAD,CAAUpqB,MAAO6M,EAAK1L,GAAtB,SACE,cAAC4oB,GAAD,CACEnoB,IAAG,UAAKmG,IAAOC,UAAZ,YAAyB6E,EAAKsd,cACjChH,IAAKtW,EAAKG,aAHiBH,EAAK1L,UCnBtC0X,GAAShb,YAAOib,MAAV,yEAAGjb,CAAkBE,KAC3Bma,GAAYra,YAAOwsB,MAAV,4EAAGxsB,CAAqBE,KACjCH,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnCusB,GAAmBzsB,YAAOqa,IAAV,mFAAGra,CAAH,uCAKhB0sB,GAAqB1sB,YAAO6B,KAAV,qFAAG7B,CAAH,qCAIlB2sB,GAAc3sB,YAAO6B,KAAV,8EAAG7B,CAAH,uIACN,SAACY,GAAD,OAAWA,EAAMlB,SACG,SAACkB,GAAD,OAAWA,EAAMoK,UACjB,SAACpK,GAAD,OAAWA,EAAM2O,UACjC,SAAC3O,GAAD,OAAWA,EAAMyO,QACf,SAACzO,GAAD,OAAWA,EAAMoO,QACZ,SAACpO,GAAD,OAAWA,EAAMgsB,UAGjCC,GAAY,SAACjsB,GAAW,IAE1B0U,EAOE1U,EAPF0U,SACAiG,EAME3a,EANF2a,OACAE,EAKE7a,EALF6a,WACAC,EAIE9a,EAJF8a,aACAF,EAGE5a,EAHF4a,cACAG,EAEE/a,EAFF+a,QACApO,EACE3M,EADF2M,OAEIvM,EAAWC,cACX0M,EAAiBxM,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAY3H,cAyBhE,OATArI,qBAAU,WACR,IAfgBkI,EAAYC,EAexBsB,EAAOsG,EAASnS,OAChBmS,EAASrG,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,KAAOiK,EAAOyB,QAC3C,KACAA,IAASrB,EAAexH,SAAS6I,EAAKG,aAlB1B1B,EAmBLuB,EAAKG,UAnBYzB,EAmBlB,cAAwBxD,IAAOC,UAA/B,YAA4C6E,EAAKI,UAAjD,KAlBO,IAAIlB,SAAST,EAAYC,GAEvCS,OACAC,MAAK,SAAUC,GACdhI,SAASiI,MAAMC,IAAIF,GACnBrN,EAAS4X,aAAuBnL,OAEjCe,OAAM,SAAUC,GAEf5H,QAAQ6H,KAAKD,EAAOhB,SAWvB,CAACF,EAAOyB,OAGT,qCACE,cAACyd,GAAD,CACE3f,KAAK,OACLuM,MAAM,OACNiN,YAAY,kBACZ5jB,QAAQ,WACRP,MAAOoL,EAAO2B,KACdT,MAAO4N,QAAQV,EAAQzM,MAAQqM,EAAOrM,MACtCsL,WAAYmB,EAAQzM,MAAQqM,EAAOrM,KACnCgL,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAGZ,eAACC,GAAA,EAAD,CAAatqB,QAAQ,WAArB,UACE,cAACuqB,GAAA,EAAD,CAAY3pB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEnB,MAAOoL,EAAOyB,KACd5M,SAAU,SAACuG,GAAD,OAAO6S,EAAc,OAAQ7S,EAAElF,OAAOtB,QAChDmT,SAAUA,OAGd,eAAC6D,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,YACNjD,IAAK,EACL/Q,IAAK,GACLlD,MAAOoL,EAAO8B,KACdiK,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,OAAQrZ,QAG/C,cAACgX,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,eAACva,EAAA,EAAD,CACEC,QAAQ,OACR+U,cAAc,MACdC,WAAW,SACX/U,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYW,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,wBAGA,cAAC,GAAD,CACElB,MAAOoL,EAAO7N,MACd0C,SAAU,SAAC1C,GAAD,OAAW8b,EAAc,QAAS9b,IAC5C6a,cAAe,SAAC7a,GAAD,OAAW8b,EAAc,QAAS9b,IACjD+O,MAAO4N,QAAQd,EAAO7b,OACtB8a,WAAYe,EAAO7b,gBAM3B,eAACyZ,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,eACNjD,IAAK,EACL/Q,IAAK,GACLlD,MAAOoL,EAAOvC,OACdsO,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,SAAUrZ,QAGjD,cAACgX,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,eAACva,EAAA,EAAD,CACEC,QAAQ,OACR+U,cAAc,MACdC,WAAW,SACX/U,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYW,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,0BAGA,cAAC,GAAD,CACElB,MAAOoL,EAAOgC,OACdnN,SAAU,SAAC1C,GAAD,OAAW8b,EAAc,SAAU9b,IAC7C6a,cAAe,SAAC7a,GAAD,OAAW8b,EAAc,SAAU9b,IAClD+O,MAAO4N,QAAQd,EAAOhM,QACtBiL,WAAYe,EAAOhM,iBAM3B,cAAC4J,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,SACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,GAAI2C,GAAI,EAAvB,SACE,cAAC,GAAD,CACE/C,MAAM,WACNjD,KAAM,IACN/Q,IAAK,IACLlD,MAAOoL,EAAOrE,SACdoQ,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,WAAYrZ,UAIrD,cAACuqB,GAAD,CACEzqB,MAAM,OACNqD,OAAO,QACPma,GAAI,EACJ3d,QAAQ,OACRC,eAAe,SACf+U,WAAW,SANb,SAQE,cAAC6V,GAAD,CACEjtB,MAAO6N,EAAO7N,MACdsL,OAAQuC,EAAOvC,OACfuE,OAAQhC,EAAOgC,OACfF,KAAM9B,EAAO8B,KACbud,OAAQrf,EAAOrE,SACf8F,KAAMsG,EAASrG,MAAK,SAACnD,GAAD,OAAUA,EAAKxI,KAAOiK,EAAOyB,QAAMG,UANzD,SAQG5B,EAAO2B,aA+DHge,GAxDI,SAACtsB,GAAW,IACrB0U,EAAuC1U,EAAvC0U,SAAUiH,EAA6B3b,EAA7B2b,SAAU1C,EAAmBjZ,EAAnBiZ,KAAMsT,EAAavsB,EAAbusB,SAElC,OACE,eAAC1Q,GAAA,EAAD,CAAQ9C,kBAAgB,oBAAoBE,KAAMA,EAAM6C,QAASH,EAAjE,UACE,cAACM,GAAA,EAAD,CAAavZ,GAAG,oBAAhB,yBACA,cAAC,KAAD,CACEwZ,cAAe,CACb5N,KAAM,GACNF,KAAM,EACNK,KAAM,GACN3P,MAAO,UACPsL,OAAQ,EACRuE,OAAQ,UACRrG,SAAU,GAEZ6T,iBAAkBC,OAAaxJ,MAAM,CACnCtE,KAAM8N,OAAaoQ,SAAS,YAC5B1tB,MAAOsd,OACJC,WACAC,KAAK,mBAAoB,yBAA0BC,KACtD5N,OAAQyN,OACLC,WACAC,KAAK,mBAAoB,yBAA0BC,OAExDC,SAAU,SAAC7P,GAET,OADA1G,QAAQC,IAAIyG,GACL,IAET8P,SAAU8P,EAvBZ,SAyBG,SAAC7P,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAA1B,UACE,cAACE,GAAA,EAAD,CAAeC,UAAQ,EAACpa,GAAG,6BAA3B,SACE,cAAC,GAAD,2BAAega,GAAf,IAA0BhI,SAAUA,OAEtC,eAACqI,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1a,QAASsZ,EAAU7c,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEkQ,KAAK,SACLlQ,MAAM,UACNgD,QAAQ,WACRM,SAAUsa,EAAUM,aAJtB,iCCxMRyP,GAAUrtB,YAAOstB,MAAV,yEAAGttB,CAAmBE,KAC7BK,GAAUP,YAAO6B,KAAV,yEAAG7B,CAAH,iDAIPutB,GAAcvtB,YAAO6B,KAAV,6EAAG7B,CAAH,wDAKXwtB,GAAaxtB,YAAOusB,MAAV,4EAAGvsB,CAAH,gFAIM,SAACY,GAAD,MACD,SAAjBA,EAAMqf,OAAoB,4BAA8B,UAGtDwN,GAAwBztB,YAAOif,MAAV,uFAAGjf,CAAH,oBACZ,SAACY,GAAD,MACS,SAApBA,EAAM8sB,UAAuB,0BAA4B,UAGvDC,GAAQ,CACZ,CACExrB,MAAOkL,IAAWC,QAClB+L,MAAO,eACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMgO,QAErC,CACEzrB,MAAOkL,IAAW4E,QAClBoH,MAAO,eACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMiO,QAErC,CACE1rB,MAAOkL,IAAW0E,KAClBsH,MAAO,YACPuG,KAAM,cAAC,KAAD,KAER,CACEzd,MAAOkL,IAAW2E,IAClBqH,MAAO,aACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMkO,QAErC,CACE3rB,MAAOkL,IAAWkE,KAClB8H,MAAO,iBACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMmO,QAErC,CACE5rB,MAAOkL,IAAWmE,OAClB6H,MAAO,cACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMoO,QAErC,CACE7rB,MAAOkL,IAAWyD,QAClBuI,MAAO,eACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMoO,KAAUN,UAAU,UAEzD,CACEvrB,MAAOkL,IAAWoE,KAClB4H,MAAO,YACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMqO,QAErC,CACE9rB,MAAOkL,IAAWqE,KAClB2H,MAAO,YACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMsO,QAErC,CACE/rB,MAAOkL,IAAWsE,eAClB0H,MAAO,uBACPuG,KAAM,cAAC,KAAD,CAAavQ,KAAM,MAE3B,CACElN,MAAOkL,IAAWwE,MAClBwH,MAAO,aACPuG,KAAM,cAAC,KAAD,CAAWhgB,SAAS,WAE5B,CACEuC,MAAOkL,IAAWyE,IAClBuH,MAAO,WACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMuO,QAErC,CACEhsB,MAAOkL,IAAW8E,MAClBkH,MAAO,aACPuG,KAAM,cAAC,KAAD,CAAWhgB,SAAS,YAIxBwuB,GAAe,CACnB,CACEjsB,MAAO+c,IAAYpQ,OACnBuK,MAAO,iCACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAMyO,QAErC,CACElsB,MAAO+c,IAAYrQ,KACnBwK,MAAO,cACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAM0O,QAErC,CACEnsB,MAAO+c,IAAYnQ,KACnBsK,MAAO,cACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAM2O,QAErC,CACEpsB,MAAO+c,IAAYvO,MACnB0I,MAAO,iBACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAM4O,QAErC,CACErsB,MAAO+c,IAAYuP,UACnBpV,MAAO,mBACPuG,KAAM,cAAC6N,GAAD,CAAuB7N,KAAM8O,SAuHxBC,GAnHG,SAAC,GAAuC,IAArCrP,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWqP,EAAiB,EAAjBA,WAChC5tB,EAAWC,cACXwL,EAAYtL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoL,aACtD2I,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAC3D0pB,EAAc1tB,aAAY,SAACC,GAAD,OAAWA,EAAM0tB,eAAetZ,QAC1DuZ,EAAW5tB,aAAY,SAACC,GAAD,OAAWA,EAAM4tB,YAAYxZ,QACpDyZ,EAAa9tB,aAAY,SAACC,GAAD,OAAWA,EAAM8tB,cAAc1Z,QACxDF,EAAWnU,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAYC,QACpDrR,EAAYhD,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa8C,aACtDugB,EAAavjB,aAAY,SAACC,GAAD,OAAWA,EAAM+tB,iBAAiB3Z,QAmCjE,OACE,eAAC,GAAD,WACE,eAAC+X,GAAD,WACGI,GAAMxhB,KAAI,SAACijB,GAAD,OACT,cAAC,EAAD,CAEErsB,MAAOqsB,EAAK/V,MACZxZ,OAAK,EACLka,UAAU,QAJZ,SAME,cAACyT,GAAD,CACErrB,MAAOitB,EAAKjtB,MACZc,QAAS,kBA7CKd,EA6CkBitB,EAAKjtB,MA5C/CnB,EAASgV,YAAa7T,SAClBA,IAAUkL,IAAWC,SACvBtM,EAASwL,aAAgB,QAHJ,IAACrK,GA8Cd8d,OAAQmP,EAAKjtB,QAAUsK,EAAY,OAAS,QAH9C,SAKG2iB,EAAKxP,QAVHwP,EAAKjtB,UAcd,cAAC,GAAD,CAASsd,GAAI,IACZ2O,GAAajiB,KAAI,SAACL,GAAD,OAChB,cAAC,EAAD,CAEE/I,MAAO+I,EAAKuN,MACZxZ,OAAK,EACLka,UAAU,QAJZ,SAME,cAACyT,GAAD,CACErrB,MAAO2J,EAAK3J,MACZc,QAAS,kBAAMsc,EAAUzT,EAAK3J,QAFhC,SAIG2J,EAAK8T,QATH9T,EAAK3J,aAehB,cAAC,GAAD,CACE0X,KAAMyF,IAAWJ,IAAYuP,UAC7B/J,WAAYA,EACZC,WAlEiB,SAAC0K,GACtBruB,EAASsuB,aAA0Bla,EAAc9R,GAAI+rB,IACrD9P,EAAU,MACVqP,KAgEIrS,SAAU,kBAAMgD,EAAU,SAE5B,cAAC,GAAD,CACE1F,KAAMyF,IAAWJ,IAAYvO,MAC7BiW,OAAQiI,EACRhI,YAnEkB,SAACrT,GACvBxS,EAASuuB,aAAqBna,EAAc9R,GAAIkQ,EAAOrP,IACvDob,EAAU,MACVqP,KAiEIrS,SAAU,kBAAMgD,EAAU,SAE5B,cAAC,GAAD,CACE1F,KAAMyF,IAAWJ,IAAYrQ,KAC7B8Z,MAAOoG,EACPnG,WApEiB,SAACI,GACtBhoB,EAASwuB,aAAoBpa,EAAc9R,GAAI0lB,EAAM7kB,IACrDob,EAAU,MACVqP,KAkEIrS,SAAU,kBAAMgD,EAAU,SAE5B,cAAC,GAAD,CACE1F,KAAMyF,IAAWJ,IAAYpQ,OAC7Bub,QAAS4E,EACT3E,aArEmB,SAACmF,GACxBzuB,EAAS0uB,aAAsBta,EAAc9R,GAAImsB,EAAQtrB,IACzDob,EAAU,MACVqP,KAmEIrS,SAAU,kBAAMgD,EAAU,SAE5B,cAAC,GAAD,CACE1F,KAAMyF,IAAWJ,IAAYnQ,KAC7BuG,SAAUA,EACV6X,SAtEmB,SAAC5f,GACxBvM,EAAS2uB,aAAgBva,EAAc9R,GAAIiK,EAAQpJ,IACnDob,EAAU,MACVqP,KAoEIrS,SAAU,kBAAMgD,EAAU,aCtQ5BqQ,GAAe5vB,YAAO6B,KAAV,4EAAG7B,CAAH,mDAKZ6vB,GAAe7vB,YAAO6B,KAAV,4EAAG7B,CAAH,yBAGZO,GAAUP,YAAO6B,KAAV,uEAAG7B,CAAH,iDAIP8vB,GAAmB9vB,YAAOgb,MAAV,gFAAGhb,CAAH,2BAwHP+vB,GApHC,SAACnvB,GAAW,IAClB0e,EAAkC1e,EAAlC0e,OAAQC,EAA0B3e,EAA1B2e,UAAWqP,EAAehuB,EAAfguB,WAErB5tB,EAAWC,cAEXmU,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAC3DsQ,EAAYtU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAaF,QACtD7L,EAAiBxI,aAAY,SAACC,GAAD,OAAWA,EAAM+T,eAAehQ,WAE7D6qB,EAAYpd,mBAChB,iBAC+B,gBAA7BwC,EAAcsD,WACVtD,EAAcsD,WACd,IAAMtD,EAAcsD,aAC1B,CAACtD,EAAcsD,aAdQ,EAiBWjU,mBAASurB,GAjBpB,mBAiBlBC,EAjBkB,KAiBNC,EAjBM,OAkBWzrB,oBAAS,GAlBpB,mBAkBlB0rB,EAlBkB,KAkBNC,EAlBM,KAoBzB7qB,qBAAU,WACR2qB,EAAcF,KACb,CAACA,IAiBJ,OACE,eAACnuB,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAlC,UACE,cAACgZ,GAAD,CAAcrQ,GAAI,EAAlB,SACE,cAAC,GAAD,MAEF,eAAC,GAAD,CAAS1d,QAAQ,OAAjB,UACE,cAAC,GAAD,CACEwd,OAAQA,EACRC,UAAWA,EACXqP,WAAYA,IAEd,eAACgB,GAAD,CAAcS,GAAI,EAAGC,GAAI,EAAzB,UACE,cAAC,GAAD,CACEvtB,MAAO4G,EAAiBA,EAAemD,KAAO,GAC9C2I,UAAWA,EAAU5J,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OAE3CqU,aAAa,EACbwC,YAAY,IAEd,cAAC,GAAD,CACE/f,MAAM,eACN0S,UAAWA,EAAU5J,QACnB,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAW6C,MAC/B/C,EAAKC,aAAeC,IAAW+C,MAC/BjD,EAAKC,aAAeC,IAAW8C,YAGrC,cAAC,GAAD,CACE/L,MAAM,SACN0S,UAAWA,EAAU5J,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAW2E,WAG7C,cAAC,GAAD,CACE5N,MAAM,WACN0S,UAAWA,EAAU5J,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWW,aAG7C,cAAC,GAAD,CACE5J,MAAM,aACN0S,UAAWA,EAAU5J,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWM,QAE3CgU,aAAa,EACb1E,cACE,eAAC/Z,EAAA,EAAD,CACEC,QAAQ,OACRgV,WAAW,SACX/U,eAAe,gBAHjB,UAKE,cAAC,GAAD,CACEI,MAAO8tB,EACP7tB,SAtEmB,SAAC1C,GAClCsB,EAASuvB,aAAgBnb,EAAc9R,GAAI5D,IAC3CwwB,EAAcxwB,GACd0wB,GAAc,IAoEA7V,cAlEwB,SAAC7a,GACvCwwB,EAAcxwB,GACW0wB,EAArB1wB,IAAUswB,MAkEDG,EACC,cAACL,GAAD,CACE7sB,QAjEgB,WAChCjC,EAASuvB,aAAgBnb,EAAc9R,GAAI2sB,IAC3CG,GAAc,IAgEE1tB,QAAQ,WAFV,mBAOA,4CCjHZ+pB,GAAmBzsB,YAAOqa,MAAV,uFAAGra,CAAH,uCAmMPwwB,GA7LS,SAAC5vB,GAAW,IAEhC2a,EAOE3a,EAPF2a,OACAE,EAME7a,EANF6a,WACAC,EAKE9a,EALF8a,aACAF,EAIE5a,EAJF4a,cACAG,EAGE/a,EAHF+a,QACApO,EAEE3M,EAFF2M,OACA0V,EACEriB,EADFqiB,YAR+B,EAWDxe,oBAAS,GAXR,mBAW1BoX,EAX0B,KAWhBC,EAXgB,KAY3BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAMH,MAJ+B,OAA3BkjB,KAAKC,UAAUnV,IACjB1U,QAAQC,IAAIyU,GAIX9K,EAAkBtK,SAAS,oBAC3BsK,EAAkBtK,SAAS,oBAC3BsK,EAAkBtK,SAAS,yBAC3BsK,EAAkBtK,SAAS,oBAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,wBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,mBAC1B,cAAC,GAAD,CACE2G,KAAK,kBACLuM,MAAM,OACN3W,QAAQ,WACRP,MAAOoL,EAAOlJ,WAAWyI,KACzB2B,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWyI,MACnByO,EAAOlX,YACPkX,EAAOlX,WAAWyI,MAEtB0N,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWyI,MACnByO,EAAOlX,YACPkX,EAAOlX,WAAWyI,KAEpBoN,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,mBAC1B,cAAC,GAAD,CACE2G,KAAK,kBACLuM,MAAM,OACN3W,QAAQ,WACRP,MAAOoL,EAAOlJ,WAAW6K,KACzBT,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW6K,MACnBqM,EAAOlX,YACPkX,EAAOlX,WAAW6K,MAEtBsL,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW6K,MACnBqM,EAAOlX,YACPkX,EAAOlX,WAAW6K,KAEpBgL,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,wBAC1B,cAAC,GAAD,CACE2G,KAAK,uBACLuM,MAAM,mBACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiD,KAAKyF,MAAM0C,EAAOlJ,WAAWgM,WACpC5B,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWgM,WACnBkL,EAAOlX,YACPkX,EAAOlX,WAAWgM,WAEtBmK,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWgM,WACnBkL,EAAOlX,YACPkX,EAAOlX,WAAWgM,UAEpB6J,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,oBAC1B,cAAC,GAAD,CACEkT,MAAM,QACNjD,IAAK,EACL/Q,IAAK,IACLlD,MAAOiD,KAAKyF,MAAM0C,EAAOlJ,WAAWiM,OACpCgJ,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,mBAAoBrZ,MAGzD,6BAEDsO,EAAkBtK,SAAS,iBAC1B,eAACtE,EAAA,EAAD,CACEC,QAAQ,OACRgV,WAAW,SACXD,cAAc,MACd9U,eAAe,gBAJjB,UAME,cAAChC,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,wBAGA,cAAChD,EAAA,EAAD,CACE4C,QAAS,kBAAMggB,EAAY,kBAC3B5T,KAAK,QAFP,SAIG9B,EAAOrB,cACN,cAACqV,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,SAKN,6BAED/Q,EAAkBtK,SAAS,gBAC1B,eAACtE,EAAA,EAAD,CACEC,QAAQ,OACRgV,WAAW,SACXD,cAAc,MACd9U,eAAe,gBAJjB,UAME,cAAChC,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,qBAGA,cAAChD,EAAA,EAAD,CACE4C,QAAS,kBAAMggB,EAAY,iBAC3B5T,KAAK,QAFP,SAIG9B,EAAOH,aAAe,cAACqU,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,SAI1C,qCAxJD,8B,sBCrCL+K,GAAmBzsB,YAAOqa,MAAV,oFAAGra,CAAH,uCAKhB2wB,GAAmB3wB,YAAOK,KAAV,oFAAGL,CAAH,+BA0dP4wB,GArdM,SAAChwB,GAAW,IAE7B2a,EASE3a,EATF2a,OACAE,EAQE7a,EARF6a,WACAC,EAOE9a,EAPF8a,aACAF,EAME5a,EANF4a,cACAG,EAKE/a,EALF+a,QACApO,EAIE3M,EAJF2M,OACAsjB,EAGEjwB,EAHFiwB,qBACAlb,EAEE/U,EAFF+U,aACAlD,EACE7R,EADF6R,WAV4B,EAYEhO,oBAAS,GAZX,mBAYvBoX,EAZuB,KAYbC,EAZa,KAaxBrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAEGujB,EAAkC,UAAfre,EA0EzB,OACGhC,EAAkBtK,SAAS,qBAC3BsK,EAAkBtK,SAAS,sBAC3BsK,EAAkBtK,SAAS,sBAC3BsK,EAAkBtK,SAAS,sBAC3BsK,EAAkBtK,SAAS,sBAC3BsK,EAAkBtK,SAAS,2BAC3BsK,EAAkBtK,SAAS,2BAC3BsK,EAAkBtK,SAAS,6BAC3BsK,EAAkBtK,SAAS,2BAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,qBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACE,eAACJ,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfE,MAAM,OACN6U,WAAW,SAJb,UAMGrG,EAAkBtK,SAAS,oBAC1B,cAAC,GAAD,CACE2G,KAAK,mBACLuM,MACE9L,EAAOlJ,WAAWuL,OAASvC,IAAWyD,QAClC,QACA,UAENpO,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWpC,OACpCwM,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWpC,OACnBsZ,EAAOlX,YACPkX,EAAOlX,WAAWpC,OAEtBuY,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWpC,OACnBsZ,EAAOlX,YACPkX,EAAOlX,WAAWpC,MAEpBiY,OAAQuB,EACRrZ,SAzHY,SAACC,GACzB,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWwO,YACpB2I,EACE,oBACCrZ,EAAQwT,EAAatR,WAAWiB,OAAUqQ,EAAatR,WAAWpC,OAGvEuZ,EAAc,mBAAoBvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IAkHxDwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,qBAC5BsK,EAAkBtK,SAAS,qBACzB,cAACwqB,GAAD,CACE1tB,QAAS,kBAAM4tB,EAAqB,eADtC,SAGGtjB,EAAOlJ,WAAWwO,YAAcie,EAC/B,cAACC,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDvgB,EAAkBtK,SAAS,qBAC1B,cAAC,GAAD,CACE2G,KAAK,oBACLuM,MACE9L,EAAOlJ,WAAWuL,OAASvC,IAAWyD,QAClC,SACA,UAENpO,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWiB,QACpCmJ,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWiB,QACnBiW,EAAOlX,YACPkX,EAAOlX,WAAWiB,QAEtBkV,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWiB,QACnBiW,EAAOlX,YACPkX,EAAOlX,WAAWiB,OAEpB4U,OAAQuB,EACRrZ,SAhKa,SAACC,GAC1B,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWwO,YACpB2I,EACE,mBACCrZ,EAAQwT,EAAatR,WAAWpC,MAAS0T,EAAatR,WAAWiB,QAGtEkW,EAAc,oBAAqBvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IAyJzDwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAClrB,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfE,MAAM,OACN6U,WAAW,SAJb,UAMGrG,EAAkBtK,SAAS,qBAC1B,cAAC,GAAD,CACE2G,KAAK,oBACLuM,MAAM,SACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWyE,QACpC2F,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWyE,QACnByS,EAAOlX,YACPkX,EAAOlX,WAAWyE,QAEtB0R,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWyE,QACnByS,EAAOlX,YACPkX,EAAOlX,WAAWyE,OAEpBoR,OAAQuB,EACRrZ,SA5La,SAACC,GAC1B,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWyO,aACpB0I,EACE,oBACCrZ,EAAQwT,EAAatR,WAAW0E,OAC/B4M,EAAatR,WAAWyE,QAG9B0S,EAAc,oBAAqBvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IAoLzDwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,sBAC5BsK,EAAkBtK,SAAS,qBACzB,cAACwqB,GAAD,CACE1tB,QAAS,kBAAM4tB,EAAqB,gBADtC,SAGGtjB,EAAOlJ,WAAWyO,aAAege,EAChC,cAACC,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDvgB,EAAkBtK,SAAS,qBAC1B,cAAC,GAAD,CACE2G,KAAK,oBACLuM,MAAM,SACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW0E,QACpC0F,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW0E,QACnBwS,EAAOlX,YACPkX,EAAOlX,WAAW0E,QAEtByR,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW0E,QACnBwS,EAAOlX,YACPkX,EAAOlX,WAAW0E,OAEpBmR,OAAQuB,EACRrZ,SA9Na,SAACC,GAC1B,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWyO,aACpB0I,EACE,oBACCrZ,EAAQwT,EAAatR,WAAWyE,OAC/B6M,EAAatR,WAAW0E,QAG9ByS,EAAc,oBAAqBvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IAsNzDwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAClrB,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfE,MAAM,OACN6U,WAAW,SAJb,UAMGrG,EAAkBtK,SAAS,0BAC1B,cAAC,GAAD,CACE2G,KAAK,yBACLuM,MAAM,eACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW6L,aACpCzB,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW6L,aACnBqL,EAAOlX,YACPkX,EAAOlX,WAAW6L,aAEtBsK,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW6L,aACnBqL,EAAOlX,YACPkX,EAAOlX,WAAW6L,YAEpBgK,OAAQuB,EACRrZ,SAxPkB,SAACC,GAC/B,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWyO,aACpB0I,EACE,yBACCrZ,EAAQwT,EAAatR,WAAW8L,YAC/BwF,EAAatR,WAAW6L,aAG9BsL,EACE,yBACAvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IA8OxBwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,2BAC5BsK,EAAkBtK,SAAS,0BACzB,cAACwqB,GAAD,CACE1tB,QAAS,kBAAM4tB,EAAqB,gBADtC,SAGGtjB,EAAOlJ,WAAWyO,aAAege,EAChC,cAACC,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAEDvgB,EAAkBtK,SAAS,0BAC1B,cAAC,GAAD,CACE2G,KAAK,yBACLuM,MAAM,eACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW8L,aACpC1B,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW8L,aACnBoL,EAAOlX,YACPkX,EAAOlX,WAAW8L,aAEtBqK,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW8L,aACnBoL,EAAOlX,YACPkX,EAAOlX,WAAW8L,YAEpB+J,OAAQuB,EACRrZ,SAvRkB,SAACC,GAC/B,IAAIF,EAAQ8K,WAAW5K,EAAMoB,OAAOtB,QAAU,EAC1CoL,EAAOlJ,WAAWyO,aACpB0I,EACE,yBACCrZ,EAAQwT,EAAatR,WAAW6L,YAC/ByF,EAAatR,WAAW8L,aAG9BqL,EACE,yBACAvO,WAAW5K,EAAMoB,OAAOtB,QAAU,IA6QxBwa,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,gCAGHtc,EAAkBtK,SAAS,qBAC1B,cAAC,GAAD,CACE2G,KAAK,oBACLuM,MAAM,SACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWwL,QACpCpB,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWwL,QACnB0L,EAAOlX,YACPkX,EAAOlX,WAAWwL,QAEtB2K,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWwL,QACnB0L,EAAOlX,YACPkX,EAAOlX,WAAWwL,OAEpBqK,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,2BAC1B,cAAC,GAAD,CACE2G,KAAK,0BACLuM,MAAM,gBACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW4L,cACpCxB,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW4L,cACnBsL,EAAOlX,YACPkX,EAAOlX,WAAW4L,cAEtBuK,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW4L,cACnBsL,EAAOlX,YACPkX,EAAOlX,WAAW4L,aAEpBiK,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,4BAC1B,cAAC,GAAD,CACE2G,KAAK,2BACLuM,MAAM,iBACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW2L,eACpCvB,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW2L,eACnBuL,EAAOlX,YACPkX,EAAOlX,WAAW2L,eAEtBwK,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW2L,eACnBuL,EAAOlX,YACPkX,EAAOlX,WAAW2L,cAEpBkK,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,qCApWD,8BCxHLN,GAAmBzsB,YAAOqa,MAAV,yFAAGra,CAAH,uCAwGPixB,GAlGU,SAACrwB,GAAW,IAEjC2a,EAME3a,EANF2a,OACAE,EAKE7a,EALF6a,WACAC,EAIE9a,EAJF8a,aAEAC,GAEE/a,EAHF4a,cAGE5a,EAFF+a,SACApO,EACE3M,EADF2M,OAPgC,EASF9I,oBAAS,GATP,mBAS3BoX,EAT2B,KASjBC,EATiB,KAU5BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,oBAC3BsK,EAAkBtK,SAAS,kBAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,yBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,mBAC1B,cAAC,GAAD,CACE2G,KAAK,kBACLuM,MAAM,IACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW8C,MACpCsH,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW8C,MACnBoU,EAAOlX,YACPkX,EAAOlX,WAAW8C,MAEtBqT,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW8C,MACnBoU,EAAOlX,YACPkX,EAAOlX,WAAW8C,KAEpB+S,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,kBAC1B,cAAC,GAAD,CACE2G,KAAK,iBACLuM,MAAM,IACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWiD,KACpCmH,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWiD,KACnBiU,EAAOlX,YACPkX,EAAOlX,WAAWiD,KAEtBkT,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWiD,KACnBiU,EAAOlX,YACPkX,EAAOlX,WAAWiD,IAEpB4S,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,qCApED,8BCvBLC,GAAchtB,YAAOkxB,MAAV,+EAAGlxB,CAAuBE,KAkF5BixB,GAhFM,SAACvwB,GAAW,IAE7B2a,EAOE3a,EAPF2a,OAGAC,GAIE5a,EANF6a,WAME7a,EALF8a,aAKE9a,EAJF4a,eAEAjO,GAEE3M,EAHF+a,QAGE/a,EAFF2M,QACA+H,EACE1U,EADF0U,SAR4B,EAUE7Q,oBAAS,GAVX,mBAUvBoX,EAVuB,KAUbC,EAVa,KAWxBrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OAAKkD,EAAkBtK,SAAS,mBAE9B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,qBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,mBAC1B,eAAC,GAAD,CAAazD,QAAQ,WAAW+oB,GAAI,EAApC,UACE,cAACwB,GAAA,EAAD,CAAY3pB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEnB,MAAOoL,EAAOlJ,WAAW2K,KACzB5M,SAAU,SAACuG,GAAD,OACR6S,EAAc,kBAAmB7S,EAAElF,OAAOtB,QAE5CmT,SAAUA,OAId,6BAED7E,EAAkBtK,SAAS,oBAC1B,eAACgT,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC1Z,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,0BAIF,cAAC8V,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC,GAAD,CACEtX,MAAOoL,EAAOlJ,WAAW3E,MACzB0C,SAAU,SAAC1C,GAAD,OAAW8b,EAAc,mBAAoB9b,IACvD6a,cAAe,SAAC7a,GAAD,OACb8b,EAAc,mBAAoB9b,IAEpC+O,MAAO4N,QAAQd,EAAOlX,YAAckX,EAAOlX,WAAW3E,OACtD8a,WAAYe,EAAOlX,YAAckX,EAAOlX,WAAW3E,aAKzD,6BAED+Q,EAAkBtK,SAAS,mBAC1B,cAAC,GAAD,CACEkT,MAAM,YACNjD,IAAK,EACL/Q,IAAK,GACLlD,MAAOoL,EAAOlJ,WAAWgL,KACzBiK,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,kBAAmBrZ,MAGxD,qCArDiD,8BC+C9CivB,GAvEQ,SAACxwB,GAAW,IAE/B2a,EAME3a,EANF2a,OAGAC,GAGE5a,EALF6a,WAKE7a,EAJF8a,aAIE9a,EAHF4a,eAEAjO,GACE3M,EAFF+a,QAEE/a,EADF2M,QAP8B,EASA9I,oBAAS,GATT,mBASzBoX,EATyB,KASfC,EATe,KAU1BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,sBAC3BsK,EAAkBtK,SAAS,qBAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,uBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,qBAC1B,eAACgT,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC1Z,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,4BAIF,cAAC8V,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC,GAAD,CACEtX,MAAOoL,EAAOlJ,WAAWkL,OACzBnN,SAAU,SAAC1C,GAAD,OACR8b,EAAc,oBAAqB9b,IAErC6a,cAAe,SAAC7a,GAAD,OACb8b,EAAc,oBAAqB9b,IAErC+O,MAAO4N,QAAQd,EAAOlX,YAAckX,EAAOlX,WAAWkL,QACtDiL,WAAYe,EAAOlX,YAAckX,EAAOlX,WAAWkL,cAKzD,6BAEDkB,EAAkBtK,SAAS,qBAC1B,cAAC,GAAD,CACEkT,MAAM,eACNjD,IAAK,EACL/Q,IAAK,GACLlD,MAAOoL,EAAOlJ,WAAW2G,OACzBsO,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,oBAAqBrZ,MAG1D,qCAzCD,8BCiDIkvB,GAvEO,SAACzwB,GAAW,IAE9B2a,EAME3a,EANF2a,OAGAC,GAGE5a,EALF6a,WAKE7a,EAJF8a,aAIE9a,EAHF4a,eAEAjO,GACE3M,EAFF+a,QAEE/a,EADF2M,QAP6B,EASC9I,oBAAS,GATV,mBASxBoX,EATwB,KASdC,EATc,KAUzBrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,qBAC3BsK,EAAkBtK,SAAS,sBAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,8BAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,qBAC5BoH,EAAOxB,aAAeC,IAAW+C,KAC/B,eAACoK,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC1Z,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,qBAIF,cAAC8V,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC,GAAD,CACEtX,MAAOoL,EAAOlJ,WAAW3E,MACzB0C,SAAU,SAAC1C,GAAD,OAAW8b,EAAc,mBAAoB9b,IACvD6a,cAAe,SAAC7a,GAAD,OACb8b,EAAc,mBAAoB9b,IAEpC+O,MAAO4N,QAAQd,EAAOlX,YAAckX,EAAOlX,WAAW3E,OACtD8a,WAAYe,EAAOlX,YAAckX,EAAOlX,WAAW3E,aAKzD,6BAED+Q,EAAkBtK,SAAS,sBAC1B,cAAC,GAAD,CACEkT,MAAM,UACNjD,IAAK,EACL/Q,IAAK,EACLkU,KAAM,IACNpX,MAAOoL,EAAOlJ,WAAWkG,QACzB+O,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,qBAAsBrZ,MAG3D,qCAzCD,8B,sBCwEImvB,GA9FU,SAAC1wB,GAQpBA,EANF2a,OAME3a,EALF6a,WAKE7a,EAJF8a,aAJiC,IAKjCF,EAGE5a,EAHF4a,cAEAjO,GACE3M,EAFF+a,QAEE/a,EADF2M,QAPgC,EASF9I,oBAAS,GATP,mBAS3BoX,EAT2B,KASjBC,EATiB,KAU5BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,wBAC3BsK,EAAkBtK,SAAS,oBAC3BsK,EAAkBtK,SAAS,mBAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,yBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,uBAC1B,cAAC,GAAD,CACEkT,MAAM,WACNjD,KAAM,IACN/Q,IAAK,IACLlD,MAAOiD,KAAKyF,MAAM0C,EAAOlJ,WAAW6E,UACpCoQ,SAAU,SAACnX,GAAD,OAAWqZ,EAAc,sBAAuBrZ,MAG5D,6BAEF,eAACN,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,eAAnC,UACG0O,EAAkBtK,SAAS,mBAC1B,cAAC6mB,GAAA,EAAD,CAAauE,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEhyB,MAAM,UACNiyB,QAAStV,QAAQ9O,EAAOlJ,WAAW8E,MACnC/G,SAAU,SAACC,GAAD,OACRmZ,EACE,kBACAnZ,EAAMoB,OAAOkuB,QAAU,EAAI,MAKnCtY,MAAM,OACNuY,eAAe,YAInB,6BAEDnhB,EAAkBtK,SAAS,mBAC1B,cAAC6mB,GAAA,EAAD,CAAauE,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEhyB,MAAM,UACNiyB,QAAStV,QAAQ9O,EAAOlJ,WAAW+E,MACnChH,SAAU,SAACC,GAAD,OACRmZ,EACE,kBACAnZ,EAAMoB,OAAOkuB,QAAU,EAAI,MAKnCtY,MAAM,OACNuY,eAAe,YAInB,wCA9DH,8BCrBLnF,GAAmBzsB,YAAOqa,MAAV,uFAAGra,CAAH,uCAoLP6xB,GA9KQ,SAACjxB,GAAW,IAE/B2a,EAME3a,EANF2a,OACAE,EAKE7a,EALF6a,WACAC,EAIE9a,EAJF8a,aACAF,EAGE5a,EAHF4a,cACAG,EAEE/a,EAFF+a,QACApO,EACE3M,EADF2M,OAP8B,EASA9I,oBAAS,GATT,mBASzBoX,EATyB,KASfC,EATe,KAU1BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,2BAC3BsK,EAAkBtK,SAAS,0BAC3BsK,EAAkBtK,SAAS,6BAC3BsK,EAAkBtK,SAAS,6BAC3BsK,EAAkBtK,SAAS,4BAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,uBAEF,cAACmc,GAAA,EAAD,UACE,eAACra,EAAA,EAAD,CAAKC,QAAQ,OAAO+U,cAAc,SAAS5U,MAAM,OAAjD,UACGwO,EAAkBtK,SAAS,0BAC1B,eAACgT,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC1Z,EAAA,EAAD,CAAY2C,QAAQ,QAAQhD,MAAM,gBAAgB2D,GAAI,EAAtD,4BAIF,cAAC8V,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACE,cAAC,GAAD,CACEtX,MAAOoL,EAAOlJ,WAAW6I,YACzB9K,SAAU,SAAC1C,GAAD,OACR8b,EAAc,yBAA0B9b,IAE1C6a,cAAe,SAAC7a,GAAD,OACb8b,EAAc,yBAA0B9b,IAE1C+O,MAAO4N,QACLd,EAAOlX,YAAckX,EAAOlX,WAAW6I,aAEzCsN,WACEe,EAAOlX,YAAckX,EAAOlX,WAAW6I,mBAM/C,6BAEDuD,EAAkBtK,SAAS,yBAC1B,cAAC,GAAD,CACE2G,KAAK,wBACLuM,MAAM,cACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWgF,YACpCoF,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWgF,YACnBkS,EAAOlX,YACPkX,EAAOlX,WAAWgF,YAEtBmR,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWgF,YACnBkS,EAAOlX,YACPkX,EAAOlX,WAAWgF,WAEpB6Q,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,4BAC1B,cAAC,GAAD,CACEkT,MAAM,iBACNjD,IAAK,EACL/Q,IAAK,EACLkU,KAAM,IACNpX,MAAOoL,EAAOlJ,WAAW8I,cACzBmM,SAAU,SAACnX,GAAD,OACRqZ,EAAc,2BAA4BrZ,MAI9C,6BAEDsO,EAAkBtK,SAAS,4BAC1B,cAAC,GAAD,CACE2G,KAAK,2BACLuM,MAAM,iBACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWiF,eACpCmF,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWiF,eACnBiS,EAAOlX,YACPkX,EAAOlX,WAAWiF,eAEtBkR,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWiF,eACnBiS,EAAOlX,YACPkX,EAAOlX,WAAWiF,cAEpB4Q,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDtc,EAAkBtK,SAAS,4BAC1B,cAAC,GAAD,CACE2G,KAAK,2BACLuM,MAAM,iBACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAWkF,eACpCkF,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAWkF,eACnBgS,EAAOlX,YACPkX,EAAOlX,WAAWkF,eAEtBiR,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAWkF,eACnBgS,EAAOlX,YACPkX,EAAOlX,WAAWkF,cAEpB2Q,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,qCA7ID,8BCnCLN,GAAmBzsB,YAAOqa,MAAV,sFAAGra,CAAH,uCAgLP8xB,GA1KQ,SAAClxB,GAAW,IAE/B2a,EAME3a,EANF2a,OACAE,EAKE7a,EALF6a,WACAC,EAIE9a,EAJF8a,aAEAC,GAEE/a,EAHF4a,cAGE5a,EAFF+a,SACApO,EACE3M,EADF2M,OAP8B,EASA9I,oBAAS,GATT,mBASzBoX,EATyB,KASfC,EATe,KAU1BrL,EAAoBmC,mBACxB,kBACErF,EAAOxB,aAAeC,IAAW2E,MAC7BD,IAAkBnD,EAAOxB,YACzB2E,IAAkBnD,EAAOxB,YAAYwB,EAAOlJ,WAAWuL,QAC7D,CAACrC,IAGH,OACGkD,EAAkBtK,SAAS,6BAC3BsK,EAAkBtK,SAAS,8BAC3BsK,EAAkBtK,SAAS,gCAC3BsK,EAAkBtK,SAAS,gCAI5B,eAAC4V,GAAA,EAAD,CAAWF,SAAUA,EAAUzZ,SAAU,kBAAM0Z,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAAClc,EAAA,EAAD,8BAEF,cAACmc,GAAA,EAAD,UACE,eAAC/C,GAAA,EAAD,CAAMK,WAAS,EAACtZ,QAAS,EAAzB,UACE,cAACiZ,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACGhJ,EAAkBtK,SAAS,4BAC1B,cAAC,GAAD,CACE2G,KAAK,2BACLuM,MAAM,WACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW4M,eACpCxC,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW4M,eACnBsK,EAAOlX,YACPkX,EAAOlX,WAAW4M,eAEtBuJ,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW4M,eACnBsK,EAAOlX,YACPkX,EAAOlX,WAAW4M,cAEpBiJ,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAAC5T,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACGhJ,EAAkBtK,SAAS,6BAC1B,cAAC,GAAD,CACE2G,KAAK,4BACLuM,MAAM,YACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW6M,gBACpCzC,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW6M,gBACnBqK,EAAOlX,YACPkX,EAAOlX,WAAW6M,gBAEtBsJ,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW6M,gBACnBqK,EAAOlX,YACPkX,EAAOlX,WAAW6M,eAEpBgJ,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAAC5T,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACGhJ,EAAkBtK,SAAS,+BAC1B,cAAC,GAAD,CACE2G,KAAK,8BACLuM,MAAM,cACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW8M,kBACpC1C,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW8M,kBACnBoK,EAAOlX,YACPkX,EAAOlX,WAAW8M,kBAEtBqJ,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW8M,kBACnBoK,EAAOlX,YACPkX,EAAOlX,WAAW8M,iBAEpB+I,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAAC5T,GAAA,EAAD,CAAMrN,MAAI,EAAC2N,GAAI,EAAf,SACGhJ,EAAkBtK,SAAS,gCAC1B,cAAC,GAAD,CACE2G,KAAK,+BACLuM,MAAM,eACN3W,QAAQ,WACRkN,KAAK,SACLzN,MAAOiF,YAAWmG,EAAOlJ,WAAW+M,mBACpC3C,MAAO4N,QACLV,EAAQtX,YACNsX,EAAQtX,WAAW+M,mBACnBmK,EAAOlX,YACPkX,EAAOlX,WAAW+M,mBAEtBoJ,WACEmB,EAAQtX,YACRsX,EAAQtX,WAAW+M,mBACnBmK,EAAOlX,YACPkX,EAAOlX,WAAW+M,kBAEpB8I,OAAQuB,EACRrZ,SAAUsZ,EACViB,WAAS,EACT5F,OAAO,SACPoF,GAAI,EACJ2Q,gBAAiB,CACfC,QAAQ,KAIZ,uCAzIH,8BCvBLxsB,GAAUP,YAAO6B,KAAV,2EAAG7B,CAAH,yGA2NE+xB,GAjNK,WAClB,IAAM/wB,EAAWC,cACX0U,EAAexU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAavQ,WACzDmQ,EAAWnU,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAYC,QACpD/C,EAAatR,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoR,cACvDhC,EAAoBmC,mBACxB,kBACG+C,EAEGA,EAAa5J,aAAeC,IAAW2E,MACvCD,IAAkBiF,EAAa5J,YAC/B2E,IAAkBiF,EAAa5J,YAC7B4J,EAAatR,WAAWuL,MAJ1B,KAMN,CAAC+F,IAEGqc,EAAgBpf,mBACpB,kBACEjH,KAAEiF,KACA,CACE1E,cAAe,EACfkB,aAAc,EACd/I,WAAYsH,KAAEiF,KACZyG,IAAahT,WACboM,EAAkB5E,QAAO,SAACC,GAAD,OACvBA,EAAK3F,SAAS,kBACdgG,KAAI,SAACL,GAAD,OAAUA,EAAKzB,QAAQ,cAAe,SAGhDoG,EAAkB5E,QAAO,SAACC,GAAD,OAAWA,EAAK3F,SAAS,qBAEtD,CAACsK,IAMGwS,EAAc,SAACC,GACnBliB,EACEwV,aAAY,2BACPb,GADM,mBAERuN,EAAQvN,EAAauN,GAAS,EAAI,OAInC2N,EAAuB,SAAC3N,GAC5BliB,EACEwV,aAAY,2BACPb,GADM,IAETtR,WAAW,2BACNsR,EAAatR,YADR,mBAEP6e,EAAQvN,EAAatR,WAAW6e,GAAS,EAAI,SAMhD+O,EAAa,SAAC1kB,GAClB,IAAK,IAAIzC,KAAKyC,EAAOlJ,WACnB,GAAIkJ,EAAOlJ,WAAWyG,IAAM6K,EAAatR,WAAWyG,GAClD,OAAO,EAGX,IAAK,IAAIA,KAAKyC,EACZ,GAAS,cAALzC,GAAqByC,EAAOzC,IAAM6K,EAAa7K,GACjD,OAAO,EAGX,OAAO,GAGT,OAAI6K,EAEA,cAAC,GAAD,CAASuc,GAAI,EAAG1S,GAAI,EAApB,SACE,cAAC,KAAD,CACE1C,cAAa,uCACRkV,GACArc,GAFQ,IAGXtR,WAAW,2BACN2tB,EAAc3tB,YACdsR,EAAatR,cAGpB0Y,iBAAkBC,KAAW,CAC3BgG,YAAahG,OACb9Q,cAAe8Q,OACf5P,aAAc4P,OACd3Y,WAAY2Y,KAAW,CACrBlQ,KAAMkQ,OAAaoQ,SAAS,YAC5Ble,KAAM8N,OAAaE,KACjB,kBACA,YACA,SAAC/a,GAAD,OACGA,GAASA,EAAMgB,SACfsN,EAAkBtK,SAAS,sBAEhClE,MAAO+a,OAAaE,KAClB,mBACA,YACA,SAAC/a,GAAD,OACEA,IAAUsO,EAAkBtK,SAAS,uBAEzCb,OAAQ0X,OAAaE,KACnB,oBACA,YACA,SAAC/a,GAAD,OACEA,IAAUsO,EAAkBtK,SAAS,wBAEzCgB,KAAM6V,OACN1V,IAAK0V,OACL9T,SAAU8T,OACPmV,UAAU,IAAK,6BACfC,SAAS,IAAK,yBACjBjpB,KAAM6T,OACN5T,KAAM4T,OACNlU,OAAQkU,OAAamV,SAAS,EAAG,0BACjCppB,OAAQiU,OAAamV,SAAS,EAAG,0BACjCzyB,MAAOsd,OACJC,WACAC,KACC,mBACA,yBACAC,KAEJ9N,KAAM2N,OACNzN,OAAQyN,OACLC,WACAC,KACC,mBACA,yBACAC,KAEJnS,OAAQgS,OACRhO,KAAMgO,OACNzS,QAASyS,OACT9P,YAAa8P,OACVC,WACAC,KACC,mBACA,yBACAC,KAEJ9T,WAAY2T,OACZ7P,cAAe6P,OACf1T,cAAe0T,OACfzT,cAAeyT,OACf/L,cAAe+L,OACf9L,eAAgB8L,OAChB7L,iBAAkB6L,OAClB5L,kBAAmB4L,OACnBnN,OAAQmN,OAAamV,SAAS,EAAG,0BACjCjiB,YAAa8M,OAAamV,SAAS,EAAG,0BACtChiB,YAAa6M,OAAamV,SAAS,EAAG,0BACtC9hB,UAAW2M,OAAamV,SAAS,EAAG,0BACpC7hB,MAAO0M,OACPhN,cAAegN,OAAamV,SAAS,EAAG,0BACxCliB,aAAc+M,OAAamV,SAAS,EAAG,8BAG3CE,oBAAkB,EAClBjV,SAAU,SAAC7P,GAET,OADA1G,QAAQC,IAAIyG,GACL,IAET8P,SAlIY,SAAC9P,GACnBvM,EAASwV,aAAYjJ,KAuCjB,SA4FG,SAAC+P,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,eAAC3b,EAAA,EAAD,CACEC,QAAQ,OACR+U,cAAc,MACd9U,eAAe,gBACf+U,WAAW,SACXxR,OAAO,OALT,UAOE,cAACvF,EAAA,EAAD,CAAY2C,QAAQ,KAAKye,QAAM,EAA/B,wBAGC7D,EAAUO,SAAWoU,EAAW3U,EAAU/P,QACzC,cAACyN,GAAA,EAAD,CAAQpL,KAAK,SAASlQ,MAAM,UAAUgD,QAAQ,WAA9C,mBAIA,gCAGJ,cAAC,GAAD,2BAAqB4a,GAArB,IAAgC2F,YAAaA,KAC7C,cAAC,GAAD,2BAAkB3F,GAAlB,IAA6BhI,SAAUA,KACvC,cAAC,GAAD,eAAmBgI,IACnB,cAAC,GAAD,eAAoBA,IACpB,cAAC,GAAD,2BACMA,GADN,IAEEuT,qBAAsBA,EACtBlb,aAAcA,EACdlD,WAAYA,KAEd,cAAC,GAAD,eAAsB6K,IACtB,cAAC,GAAD,eAAsBA,IACtB,cAAC,GAAD,eAAoBA,IACpB,cAAC,GAAD,eAAoBA,YAOzB,8B,oBCnMH/c,GAAUP,YAAO6B,KAAV,sEAAG7B,CAAH,2BACS,SAACY,GAAD,OAAWA,EAAM0xB,cA2SxBC,UAxSA,WACb,IAAMvxB,EAAWC,cACXuxB,EAASC,cAFI,EAGyBhuB,mBAAS,IAHlC,mBAGZiuB,EAHY,KAGIC,EAHJ,OAISluB,mBAAS,MAJlB,mBAIZ6a,EAJY,KAIJC,EAJI,KAMbvK,EAAOzQ,iBAAO,GACduQ,EAAWvQ,iBAAO,GAElBolB,EAAOxoB,aAAY,SAACC,GAAD,OAAWA,EAAMwoB,YAAYD,QAChDvU,EAAgBjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAclQ,WAC3DwQ,EAAexU,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAavQ,WACzDytB,EAAiBzxB,aAAY,SAACC,GAAD,OAAWA,EAAMsU,aAAamd,aAC3DhE,EAAc1tB,aAAY,SAACC,GAAD,OAAWA,EAAM0tB,eAAetZ,QAC1DuZ,EAAW5tB,aAAY,SAACC,GAAD,OAAWA,EAAM4tB,YAAYxZ,QACpDF,EAAWnU,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAYC,QACpDhU,EAAOL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaG,QACjDiR,EAAatR,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoR,cACvD/F,EAAcvL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaqL,eACxDD,EAAYtL,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoL,aACtDvL,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAG1B4xB,EAAgB3xB,aAAY,SAACC,GAAD,OAAWA,EAAMiU,cAAc0d,WAC3DC,EAAiB7xB,aAAY,SAACC,GAAD,OAAWA,EAAM+T,eAAe4d,WAC7DE,EAAc9xB,aAAY,SAACC,GAAD,OAAWA,EAAMmU,YAAYwd,WACvDG,EAAqB/xB,aACzB,SAACC,GAAD,OAAWA,EAAM8tB,cAAciE,eAG3BC,EAAe,WACnBpyB,EAASuC,YAAQ6B,KAAKC,IAAID,KAAKgR,IAAW,KAAP5U,EAAa,IAAK,QAEjD6xB,EAAgB,WACpBryB,EAASuC,YAAQ6B,KAAKC,IAAID,KAAKgR,IAAI5U,EAAO,KAAM,IAAK,QAEjD8xB,EAA6B,SAAChxB,GAClCtB,EAASuyB,YAAkBjxB,KAKvBkxB,EAAuB,SAACC,GAC5B,IAAIC,EAAiB,YAAOxyB,GACxBoQ,EAAQoiB,EAAkBC,QAAQF,GAClCniB,GAAS,EACXoiB,EAAkBjc,OAAOnG,EAAO,GAEhCoiB,EAAkB7uB,KAAK4uB,GAEzBH,EAA2BI,IAMvBE,EAAiB,SAAC7Y,EAAK1Y,GAkG3B,GAhGAwE,QAAQC,IAAI,aAAciU,EAAK1Y,GACF,UAAzBA,EAAMoB,OAAOowB,SAAsC,YAAfxxB,EAAMuN,OACxC6C,IAAesI,GACjB/Z,EAAS8yB,YAAc/Y,IAGd,QAARA,GAAyB,cAARA,IAClBpF,GACAA,EAAa5J,aAAeC,IAAWC,IAKtB,QAAR8O,GAAiBpF,EAC1B3U,EAASwL,aAAgB,OACF,MAAdnK,EAAM0Y,KAAe1Y,EAAM0xB,SACpCX,IACuB,MAAd/wB,EAAM0Y,KAAe1Y,EAAM0xB,SACpCV,IACuB,MAAdhxB,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASuC,YAAQ,IACM,MAAdlB,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWC,UACV,MAAdjL,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAW2E,MACV,MAAd3P,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWkE,OACV,MAAdlP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWmE,SACV,MAAdnP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWyD,UACV,MAAdzO,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWoE,OACV,MAAdpP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWqE,OACV,MAAdrP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWsE,iBACV,MAAdtP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWwE,QACV,MAAdxP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAWyE,MACV,MAAdzP,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAW4E,UACV,MAAd5P,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAW0E,OACV,MAAd1P,EAAM0Y,KAAe1Y,EAAM0xB,SACpC/yB,EAASgV,YAAa3I,IAAW8E,QAEnB,MAAd9P,EAAM0Y,MACL1Y,EAAM2V,SAAW3V,EAAM2xB,UACxBre,EAEA3U,EAASizB,aAAkBte,IAEb,MAAdtT,EAAM0Y,MACL1Y,EAAM2V,SAAW3V,EAAM2xB,UACxBpB,EAEA5xB,EAASkzB,aAAWtB,IACG,MAAdvwB,EAAM0Y,MAAgB1Y,EAAM2V,SAAW3V,EAAM2xB,SACtDhzB,EAASW,eACc,MAAdU,EAAM0Y,MAAgB1Y,EAAM2V,SAAW3V,EAAM2xB,SACtDhzB,EAASY,eACQ,MAARmZ,EACTyY,EAAqBhxB,IAAeC,SACnB,MAARsY,EACTyY,EAAqBhxB,IAAeG,WACnB,MAARoY,EACTyY,EAAqBhxB,IAAeI,eACnB,MAARmY,EACTyY,EAAqBhxB,IAAeK,cACnB,MAARkY,EACTyY,EAAqBhxB,IAAeM,MACnB,MAARiY,EACTwE,EAAUL,IAAYnQ,MACL,MAARgM,EACTwE,EAAUL,IAAYvO,OACL,MAARoK,EACTwE,EAAUL,IAAYrQ,MACL,MAARkM,EACTwE,EAAUL,IAAYuP,WACL,UAAR1T,GAEP,CACE1N,IAAWC,QACXD,IAAW0E,KACX1E,IAAW8E,MACX9E,IAAW4E,SACX9L,SAASsG,IAEXzL,EAASkV,aAAiBL,KAAcC,eAhF1C6c,EAAkB,2BAAD,OACYhd,EAAatR,WAAWyI,KADpC,QAsFQ,UAAzBzK,EAAMoB,OAAOowB,UACI,UAAfxxB,EAAMuN,MACR5O,EAAS8yB,YAAc,OAGvB,CAAC,aAAc,YAAa,UAAW,aAAa3tB,SAClD9D,EAAM0Y,MAERpF,IACC,CAAC3J,IAAWC,IAAKD,IAAWM,MAAMnG,SAASwP,EAAa5J,aACzD,CACA,IAAIooB,EAAQ9xB,EAAM0xB,SAAW,GAAK,EAC9BK,EACY,cAAd/xB,EAAM0Y,KACDoZ,EACa,eAAd9xB,EAAM0Y,IACNoZ,EACA,EACFE,EACY,YAAdhyB,EAAM0Y,KACDoZ,EACa,cAAd9xB,EAAM0Y,IACNoZ,EACA,EACFG,EAASF,EACTG,EAASF,EAWb,GAVoB,KAAhB3nB,GACF4nB,EAASD,EACTE,GAAUH,GACe,MAAhB1nB,GACT4nB,GAAUF,EACVG,GAAUF,GACe,MAAhB3nB,IACT4nB,GAAUD,EACVE,EAASH,GAEQ,UAAf/xB,EAAMuN,KAAkB,CAC1B,IAAIvL,EAAU,eAAQsR,EAAatR,YAC/ByQ,EAAS3P,SAAW6P,EAAK7P,UAC3Bd,EAAW8C,KAAOwO,EAAatR,WAAW8C,KAAOmtB,EACjDjwB,EAAWiD,IAAMqO,EAAatR,WAAWiD,IAAMitB,GAEjDvzB,EACEwV,aAAY,2BACPb,GADM,IAETtR,WAAYA,WAIZyQ,EAAS3P,SAAW6P,EAAK7P,UAC3B2P,EAAS3P,QAAU2Z,OAAO0V,OAAOxf,EAAK7P,SACtCnE,EACEyzB,aAAgB,2BACX9e,GADU,IAEbtR,WAAW,2BACNsR,EAAatR,YADR,IAER8C,KAAMwO,EAAatR,WAAW8C,KAAOmtB,EACrChtB,IAAKqO,EAAatR,WAAWiD,IAAMitB,WAoCnD,OAtBAhvB,qBAAU,WACJokB,GAAQA,EAAKrmB,IAAMkvB,EAAOlvB,KACvB8R,GACHpU,EAAS0zB,aAAUlC,EAAOlvB,KAEvB4vB,GACHlyB,EAAS2zB,aAAsBhL,EAAKrmB,KAEjCurB,EAAY1rB,QAAQnC,EAAS4zB,gBAC7B7F,EAAS5rB,QAAQnC,EAAS6zB,gBAC1Bvf,EAASnS,QAAQnC,EAAS8zB,mBAGhC,CAACnL,IAEJpkB,qBAAU,WACR,IAAMwvB,EAAWC,aAAY,WAC3BhgB,EAAK7P,SAAW,IACf,KACH,OAAO,kBAAM8vB,cAAcF,MAC1B,IAGD,qCACE,cAACG,EAAA,EAAD,CAAQnyB,MAAOqS,EAAgBA,EAActI,KAAO,OACnDgmB,GAAiBE,GAAkBC,IAAgB7d,EAClD,cAAC+f,EAAA,EAAD,IAEA,eAACtzB,EAAA,EAAD,CAAKI,MAAM,OAAOqD,OAAO,OAAOxD,QAAQ,OAAO+U,cAAc,SAA7D,UACE,cAAC,IAAD,CACEue,WAAY,CAAC,OACbC,WAAYzB,IAEd,cAAC,IAAD,CACEwB,WAAY,CAAC,OACbE,gBAAgB,QAChBD,WAAYzB,IAEd,eAAC/xB,EAAA,EAAD,CAAKI,MAAM,OAAOqD,OAAO,oBAAoBxD,QAAQ,OAArD,UACE,cAAC,GAAD,CACEwd,OAAQA,EACRC,UAAWA,EACXqP,WAvNO,WACjB2G,YAAW,kBAAMlvB,SAASmvB,cAAcC,SAAQ,QAwNxC,cAAC,GAAD,CACExzB,MAAM,qBACNqwB,WAAW,UACXtL,SAAS,SAHX,SAKE,cAAC,GAAD,CAAOvS,sBA3Oe,SAACihB,GACjC10B,EAAS20B,YAAeD,SA4OhB,cAAC,GAAD,OAEF,cAAC,EAAD,CACE70B,SAAUuyB,EACVtyB,UAAWuyB,EACXtyB,uBAAwBuyB,OAI9B,cAAC,GAAD,CACEpkB,KAAMwjB,EACN7Y,KAAgC,IAA1B6Y,EAAevvB,OACrBoZ,SAAU,kBAAMoW,EAAkB,KAClCxJ,UArEgB,WACpBnoB,EAAS40B,aAAYjgB,IACrBgd,EAAkB","file":"static/js/7.8317ea05.chunk.js","sourcesContent":["import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { Undo as UndoIcon, Redo as RedoIcon } from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const { onZoomIn, onZoomOut, onChangePaintingGuides } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  const handleUndoRedo = (isUndo = true) => {\r\n    if (isUndo) {\r\n      dispatch(historyActionBack());\r\n    } else {\r\n      dispatch(historyActionUp());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.carmask_color}\r\n          opacity={guideData.carmask_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.wireframe_color}\r\n          opacity={guideData.wireframe_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke={guideData.grid_color || \"#ddd\"}\r\n                  opacity={guideData.grid_opacity || 1}\r\n                  strokeWidth={gridStroke}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize, guideData } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.sponsor_color}\r\n          opacity={guideData.sponsor_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          filterColor={guideData.numberblock_color}\r\n          opacity={guideData.numberblock_opacity}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <URLImage\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x()),\r\n            top: mathRound2(e.target.y()),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x()),\r\n            top: mathRound2(node.y()),\r\n            width: mathRound2(Math.max(1, width * Math.abs(scaleX))),\r\n            height: mathRound2(Math.max(1, height * Math.abs(scaleY))),\r\n            radius: node.radius\r\n              ? mathRound2(Math.max(1, node.radius() * Math.abs(scaleY)))\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(Math.max(1, node.innerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(Math.max(1, node.outerRadius() * Math.abs(scaleY)))\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  switch (type) {\r\n    case MouseModes.RECT:\r\n      return (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.CIRCLE:\r\n      return (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ELLIPSE:\r\n      return (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.STAR:\r\n      return (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.RING:\r\n      return (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.REGULARPOLYGON:\r\n      return (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.WEDGE:\r\n      return (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.ARC:\r\n      return (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n        />\r\n      );\r\n    case MouseModes.LINE:\r\n    case MouseModes.PEN:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.POLYGON:\r\n      return (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    case MouseModes.ARROW:\r\n      return (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n        />\r\n      );\r\n    default:\r\n      return <></>;\r\n  }\r\n};\r\n\r\nexport default Shape;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    onChange,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.SHAPE && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => {\r\n        let shadowOffset = getRelativeShadowOffset(boardRotate, {\r\n          x: layer.layer_data.shadowOffsetX,\r\n          y: layer.layer_data.shadowOffsetY,\r\n        });\r\n\r\n        return (\r\n          <Shape\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            radius={layer.layer_data.radius}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            pointerLength={layer.layer_data.pointerLength}\r\n            pointerWidth={layer.layer_data.pointerWidth}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={layer.layer_data.innerRadius}\r\n            outerRadius={layer.layer_data.outerRadius}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            name={layer.id.toString()}\r\n            key={layer.id}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={drawingLayer.layer_data.radius}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={drawingLayer.layer_data.innerRadius}\r\n          outerRadius={drawingLayer.layer_data.outerRadius}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shapes;\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer, pressedKey }) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        boundBoxFunc={boundBoxFunc}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({ onChangeBoardRotation }) => {\r\n  const scaleBy = 1.2;\r\n  const stageRef = useRef(null);\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    if (mouseMode === MouseModes.DEFAULT) {\r\n      const clickedOnEmpty = e.target === e.target.getStage();\r\n      if (clickedOnEmpty && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    }\r\n  };\r\n  const handleContentMouseDown = (e) => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (!drawingLayerRef.current) {\r\n        let newLayer = {\r\n          ...DefaultLayer,\r\n          layer_type: LayerTypes.SHAPE,\r\n          layer_data: {\r\n            ...DefaultLayer.layer_data,\r\n            type: mouseMode,\r\n            name: mouseMode,\r\n            left: position.x,\r\n            top: position.y,\r\n            color: \"#000000\",\r\n            scolor: \"#000000\",\r\n            stroke: 1,\r\n          },\r\n        };\r\n\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0, 0, 0];\r\n        }\r\n        if (mouseMode === MouseModes.PEN) {\r\n          newLayer.layer_data.stroke = 5;\r\n          newLayer.layer_data.points = [0, 0];\r\n        }\r\n        drawingLayerRef.current = newLayer;\r\n      } else {\r\n        if (\r\n          [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n            mouseMode\r\n          )\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          layer.layer_data.points = layer.layer_data.points.concat([\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n            position.x - drawingLayerRef.current.layer_data.left,\r\n            position.y - drawingLayerRef.current.layer_data.top,\r\n          ]);\r\n\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleMouseMove = () => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width: width,\r\n              height: height,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n    if (\r\n      ![\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode)\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    setPrevPosition(position);\r\n  };\r\n  const handleContentDoubleClick = (e) => {\r\n    const position = getRelativePointerPosition(stageRef.current);\r\n    if (\r\n      [\r\n        MouseModes.DEFAULT,\r\n        MouseModes.LINE,\r\n        MouseModes.ARROW,\r\n        MouseModes.POLYGON,\r\n      ].includes(mouseMode) &&\r\n      drawingLayerRef.current &&\r\n      prevPosition.x === position.x &&\r\n      prevPosition.y === position.y\r\n    ) {\r\n      dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n    }\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  const handleChangeBoardRotation = (isRight = true) => {\r\n    let newBoardRotate;\r\n    if (isRight) {\r\n      newBoardRotate = boardRotate + 90;\r\n      if (newBoardRotate >= 360) newBoardRotate = 0;\r\n    } else {\r\n      newBoardRotate = boardRotate - 90;\r\n      if (newBoardRotate < 0) newBoardRotate = 270;\r\n    }\r\n    onChangeBoardRotation(newBoardRotate);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShortCutsDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  setCurrentName,\r\n  updateScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\nimport { faQuestion } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n  const handleApplySettings = (guide_data) => {\r\n    dispatch(\r\n      updateScheme({\r\n        ...currentScheme,\r\n        guide_data: guide_data,\r\n      })\r\n    );\r\n    setDialog(null);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <Box display=\"flex\">\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React, { useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n  const [hover, setHover] = useState(false);\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => setHover(true)}\r\n      onMouseLeave={() => setHover(false)}\r\n      className={clsx(selected && \"activeItem\", hover && \"hoveredItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={disableLock ? 12 : 10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={10}>\r\n              <CustomTypography\r\n                active={layer_visible ? \"true\" : \"false\"}\r\n                noWrap\r\n              >\r\n                {text}\r\n              </CustomTypography>\r\n            </Grid>\r\n            {selected || hover || !layer_visible ? (\r\n              <Grid item xs={2}>\r\n                <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                  {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n                </IconButton>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock && (selected || hover || layer_locked) ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...layer,\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n    dispatch(setMouseMode(MouseModes.DEFAULT));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default YesNoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n  const handleClickDeleteUpload = (event, uploadItem) => {\r\n    event.stopPropagation();\r\n    event.nativeEvent.stopImmediatePropagation();\r\n    setUploadToDelete(uploadItem);\r\n  };\r\n  const handleDeleteUploadConfirm = async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  };\r\n\r\n  const handleDeleteUploadFinally = (deleteFromAll = true) => {\r\n    if (deleteFromAll) {\r\n      dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n    dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n    setUploadToDelete(null);\r\n    setAssociatedSchemes([]);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  background: white;\r\n  overflow: auto;\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = (value) => {\r\n    dispatch(setMouseMode(value));\r\n    if (value !== MouseModes.DEFAULT) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DrawerBar;\r\n","import React, { useState, useEffect, useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = pressedKey === \"shift\";\r\n\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  const handleChangeInnerRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        (value * currentLayer.layer_data.outerRadius) /\r\n          currentLayer.layer_data.innerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.innerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n  const handleChangeOuterRadius = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        (value * currentLayer.layer_data.innerRadius) /\r\n          currentLayer.layer_data.outerRadius\r\n      );\r\n    }\r\n    setFieldValue(\r\n      \"layer_data.outerRadius\",\r\n      parseFloat(event.target.value) || 0\r\n    );\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"X\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Y\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default CornerProperty;\r\n","import React, { useMemo } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  !AllowedLayerTypes.includes(\"layer_data.text\")\r\n              ),\r\n              width: Yup.number().test(\r\n                \"width-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n              ),\r\n              height: Yup.number().test(\r\n                \"height-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n              ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-181, \"Must be greater than -181\")\r\n                .lessThan(181, \"Must be less than 181\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n              cornerTopLeft: Yup.number(),\r\n              cornerTopRight: Yup.number(),\r\n              cornerBottomLeft: Yup.number(),\r\n              cornerBottomRight: Yup.number(),\r\n              radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              innerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              outerRadius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n              angle: Yup.number(),\r\n              pointerLength: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              pointerWidth: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n              <CornerProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleChangeBoardRotation = (newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (pressedKey !== key) {\r\n        dispatch(setPressedKey(key));\r\n      }\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"D\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      } else if (event.key === \"B\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.PEN));\r\n      } else if (event.key === \"R\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RECT));\r\n      } else if (event.key === \"C\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.CIRCLE));\r\n      } else if (event.key === \"E\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n      } else if (event.key === \"S\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.STAR));\r\n      } else if (event.key === \"G\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.RING));\r\n      } else if (event.key === \"O\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n      } else if (event.key === \"W\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.WEDGE));\r\n      } else if (event.key === \"A\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARC));\r\n      } else if (event.key === \"P\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.POLYGON));\r\n      } else if (event.key === \"L\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.LINE));\r\n      } else if (event.key === \">\" && event.shiftKey) {\r\n        dispatch(setMouseMode(MouseModes.ARROW));\r\n      } else if (\r\n        event.key === \"c\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        currentLayer\r\n      ) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (\r\n        event.key === \"v\" &&\r\n        (event.ctrlKey || event.metaKey) &&\r\n        clipboardLayer\r\n      ) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionBack());\r\n      } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n        dispatch(historyActionUp());\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      } else if (key === \"enter\") {\r\n        if (\r\n          [\r\n            MouseModes.DEFAULT,\r\n            MouseModes.LINE,\r\n            MouseModes.ARROW,\r\n            MouseModes.POLYGON,\r\n          ].includes(mouseMode)\r\n        ) {\r\n          dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n        }\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (event.type === \"keyup\") {\r\n        dispatch(setPressedKey(null));\r\n      }\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let initialspeedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let initialspeedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        let speedX = initialspeedX;\r\n        let speedY = initialspeedY;\r\n        if (boardRotate === 90) {\r\n          speedX = initialspeedY;\r\n          speedY = -initialspeedX;\r\n        } else if (boardRotate === 180) {\r\n          speedX = -initialspeedX;\r\n          speedY = -initialspeedY;\r\n        } else if (boardRotate === 270) {\r\n          speedX = -initialspeedY;\r\n          speedY = initialspeedX;\r\n        }\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board onChangeBoardRotation={handleChangeBoardRotation} />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}