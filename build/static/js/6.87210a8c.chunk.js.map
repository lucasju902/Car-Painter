{"version":3,"sources":["dialogs/ProjectSelectDialog.jsx","helper/index.js","dialogs/OpenProjectDialog.jsx","dialogs/CreateProjectDialog.jsx","pages/project/index.jsx"],"names":["Button","styled","MuiButton","spacing","ProjectSelectDialog","props","onCreateProject","onOpenProject","onCancel","open","Dialog","aria-labelledby","DialogTitle","id","DialogContent","dividers","Box","display","flexDirection","onClick","color","variant","mb","DialogActions","past_date","difference_In_Second","Date","getTime","Math","round","difference_In_Min","difference_In_Hour","difference_In_Day","SchemeWrapper","OpenProjectDialog","schemeList","length","map","scheme","Typography","name","Helper","date_modified","useState","carMake","setCarMake","onContinue","carMakeList","sortedCarMakesList","_","orderBy","Autocomplete","options","groupBy","option","car_type","getOptionLabel","style","width","onChange","event","newValue","renderInput","params","TextField","label","Scheme","dispatch","useDispatch","history","useHistory","dialog","setDialog","user","useSelector","state","authReducer","carMakeReducer","list","schemeReducer","currentScheme","current","schemeLoading","loading","carMakeLoading","useEffect","getSchemeList","getCarMakeList","push","height","ScreenLoader","schemeID","console","log","getScheme","CreateProjectDialog","createScheme","createSchemeFromCarMake"],"mappings":"4PAaMA,EAASC,YAAOC,KAAV,8EAAGD,CAAkBE,KAgClBC,EA9Ba,SAACC,GAAW,IAC9BC,EAAmDD,EAAnDC,gBAAiBC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElD,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,uBAAuBF,KAAMA,EAArD,UACE,cAACG,EAAA,EAAD,CAAaC,GAAG,uBAAhB,2BACA,cAACC,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,eAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAAC,EAAD,CACEC,QAASb,EACTc,MAAM,UACNC,QAAQ,WACRC,GAAI,EAJN,gCAQA,cAAC,EAAD,CAAQH,QAASZ,EAAea,MAAM,UAAUC,QAAQ,WAAxD,+CAKJ,cAACE,EAAA,EAAD,UACE,cAAC,EAAD,CAAQJ,QAASX,EAAUY,MAAM,UAAjC,0B,SCnBO,EAlBgB,SAACI,GAC9B,IAAMC,GACJ,IAAIC,MAAOC,UAAY,IAAO,IAAID,KAAKF,GAAWG,UACpD,GAAIF,EAAuB,GACzB,MAAM,GAAN,OAAUG,KAAKC,MAAMJ,GAArB,gBAEF,IAAMK,EAAoBL,EAAuB,GACjD,GAAIK,EAAoB,GACtB,MAAM,GAAN,OAAUF,KAAKC,MAAMC,GAArB,gBAEF,IAAMC,EAAqBD,EAAoB,GAC/C,GAAIC,EAAqB,GACvB,MAAM,GAAN,OAAUH,KAAKC,MAAME,GAArB,cAEF,IAAMC,EAAoBD,EAAqB,GAC/C,MAAM,GAAN,OAAUH,KAAKC,MAAMG,GAArB,cCCIhC,EAASC,YAAOC,KAAV,4EAAGD,CAAkBE,KAC3B8B,EAAgBhC,YAAOe,KAAV,mFAAGf,CAAH,2EAqDJiC,EA7CW,SAAC7B,GAAW,IAC5B8B,EAA+D9B,EAA/D8B,WAAY7B,EAAmDD,EAAnDC,gBAAiBC,EAAkCF,EAAlCE,cAAeC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAE9D,OACE,eAACC,EAAA,EAAD,CAAQC,kBAAgB,uBAAuBF,KAAMA,EAArD,UACE,cAACG,EAAA,EAAD,CAAaC,GAAG,uBAAhB,0CAGA,cAACC,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,SACGiB,GAAcA,EAAWC,OACxBD,EAAWE,KAAI,SAACC,GAAD,OACb,eAACL,EAAD,CACEd,QAAS,kBAAMZ,EAAc+B,EAAOzB,KADtC,UAIE,cAAC0B,EAAA,EAAD,CAAYlB,QAAQ,QAApB,SAA6BiB,EAAOE,OACpC,eAACD,EAAA,EAAD,CAAYlB,QAAQ,QAApB,0BACgB,IACboB,EAA8BH,EAAOI,oBALnCJ,EAAOzB,OAUhB,iCAIN,eAACU,EAAA,EAAD,WACE,cAAC,EAAD,CAAQJ,QAASX,EAAUY,MAAM,UAAjC,oBAGA,cAAC,EAAD,CACED,QAASb,EACTc,MAAM,UACNC,QAAQ,WACRC,GAAI,EAJN,wB,sDC1CFtB,EAASC,YAAOC,KAAV,8EAAGD,CAAkBE,KAsDlBC,EApDa,SAACC,GAAW,IAAD,EACPsC,mBAAS,MADF,mBAC9BC,EAD8B,KACrBC,EADqB,KAE7BC,EAA4CzC,EAA5CyC,WAAYtC,EAAgCH,EAAhCG,SAAUC,EAAsBJ,EAAtBI,KAAMsC,EAAgB1C,EAAhB0C,YAEhCC,EAAqBC,IAAEC,QAAF,YACnBH,GACJ,CAAC,OAAQ,YACT,CAAC,MAAO,QAEV,OACE,eAACrC,EAAA,EAAD,CAAQC,kBAAgB,uBAAuBF,KAAMA,EAArD,UACE,cAACG,EAAA,EAAD,CAAaC,GAAG,uBAAhB,gCACA,cAACC,EAAA,EAAD,CAAeC,UAAQ,EAAvB,SACGgC,GAAeA,EAAYX,OAC1B,cAACe,EAAA,EAAD,CACEtC,GAAG,kBACHuC,QAASJ,EACTK,QAAS,SAACC,GAAD,OAAYA,EAAOC,UAC5BC,eAAgB,SAACF,GAAD,OAAYA,EAAOd,MACnCiB,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAACC,EAAOC,GAChBhB,EAAWgB,IAEbC,YAAa,SAACC,GAAD,OACX,cAACC,EAAA,EAAD,2BACMD,GADN,IAEEE,MAAM,iBACN5C,QAAQ,iBAKd,+BAGJ,eAACE,EAAA,EAAD,WACE,cAAC,EAAD,CAAQJ,QAASX,EAAUY,MAAM,UAAjC,oBAGA,cAAC,EAAD,CACED,QAAS,kBAAM2B,EAAWF,IAC1BxB,MAAM,UACNC,QAAQ,WACRC,GAAI,EAJN,6B,iBC+BO4C,UAtEA,WACb,IAAMC,EAAWC,cACXC,EAAUC,cAFG,EAGS3B,mBAAS,uBAHlB,mBAGZ4B,EAHY,KAGJC,EAHI,KAIbC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYH,QAChD1B,EAAc2B,aAAY,SAACC,GAAD,OAAWA,EAAME,eAAeC,QAC1D3C,EAAauC,aAAY,SAACC,GAAD,OAAWA,EAAMI,cAAcD,QACxDE,EAAgBN,aAAY,SAACC,GAAD,OAAWA,EAAMI,cAAcE,WAE3DC,EAAgBR,aAAY,SAACC,GAAD,OAAWA,EAAMI,cAAcI,WAC3DC,EAAiBV,aAAY,SAACC,GAAD,OAAWA,EAAME,eAAeM,WAEnEE,qBAAU,WACJZ,IACGtC,EAAWC,QAAQ+B,EAASmB,YAAcb,EAAK5D,KAC/CkC,EAAYX,QAAQ+B,EAASoB,kBAGnC,CAACd,IAEJY,qBAAU,WACJL,GACFX,EAAQmB,KAAR,kBAAwBR,EAAcnE,OAGvC,CAACmE,IAcJ,OACE,cAAChE,EAAA,EAAD,CAAK0C,MAAM,OAAO+B,OAAO,OAAOxE,QAAQ,OAAOC,cAAc,SAA7D,SACGgE,GAAiBE,IAAmBjD,IAAeY,EAClD,cAAC2C,EAAA,EAAD,IAEA,qCACE,cAAC,EAAD,CACEjF,KAAiB,wBAAX8D,EACNjE,gBAAiB,kBAAMkE,EAAU,wBACjCjE,cAAe,kBAAMiE,EAAU,sBAC/BhE,SAAU,kBAAMgE,EAAU,SAE5B,cAAC,EAAD,CACErC,WAAYA,EACZ1B,KAAiB,sBAAX8D,EACNjE,gBAAiB,kBAAMkE,EAAU,wBACjCjE,cAAe,SAAC+B,GAAD,OA5BLqD,EA4B4BrD,EA3B9CsD,QAAQC,IAAI,mBAAoBF,GAChCxB,EAAS2B,YAAUH,SACnBnB,EAAU,MAHO,IAACmB,GA6BVnF,SAAU,kBAAMgE,EAAU,0BAE5B,cAACuB,EAAD,CACEhD,YAAaA,EACbtC,KAAiB,wBAAX8D,EACNzB,WAAY,SAACF,GAAD,OA5BU,SAACA,GAC/BgD,QAAQC,IAAI,iCAAkCjD,GAC9CuB,EAAS6B,YAAapD,EAAS6B,EAAK5D,KACpC2D,EAAU,MAyBuByB,CAAwBrD,IACjDpC,SAAU,kBAAMgE,EAAU","file":"static/js/6.87210a8c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const { onCreateProject, onOpenProject, onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Paint Builder</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          <Button\r\n            onClick={onCreateProject}\r\n            color=\"default\"\r\n            variant=\"outlined\"\r\n            mb={1}\r\n          >\r\n            CREATE A NEW PAINT\r\n          </Button>\r\n          <Button onClick={onOpenProject} color=\"default\" variant=\"outlined\">\r\n            OPEN A PAINT BUILDER PROJECT\r\n          </Button>\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProjectSelectDialog;\r\n","const getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n};\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nimport Helper from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst SchemeWrapper = styled(Box)`\r\n  cursor: pointer;\r\n  padding: 10px;\r\n  :hover {\r\n    background: rgba(255, 255, 255, 0.1);\r\n  }\r\n`;\r\n\r\nconst OpenProjectDialog = (props) => {\r\n  const { schemeList, onCreateProject, onOpenProject, onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">\r\n        Open a Paint Builder Project\r\n      </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Box display=\"flex\" flexDirection=\"column\">\r\n          {schemeList && schemeList.length ? (\r\n            schemeList.map((scheme) => (\r\n              <SchemeWrapper\r\n                onClick={() => onOpenProject(scheme.id)}\r\n                key={scheme.id}\r\n              >\r\n                <Typography variant=\"body1\">{scheme.name}</Typography>\r\n                <Typography variant=\"body2\">\r\n                  Last modified{\" \"}\r\n                  {Helper.getDifferenceFromToday(scheme.date_modified)}\r\n                </Typography>\r\n              </SchemeWrapper>\r\n            ))\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onCreateProject}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          mb={1}\r\n        >\r\n          NEW\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default OpenProjectDialog;\r\n","import React, { useState } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ProjectSelectDialog = (props) => {\r\n  const [carMake, setCarMake] = useState(null);\r\n  const { onContinue, onCancel, open, carMakeList } = props;\r\n\r\n  let sortedCarMakesList = _.orderBy(\r\n    [...carMakeList],\r\n    [\"name\", \"car_type\"],\r\n    [\"asc\", \"asc\"]\r\n  );\r\n  return (\r\n    <Dialog aria-labelledby=\"project-select-title\" open={open}>\r\n      <DialogTitle id=\"project-select-title\">Create a new paint</DialogTitle>\r\n      <DialogContent dividers>\r\n        {carMakeList && carMakeList.length ? (\r\n          <Autocomplete\r\n            id=\"car-make-select\"\r\n            options={sortedCarMakesList}\r\n            groupBy={(option) => option.car_type}\r\n            getOptionLabel={(option) => option.name}\r\n            style={{ width: 500 }}\r\n            onChange={(event, newValue) => {\r\n              setCarMake(newValue);\r\n            }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"SELECT VEHICLE\"\r\n                variant=\"outlined\"\r\n              />\r\n            )}\r\n          />\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={() => onContinue(carMake)}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          mb={1}\r\n        >\r\n          Continue\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ProjectSelectDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport ProjectSelectDialog from \"dialogs/ProjectSelectDialog\";\r\nimport OpenProjectDialog from \"dialogs/OpenProjectDialog\";\r\nimport CreateProjectDialog from \"dialogs/CreateProjectDialog\";\r\n\r\nimport {\r\n  getSchemeList,\r\n  createScheme,\r\n  getScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getCarMakeList } from \"redux/reducers/carMakeReducer\";\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [dialog, setDialog] = useState(\"ProjectSelectDialog\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const carMakeList = useSelector((state) => state.carMakeReducer.list);\r\n  const schemeList = useSelector((state) => state.schemeReducer.list);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (!schemeList.length) dispatch(getSchemeList(user.id));\r\n      if (!carMakeList.length) dispatch(getCarMakeList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      history.push(`/scheme/${currentScheme.id}`);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentScheme]);\r\n\r\n  const openScheme = (schemeID) => {\r\n    console.log(\"Opening scheme: \", schemeID);\r\n    dispatch(getScheme(schemeID));\r\n    setDialog(null);\r\n  };\r\n\r\n  const createSchemeFromCarMake = (carMake) => {\r\n    console.log(\"Creating scheme with carmake: \", carMake);\r\n    dispatch(createScheme(carMake, user.id));\r\n    setDialog(null);\r\n  };\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n      {schemeLoading || carMakeLoading || !schemeList || !carMakeList ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <>\r\n          <ProjectSelectDialog\r\n            open={dialog === \"ProjectSelectDialog\"}\r\n            onCreateProject={() => setDialog(\"CreateProjectDialog\")}\r\n            onOpenProject={() => setDialog(\"OpenProjectDialog\")}\r\n            onCancel={() => setDialog(null)}\r\n          />\r\n          <OpenProjectDialog\r\n            schemeList={schemeList}\r\n            open={dialog === \"OpenProjectDialog\"}\r\n            onCreateProject={() => setDialog(\"CreateProjectDialog\")}\r\n            onOpenProject={(scheme) => openScheme(scheme)}\r\n            onCancel={() => setDialog(\"ProjectSelectDialog\")}\r\n          />\r\n          <CreateProjectDialog\r\n            carMakeList={carMakeList}\r\n            open={dialog === \"CreateProjectDialog\"}\r\n            onContinue={(carMake) => createSchemeFromCarMake(carMake)}\r\n            onCancel={() => setDialog(\"ProjectSelectDialog\")}\r\n          />\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n"],"sourceRoot":""}