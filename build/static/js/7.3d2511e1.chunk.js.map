{"version":3,"sources":["utils/tga.js","dialogs/ZoomPopover.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/sub-form/SubForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/guide-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/guide-setting/GuidesSetting.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/styles.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/inner-form/InnerForm.jsx","dialogs/scheme-settings-dialog/components/sharing-setting/SharingSetting.jsx","dialogs/scheme-settings-dialog/components/general-setting/styles.jsx","dialogs/scheme-settings-dialog/components/general-setting/GeneralSetting.jsx","dialogs/scheme-settings-dialog/styles.jsx","dialogs/scheme-settings-dialog/SchemeSettingsDialog.jsx","dialogs/scheme-settings-dialog/index.js","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","components/GroupedURLImage.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","components/Loader.jsx","dialogs/BasePaintDialog.jsx","dialogs/OverlayDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/BackgroundProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/LightTooltip.jsx","dialogs/ConfirmDialog.jsx","components/SearchBox.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","CustomInput","Input","SliderWrapper","Wrapper","Grid","SliderInput","props","label","disabled","min","max","setValue","step","handleBlur","container","item","xs","mr","Slider","aria-labelledby","ValueLabelComponent","Tooltip","enterTouchDelay","placement","title","children","margin","Math","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","error","helperText","handleInputKeyDown","key","bgcolor","borderRadius","m","css","backgroundColor","Palette","deferred","hideTextfield","CustomAccordionSummary","AccordionSummary","SubForm","editable","colorKey","opacityKey","errors","setFieldValue","handleChange","values","touched","extraChildren","useState","expanded","setExpanded","expandIcon","ExpandMore","sm","CustomFormControlLabel","FormControlLabel","CustomDialogContent","DialogContent","InnerForm","onCancel","formProps","onSubmit","handleSubmit","noValidate","dividers","maxHeight","pr","overflow","control","name","checked","show_wireframe","labelPlacement","show_sponsor","show_numberBlocks","grid_padding","grid_stroke","show_grid","show_carparts_on_top","isSubmitting","isValid","GuidesSetting","guide_data","onApply","initialValues","useMemo","carmask_color","carmask_opacity","wireframe_color","wireframe_opacity","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","grid_color","grid_opacity","validationSchema","Yup","shape","nullable","test","colorValidator","validate","console","log","CustomAutocomplete","Autocomplete","owner","currentUserID","schemeID","premiumUsers","unInvitedUsers","filter","user","sharedUsers","find","user_id","isOwner","handleNewUserChange","scheme_id","accepted","handleNewUserPermissionChange","handleSharedUserChange","options","getOptionLabel","option","toString","style","newValue","renderInput","params","newUser","flexGrow","ml","mt","drivername","map","sharedUser","SharingSetting","ownerID","userList","pro_user","CustomButton","NameInput","GeneralSetting","favoriteID","scheme","currentUser","modifier","onRemoveFavorite","onAddFavorite","onDelete","onRename","history","useHistory","favoriteInPrgoress","setFavoriteInPrgoress","deleteMessage","setDeleteMessage","setName","handleToggleFavorite","handleNameChange","handleSaveName","handleDiscardName","handleNameKeyDown","handleDelete","push","useEffect","size","startIcon","icon","faStarOn","faStarOff","my","LightTooltip","arrow","Save","pl","Date","date_created","toDateString","date_modified","ConfirmDialog","text","onConfirm","TabPanel","other","role","hidden","a11yProps","StyledTabs","withStyles","indicator","root","paddingLeft","Tabs","TabIndicatorProps","StyledTab","theme","textTransform","fontWeight","typography","fontWeightRegular","fontSize","marginRight","padding","minWidth","opacity","Tab","disableRipple","SchemeSettingsDialog","onApplyGuideSettings","onApplySharingSetting","last_modified_by","tabValue","setTabValue","handleTabChange","fullWidth","maxWidth","aria-label","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","div","ZoomButton","Toolbar","onChangePaintingGuides","onDownloadTGA","dialog","setDialog","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","showProperties","currentScheme","schemeReducer","current","userReducer","list","authReducer","favoriteSchemeList","favoriteList","favroiteScheme","handleToggleProperties","setShowProperties","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","handleApplyProjectSettings","updateScheme","handleApplySharingSetting","createSharedUser","setMessage","message","deleteSharedUserItem","updateSharedUserItem","handleCreateFavorite","createFavoriteScheme","handleRemoveFavorite","deleteFavoriteItem","handleDeleteProject","deleteScheme","alignContent","ToggleButtonGroup","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","DialogTypes","SETTINGS","Settings","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","onDragStart","onDragEnd","imageRef","useRef","shapeRef","image","setImage","filters","Konva","Filters","RGBA","getPixelRatio","node","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","toISOString","crossOrigin","addEventListener","handleDragStart","e","handleDragEnd","handleTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onTransformEnd","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","gridStroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","visible","Array","round","points","stroke","strokeWidth","PaintingGuideCarMask","PaintingGuideBottom","CarParts","layers","filteredLayers","_","orderBy","layer_type","LayerTypes","CAR","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","GroupedURLImage","bgColor","paddingX","paddingY","imageshapeRef","imageNode","fill","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","font","font_name","font_file","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","trRef","selectedLayer","pressedKey","hoveredTransform","keepRatio","sizeLocked","checkNode","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","boundBoxFunc","oldBoundBox","newBoundBox","diff","getSnapRotation","rotateAroundCenter","enabledAnchors","borderEnabled","rotateEnabled","borderStroke","RotationButton","Board","wrapperWidth","wrapperHeight","wrapperRef","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","activeTransformerRef","hoveredTransformerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","previousGuide","setPreviousGuide","currentCarMake","carMakeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","showGuideForRepositioning","show","newPaintingGuides","setPaintingGuides","handleLayerDragStart","handleLayerDragEnd","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","cursor","base_color","legacy_mode","right","RotateLeft","RotateRight","ScreenLoader","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","H","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Dialog","DialogTitle","Object","keys","CustomIcon","FontAwesomeIcon","TitleBar","onBack","px","faChevronLeft","SHORTCUTS","faQuestion","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","MuiButton","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","Add","Collapse","in","setList","animation","onChoose","sort","Root","Loader","CircularProgress","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","increaseData","dataLength","next","loader","scrollableTarget","cellHeight","cols","alt","DialogActions","OverlayDialog","search","setSearch","overlays","onOpenOverlay","filteredOverlays","description","SearchBox","overlay_thumb","GridListTileBar","subtitle","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","logos","onOpenLogo","filteredLogos","filteredFlags","increaseLogoData","increaseFlagData","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","actionIcon","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backcolor","TextPreview","rotate","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenOverlay","createLayerFromOverlay","getZoomedCenterPosition","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","handleApplySettings","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","Accordion","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","BackgroundProperty","RotationProperty","handleChangeRotation","newRot","PI","boundBox","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","param","PropertyBar","defaultValues","handleClone","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","useResizeDetector","useReducerRef","userRef","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","shared","setHoveredJSONItem","getAbsolutePosition","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","newRotation","setBoardRotate","togglePaintingGuides","guide","setTimeout","activeElement","blur","handleCloneLayer","samePosition","pushingToHistory","cloneLayer","handleDeleteLayer","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","stageAttrs","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","uploadThumbnail","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","handleUploadThumbnail","uploadLater","setSaving","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","handleGoBack","clearFrameSize","clearSharedUsers","clearCurrentScheme","clearCurrentLayer","setLoadedStatusAll","setLoaded","getScheme","tempsharedUsers","getUploadListByUserID","getOverlayList","getLogoList","getFontList","getUserList","getSharedUsers","getFavoriteList","interval","setInterval","thumbnailInterval","clearInterval","SocketClient","connect","on","emit","insertToLayerList","updateLayerListItem","deleteLayerListItem","updateSchemeListItem","setCurrentScheme","disconnect","k","Helmet","handleKeys","onKeyEvent","handleEventType","tooltip","boxShadow","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","input"],"mappings":"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","file":"static/js/7.3d2511e1.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, disabled, min, max, value, setValue, step } = props;\r\n\r\n  const handleBlur = useCallback(() => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  }, [value, min, max, setValue]);\r\n\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              disabled={disabled}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            disabled={disabled}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? Math.max(min, 0)\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React, { useCallback } from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, disabled, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.key === \"Enter\") {\r\n        onChange(event.target.value);\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        {disabled ? (\r\n          <Box\r\n            width=\"24px\"\r\n            height=\"24px\"\r\n            bgcolor={value || \"white\"}\r\n            borderRadius=\"5px\"\r\n            m=\"4px\"\r\n          ></Box>\r\n        ) : (\r\n          <ColorPicker\r\n            value={value || \"\"}\r\n            onChange={(color) => onChange(color.css.backgroundColor)}\r\n            palette={Palette}\r\n            deferred\r\n            hideTextfield\r\n          />\r\n        )}\r\n\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          disabled={disabled}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import styled from \"styled-components/macro\";\r\n\r\nimport { AccordionSummary } from \"components/MaterialUI\";\r\n\r\nexport const CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { CustomAccordionSummary } from \"./styles\";\r\n\r\nexport const SubForm = (props) => {\r\n  const {\r\n    label,\r\n    editable,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            {colorKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <Box\r\n                  display=\"flex\"\r\n                  flexDirection=\"row\"\r\n                  alignItems=\"center\"\r\n                  justifyContent=\"space-between\"\r\n                >\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Color\r\n                  </Typography>\r\n                  <ColorPickerInput\r\n                    disabled={!editable}\r\n                    value={values[colorKey]}\r\n                    onChange={(color) => setFieldValue(colorKey, color)}\r\n                    onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                    error={Boolean(errors[colorKey])}\r\n                    helperText={errors[colorKey]}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {opacityKey ? (\r\n              <Grid item xs={12} sm={6}>\r\n                <SliderInput\r\n                  label=\"Opacity\"\r\n                  disabled={!editable}\r\n                  min={0}\r\n                  max={1}\r\n                  step={0.01}\r\n                  value={values[opacityKey]}\r\n                  setValue={(value) => setFieldValue(opacityKey, value)}\r\n                />\r\n              </Grid>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, FormControlLabel } from \"components/MaterialUI\";\r\n\r\nexport const CustomFormControlLabel = styled(FormControlLabel)`\r\n  margin-left: 0;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n","import React from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Checkbox,\r\n  Grid,\r\n} from \"components/MaterialUI\";\r\nimport { SubForm } from \"./sub-form\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport { CustomFormControlLabel, CustomDialogContent } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(({ editable, onCancel, ...formProps }) => {\r\n  return (\r\n    <Form onSubmit={formProps.handleSubmit} noValidate>\r\n      <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n        <Box maxHeight=\"70vh\" pr={5} overflow=\"auto\">\r\n          <SubForm\r\n            label=\"Car Mask\"\r\n            colorKey=\"carmask_color\"\r\n            opacityKey=\"carmask_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n          />\r\n          <SubForm\r\n            label=\"Wireframe\"\r\n            colorKey=\"wireframe_color\"\r\n            opacityKey=\"wireframe_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_wireframe\"\r\n                        checked={formProps.values.show_wireframe}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_wireframe\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Wireframe for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Sponsor Blocks\"\r\n            colorKey=\"sponsor_color\"\r\n            opacityKey=\"sponsor_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_sponsor\"\r\n                        checked={formProps.values.show_sponsor}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_sponsor\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Sponsor Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Number Blocks\"\r\n            colorKey=\"numberblock_color\"\r\n            opacityKey=\"numberblock_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_numberBlocks\"\r\n                        checked={formProps.values.show_numberBlocks}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_numberBlocks\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Number Blocks for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Grid\"\r\n            colorKey=\"grid_color\"\r\n            opacityKey=\"grid_opacity\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Column Size\"\r\n                    min={5}\r\n                    max={50}\r\n                    step={1}\r\n                    value={formProps.values.grid_padding}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_padding\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <SliderInput\r\n                    label=\"Stroke Width\"\r\n                    min={0.01}\r\n                    max={3}\r\n                    step={0.01}\r\n                    value={formProps.values.grid_stroke}\r\n                    disabled={!editable}\r\n                    setValue={(value) =>\r\n                      formProps.setFieldValue(\"grid_stroke\", value)\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_grid\"\r\n                        checked={formProps.values.show_grid}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_grid\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Grid for Repositioning\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n          <SubForm\r\n            label=\"Car Parts\"\r\n            editable={editable}\r\n            {...formProps}\r\n            extraChildren={\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <CustomFormControlLabel\r\n                    control={\r\n                      <Checkbox\r\n                        color=\"primary\"\r\n                        name=\"show_carparts_on_top\"\r\n                        checked={formProps.values.show_carparts_on_top}\r\n                        disabled={!editable}\r\n                        onChange={(event) =>\r\n                          formProps.setFieldValue(\r\n                            \"show_carparts_on_top\",\r\n                            event.target.checked\r\n                          )\r\n                        }\r\n                      />\r\n                    }\r\n                    label=\"Show Car Parts on top of other layers\"\r\n                    labelPlacement=\"start\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            }\r\n          />\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={formProps.isSubmitting || !formProps.isValid || !editable}\r\n        >\r\n          Apply\r\n        </Button>\r\n      </DialogActions>\r\n    </Form>\r\n  );\r\n});\r\n","import React, { useMemo } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const GuidesSetting = React.memo((props) => {\r\n  const { guide_data, editable, onCancel, onApply } = props;\r\n\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      carmask_color: guide_data.carmask_color || \"\",\r\n      carmask_opacity: guide_data.carmask_opacity || 1,\r\n      wireframe_color: guide_data.wireframe_color || \"\",\r\n      wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n      sponsor_color: guide_data.sponsor_color || \"\",\r\n      sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n      numberblock_color: guide_data.numberblock_color || \"\",\r\n      numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n      grid_color: guide_data.grid_color || \"\",\r\n      grid_opacity: guide_data.grid_opacity || 1,\r\n      grid_padding: guide_data.grid_padding || 10,\r\n      grid_stroke: guide_data.grid_stroke || 0.1,\r\n      show_wireframe: guide_data.show_wireframe || false,\r\n      show_sponsor: guide_data.show_sponsor || false,\r\n      show_numberBlocks: guide_data.show_numberBlocks || false,\r\n      show_grid: guide_data.show_grid || false,\r\n      show_carparts_on_top: guide_data.show_carparts_on_top || false,\r\n    }),\r\n    [guide_data]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={Yup.object().shape({\r\n        carmask_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        wireframe_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        sponsor_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        numberblock_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        grid_color: Yup.string()\r\n          .nullable()\r\n          .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n      })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm {...formProps} editable={editable} onCancel={onCancel} />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import styled from \"styled-components/macro\";\r\nimport { DialogContent, Autocomplete } from \"components/MaterialUI\";\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n\r\nexport const CustomAutocomplete = styled(Autocomplete)`\r\n  .MuiInputLabel-outlined {\r\n    transform: translate(14px, 12px) scale(1);\r\n    &.MuiInputLabel-shrink {\r\n      transform: translate(14px, -6px) scale(0.75);\r\n    }\r\n  }\r\n  .MuiInputBase-root {\r\n    padding-top: 0;\r\n    padding-bottom: 0;\r\n  }\r\n`;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Form } from \"formik\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  DialogActions,\r\n  Typography,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from \"components/MaterialUI\";\r\n\r\nimport { CustomDialogContent, CustomAutocomplete } from \"./styles\";\r\n\r\nexport const InnerForm = React.memo(\r\n  ({\r\n    owner,\r\n    editable,\r\n    currentUserID,\r\n    schemeID,\r\n    premiumUsers,\r\n    onCancel,\r\n    ...formProps\r\n  }) => {\r\n    const {\r\n      isSubmitting,\r\n      isValid,\r\n      handleSubmit,\r\n      setFieldValue,\r\n      values,\r\n    } = formProps;\r\n\r\n    const unInvitedUsers = useMemo(\r\n      () =>\r\n        !owner\r\n          ? []\r\n          : premiumUsers.filter(\r\n              (user) =>\r\n                user.id !== owner.id &&\r\n                !values.sharedUsers.find((item) => item.user_id === user.id)\r\n            ),\r\n      [premiumUsers, owner, values]\r\n    );\r\n    const isOwner = useMemo(\r\n      () => (!owner ? false : owner.id === currentUserID),\r\n      [owner, currentUserID]\r\n    );\r\n\r\n    const handleNewUserChange = useCallback(\r\n      (user) => {\r\n        setFieldValue(\r\n          `newUser`,\r\n          user\r\n            ? {\r\n                user_id: user.id,\r\n                user: user,\r\n                scheme_id: schemeID,\r\n                accepted: 0,\r\n                editable: 0,\r\n              }\r\n            : null\r\n        );\r\n      },\r\n      [schemeID]\r\n    );\r\n\r\n    const handleNewUserPermissionChange = useCallback((value) => {\r\n      setFieldValue(`newUser['editable']`, value);\r\n    }, []);\r\n\r\n    const handleSharedUserChange = useCallback((value, index) => {\r\n      setFieldValue(`sharedUsers[${index}]['editable']`, value);\r\n    }, []);\r\n\r\n    return (\r\n      <Form onSubmit={handleSubmit} noValidate>\r\n        <CustomDialogContent dividers id=\"insert-text-dialog-content\">\r\n          {isOwner ? (\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={5} pr={5}>\r\n              <CustomAutocomplete\r\n                options={unInvitedUsers}\r\n                getOptionLabel={(option) => option.id.toString()}\r\n                style={{ width: 200 }}\r\n                onChange={(event, newValue) => {\r\n                  handleNewUserChange(newValue);\r\n                }}\r\n                renderInput={(params) => (\r\n                  <TextField\r\n                    {...params}\r\n                    label=\"Enter Customer ID\"\r\n                    variant=\"outlined\"\r\n                  />\r\n                )}\r\n              />\r\n              {values.newUser ? (\r\n                <Box\r\n                  display=\"flex\"\r\n                  justifyContent=\"space-between\"\r\n                  flexGrow={1}\r\n                  ml={5}\r\n                >\r\n                  <Box mt=\"-7px\">\r\n                    <Typography>{values.newUser.user.drivername}</Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\">\r\n                      ID #{values.newUser.user.id}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box height=\"31px\">\r\n                    <Select\r\n                      variant=\"outlined\"\r\n                      value={values.newUser.editable}\r\n                      onChange={(event) =>\r\n                        handleNewUserPermissionChange(event.target.value)\r\n                      }\r\n                    >\r\n                      <MenuItem value={0}>Can view</MenuItem>\r\n                      <MenuItem value={1}>{\"Can view & edit\"}</MenuItem>\r\n                      <MenuItem value={-1}>Cancel</MenuItem>\r\n                    </Select>\r\n                  </Box>\r\n                </Box>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box maxHeight=\"50vh\" pr={5} overflow=\"auto\">\r\n            <Box display=\"flex\" justifyContent=\"space-between\" mb={4}>\r\n              <Typography color=\"textSecondary\">\r\n                {owner.drivername + (isOwner ? \" (you)\" : \"\")}\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">Owner</Typography>\r\n            </Box>\r\n            {values.sharedUsers.map((sharedUser, index) => (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                key={index}\r\n                mb={4}\r\n              >\r\n                <Box mt=\"-7px\">\r\n                  <Typography color=\"textSecondary\">\r\n                    {sharedUser.user.drivername +\r\n                      (currentUserID === sharedUser.user.id ? \" (you)\" : \"\")}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    ID #{sharedUser.user.id}\r\n                  </Typography>\r\n                </Box>\r\n                <Box height=\"31px\">\r\n                  <Select\r\n                    variant=\"outlined\"\r\n                    value={sharedUser.editable}\r\n                    disabled={!isOwner && currentUserID !== sharedUser.user.id}\r\n                    onChange={(event) =>\r\n                      handleSharedUserChange(event.target.value, index)\r\n                    }\r\n                  >\r\n                    <MenuItem value={0}>Can view</MenuItem>\r\n                    <MenuItem value={1} disabled={!editable}>\r\n                      {\"Can view & edit\"}\r\n                    </MenuItem>\r\n                    <MenuItem value={-1}>Remove</MenuItem>\r\n                  </Select>\r\n                </Box>\r\n              </Box>\r\n            ))}\r\n          </Box>\r\n        </CustomDialogContent>\r\n        <DialogActions>\r\n          <Button onClick={onCancel} color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            disabled={isSubmitting || !isValid}\r\n          >\r\n            Apply\r\n          </Button>\r\n        </DialogActions>\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n","import React, { useMemo } from \"react\";\r\nimport { Formik } from \"formik\";\r\n\r\nimport { InnerForm } from \"./inner-form\";\r\n\r\nexport const SharingSetting = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    ownerID,\r\n    schemeID,\r\n    currentUserID,\r\n    userList,\r\n    sharedUsers,\r\n    onCancel,\r\n    onApply,\r\n  } = props;\r\n  const owner = useMemo(() => userList.find((item) => item.id === ownerID), [\r\n    ownerID,\r\n    userList,\r\n  ]);\r\n  const premiumUsers = useMemo(() => userList.filter((item) => item.pro_user), [\r\n    userList,\r\n  ]);\r\n  const initialValues = useMemo(\r\n    () => ({\r\n      newUser: null,\r\n      sharedUsers: sharedUsers,\r\n    }),\r\n    [sharedUsers]\r\n  );\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      // validationSchema={Yup.object().shape({\r\n      //   user_id: Yup.number().min(0),\r\n      // })}\r\n      validate={(values) => {\r\n        console.log(values);\r\n        return {};\r\n      }}\r\n      onSubmit={onApply}\r\n    >\r\n      {(formProps) => (\r\n        <InnerForm\r\n          {...formProps}\r\n          editable={editable}\r\n          owner={owner}\r\n          currentUserID={currentUserID}\r\n          schemeID={schemeID}\r\n          premiumUsers={premiumUsers}\r\n          onCancel={onCancel}\r\n        />\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import styled from \"styled-components/macro\";\r\nimport { Button, DialogContent, TextField } from \"components/MaterialUI\";\r\n\r\nexport const CustomDialogContent = styled(DialogContent)`\r\n  padding-right: 0;\r\n`;\r\n\r\nexport const CustomButton = styled(Button)`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n`;\r\n\r\nexport const NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n","import React, { useState, useCallback, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  CircularProgress,\r\n  DialogActions,\r\n  Typography,\r\n} from \"components/MaterialUI\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { CustomDialogContent, CustomButton, NameInput } from \"./styles\";\r\n\r\nimport {\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faStar as faStarOn } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faStar as faStarOff } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport const GeneralSetting = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    favoriteID,\r\n    scheme,\r\n    currentUser,\r\n    owner,\r\n    modifier,\r\n    onRemoveFavorite,\r\n    onAddFavorite,\r\n    onClose,\r\n    onDelete,\r\n    onRename,\r\n  } = props;\r\n  const history = useHistory();\r\n\r\n  const [favoriteInPrgoress, setFavoriteInPrgoress] = useState(false);\r\n  const [deleteMessage, setDeleteMessage] = useState(false);\r\n  const [name, setName] = useState(scheme.name);\r\n\r\n  const handleToggleFavorite = useCallback(() => {\r\n    setFavoriteInPrgoress(true);\r\n    if (favoriteID)\r\n      onRemoveFavorite(favoriteID, () => setFavoriteInPrgoress(false));\r\n    else\r\n      onAddFavorite(currentUser.id, scheme.id, () =>\r\n        setFavoriteInPrgoress(false)\r\n      );\r\n  }, [\r\n    favoriteID,\r\n    currentUser,\r\n    onRemoveFavorite,\r\n    onAddFavorite,\r\n    setFavoriteInPrgoress,\r\n  ]);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    onRename(scheme.id, name);\r\n  }, [scheme, name]);\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(scheme.name);\r\n  }, [setName, scheme.name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDelete = useCallback(() => {\r\n    onDelete(scheme.id, () => history.push(\"/\"));\r\n  }, [onDelete, scheme]);\r\n\r\n  useEffect(() => {\r\n    setName(scheme.name);\r\n  }, [scheme.name]);\r\n\r\n  return (\r\n    <>\r\n      <CustomDialogContent dividers>\r\n        {favoriteInPrgoress ? (\r\n          <CircularProgress size={30} mb={2} />\r\n        ) : (\r\n          <CustomButton\r\n            startIcon={\r\n              favoriteID ? (\r\n                <FontAwesomeIcon icon={faStarOn} size=\"sm\" />\r\n              ) : (\r\n                <FontAwesomeIcon icon={faStarOff} size=\"sm\" />\r\n              )\r\n            }\r\n            mb={2}\r\n            onClick={handleToggleFavorite}\r\n          >\r\n            Favorite\r\n          </CustomButton>\r\n        )}\r\n\r\n        <Box display=\"flex\" my={2}>\r\n          <NameInput\r\n            label=\"Name\"\r\n            variant=\"outlined\"\r\n            disabled={!editable}\r\n            value={name}\r\n            onChange={handleNameChange}\r\n            onKeyDown={handleNameKeyDown}\r\n            width=\"300px\"\r\n            mr={2}\r\n          />\r\n          {scheme && name !== scheme.name ? (\r\n            <LightTooltip title=\"Discard Change\" arrow mr={1}>\r\n              <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n                <BackUpIcon />\r\n              </IconButton>\r\n            </LightTooltip>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {scheme && name !== scheme.name ? (\r\n            <LightTooltip title=\"Save\" arrow>\r\n              <IconButton onClick={handleSaveName}>\r\n                <SaveIcon />\r\n              </IconButton>\r\n            </LightTooltip>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n\r\n        <Box pl={2}>\r\n          <Typography>Owner: {owner.drivername}</Typography>\r\n          <Typography>\r\n            Created: {new Date(scheme.date_created * 1000).toDateString()}\r\n          </Typography>\r\n          <Typography>\r\n            Last Modified:{\" \"}\r\n            {new Date(scheme.date_modified * 1000).toDateString()} By{\" \"}\r\n            {modifier.drivername}\r\n          </Typography>\r\n        </Box>\r\n\r\n        {owner.id === currentUser.id ? (\r\n          <CustomButton\r\n            mt={2}\r\n            onClick={() =>\r\n              setDeleteMessage(`Are you sure to delete \"${scheme.name}\"?`)\r\n            }\r\n            color=\"secondary\"\r\n          >\r\n            Delete Project\r\n          </CustomButton>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose} color=\"secondary\" variant=\"outlined\">\r\n          Close\r\n        </Button>\r\n      </DialogActions>\r\n\r\n      <ConfirmDialog\r\n        text={deleteMessage}\r\n        open={!!deleteMessage}\r\n        onCancel={() => setDeleteMessage(null)}\r\n        onConfirm={handleDelete}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import React from \"react\";\r\n\r\nimport { Tab, Tabs, Box } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`project-settings-tabpanel-${index}`}\r\n      aria-labelledby={`project-settings-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport const a11yProps = (index) => {\r\n  return {\r\n    id: `project-settings-tab-${index}`,\r\n    \"aria-controls\": `project-settings-tabpanel-${index}`,\r\n  };\r\n};\r\n\r\nexport const StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n  root: {\r\n    paddingLeft: \"24px\",\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport const StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: \"10px\",\r\n    padding: \"6px 5px\",\r\n    minWidth: 120,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n","import React, { useState, useCallback, useMemo } from \"react\";\r\n\r\nimport { Box, Dialog, DialogTitle } from \"components/MaterialUI\";\r\nimport { GeneralSetting, GuidesSetting, SharingSetting } from \"./components\";\r\nimport { StyledTabs, StyledTab, TabPanel, a11yProps } from \"./styles\";\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const {\r\n    scheme,\r\n    editable,\r\n    favoriteID,\r\n    currentUser,\r\n    userList,\r\n    sharedUsers,\r\n    onCancel,\r\n    open,\r\n    onApplyGuideSettings,\r\n    onApplySharingSetting,\r\n    onAddFavorite,\r\n    onRemoveFavorite,\r\n    onRename,\r\n    onDelete,\r\n  } = props;\r\n  const {\r\n    id: schemeID,\r\n    user_id: ownerID,\r\n    guide_data,\r\n    last_modified_by,\r\n  } = scheme;\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  const owner = useMemo(() => userList.find((item) => item.id === ownerID), [\r\n    ownerID,\r\n    userList,\r\n  ]);\r\n\r\n  const modifier = useMemo(\r\n    () => userList.find((item) => item.id === last_modified_by),\r\n    [last_modified_by, userList]\r\n  );\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n    },\r\n    [setTabValue]\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Project Settings</DialogTitle>\r\n      <StyledTabs\r\n        value={tabValue}\r\n        onChange={handleTabChange}\r\n        aria-label=\"Project Settings Tab\"\r\n      >\r\n        <StyledTab label=\"General\" {...a11yProps(0)} />\r\n        <StyledTab label=\"Painting Guides\" {...a11yProps(1)} />\r\n        <StyledTab label=\"Sharing\" {...a11yProps(2)} />\r\n      </StyledTabs>\r\n      <Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <GeneralSetting\r\n            editable={editable}\r\n            scheme={scheme}\r\n            currentUser={currentUser}\r\n            owner={owner}\r\n            modifier={modifier}\r\n            favoriteID={favoriteID}\r\n            onRemoveFavorite={onRemoveFavorite}\r\n            onAddFavorite={onAddFavorite}\r\n            onRename={onRename}\r\n            onDelete={onDelete}\r\n            onClose={onCancel}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <GuidesSetting\r\n            editable={editable}\r\n            guide_data={guide_data}\r\n            onApply={onApplyGuideSettings}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={2}>\r\n          <SharingSetting\r\n            editable={editable}\r\n            ownerID={ownerID}\r\n            currentUserID={currentUser.id}\r\n            schemeID={schemeID}\r\n            userList={userList}\r\n            sharedUsers={sharedUsers}\r\n            onApply={onApplySharingSetting}\r\n            onCancel={onCancel}\r\n          />\r\n        </TabPanel>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import SchemeSettingsDialog from \"./SchemeSettingsDialog\";\r\n\r\nexport default SchemeSettingsDialog;\r\n","import React, { useState, useCallback, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n  setShowProperties,\r\n} from \"redux/reducers/boardReducer\";\r\nimport {\r\n  updateScheme,\r\n  createSharedUser,\r\n  updateSharedUserItem,\r\n  deleteSharedUserItem,\r\n  createFavoriteScheme,\r\n  deleteFavoriteItem,\r\n  deleteScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n  Settings as SettingsIcon,\r\n} from \"@material-ui/icons\";\r\nimport { ChevronsLeft, ChevronsRight } from \"react-feather\";\r\n\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\nimport SchemeSettingsDialog from \"dialogs/scheme-settings-dialog\";\r\n\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    editable,\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [dialog, setDialog] = useState(null);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const currentUser = useSelector((state) => state.authReducer.user);\r\n  const favoriteSchemeList = useSelector(\r\n    (state) => state.schemeReducer.favoriteList\r\n  );\r\n  const favroiteScheme = useMemo(\r\n    () =>\r\n      favoriteSchemeList.find((item) => item.scheme_id === currentScheme.id),\r\n    [favoriteSchemeList]\r\n  );\r\n\r\n  const handleToggleProperties = useCallback(() => {\r\n    dispatch(setShowProperties(!showProperties));\r\n  }, [dispatch, showProperties]);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleApplyProjectSettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  const handleApplySharingSetting = useCallback(\r\n    (data) => {\r\n      console.log(data);\r\n      let count = 0;\r\n      if (data.newUser && data.newUser.editable >= 0) {\r\n        count += 1;\r\n        dispatch(\r\n          createSharedUser(\r\n            {\r\n              user_id: data.newUser.user_id,\r\n              scheme_id: data.newUser.scheme_id,\r\n              accepted: data.newUser.accepted,\r\n              editable: data.newUser.editable,\r\n            },\r\n            () => {\r\n              dispatch(\r\n                setMessage({\r\n                  message: \"Shared Project successfully!\",\r\n                  type: \"success\",\r\n                })\r\n              );\r\n            }\r\n          )\r\n        );\r\n      }\r\n      for (let sharedUser of data.sharedUsers) {\r\n        if (sharedUser.editable === -1) {\r\n          dispatch(\r\n            deleteSharedUserItem(sharedUser.id, () => {\r\n              if (!count)\r\n                dispatch(\r\n                  setMessage({\r\n                    message: \"Applied Sharing Setting successfully!\",\r\n                    type: \"success\",\r\n                  })\r\n                );\r\n              count += 1;\r\n            })\r\n          );\r\n        } else {\r\n          dispatch(\r\n            updateSharedUserItem(\r\n              sharedUser.id,\r\n              {\r\n                editable: sharedUser.editable,\r\n              },\r\n              () => {\r\n                if (!count)\r\n                  dispatch(\r\n                    setMessage({\r\n                      message: \"Applied Sharing Setting successfully!\",\r\n                      type: \"success\",\r\n                    })\r\n                  );\r\n                count += 1;\r\n              }\r\n            )\r\n          );\r\n        }\r\n      }\r\n\r\n      setDialog(null);\r\n    },\r\n    [dispatch, setDialog]\r\n  );\r\n\r\n  const handleCreateFavorite = useCallback(\r\n    (user_id, scheme_id, callback) => {\r\n      dispatch(\r\n        createFavoriteScheme(\r\n          {\r\n            user_id,\r\n            scheme_id,\r\n          },\r\n          callback\r\n        )\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleRemoveFavorite = useCallback(\r\n    (favoriteID, callback) => {\r\n      dispatch(deleteFavoriteItem(favoriteID, callback));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleSaveName = useCallback(\r\n    (schemeID, name) => {\r\n      dispatch(updateScheme({ id: schemeID, name }));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleDeleteProject = useCallback(\r\n    (schemeID, callback) => {\r\n      dispatch(deleteScheme(schemeID, callback));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n          <LightTooltip title=\"Settings\" arrow>\r\n            <IconButton ml={2} onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n              <SettingsIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n\r\n          <LightTooltip title=\"Toggle Properties\" arrow>\r\n            <IconButton onClick={handleToggleProperties} ml={2}>\r\n              {showProperties ? <ChevronsRight /> : <ChevronsLeft />}\r\n            </IconButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n\r\n      <SchemeSettingsDialog\r\n        scheme={currentScheme}\r\n        editable={editable}\r\n        favoriteID={favroiteScheme ? favroiteScheme.id : null}\r\n        currentUser={currentUser}\r\n        sharedUsers={sharedUsers}\r\n        userList={userList}\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApplyGuideSettings={handleApplyProjectSettings}\r\n        onApplySharingSetting={handleApplySharingSetting}\r\n        onRemoveFavorite={handleRemoveFavorite}\r\n        onAddFavorite={handleCreateFavorite}\r\n        onRename={handleSaveName}\r\n        onDelete={handleDeleteProject}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            layer_data.shadowOffsetX * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            layer_data.shadowOffsetY * Math.abs(scaleY)\r\n          ),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          node.cache({\r\n            pixelRatio: getPixelRatio(shapeRef.current),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // node.getLayer().batchDraw();\r\n        } else {\r\n          node.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import Canvg from \"canvg\";\r\nimport React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useMemo,\r\n  useCallback,\r\n} from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image, Group, Rect } from \"react-konva\";\r\n\r\nconst GroupedURLImage = ({\r\n  id,\r\n  src,\r\n  editable,\r\n  bgColor = null,\r\n  paddingX = 0,\r\n  paddingY = 0,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const imageshapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = useMemo(\r\n    () => (filterColor && filterColor.length ? [Konva.Filters.RGBA] : []),\r\n    [filterColor]\r\n  );\r\n\r\n  const getPixelRatio = useCallback((node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (imageshapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        imageshapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(imageshapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // imageshapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        imageshapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = useCallback(async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      imageshapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(imageshapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // imageshapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, [\r\n    frameSize,\r\n    allowFit,\r\n    props.width,\r\n    props.height,\r\n    tellSize,\r\n    onLoadLayer,\r\n    onChange,\r\n    setImage,\r\n    getPixelRatio,\r\n    mathRound2,\r\n  ]);\r\n  const loadImage = useCallback(async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  }, [handleLoad]);\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [mathRound2, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const imageNode = imageshapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n          height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n          shadowBlur: mathRound2(imageNode.shadowBlur() * xyScale),\r\n          shadowOffsetX: mathRound2(\r\n            (layer_data.shadowOffsetX || 0) * Math.abs(scaleX)\r\n          ),\r\n          shadowOffsetY: mathRound2(\r\n            (layer_data.shadowOffsetY || 0) * Math.abs(scaleY)\r\n          ),\r\n          paddingX: mathRound2((layer_data.paddingX || 0) * Math.abs(scaleX)),\r\n          paddingY: mathRound2((layer_data.paddingY || 0) * Math.abs(scaleY)),\r\n        });\r\n        if (filterColor && filterColor.length) {\r\n          imageNode.cache({\r\n            pixelRatio: getPixelRatio(imageNode),\r\n            imageSmoothingEnabled: true,\r\n          });\r\n          // imageNode.getLayer().batchDraw();\r\n        } else {\r\n          imageNode.clearCache();\r\n        }\r\n      }\r\n    },\r\n    [filterColor, mathRound2, getPixelRatio, onChange]\r\n  );\r\n\r\n  return (\r\n    <Group\r\n      {...props}\r\n      ref={shapeRef}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      draggable={onChange && editable}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    >\r\n      <Rect\r\n        x={-paddingX || 0}\r\n        y={-paddingY || 0}\r\n        width={props.width + 2 * (paddingX || 0)}\r\n        height={props.height + 2 * (paddingY || 0)}\r\n        fill={bgColor}\r\n      />\r\n      <Image\r\n        x={0}\r\n        y={0}\r\n        width={props.width}\r\n        height={props.height}\r\n        shadowBlur={props.shadowBlur}\r\n        shadowOffsetX={props.shadowOffsetX}\r\n        shadowOffsetY={props.shadowOffsetY}\r\n        image={image}\r\n        ref={imageshapeRef}\r\n        red={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).r : null\r\n        }\r\n        green={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n        }\r\n        blue={\r\n          filterColor && filterColor.length ? hexToRgba(filterColor).b : null\r\n        }\r\n        alpha={\r\n          filterColor && filterColor.length\r\n            ? hexToRgba(filterColor).a / 255\r\n            : null\r\n        }\r\n        filters={filters.length ? filters : null}\r\n        perfectDrawEnabled={false}\r\n        shadowForStrokeEnabled={false}\r\n      />\r\n    </Group>\r\n  );\r\n};\r\n\r\nexport default GroupedURLImage;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    editable,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <GroupedURLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            bgColor={layer.layer_data.bgColor}\r\n            paddingX={layer.layer_data.paddingX}\r\n            paddingY={layer.layer_data.paddingY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = useCallback(() => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  }, [id, fontFamily, fontFile, onFontLoad, onLoadLayer, setLoadedFontFamily]);\r\n\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        onChange({\r\n          left: mathRound2(e.target.x()),\r\n          top: mathRound2(e.target.y()),\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n        });\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [onChange, onDragEnd]\r\n  );\r\n\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        onChange({\r\n          left: mathRound2(node.x()),\r\n          top: mathRound2(node.y()),\r\n          // set minimal value\r\n          width: mathRound2(Math.max(5, node.width())),\r\n          height: mathRound2(Math.max(5, node.height())),\r\n          rotation: mathRound2(node.rotation()) || 0,\r\n          scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n          scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n          flop: scaleX > 0 ? 0 : 1,\r\n          flip: scaleY > 0 ? 0 : 1,\r\n        });\r\n      }\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport GroupedURLImage from \"components/GroupedURLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <GroupedURLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              editable={editable}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              bgColor={layer.layer_data.bgColor}\r\n              paddingX={layer.layer_data.paddingX}\r\n              paddingY={layer.layer_data.paddingY}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n              onDragStart={onDragStart}\r\n              onDragEnd={onDragEnd}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  editable,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  onDragStart,\r\n  onDragEnd,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = useCallback(\r\n    (e) => {\r\n      onSelect();\r\n      if (onDragStart) onDragStart();\r\n    },\r\n    [onSelect, onDragStart]\r\n  );\r\n  const handleDragEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n              top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n      if (onDragEnd) onDragEnd();\r\n    },\r\n    [offsetsFromStroke, onChange, onDragEnd]\r\n  );\r\n  const handleTransformEnd = useCallback(\r\n    (e) => {\r\n      if (onChange) {\r\n        const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n        const node = shapeRef.current;\r\n        const scaleX = node.scaleX();\r\n        const scaleY = node.scaleY();\r\n        const width =\r\n          type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n        const height =\r\n          type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n        const xyScale = Math.abs(\r\n          Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n        );\r\n\r\n        // we will reset it back\r\n        node.scaleX(scaleX > 0 ? 1 : -1);\r\n        node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n        onChange(\r\n          _.pick(\r\n            {\r\n              left: mathRound2(node.x() - offsetsFromStroke.x),\r\n              top: mathRound2(node.y() - offsetsFromStroke.y),\r\n              width: mathRound2(\r\n                Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n              ),\r\n              height: mathRound2(\r\n                Math.max(1, height * Math.abs(scaleY)) -\r\n                  offsetsFromStroke.height\r\n              ),\r\n              radius: node.radius\r\n                ? mathRound2(\r\n                    Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.radius\r\n                  )\r\n                : 0,\r\n              innerRadius: node.innerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.innerRadius\r\n                  )\r\n                : 0,\r\n              outerRadius: node.outerRadius\r\n                ? mathRound2(\r\n                    Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                      offsetsFromStroke.outerRadius\r\n                  )\r\n                : 0,\r\n              rotation: mathRound2(node.rotation()) || 0,\r\n              flop: scaleX > 0 ? 0 : 1,\r\n              flip: scaleY > 0 ? 0 : 1,\r\n              stroke: mathRound2(node.strokeWidth() * xyScale),\r\n              shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n              shadowOffsetX: mathRound2(\r\n                layer_data.shadowOffsetX * Math.abs(scaleX)\r\n              ),\r\n              shadowOffsetY: mathRound2(\r\n                layer_data.shadowOffsetY * Math.abs(scaleY)\r\n              ),\r\n              cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n              cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n              cornerBottomLeft: mathRound2(\r\n                layer_data.cornerBottomLeft * xyScale\r\n              ),\r\n              cornerBottomRight: mathRound2(\r\n                layer_data.cornerBottomRight * xyScale\r\n              ),\r\n              points: points.map((point, index) =>\r\n                index % 2 === 0\r\n                  ? mathRound2(point * Math.abs(scaleX))\r\n                  : mathRound2(point * Math.abs(scaleY))\r\n              ),\r\n            },\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          )\r\n        );\r\n      }\r\n    },\r\n    [type, offsetsFromStroke, layer_data, points, onChange]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange && editable}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    editable,\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n    onDragStart,\r\n    onDragEnd,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            editable={editable}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n            onDragStart={onDragStart}\r\n            onDragEnd={onDragEnd}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\nimport { getSnapRotation, rotateAroundCenter } from \"helper\";\r\n\r\nconst TransformerComponent = ({\r\n  trRef,\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = useCallback(() => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  }, [selectedLayer]);\r\n\r\n  useEffect(() => {\r\n    checkNode();\r\n  }, [checkNode]);\r\n\r\n  const boundBoxFunc = useCallback(\r\n    (oldBoundBox, newBoundBox) => {\r\n      const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n      const diff = closesSnap - oldBoundBox.rotation;\r\n      if (pressedKey === \"shift\") {\r\n        if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n          return newBoundBox;\r\n        }\r\n        if (Math.abs(diff) > 0) {\r\n          return rotateAroundCenter(oldBoundBox, diff);\r\n        }\r\n        return oldBoundBox;\r\n      }\r\n      return newBoundBox;\r\n    },\r\n    [pressedKey, getSnapRotation, rotateAroundCenter]\r\n  );\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        id=\"defaultTransformer\"\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform || pressedKey === \"h\"\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        borderEnabled={pressedKey !== \"h\"}\r\n        rotateEnabled={!hoveredTransform && pressedKey !== \"h\"}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setPaintingGuides,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer, PaintingGuides } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  wrapperWidth,\r\n  wrapperHeight,\r\n  wrapperRef,\r\n  hoveredLayerJSON,\r\n  editable,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n  activeTransformerRef,\r\n  hoveredTransformerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n  const [previousGuide, setPreviousGuide] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const showGuideForRepositioning = useCallback(\r\n    (show = true) => {\r\n      if (!show) {\r\n        dispatch(setPaintingGuides([...previousGuide]));\r\n        setPreviousGuide([]);\r\n      } else if (!previousGuide.length) {\r\n        setPreviousGuide([...paintingGuides]);\r\n        let newPaintingGuides = [...paintingGuides];\r\n        if (\r\n          currentScheme.guide_data.show_wireframe &&\r\n          !newPaintingGuides.includes(PaintingGuides.WIREFRAME)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.WIREFRAME);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_numberBlocks &&\r\n          !newPaintingGuides.includes(PaintingGuides.NUMBERBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.NUMBERBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_sponsor &&\r\n          !newPaintingGuides.includes(PaintingGuides.SPONSORBLOCKS)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.SPONSORBLOCKS);\r\n        }\r\n        if (\r\n          currentScheme.guide_data.show_grid &&\r\n          !newPaintingGuides.includes(PaintingGuides.GRID)\r\n        ) {\r\n          newPaintingGuides.push(PaintingGuides.GRID);\r\n        }\r\n        dispatch(setPaintingGuides(newPaintingGuides));\r\n      }\r\n    },\r\n    [dispatch, paintingGuides, previousGuide, setPreviousGuide, currentScheme]\r\n  );\r\n  const handleLayerDragStart = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(true);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n  const handleLayerDragEnd = useCallback(() => {\r\n    if (\r\n      currentScheme.guide_data.show_wireframe ||\r\n      currentScheme.guide_data.show_numberBlocks ||\r\n      currentScheme.guide_data.show_sponsor ||\r\n      currentScheme.guide_data.show_grid\r\n    )\r\n      showGuideForRepositioning(false);\r\n  }, [showGuideForRepositioning, currentScheme]);\r\n\r\n  return (\r\n    <Box width=\"100%\" height=\"100%\" position=\"relative\">\r\n      <Box\r\n        width=\"100%\"\r\n        height=\"100%\"\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        margin=\"auto\"\r\n        id=\"board-wrapper\"\r\n        position=\"relative\"\r\n        ref={wrapperRef}\r\n      >\r\n        <Stage\r\n          width={wrapperWidth}\r\n          height={wrapperHeight}\r\n          onMousedown={handleMouseDown}\r\n          onContentMousedown={handleContentMouseDown}\r\n          onContentMousemove={handleMouseMove}\r\n          onContentMouseup={handleMouseUp}\r\n          onDblClick={handleContentDoubleClick}\r\n          onTouchStart={handleMouseDown}\r\n          onWheel={handleZoomStage}\r\n          scaleX={zoom || 1}\r\n          scaleY={zoom || 1}\r\n          rotation={boardRotate}\r\n          x={wrapperWidth / 2}\r\n          y={wrapperHeight / 2}\r\n          offsetX={frameSize.width / 2}\r\n          offsetY={frameSize.height / 2}\r\n          ref={stageRef}\r\n          draggable={mouseMode === MouseModes.DEFAULT}\r\n          style={{\r\n            cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n          }}\r\n        >\r\n          <Layer ref={baseLayerRef} listening={false}>\r\n            {/* Background */}\r\n            <Rect\r\n              x={0}\r\n              y={0}\r\n              width={frameSize.width}\r\n              height={frameSize.height}\r\n              fill={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              listening={false}\r\n            />\r\n            <BasePaints\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              layers={layerList}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer listening={false}>\r\n            <PaintingGuideBottom\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              guideData={currentScheme.guide_data}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer ref={mainLayerRef}>\r\n            {!currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            <Overlays\r\n              editable={editable}\r\n              layers={layerList}\r\n              frameSize={frameSize}\r\n              boardRotate={boardRotate}\r\n              currentLayer={currentLayer}\r\n              mouseMode={mouseMode}\r\n              loadedStatuses={loadedStatuses}\r\n              handleImageSize={handleImageSize}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <Shapes\r\n              editable={editable}\r\n              layers={layerList}\r\n              drawingLayer={drawingLayerRef.current}\r\n              boardRotate={boardRotate}\r\n              mouseMode={mouseMode}\r\n              currentLayer={currentLayer}\r\n              loadedStatuses={loadedStatuses}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            <LogosAndTexts\r\n              editable={editable}\r\n              layers={layerList}\r\n              fonts={fontList}\r\n              loadedFontList={loadedFontList}\r\n              frameSize={frameSize}\r\n              mouseMode={mouseMode}\r\n              boardRotate={boardRotate}\r\n              loadedStatuses={loadedStatuses}\r\n              currentLayer={currentLayer}\r\n              setCurrentLayer={handleLayerSelect}\r\n              onChange={handleLayerDataChange}\r\n              onFontLoad={handleAddFont}\r\n              onHover={handleHoverLayer}\r\n              onLoadLayer={handleLoadLayer}\r\n              onDragStart={handleLayerDragStart}\r\n              onDragEnd={handleLayerDragEnd}\r\n            />\r\n            {currentScheme.guide_data.show_carparts_on_top ? (\r\n              <CarParts\r\n                layers={layerList}\r\n                legacyMode={currentScheme.legacy_mode}\r\n                carMake={currentCarMake}\r\n                loadedStatuses={loadedStatuses}\r\n                handleImageSize={handleImageSize}\r\n                onLoadLayer={handleLoadLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n          <Layer ref={carMaskLayerRef} listening={false}>\r\n            <PaintingGuideCarMask\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n          </Layer>\r\n          <Layer>\r\n            <PaintingGuideTop\r\n              legacyMode={currentScheme.legacy_mode}\r\n              carMake={currentCarMake}\r\n              paintingGuides={paintingGuides}\r\n              loadedStatuses={loadedStatuses}\r\n              frameSize={frameSize}\r\n              guideData={currentScheme.guide_data}\r\n              handleImageSize={handleImageSize}\r\n              onLoadLayer={handleLoadLayer}\r\n            />\r\n            {editable ? (\r\n              <TransformerComponent\r\n                trRef={activeTransformerRef}\r\n                selectedLayer={currentLayer}\r\n                pressedKey={pressedKey}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n\r\n            {hoveredLayerJSON &&\r\n            (!currentLayer ||\r\n              !hoveredLayerJSON[currentLayer.id] ||\r\n              !editable) ? (\r\n              <TransformerComponent\r\n                trRef={hoveredTransformerRef}\r\n                selectedLayer={layerList.find(\r\n                  (item) => hoveredLayerJSON[item.id]\r\n                )}\r\n                hoveredTransform={true}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Layer>\r\n        </Stage>\r\n        <Box position=\"absolute\" right={0} top={0}>\r\n          <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n              <RotateLeftIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n          <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n            <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n              <RotateRightIcon />\r\n            </RotationButton>\r\n          </LightTooltip>\r\n        </Box>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          alignItems=\"center\"\r\n        >\r\n          <ScreenLoader />\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  H: \"Hide Transformer\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { DialogTypes } from \"constant\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = (props) => {\r\n  const { onBack } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(updateScheme({ id: currentScheme.id, name }));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"158px\" : \"250px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={onBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disabled,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock &&\r\n          !disabled &&\r\n          (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {!disabled && (selected || hovered || !layer_visible) ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    disabled,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd && !disabled}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                  disabled={disabled}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst Root = styled.div`\r\n  justify-content: center;\r\n  align-items: center;\r\n  display: flex;\r\n  min-height: 60px;\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Root>\r\n      <CircularProgress m={2} color=\"secondary\" />\r\n    </Root>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? []\r\n        : legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      !carMake\r\n        ? false\r\n        : legacyMode\r\n        ? limit < basePaints.length\r\n        : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3} spacing={8}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst OverlayDialog = (props) => {\r\n  const step = 30;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { overlays, onCancel, open, onOpenOverlay } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [limit, step, setLimit]);\r\n\r\n  const filteredOverlays = useMemo(\r\n    () =>\r\n      overlays.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n          item.description.toLowerCase().includes(search.toLowerCase())\r\n      ),\r\n    [overlays, search]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Overlay</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredOverlays.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredOverlays.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenOverlay(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(OverlayDialog);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 30;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const filteredLogos = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type !== \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const filteredFlags = useMemo(\r\n    () =>\r\n      logos.filter(\r\n        (item) =>\r\n          item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n          item.type === \"flag\"\r\n      ),\r\n    [logos, search]\r\n  );\r\n\r\n  const increaseLogoData = useCallback(() => {\r\n    setLogoLimit(logoLimit + step);\r\n  }, [logoLimit, step, setLogoLimit]);\r\n\r\n  const increaseFlagData = useCallback(() => {\r\n    setFlagLimit(flagLimit + step);\r\n  }, [flagLimit, step, setFlagLimit]);\r\n\r\n  const handleTabChange = useCallback(\r\n    (event, newValue) => {\r\n      setTabValue(newValue);\r\n      setSearch(\"\");\r\n    },\r\n    [setTabValue, setSearch]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 30;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, disabled, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      disabled={disabled}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useCallback } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backcolor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = useCallback(\r\n    (fontFamily, fontFile) => {\r\n      let fontObject = new FontFace(fontFamily, fontFile);\r\n      fontObject\r\n        .load()\r\n        .then(function (loaded_face) {\r\n          document.fonts.add(loaded_face);\r\n          dispatch(insertToLoadedFontList(fontFamily));\r\n        })\r\n        .catch(function (error) {\r\n          // error occurred\r\n          console.warn(error, fontFamily);\r\n        });\r\n    },\r\n    [insertToLoadedFontList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backcolor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromOverlay,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex, getZoomedCenterPosition } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport OverlayDialog from \"dialogs/OverlayDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard, stageRef, editable }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenOverlay = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromOverlay(\r\n          currentScheme.id,\r\n          shape,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromLogo(\r\n          currentScheme.id,\r\n          logo,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayerFromUpload(\r\n          currentScheme.id,\r\n          upload,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      console.log(getZoomedCenterPosition(stageRef, frameSize, zoom));\r\n      dispatch(\r\n        createTextLayer(\r\n          currentScheme.id,\r\n          values,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      getZoomedCenterPosition,\r\n      stageRef,\r\n      frameSize,\r\n      zoom,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              disabled={!editable}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              disabled={!editable}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() =>\r\n                  editable\r\n                    ? setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)\r\n                    : null\r\n                }\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <OverlayDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        overlays={overlayList}\r\n        onOpenOverlay={handleOpenOverlay}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    editable,\r\n    stageRef,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onBack,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      let base_color = color;\r\n      if (base_color !== \"transparent\") {\r\n        base_color = base_color.replace(\"#\", \"\");\r\n      }\r\n      dispatch(updateScheme({ id: currentScheme.id, base_color }));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    let base_color = colorInput;\r\n    if (base_color !== \"transparent\") {\r\n      base_color = base_color.replace(\"#\", \"\");\r\n    }\r\n    dispatch(updateScheme({ id: currentScheme.id, base_color }));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar onBack={onBack} />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          stageRef={stageRef}\r\n          focusBoard={focusBoard}\r\n          editable={editable}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            disabled={!editable}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disabled={!editable}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  disabled={!editable}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              disabled={!editable}\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                disabled={!editable}\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                disabled={!editable}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                disabled={!editable}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              disabled={!editable}\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                disabled={!editable}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                disabled={!editable}\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  disabled={!editable}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"components/MaterialUI\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst BackgroundProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"bgColor\", \"paddingX\", \"paddingY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Background</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.bgColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\">\r\n                    BG Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.bgColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => onLayerDataUpdate(\"bgColor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.bgColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.bgColor\r\n                  )}\r\n                  helperText={errors.layer_data && errors.layer_data.bgColor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingX\"\r\n                  label=\"PaddingX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  disabled={!editable}\r\n                  value={mathRound2(values.layer_data.paddingX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.paddingY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.paddingY\"\r\n                  label=\"PaddingY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.paddingY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.paddingY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.paddingY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.paddingY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.paddingY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(BackgroundProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { rotateAroundCenter } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    stageRef,\r\n    currentLayer,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  const handleChangeRotation = useCallback(\r\n    (value) => {\r\n      if (\r\n        ![\r\n          MouseModes.CIRCLE,\r\n          MouseModes.ELLIPSE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n          MouseModes.ARROW,\r\n          MouseModes.PEN,\r\n        ].includes(currentLayer.layer_data.type)\r\n      ) {\r\n        const stage = stageRef.current;\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n        const newRot = (value / 180) * Math.PI;\r\n        const boundBox = {\r\n          x: selectedNode.x(),\r\n          y: selectedNode.y(),\r\n          width: selectedNode.width(),\r\n          height: selectedNode.height(),\r\n          rotation: (selectedNode.rotation() / 180) * Math.PI,\r\n        };\r\n\r\n        const newBoundBox = rotateAroundCenter(\r\n          boundBox,\r\n          newRot - boundBox.rotation\r\n        );\r\n\r\n        setFieldValue(\"layer_data.left\", newBoundBox.x);\r\n        setFieldValue(\"layer_data.top\", newBoundBox.y);\r\n      }\r\n      setFieldValue(\"layer_data.rotation\", value);\r\n    },\r\n    [currentLayer, rotateAroundCenter]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              disabled={!editable}\r\n              setValue={handleChangeRotation}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                disabled={!editable}\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Box display=\"flex\" alignItems=\"center\" height=\"100%\">\r\n                  <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                    Shadow Color\r\n                  </Typography>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  disabled={!editable}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              disabled={!editable}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              disabled={!editable}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n    onDelete,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"clone\") &&\r\n    !AllowedLayerTypes.includes(\"delete\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {editable && AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {editable && AllowedLayerTypes.includes(\"delete\") ? (\r\n        <Box width=\"100%\" mt={2}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            color=\"secondary\"\r\n            fullWidth\r\n            onClick={onDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    editable,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !values.layer_type\r\n        ? []\r\n        : values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  disabled={!editable}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {editable && isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport BackgroundProperty from \"./BackgroundProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    editable,\r\n    stageRef,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onDelete,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        if (!currentLayer) return false;\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <BackgroundProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          stageRef={stageRef}\r\n          currentLayer={currentLayer}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          editable={editable}\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty\r\n          {...formProps}\r\n          editable={editable}\r\n          onClone={onClone}\r\n          onDelete={onDelete}\r\n        />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = (props) => {\r\n  const { editable, stageRef, onClone, onDelete } = props;\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const initialValues = useMemo(\r\n    () =>\r\n      currentLayer\r\n        ? {\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }\r\n        : { ...defaultValues },\r\n    [defaultValues, currentLayer]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) onClone(currentLayer);\r\n  }, [onClone, currentLayer]);\r\n  const handleDelete = useCallback(() => {\r\n    if (currentLayer) onDelete(currentLayer);\r\n  }, [onDelete, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              editable={editable}\r\n              user={user}\r\n              stageRef={stageRef}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onDelete={handleDelete}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Wrapper py={5} px={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        height=\"34px\"\r\n      >\r\n        <Typography variant=\"h5\" noWrap>\r\n          Properties\r\n        </Typography>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, {\r\n  useEffect,\r\n  useState,\r\n  useRef,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useHistory, useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport {\r\n  getScheme,\r\n  setSaving,\r\n  setLoaded,\r\n  getSharedUsers,\r\n  updateListItem as updateSchemeListItem,\r\n  setCurrent as setCurrentScheme,\r\n  clearSharedUsers,\r\n  clearCurrent as clearCurrentScheme,\r\n  getFavoriteList,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  updateListItem as updateLayerListItem,\r\n  deleteListItem as deleteLayerListItem,\r\n  insertToList as insertToLayerList,\r\n  clearCurrent as clearCurrentLayer,\r\n  setLoadedStatusAll,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n  clearFrameSize,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  mathRound4,\r\n  dataURItoBlob,\r\n  addImageProcess,\r\n  getZoomedCenterPosition,\r\n} from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\nimport { getUserList } from \"redux/reducers/userReducer\";\r\nimport SocketClient from \"utils/socketClient\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const {\r\n    width: wrapperWidth,\r\n    height: wrapperHeight,\r\n    ref: wrapperRef,\r\n  } = useResizeDetector();\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n  const activeTransformerRef = useRef(null);\r\n  const hoveredTransformerRef = useRef(null);\r\n\r\n  const [user, userRef] = useReducerRef(\r\n    useSelector((state) => state.authReducer.user)\r\n  );\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const userList = useSelector((state) => state.userReducer.list);\r\n  const sharedUsers = useSelector((state) => state.schemeReducer.sharedUsers);\r\n  const favoriteSchemeList = useSelector(\r\n    (state) => state.schemeReducer.favoriteList\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const showProperties = useSelector(\r\n    (state) => state.boardReducer.showProperties\r\n  );\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const editable = useMemo(\r\n    () =>\r\n      !user || !currentScheme\r\n        ? false\r\n        : user.id === currentScheme.user_id ||\r\n          sharedUsers.find(\r\n            (shared) => shared.user_id === user.id && shared.editable\r\n          ),\r\n    [user, currentScheme, sharedUsers]\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoom = useCallback(\r\n    (newScale) => {\r\n      if (currentLayer && currentLayer.layer_data) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const selectedNode = stage.findOne(\".\" + currentLayer.id);\r\n\r\n        const { x: pointerX, y: pointerY } = selectedNode.getAbsolutePosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n\r\n        dispatch(setZoom(newScale));\r\n\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      } else {\r\n        dispatch(setZoom(newScale));\r\n      }\r\n    },\r\n    [dispatch, currentLayer, stageRef.current]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n\r\n  const handleZoomOut = useCallback(() => {\r\n    const newScale = mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25));\r\n    handleZoom(newScale);\r\n  }, [zoom, handleZoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleCloneLayer = useCallback(\r\n    (layer, samePosition = false, pushingToHistory = true) => {\r\n      dispatch(\r\n        cloneLayer(\r\n          layer,\r\n          samePosition,\r\n          pushingToHistory,\r\n          getZoomedCenterPosition(stageRef, frameSize, zoom)\r\n        )\r\n      );\r\n      focusBoard();\r\n    },\r\n    [dispatch, getZoomedCenterPosition, focusBoard, stageRef, frameSize, zoom]\r\n  );\r\n  const handleDeleteLayer = useCallback(\r\n    (layer) => {\r\n      setConfirmMessage(`Are you sure to delete \"${layer.layer_data.name}\"?`);\r\n    },\r\n    [setConfirmMessage]\r\n  );\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR &&\r\n          editable\r\n        ) {\r\n          handleDeleteLayer(currentLayer);\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey && editable) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer &&\r\n          editable\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer &&\r\n          editable\r\n        ) {\r\n          handleCloneLayer(clipboardLayer);\r\n        } else if (\r\n          event.key === \"z\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionBack());\r\n        } else if (\r\n          event.key === \"y\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          editable\r\n        ) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\" && editable) {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\" && editable) {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\" && editable) {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\" && editable) {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\" && editable) {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          } else if (currentLayer) {\r\n            dispatch(setCurrentLayer(null));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\" && editable) {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n      editable,\r\n      handleCloneLayer,\r\n      handleDeleteLayer,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let stageAttrs = { ...stageRef.current.attrs };\r\n\r\n      wrapperRef.current.style.width = `${frameSizeRef.current.width}px`;\r\n      wrapperRef.current.style.height = `${frameSizeRef.current.height}px`;\r\n\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: frameSizeRef.current.width / 2,\r\n        offsetY: frameSizeRef.current.width / 2,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: -frameSizeRef.current.width / 2,\r\n          y: -frameSizeRef.current.width / 2,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n          x: 0,\r\n          y: 0,\r\n          width: frameSizeRef.current.width,\r\n          height: frameSizeRef.current.height,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(stageAttrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      wrapperRef.current.style.width = `100%`;\r\n      wrapperRef.current.style.height = `100%`;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      return {\r\n        canvas,\r\n        ctx,\r\n        carMaskLayerImg,\r\n      };\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const uploadThumbnail = useCallback(\r\n    async (dataURL) => {\r\n      try {\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    },\r\n    [dispatch, currentSchemeRef.current]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(\r\n    async (uploadLater = true) => {\r\n      if (stageRef.current && currentSchemeRef.current) {\r\n        try {\r\n          console.log(\"Uploading Thumbnail\");\r\n          dispatch(setSaving(true));\r\n          const { canvas } = await takeScreenshot();\r\n          let dataURL = canvas.toDataURL(\"image/png\");\r\n          if (uploadLater) dispatch(setSaving(false));\r\n          await uploadThumbnail(dataURL);\r\n          if (!uploadLater) dispatch(setSaving(false));\r\n          console.log(\"Uploaded Thumbnail\");\r\n        } catch (err) {\r\n          dispatch(setMessage({ message: err.message }));\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      currentSchemeRef.current,\r\n      !stageRef.current,\r\n      takeScreenshot,\r\n      uploadThumbnail,\r\n    ]\r\n  );\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const { canvas, ctx, carMaskLayerImg } = await takeScreenshot(false);\r\n        let imageData = ctx.getImageData(0, 0, width, height);\r\n\r\n        dispatch(setSaving(false));\r\n\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `car_${userRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n        let dataURL = canvas.toDataURL(\"image/png\");\r\n        await uploadThumbnail(dataURL);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    userRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n    handleUploadThumbnail,\r\n  ]);\r\n\r\n  const handleGoBack = useCallback(async () => {\r\n    await handleUploadThumbnail(false);\r\n    dispatch(clearFrameSize());\r\n    dispatch(clearSharedUsers());\r\n    dispatch(clearCurrentScheme());\r\n    dispatch(clearCurrentLayer());\r\n    dispatch(setLoadedStatusAll({}));\r\n    dispatch(setLoaded(false));\r\n    history.push(\"/\");\r\n  }, [history, dispatch, handleUploadThumbnail]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(\r\n          getScheme(\r\n            params.id,\r\n            (scheme, tempsharedUsers) => {\r\n              if (\r\n                user.id !== scheme.user_id &&\r\n                !tempsharedUsers.find((shared) => shared.user_id === user.id)\r\n              ) {\r\n                dispatch(\r\n                  setMessage({\r\n                    message: \"You don't have permission for this project!\",\r\n                  })\r\n                );\r\n                history.push(\"/\");\r\n              } else {\r\n                if (!uploadsInitialized) {\r\n                  dispatch(getUploadListByUserID(user.id));\r\n                }\r\n                if (!overlayList.length) dispatch(getOverlayList());\r\n                if (!logoList.length) dispatch(getLogoList());\r\n                if (!fontList.length) dispatch(getFontList());\r\n                if (!userList.length) dispatch(getUserList());\r\n                if (!sharedUsers.length) dispatch(getSharedUsers(params.id));\r\n                if (!favoriteSchemeList.length)\r\n                  dispatch(getFavoriteList(user.id));\r\n              }\r\n            },\r\n            () => {\r\n              history.push(\"/\");\r\n            }\r\n          )\r\n        );\r\n      }\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (editable) {\r\n      const interval = setInterval(() => {\r\n        tick.current += 1;\r\n      }, 200);\r\n      const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n      return () => {\r\n        clearInterval(interval);\r\n        clearInterval(thumbnailInterval);\r\n      };\r\n    }\r\n  }, [editable]);\r\n\r\n  // Socket.io Stuffs\r\n  useEffect(() => {\r\n    SocketClient.connect();\r\n\r\n    SocketClient.on(\"connect\", () => {\r\n      SocketClient.emit(\"room\", params.id);\r\n    });\r\n\r\n    SocketClient.on(\"client-create-layer\", (response) => {\r\n      dispatch(insertToLayerList(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-update-layer\", (response) => {\r\n      dispatch(updateLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-delete-layer\", (response) => {\r\n      dispatch(deleteLayerListItem(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-update-scheme\", (response) => {\r\n      dispatch(updateSchemeListItem(response.data));\r\n      dispatch(setCurrentScheme(response.data));\r\n    });\r\n\r\n    SocketClient.on(\"client-delete-scheme\", () => {\r\n      dispatch(setMessage({ message: \"The Project has been deleted!\" }));\r\n      history.push(\"/\");\r\n    });\r\n\r\n    return () => {\r\n      SocketClient.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).length &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n      setTimeout(handleUploadThumbnail, 5000);\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box\r\n            width=\"100%\"\r\n            height=\"calc(100% - 50px)\"\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              editable={editable}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              stageRef={stageRef}\r\n              onBack={handleGoBack}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper background=\"#282828\" overflow=\"hidden\" flexGrow=\"1\">\r\n              <Board\r\n                wrapperWidth={wrapperWidth}\r\n                wrapperHeight={wrapperHeight}\r\n                wrapperRef={wrapperRef}\r\n                hoveredLayerJSON={hoveredJSON}\r\n                editable={editable}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n                activeTransformerRef={activeTransformerRef}\r\n                hoveredTransformerRef={hoveredTransformerRef}\r\n              />\r\n            </Wrapper>\r\n            {showProperties ? (\r\n              <PropertyBar\r\n                stageRef={stageRef}\r\n                editable={editable}\r\n                onClone={handleCloneLayer}\r\n                onDelete={handleDeleteLayer}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Toolbar\r\n            editable={editable}\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useCallback } from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n    height: \"26px\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = useCallback(\r\n    (event) => {\r\n      onChange(event.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}