{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","setPaintingGuides","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","setZoom","id","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","imageRef","useRef","shapeRef","useState","image","setImage","useEffect","loadImage","current","removeEventListener","handleLoad","a","height","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","node","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","crossOrigin","addEventListener","onTap","ref","draggable","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","Math","max","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","frameSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","length","find","text","font_name","font_file","fontSize","size","fill","color","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","min","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","css","palette","Palette","deferred","hideTextfield","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","helperText","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","CustomColorPicker","ColorPicker","Sidebar","dialog","setDialog","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","SizeProperty","PositionProperty","MuiFormControl","FontProperty","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","PropertyBar","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","ScreenLoader","handleKeys","onKeyEvent","key","tagName","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","Date","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON"],"mappings":"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","file":"static/js/6.ea41686b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(zoom * 1.25));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(zoom / 1.25));\r\n  };\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={handleZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={handleZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Image } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const handleLoad = async () => {\r\n    let width = props.width || imageRef.current.width;\r\n    let height = props.height || imageRef.current.height;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    img.src = src;\r\n    img.crossOrigin = \"Anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(5, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(5, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: node.rotation(),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left)}\r\n          y={parseFloat(layer.layer_data.top)}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          opacity={layer.layer_data.opacity}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  // useEffect(() => {\r\n  //   const node = shapeRef.current;\r\n  //   if (\r\n  //     node &&\r\n  //     (node.width() !== props.width || node.height() !== props.height) &&\r\n  //     loadedFontFamily\r\n  //   ) {\r\n  //     if (onChange) {\r\n  //       onChange({\r\n  //         width: Helper.mathRound2(node.width()),\r\n  //         height: Helper.mathRound2(node.height()),\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // }, [shapeRef.current, loadedFontFamily]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        // width: Helper.mathRound2(Math.max(5, node.width())),\r\n        // height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()),\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left)}\r\n              y={parseFloat(layer.layer_data.top)}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left)}\r\n            y={parseFloat(layer.layer_data.top)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer) return <Transformer ref={trRef} keepRatio={false} />;\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale =\r\n        event.evt.deltaY > 0 ? oldScale * scaleBy : oldScale / scaleBy;\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField value={currentScheme.name} onChange={handleNameChange} />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  return (\r\n    <Box display=\"flex\" alignItems=\"center\">\r\n      <ColorPicker\r\n        value={value}\r\n        onChange={(color) => onChange(color.css.backgroundColor)}\r\n        palette={Palette}\r\n        deferred\r\n        hideTextfield\r\n      />\r\n      <ColorInputField\r\n        value={value}\r\n        onChange={(event) => onChange(event.target.value)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Palette, DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, TextField } from \"@material-ui/core\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\n\r\nconst CustomColorPicker = styled(ColorPicker)`\r\n  .MuiInputBase-input {\r\n    width: 70px;\r\n    border-bottom: 1px solid #8a8a8a;\r\n  }\r\n`;\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n  .MuiInputBase-input.Mui-disabled {\r\n    color: white;\r\n  }\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dialog, setDialog] = useState(null);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    console.log(\"Color: \", color);\r\n    dispatch(changeBaseColor(currentScheme.id, color.css.backgroundColor));\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <CustomColorPicker\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              deferred\r\n              onChange={handleChangeBasePaintColor}\r\n              palette={Palette}\r\n              hideTextfield\r\n            />\r\n            <ColorInputField\r\n              value={\r\n                currentScheme.base_color === \"transparent\"\r\n                  ? currentScheme.base_color\r\n                  : \"#\" + currentScheme.base_color\r\n              }\r\n              disabled\r\n            />\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  console.log(errors);\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_visible\", 1 - values.layer_visible)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  setFieldValue(\"layer_locked\", 1 - values.layer_locked)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.width\"\r\n              label=\"Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.width)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.width &&\r\n                errors.layer_data &&\r\n                errors.layer_data.width\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.height\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.height\"\r\n              label=\"Height\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.height)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.height &&\r\n                errors.layer_data &&\r\n                errors.layer_data.height\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleX\"\r\n              label=\"ScaleX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scaleY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.scaleY\"\r\n              label=\"ScaleY\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.scaleY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.scaleY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.scaleY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] !== currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] !== currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: \"#000000\",\r\n            opacity: 1,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number().test(\r\n                \"left-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value ||\r\n                  currentLayer.layer_type === LayerTypes.CAR ||\r\n                  currentLayer.layer_type === LayerTypes.BASE\r\n              ),\r\n              top: Yup.number().test(\r\n                \"top-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  value ||\r\n                  currentLayer.layer_type === LayerTypes.CAR ||\r\n                  currentLayer.layer_type === LayerTypes.BASE\r\n              ),\r\n              rotation: Yup.number()\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\")\r\n                .test(\r\n                  \"top-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string(),\r\n              size: Yup.number(),\r\n              scolor: Yup.string(),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty {...formProps} />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (\r\n      (key === \"del\" || key === \"backspace\") &&\r\n      event.target.tagName !== \"INPUT\" &&\r\n      currentLayer &&\r\n      currentLayer.layer_type !== LayerTypes.CAR\r\n    ) {\r\n      setConfirmMessage(\r\n        `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n      );\r\n    }\r\n    if (key === \"esc\" && event.target.tagName !== \"INPUT\" && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  return (\r\n    <>\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n};\r\n"],"sourceRoot":""}