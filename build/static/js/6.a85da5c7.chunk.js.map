{"version":3,"sources":["hooks/useReducerRef.jsx","utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","dialogs/DefaultSettingsDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/SkewProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx","dialogs/ConfirmDialog.jsx"],"names":["useReducerRef","value","ref","useRef","useEffect","current","Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomKeyDown","useCallback","event","keyCode","preventDefault","handleZoomChange","parseInt","target","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","onKeyDown","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","imageRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","Math","max","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","draggable","red","hexToRgba","r","green","g","blue","b","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","legacyMode","carMake","handleImageSize","guideData","loadedStatuses","gridPadding","useMemo","grid_padding","gridStroke","grid_stroke","getCarMakeImage","legacyCarMakeAssetURL","carMakeAssetURL","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","getLayerImage","legacyBasePaintAssetURL","basePaintAssetURL","basePaintIndex","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","config","assetsURL","source_file","parseFloat","skewX","skewY","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","replace","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","currentCarMake","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","legacy_mode","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","Palette","deferred","hideTextfield","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","handleDiscardName","handleGoBack","clearFrameSize","setSchemeLoaded","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","bases","total_bases","hasMore","getPreviewURL","base","getTitle","base_name","getDescription","base_description","name_short","dataLength","next","loader","Loader","scrollableTarget","cellHeight","cols","alt","GridListTileBar","subtitle","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","increaseData","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","ConfirmDialog","onConfirm","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","DefaultSettingsDialog","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","DefaultSettingsButton","outline","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","basePaintItemORIndex","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","alphaToHex","DEFAULT_SHAPE_SETTINGS","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","checkLayerDataDirty","layerDataProperties","JSON","stringify","every","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","SkewProperty","params","param","PropertyBar","defaultValues","handleClone","cloneLayer","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","currentSchemeRef","currentCarMakeRef","clipboardLayer","clipboard","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","targetWidth","car_type","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"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","file":"static/js/6.a85da5c7.chunk.js","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nexport const useReducerRef = (value) => {\r\n  const ref = useRef(value);\r\n\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  }, [value]);\r\n\r\n  return [value, ref];\r\n};\r\n","/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        onClose();\r\n      }\r\n    },\r\n    [onClose]\r\n  );\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          onKeyDown={handleZoomKeyDown}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React, { useCallback, useMemo } from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = useMemo(() => guideData.grid_padding || 10, [guideData]);\r\n  const gridStroke = useMemo(() => guideData.grid_stroke || 0.1, [guideData]);\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={getCarMakeImage(\"wireframe.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={getCarMakeImage(\"mask.png\")}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React, { useCallback } from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    legacyMode,\r\n    paintingGuides,\r\n    carMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={getCarMakeImage(\"sponsor_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={getCarMakeImage(\"number_blocks.png\")}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { legacyCarMakeAssetURL, carMakeAssetURL } from \"helper\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    legacyMode,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getCarMakeImage = useCallback(\r\n    (image) => {\r\n      return (\r\n        (legacyMode\r\n          ? legacyCarMakeAssetURL(carMake)\r\n          : carMakeAssetURL(carMake)) + image\r\n      );\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getCarMakeImage(layer.layer_data.img)}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst BasePaints = (props) => {\r\n  const {\r\n    legacyMode,\r\n    layers,\r\n    carMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getLayerImage = useCallback(\r\n    (layer) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(layer.layer_data) + layer.layer_data.img\r\n        : basePaintAssetURL(carMake, layer.layer_data.basePaintIndex) +\r\n            layer.layer_data.img;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={getLayerImage(layer)}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              skewX={layer.layer_data.skewX}\r\n              skewY={layer.layer_data.skewY}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n            top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x() - offsetsFromStroke.x),\r\n            top: mathRound2(node.y() - offsetsFromStroke.y),\r\n            width: mathRound2(\r\n              Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n            ),\r\n            height: mathRound2(\r\n              Math.max(1, height * Math.abs(scaleY)) - offsetsFromStroke.height\r\n            ),\r\n            radius: node.radius\r\n              ? mathRound2(\r\n                  Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.radius\r\n                )\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.innerRadius\r\n                )\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.outerRadius\r\n                )\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            skewX={layer.layer_data.skewX}\r\n            skewY={layer.layer_data.skewY}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef, useState, useEffect, useCallback } from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 0,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      currentScheme.guide_data,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width / 2}\r\n        y={height / 2}\r\n        offsetX={frameSize.width / 2}\r\n        offsetY={frameSize.height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            legacyMode={currentScheme.legacy_mode}\r\n            carMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n  setLoaded as setSchemeLoaded,\r\n} from \"redux/reducers/schemeReducer\";\r\nimport { clearFrameSize } from \"redux/reducers/boardReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearFrameSize());\r\n    dispatch(setSchemeLoaded(false));\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { basePaintAssetURL, legacyBasePaintAssetURL } from \"helper\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { legacyMode, basePaints, carMake, onCancel, open, onOpenBase } = props;\r\n  const bases = useMemo(\r\n    () =>\r\n      legacyMode\r\n        ? basePaints\r\n        : Array.from({ length: carMake.total_bases }, (_, i) => i + 1),\r\n    [legacyMode, basePaints, carMake]\r\n  );\r\n  const hasMore = useMemo(\r\n    () =>\r\n      legacyMode ? limit < basePaints.length : limit < carMake.total_bases,\r\n    [legacyMode, limit, basePaints, carMake]\r\n  );\r\n\r\n  const getPreviewURL = useCallback(\r\n    (base) => {\r\n      return legacyMode\r\n        ? legacyBasePaintAssetURL(base) + \"preview.jpg\" // For Legacy basepaint\r\n        : basePaintAssetURL(carMake, base) + \"preview.jpg\";\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n  const getTitle = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_name : `Base Paint ${base}`;\r\n    },\r\n    [legacyMode]\r\n  );\r\n  const getDescription = useCallback(\r\n    (base) => {\r\n      return legacyMode ? base.base_description : carMake.name_short;\r\n    },\r\n    [legacyMode, carMake]\r\n  );\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={hasMore}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {bases.slice(0, limit).map((item, index) => (\r\n              <CustomGridListTile\r\n                key={index}\r\n                cols={1}\r\n                onClick={() => onOpenBase(item)}\r\n              >\r\n                <CustomImg src={getPreviewURL(item)} alt={getTitle(item)} />\r\n                <GridListTileBar\r\n                  title={getTitle(item)}\r\n                  subtitle={getDescription(item)}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values[colorKey]}\r\n              onChange={(color) => setFieldValue(colorKey, color)}\r\n              onInputChange={(color) => setFieldValue(colorKey, color)}\r\n              error={Boolean(errors[colorKey])}\r\n              helperText={errors[colorKey]}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Opacity\"\r\n            min={0}\r\n            max={1}\r\n            step={0.01}\r\n            value={values[opacityKey]}\r\n            setValue={(value) => setFieldValue(opacityKey, value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {extraChildren}\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst DefaultSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Default Shape Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={10}\r\n                        step={1}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(DefaultSettingsDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { updateScheme } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { alphaToHex } from \"helper\";\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport DefaultSettingsDialog from \"dialogs/DefaultSettingsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst DefaultSettingsButton = styled(Box)`\r\n  outline: ${(props) => props.outline};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (basePaintItemORIndex) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(\r\n        createLayersFromBasePaint(\r\n          currentScheme.id,\r\n          basePaintItemORIndex,\r\n          currentScheme.legacy_mode\r\n        )\r\n      );\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"center\"\r\n          width=\"45px\"\r\n          height=\"45px\"\r\n          alignItems=\"center\"\r\n        >\r\n          <LightTooltip title=\"Default Shape Settings\" arrow placement=\"right\">\r\n            <Box bgcolor=\"#FFFFFF\" height=\"25px\">\r\n              <DefaultSettingsButton\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                bgcolor={\r\n                  (currentScheme.guide_data.default_shape_color || \"#000000\") +\r\n                  alphaToHex(\r\n                    currentScheme.guide_data.default_shape_opacity || 1\r\n                  )\r\n                }\r\n                outline={`${\r\n                  currentScheme.guide_data.default_shape_stroke || 0\r\n                }px solid ${\r\n                  currentScheme.guide_data.default_shape_scolor || \"#000000\"\r\n                }`}\r\n                onClick={() => setDialog(DialogTypes.DEFAULT_SHAPE_SETTINGS)}\r\n              />\r\n            </Box>\r\n          </LightTooltip>\r\n        </Box>\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        legacyMode={currentScheme.legacy_mode}\r\n        carMake={currentCarMake}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <DefaultSettingsDialog\r\n        open={dialog === DialogTypes.DEFAULT_SHAPE_SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button, Typography } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty && colorValidator(colorInput) ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : !colorValidator(colorInput) ? (\r\n                  <Typography color=\"secondary\" variant=\"body2\">\r\n                    Invalid Color\r\n                  </Typography>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    user,\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n  const layerDataProperties = [\"name\", \"text\", \"numPoints\", \"angle\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const layerName = useCallback(\r\n    (name, type) => {\r\n      if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n        return name.slice(user.id.toString().length + 1);\r\n      return name;\r\n    },\r\n    [user]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={layerName(values.layer_data.name, values.layer_type)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"width\",\r\n    \"height\",\r\n    \"scaleX\",\r\n    \"scaleY\",\r\n    \"radius\",\r\n    \"innerRadius\",\r\n    \"outerRadius\",\r\n    \"pointerLength\",\r\n    \"pointerWidth\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"left\", \"top\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"font\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"stroke\", \"scolor\", \"strokeType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"color\", \"opacity\", \"blendType\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\"rotation\", \"flip\", \"flop\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"shadowColor\",\r\n    \"shadowBlur\",\r\n    \"shadowOpacity\",\r\n    \"shadowOffsetX\",\r\n    \"shadowOffsetY\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\r\n    \"cornerTopLeft\",\r\n    \"cornerTopRight\",\r\n    \"cornerBottomLeft\",\r\n    \"cornerBottomRight\",\r\n  ];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopLeft\"\r\n                  label=\"Top Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerTopRight\"\r\n                  label=\"Top Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerTopRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerTopRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerTopRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomLeft\"\r\n                  label=\"Bottom Left\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomLeft &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomLeft\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.cornerBottomRight\"\r\n                  label=\"Bottom Right\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.cornerBottomRight &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.cornerBottomRight\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst SkewProperty = (props) => {\r\n  const {\r\n    errors,\r\n    isValid,\r\n    checkLayerDataDirty,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const layerDataProperties = [\"skewX\", \"skewY\"];\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    layerDataProperties.every(\r\n      (value) => !AllowedLayerTypes.includes(\"layer_data.\" + value)\r\n    )\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Skew</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewX\"\r\n                  label=\"SkewX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.skewY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.skewY\"\r\n                  label=\"SkewY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  inputProps={{\r\n                    step: 0.1,\r\n                  }}\r\n                  value={mathRound2(values.layer_data.skewY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.skewY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.skewY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.skewY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.skewY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n          {isValid && checkLayerDataDirty(layerDataProperties) ? (\r\n            <Box mt={2} width=\"100%\">\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SkewProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer, cloneLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\nimport SkewProperty from \"./SkewProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    user,\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const checkLayerDataDirty = useCallback(\r\n      (params) => {\r\n        for (let param of params) {\r\n          if (\r\n            formProps.values.layer_data[param] != currentLayer.layer_data[param]\r\n          )\r\n            return true;\r\n        }\r\n        return false;\r\n      },\r\n      [formProps.values, currentLayer]\r\n    );\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n        </Box>\r\n        <GeneralProperty\r\n          {...formProps}\r\n          user={user}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ColorProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <PositionProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SkewProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ShadowProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <CornerProperty\r\n          {...formProps}\r\n          checkLayerDataDirty={checkLayerDataDirty}\r\n        />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) dispatch(cloneLayer(currentLayer));\r\n  }, [dispatch, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  skewX: Yup.number(),\r\n                  skewY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              user={user}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport { useReducerRef } from \"hooks\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const [currentScheme, currentSchemeRef] = useReducerRef(\r\n    useSelector((state) => state.schemeReducer.current)\r\n  );\r\n  const [currentCarMake, currentCarMakeRef] = useReducerRef(\r\n    useSelector((state) => state.carMakeReducer.current)\r\n  );\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const [frameSize, frameSizeRef] = useReducerRef(\r\n    useSelector((state) => state.boardReducer.frameSize)\r\n  );\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  // const currentSchemeRef = useRef(null);\r\n  // const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      if (value === true) setHoveredJSON({ [key]: value });\r\n      else setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x(width / 2);\r\n    stageRef.current.y(height / 2);\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n      const targetWidth =\r\n        isPNG || currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n      const pixelRatio = targetWidth / frameSizeRef.current.width;\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(baseLayerImg, 0, 0, width, height);\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(mainLayerImg, 0, 0, width, height);\r\n      }\r\n      if (carMaskLayerImg && isPNG) {\r\n        ctx.drawImage(carMaskLayerImg, 0, 0, width, height);\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      currentCarMakeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [dispatch, currentSchemeRef.current, !stageRef.current, takeScreenshot]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        const width =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        const height =\r\n          currentCarMakeRef.current.car_type === \"Misc\" ? 1024 : 2048;\r\n        var tga = new TGA({\r\n          width: width,\r\n          height: height,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current,\r\n    currentCarMakeRef.current,\r\n    frameSizeRef.current,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses, schemeLoaded]);\r\n\r\n  // useEffect(() => {\r\n  //   currentSchemeRef.current = currentScheme;\r\n  // }, [currentScheme]);\r\n\r\n  // useEffect(() => {\r\n  //   frameSizeRef.current = frameSize;\r\n  // }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"secondary\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n"],"sourceRoot":""}