{"version":3,"sources":["pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","components/SearchBox.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/UploadDialog.jsx","components/SliderInput.jsx","components/FontSelect.jsx","components/ColorPickerInput.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/index.jsx","dialogs/ConfirmDialog.jsx","pages/scheme/index.jsx","helper/index.js"],"names":["Typography","styled","MuiTypography","spacing","ToggleButton","MuiToggleButton","Button","MuiButton","IconButton","MuiIconButton","Wrapper","div","CustomOutlinedInput","OutlinedInput","Toolbar","props","onZoomIn","onZoomOut","onChangePaintingGuides","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","zoom","Box","display","justifyContent","alignContent","width","variant","mr","ToggleButtonGroup","value","onChange","event","newFormats","aria-label","PaintingGuides","CARMASK","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","onClick","id","setZoom","parseInt","target","endAdornment","InputAdornment","position","labelWidth","URLImage","src","tellSize","onSelect","isSelected","filterColor","frameSize","allowFit","imageRef","useRef","shapeRef","useState","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","height","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","canvas","document","createElement","ctx","getContext","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","Helper","mathRound2","x","top","y","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","length","red","hexToRgba","r","green","g","blue","b","alpha","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","abs","rotation","flop","flip","PaintingGuideTop","gridPadding","currentCarMake","handleImageSize","config","assetsURL","folder_directory","replace","listening","Array","round","i","points","stroke","strokeWidth","PaintingGuideBottom","CarParts","layers","_","orderBy","filter","item","layer_type","LayerTypes","CAR","layer_visible","map","layer","layer_data","color","BasePaints","BASE","opacity","Overlays","currentLayer","setCurrentLayer","OVERLAY","name","toString","source_file","parseFloat","shadowColor","shadowBlur","shadowOpacity","shadowOffsetX","shadowOffsetY","layer_locked","values","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","load","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","filteredLayers","LOGO","UPLOAD","TEXT","font","find","text","font_name","font_file","fontSize","size","fill","scolor","strokeEnabled","offsetX","offsetY","TransformerComponent","selectedLayer","trRef","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","keepRatio","sizeLocked","scaleLocked","enabledAnchors","Board","stageRef","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","layerList","layerReducer","list","fontList","fontReducer","handleMouseDown","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","alignItems","margin","onMouseDown","onMousemove","onMouseup","onTouchStart","onWheel","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","min","deltaY","newPos","base_color","insertToLoadedFontList","TitleBar","dirtyName","setDirtyName","px","mb","flexDirection","TextField","setCurrentName","changeName","Settings","PartItem","toggleVisible","toggleLocked","selected","disableLock","p","border","borderColor","borderRadius","className","clsx","Grid","container","justify","xs","wrap","stopPropagation","nativeEvent","stopImmediatePropagation","Visibility","VisibilityOff","noWrap","Lock","LockOpen","useStyles","makeStyles","theme","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","PartGroup","classes","expanded","setExpanded","title","actions","extraChildren","disableDnd","sortedList","index","layer_order","toggleField","field","Card","CardHeader","action","startIcon","Add","endIcon","icon","preValue","ExpandMore","Collapse","in","CardContent","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onCancel","open","onOpenBase","Dialog","aria-labelledby","onClose","DialogTitle","DialogContent","dividers","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","slice","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","DialogActions","search","shape","backgroundColor","breakpoints","up","searchIcon","padding","pointerEvents","inputRoot","inputInput","paddingLeft","SearchBox","InputBase","placeholder","root","input","inputProps","CustomDialogContent","ShapeDialog","setSearch","shapes","onOpenShape","filteredShapes","description","overflow","overlay_thumb","StyledTabs","withStyles","indicator","maxWidth","Tabs","TabIndicatorProps","children","StyledTab","textTransform","fontWeight","typography","fontWeightRegular","marginRight","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","type","filteredFlags","newValue","label","logo","preview_file","UploadDialog","user","authReducer","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","getNameFromFileName","file_name","substring","lastIndexOf","files_up","showFileNamesInPreview","showFileNames","maxFiles","mt","uploadFiles","uploadItem","CustomInput","Input","SliderWrapper","SliderInput","setValue","step","Slider","ValueLabelComponent","Tooltip","enterTouchDelay","placement","Number","onBlur","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","ColorInputField","ColorPickerInput","onInputChange","helperText","css","palette","Palette","deferred","hideTextfield","onKeyDown","key","MuiTextField","CustomeTextField","InnerForm","errors","handleBlur","handleChange","setFieldValue","touched","Boolean","fullWidth","InputLabelProps","shrink","FormControl","InputLabel","sm","TextDialog","onCreate","initialValues","validationSchema","Yup","required","validate","onSubmit","formProps","handleSubmit","disabled","isSubmitting","ColorApplyButton","Sidebar","dialog","setDialog","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","baseColor","colorInput","setColorInput","colorDirty","setColorDirty","DialogTypes","faFolderOpen","faImage","faFont","SHAPE","faShapes","BASEPAINT","faCar","changeBaseColor","base","createLayersFromBasePaint","createLayerFromShape","createLayerFromLogo","upload","createLayerFromUpload","createTextLayer","GeneralProperty","JSON","stringify","AllowedLayerProps","Accordion","AccordionSummary","expandIcon","AccordionDetails","CustomIconButton","SizeProperty","toggleLayerDataField","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","rror","StrokeProperty","ColorProperty","RotationProperty","component","FormControlLabel","control","Checkbox","checked","labelPlacement","ShadowProperty","PropertyBar","colorValidator","validateColor","checkDirty","defaultValues","pick","py","test","moreThan","lessThan","nullable","enableReinitialize","noValidate","isValid","ConfirmDialog","onConfirm","autoFocus","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","tick","prevTick","clipboardLayer","clipboard","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","handleZoomIn","handleZoomOut","handleChangePaintingGuides","setPaintingGuides","togglePaintingGuides","guide","newPaintingGuides","indexOf","splice","handleKeyEvent","tagName","shiftKey","setLayerClipboard","cloneLayer","speed","speedX","speedY","Object","assign","updateLayerOnly","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","clearInterval","Helmet","ScreenLoader","handleKeys","onKeyEvent","handleEventType","setTimeout","activeElement","blur","deleteLayer","getDifferenceFromToday","past_date","difference_In_Second","getTime","difference_In_Min","difference_In_Hour","difference_In_Day","num","EPSILON","hex","result","exec"],"mappings":"6VAqBMA,EAAaC,YAAOC,KAAV,0EAAGD,CAAsBE,KACnCC,EAAeH,YAAOI,KAAV,4EAAGJ,CAAwBE,KACvCG,EAASL,YAAOM,KAAV,sEAAGN,CAAkBE,KAC3BK,EAAaP,YAAOQ,KAAV,0EAAGR,CAAsBE,KAEnCO,EAAUT,IAAOU,IAAV,uEAAGV,CAAH,4FAQPW,EAAsBX,YAAOY,KAAV,mFAAGZ,CAAH,8EAiGVa,EAzFC,SAACC,GAAW,IAClBC,EAAgDD,EAAhDC,SAAUC,EAAsCF,EAAtCE,UAAWC,EAA2BH,EAA3BG,uBAEvBC,EAAWC,cACXC,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BI,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,QAUvD,OACE,cAACf,EAAD,UACE,eAACgB,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfC,aAAa,SACbC,MAAM,OAJR,UAME,eAACJ,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,QAAQC,aAAa,SAAxD,UACE,cAAC,EAAD,CAAYE,QAAQ,YAAYC,GAAI,EAApC,8BAGA,eAACC,EAAA,EAAD,CACEC,MAAOb,EACPc,SAtByB,SAACC,EAAOC,GACzCnB,EAAuBmB,IAsBfC,aAAW,kBAHb,UAKE,cAAC,EAAD,CAAcJ,MAAOK,IAAeC,QAASF,aAAW,WAAxD,SACE,cAAC,EAAD,CAAYP,QAAQ,UAApB,wBAEF,cAAC,EAAD,CACEG,MAAOK,IAAeE,UACtBH,aAAW,YAFb,SAIE,cAAC,EAAD,CAAYP,QAAQ,UAApB,yBAEF,cAAC,EAAD,CACEG,MAAOK,IAAeG,cACtBJ,aAAW,iBAFb,SAIE,cAAC,EAAD,CAAYP,QAAQ,UAApB,8BAEF,cAAC,EAAD,CACEG,MAAOK,IAAeI,aACtBL,aAAW,gBAFb,SAIE,cAAC,EAAD,CAAYP,QAAQ,UAApB,6BAEF,cAAC,EAAD,CAAcG,MAAOK,IAAeK,KAAMN,aAAW,OAArD,SACE,cAAC,EAAD,CAAYP,QAAQ,UAApB,0BAIN,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,WAAWC,aAAa,SAA3D,UACE,cAAC,EAAD,CAAQG,GAAI,EAAGD,QAAQ,WAAvB,uBAGA,cAAC,EAAD,CAAQC,GAAI,EAAGD,QAAQ,WAAvB,yBAGA,cAAC,EAAD,CAAYc,QAAS5B,EAArB,SACE,cAAC,IAAD,MAEF,cAAC,EAAD,CAAY4B,QAAS7B,EAAUgB,GAAI,EAAnC,SACE,cAAC,IAAD,MAEF,cAACpB,EAAD,CACEkC,GAAG,aACHZ,MAAc,IAAPT,EACPU,SA/De,SAACC,GACxBjB,EAAS4B,YAAQC,SAASZ,EAAMa,OAAOf,OAAS,GAAK,OA+D7CgB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,eAIdC,WAAY,a,sFCmETC,EAxLE,SAAC,GAUX,IATLC,EASI,EATJA,IACAC,EAQI,EARJA,SAEAC,GAMI,EAPJC,WAOI,EANJD,UACAtB,EAKI,EALJA,SACAwB,EAII,EAJJA,YACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACG9C,EACC,0GACE+C,EAAWC,iBAAO,MAClBC,EAAWD,mBAFb,EAGsBE,mBAAS,MAH/B,mBAGGC,EAHH,KAGUC,EAHV,KAIEC,EAAU,GAEZT,GACFS,EAAQC,KAAKC,IAAMC,QAAQC,MAE7B,IAAMC,EAAgB,SAACC,GACrB,OAAIZ,EAASa,QACJC,KAAKC,IACV,EACAf,EAASa,QAAQ7C,MAAQ4C,EAAK5C,QAC9BgC,EAASa,QAAQG,OAASJ,EAAKI,UAG5B,GAGTC,qBAAU,WAER,OADAC,IACO,WACDlB,EAASa,SACXb,EAASa,QAAQM,oBAAoB,OAAQC,MAGhD,IAEHH,qBAAU,WACJf,EAASW,UACPhB,EACFK,EAASW,QAAQQ,MAAM,CACrBC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIzBrB,EAASW,QAAQW,gBAGpB,CAAC3B,IAEJ,IAAMuB,EAAU,uCAAG,wCAAAK,EAAA,yDACbC,GACD3B,GACAC,EAASa,QAAQ7C,OAAS8B,EAAU9B,MAAQ,GAC3CgC,EAASa,QAAQG,QAAUlB,EAAUkB,OAAS,EAC5ChB,EAASa,QAAQ7C,MACjB8B,EAAU9B,MAAQ,EACpB2D,GACD5B,GACAC,EAASa,QAAQ7C,OAAS8B,EAAU9B,MAAQ,GAC3CgC,EAASa,QAAQG,QAAUlB,EAAUkB,OAAS,EAC5ChB,EAASa,QAAQ7C,MACf8B,EAAU9B,MAAQ,EAAKgC,EAASa,QAAQG,OAC1ChB,EAASa,QAAQ7C,MACnBA,EAAQf,EAAMe,OAAS0D,EACvBV,EAAS/D,EAAM+D,QAAUW,GAE3BlC,EAAImC,cAAcC,SAAS,SACzB7B,EAASa,QAAQ7C,OAAUgC,EAASa,QAAQG,OAlB/B,wBAoBXc,EAASC,SAASC,cAAc,UAC9BC,EAAMH,EAAOI,WAAW,MArBf,SAsBCC,IAAMC,KAAKH,EAAKxC,EAAK,CACnC4C,cAAc,IAvBD,cAsBTC,EAtBS,OAyBfC,QAAQC,IAAIF,GACZtE,EAAQA,GAASsE,EAAEG,gBAAgB7B,KAAK5C,MAAM0E,QAAQtE,OAAS,IAC/D4C,EAASA,GAAUsB,EAAEG,gBAAgB7B,KAAKI,OAAO0B,QAAQtE,OAAS,IAClEkE,EAAEK,OAAO3E,EAAOgD,EAAQ,QA5BT,UA6BTsB,EAAEM,SA7BO,QA8BfvC,EAASyB,GA9BM,wBAgCfzB,EAASL,EAASa,SAhCH,SAmCbxC,GAAapB,EAAMe,OAAUf,EAAM+D,QACrC3C,EAAS,CACPwE,KAAMC,IAAOC,WAAW9F,EAAM+F,EAAIhF,EAAQ,GAC1CiF,IAAKH,IAAOC,WAAW9F,EAAMiG,EAAIlC,EAAS,GAC1ChD,MAAO8E,IAAOC,WAAW/E,GACzBgD,OAAQ8B,IAAOC,WAAW/B,KAI1BnB,GACFK,EAASW,QAAQQ,MAAM,CACrBC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIvB7B,GACFA,EAAS,CACP1B,MAAOA,EACPgD,OAAQA,IAtDK,4CAAH,qDA0DVE,EAAS,uCAAG,4BAAAO,EAAA,uDACV0B,EAAM,IAAIC,OAAOC,OAEnB5D,IAAMA,EAAG,sBAAiB,IAAI6D,MAAOC,eACzCJ,EAAIK,YAAc,YAClBxD,EAASa,QAAUsC,EACnBnD,EAASa,QAAQ4C,iBAAiB,OAAQrC,GAN1B,2CAAH,qDAoDf,OACE,cAAC,IAAD,2BACMnE,GADN,IAEEmD,MAAOA,EACPrB,QAASY,EACT+D,MAAO/D,EACPgE,IAAKzD,EACL0D,UAAWvF,EACXiC,QAASA,EAAQuD,OAASvD,EAAU,KACpCwD,IAAKjE,EAAciD,IAAOiB,UAAUlE,GAAamE,EAAI,KACrDC,MAAOpE,EAAciD,IAAOiB,UAAUlE,GAAaqE,EAAI,KACvDC,KAAMtE,EAAciD,IAAOiB,UAAUlE,GAAauE,EAAI,KACtDC,MAAOxE,EAAciD,IAAOiB,UAAUlE,GAAa4B,EAAI,IAAM,KAC7D6C,YAzDoB,SAACC,GACvB5E,KAyDE6E,UAvDkB,SAACD,GACjBlG,GACFA,EAAS,CACPwE,KAAMC,IAAOC,WAAWwB,EAAEpF,OAAO6D,KACjCC,IAAKH,IAAOC,WAAWwB,EAAEpF,OAAO+D,QAoDlCuB,eAhDuB,SAACF,GAC1B,GAAIlG,EAAU,CACZ,IAAMuC,EAAOV,EAASW,QAChB6D,EAAS9D,EAAK8D,SACdC,EAAS/D,EAAK+D,SACpBpC,QAAQC,IAAI,mBAAoBkC,EAAQC,GAExC/D,EAAK8D,OAAOA,EAAS,EAAI,GAAK,GAC9B9D,EAAK+D,OAAOA,EAAS,EAAI,GAAK,GAC9BtG,EAAS,CACPwE,KAAMC,IAAOC,WAAWnC,EAAKoC,KAC7BC,IAAKH,IAAOC,WAAWnC,EAAKsC,KAE5BlF,MAAO8E,IAAOC,WAAWjC,KAAKC,IAAI,EAAGH,EAAK5C,QAAU8C,KAAK8D,IAAIF,KAC7D1D,OAAQ8B,IAAOC,WACbjC,KAAKC,IAAI,EAAGH,EAAKI,SAAWF,KAAK8D,IAAID,KAEvCE,SAAU/B,IAAOC,WAAWnC,EAAKiE,aAAe,EAChDC,KAAMJ,EAAS,EAAI,EAAI,EACvBK,KAAMJ,EAAS,EAAI,EAAI,IAErB9E,EACFe,EAAKS,MAAM,CACTC,WAAYX,EAAcT,EAASW,SACnCU,uBAAuB,IAIzBX,EAAKY,mB,QC5EEwD,EAjFU,SAAC/H,GACxB,IAAMgI,EAAc,GACZ1H,EAA+DN,EAA/DM,eAAgB2H,EAA+CjI,EAA/CiI,eAAgBC,EAA+BlI,EAA/BkI,gBAAiBrF,EAAc7C,EAAd6C,UACzD,OACE,qCACGvC,EAAesE,SAASpD,IAAeC,SACtC,cAAC,EAAD,CACEe,IAAG,UACD2F,IAAOC,UADN,sBAEWH,EAAeI,iBAAiBC,QAC5C,IACA,KAJC,aAMH7F,SAAUyF,EACVK,WAAW,IAGb,6BAEDjI,EAAesE,SAASpD,IAAeE,WACtC,cAAC,EAAD,CACEc,IAAG,UACD2F,IAAOC,UADN,sBAEWH,EAAeI,iBAAiBC,QAC5C,IACA,KAJC,kBAMH7F,SAAUyF,EACVK,WAAW,IAGb,6BAEDjI,EAAesE,SAASpD,IAAeK,MACtC,qCACG2G,MAAMrD,KACLqD,MAAM3E,KAAK4E,MAAM5F,EAAU9B,MAAQiH,KACnC,SAACV,EAAGoB,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACN9E,KAAK4E,MAAMC,EAAIV,GACf,EACAnE,KAAK4E,MAAMC,EAAIV,GACfnF,EAAU9B,OAEZ6H,OAAO,OACPC,YAAa,GACbN,WAAW,GAVb,YACYG,OAcjBF,MAAMrD,KACLqD,MAAM3E,KAAK4E,MAAM5F,EAAUkB,OAASiE,KACpC,SAACV,EAAGoB,GACF,OACE,cAAC,IAAD,CAEEC,OAAQ,CACN,EACA9E,KAAK4E,MAAMC,EAAIV,GACfnF,EAAUkB,OACVF,KAAK4E,MAAMC,EAAIV,IAEjBY,OAAO,OACPC,YAAa,GACbN,WAAW,GAVb,YACYG,UAgBpB,iCCvCOI,EArCa,SAAC9I,GAAW,IAC9BM,EAAoDN,EAApDM,eAAgB2H,EAAoCjI,EAApCiI,eAAgBC,EAAoBlI,EAApBkI,gBAExC,OACE,qCACG5H,EAAesE,SAASpD,IAAeG,eACtC,cAAC,EAAD,CACEa,IAAG,UACD2F,IAAOC,UADN,sBAEWH,EAAeI,iBAAiBC,QAC5C,IACA,KAJC,uBAMH7F,SAAUyF,EACVK,WAAW,IAGb,6BAEDjI,EAAesE,SAASpD,IAAeI,cACtC,cAAC,EAAD,CACEY,IAAG,UACD2F,IAAOC,UADN,sBAEWH,EAAeI,iBAAiBC,QAC5C,IACA,KAJC,sBAMH7F,SAAUyF,EACVK,WAAW,IAGb,iC,kBCDOQ,EA7BE,SAAC/I,GAAW,IACnBgJ,EAA4ChJ,EAA5CgJ,OAAQf,EAAoCjI,EAApCiI,eAAgBC,EAAoBlI,EAApBkI,gBAEhC,OACE,mCACGe,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,KAAOH,EAAKI,iBAEvD,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACElH,IACE2F,IAAOC,UACP,cACAH,EAAeI,iBAAiBC,QAAQ,IAAK,KAF7C,WAGIoB,EAAMC,WAAWzD,KAEvBzD,SAAUyF,EACVtF,YAAa8G,EAAMC,WAAWC,MAE9BrB,WAAW,GADNmB,EAAM3H,UCGN8H,EAxBI,SAAC7J,GAAW,IACrBgJ,EAA4BhJ,EAA5BgJ,OAAQd,EAAoBlI,EAApBkI,gBAEhB,OACE,mCACGe,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWQ,MAAQV,EAAKI,iBAExD,CAAC,cAAe,SAChBC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACElH,IAAG,UAAK2F,IAAOC,UAAZ,kBAA+BsB,EAAMC,WAAW5H,GAAhD,YAAsD2H,EAAMC,WAAWzD,KAC1EzD,SAAUyF,EACV6B,QAASL,EAAMC,WAAWI,QAC1BnH,YAAa8G,EAAMC,WAAWC,MAE9BrB,WAAW,GADNmB,EAAM3H,UC0BNiI,EA1CE,SAAChK,GAAW,IACnBgJ,EAA+DhJ,EAA/DgJ,OAAQiB,EAAuDjK,EAAvDiK,aAAcC,EAAyClK,EAAzCkK,gBAAiBrH,EAAwB7C,EAAxB6C,UAAWzB,EAAapB,EAAboB,SAE1D,OACE,mCACG6H,IAAEC,QACDF,EAAOG,QACL,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWa,SAAWf,EAAKI,iBAE3D,CAAC,eACD,CAAC,SACDC,KAAI,SAACC,GAAD,OACJ,cAAC,EAAD,CACEU,KAAMV,EAAM3H,GAAGsI,WACf7H,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBsB,EAAMC,WAAWW,aAE7CvE,EAAGwE,WAAWb,EAAMC,WAAW/D,MAAQ,GACvCK,EAAGsE,WAAWb,EAAMC,WAAW3D,KAAO,GACtClD,UAAU,EACVF,YAAa8G,EAAMC,WAAWC,MAC9B7I,MAAO2I,EAAMC,WAAW5I,MACxBgD,OAAQ2F,EAAMC,WAAW5F,OACzB6D,SAAU8B,EAAMC,WAAW/B,SAC3BmC,QAASL,EAAMC,WAAWI,QAC1BtC,OAAkC,IAA1BiC,EAAMC,WAAW9B,MAAc,EAAI,EAC3CH,OAAkC,IAA1BgC,EAAMC,WAAW7B,MAAc,EAAI,EAC3C0C,YAAad,EAAMC,WAAWa,YAC9BC,WAAYf,EAAMC,WAAWc,WAC7BC,cAAehB,EAAMC,WAAWe,cAChCC,cAAejB,EAAMC,WAAWgB,cAChCC,cAAelB,EAAMC,WAAWiB,cAChClI,SAAU,kBAAMwH,EAAgBR,IAChC/G,WAAYsH,GAAgBA,EAAalI,KAAO2H,EAAM3H,GACtDwG,WAAYmB,EAAMmB,aAClBhI,UAAWA,EACXzB,SAAU,SAAC0J,GAAD,OAAY1J,EAASsI,EAAOoB,KApBjCpB,EAAM3H,UC4ENgJ,GA7FE,SAAC,GAeX,IAdLC,EAcI,EAdJA,WACAC,EAaI,EAbJA,SACAC,EAYI,EAZJA,eAGAV,GASI,EAXJW,WAWI,EAVJxI,WAUI,EATJ6H,aACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,cACAC,EAMI,EANJA,cACAC,EAKI,EALJA,cACAlI,EAII,EAJJA,SACAtB,EAGI,EAHJA,SACAgK,EAEI,EAFJA,WACGpL,EACC,oMAC4CkD,mBAAS,MADrD,mBACGmI,EADH,KACqBC,EADrB,KAEErI,EAAWD,mBACjBgB,qBAAU,WACJgH,GAAcC,IACXC,EAAetG,SAASoG,GAG3BM,EAAoBN,GAFpBO,OAKH,CAACP,EAAYC,IAEhB,IAAMM,EAAW,WACE,IAAIC,SAASR,EAAYC,GAEvCQ,OACAC,MAAK,SAAUC,GACd7G,SAAS8G,MAAMC,IAAIF,GACnBP,EAAWJ,GACXM,EAAoBN,MAErBc,OAAM,SAAUC,GAEfzG,QAAQ0G,KAAKD,EAAOf,OAkC1B,OACE,cAAC,IAAD,2BACMhL,GADN,IAEEgL,WAAYK,EACZvJ,QAASY,EACT+D,MAAO/D,EACPgE,IAAKzD,EACLuH,YAAavH,EAASW,QAAU4G,EAAc,KAC9CC,WAAYxH,EAASW,QAAU6G,EAAa,KAC5CC,cAAezH,EAASW,QAAU8G,EAAgB,KAClDC,cAAe1H,EAASW,QAAU+G,EAAgB,KAClDC,cAAe3H,EAASW,QAAUgH,EAAgB,KAClDjE,UAAWvF,EACXiG,YA3CoB,SAACC,GACvB5E,KA2CE6E,UAzCkB,SAACD,GACjBlG,GACFA,EAAS,CACPwE,KAAMC,IAAOC,WAAWwB,EAAEpF,OAAO6D,KACjCC,IAAKH,IAAOC,WAAWwB,EAAEpF,OAAO+D,QAsClCuB,eAlCuB,SAACF,GAC1B,GAAIlG,EAAU,CACZ,IAAMuC,EAAOV,EAASW,QAChB6D,EAAS9D,EAAK8D,SACdC,EAAS/D,EAAK+D,SACpBtG,EAAS,CACPwE,KAAMC,IAAOC,WAAWnC,EAAKoC,KAC7BC,IAAKH,IAAOC,WAAWnC,EAAKsC,KAI5B2B,SAAU/B,IAAOC,WAAWnC,EAAKiE,aAAe,EAChDH,OAAQ5B,IAAOC,WAAWjC,KAAKC,IAAI,IAAM2D,IACzCC,OAAQ7B,IAAOC,WAAWjC,KAAKC,IAAI,IAAM4D,IACzCG,KAAMJ,EAAS,EAAI,EAAI,EACvBK,KAAMJ,EAAS,EAAI,EAAI,UCqChBuE,GAvGO,SAACjM,GAAW,IAE9BgJ,EAQEhJ,EARFgJ,OACAkC,EAOElL,EAPFkL,eACAU,EAME5L,EANF4L,MACA/I,EAKE7C,EALF6C,UACAoH,EAIEjK,EAJFiK,aACAC,EAGElK,EAHFkK,gBACA9I,EAEEpB,EAFFoB,SACAgK,EACEpL,EADFoL,WAEIc,EAAiBlD,EAAOG,QAC5B,SAACC,GAAD,OACGA,EAAKC,aAAeC,IAAW6C,MAC9B/C,EAAKC,aAAeC,IAAW8C,QAC/BhD,EAAKC,aAAeC,IAAW+C,OACjCjD,EAAKI,iBAGT,OACE,mCACGP,IAAEC,QAAQgD,EAAgB,CAAC,eAAgB,CAAC,SAASzC,KAAI,SAACC,GACzD,GAAIA,EAAML,aAAeC,IAAW+C,KAClC,OACE,cAAC,EAAD,CACEjC,KAAMV,EAAM3H,GAAGsI,WACf7H,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBsB,EAAMC,WAAWW,aAE7CvE,EAAGwE,WAAWb,EAAMC,WAAW/D,MAAQ,GACvCK,EAAGsE,WAAWb,EAAMC,WAAW3D,KAAO,GACtClD,UAAU,EACV/B,MAAO2I,EAAMC,WAAW5I,MACxBgD,OAAQ2F,EAAMC,WAAW5F,OACzBlB,UAAWA,EACX+E,SAAU8B,EAAMC,WAAW/B,SAC3BH,OAAkC,IAA1BiC,EAAMC,WAAW9B,MAAc,EAAI,EAC3CH,OAAkC,IAA1BgC,EAAMC,WAAW7B,MAAc,EAAI,EAC3C0C,YAAad,EAAMC,WAAWa,YAC9BC,WAAYf,EAAMC,WAAWc,WAC7BC,cAAehB,EAAMC,WAAWe,cAChCC,cAAejB,EAAMC,WAAWgB,cAChCC,cAAelB,EAAMC,WAAWiB,cAChCb,QAASL,EAAMC,WAAWI,QAC1BrH,SAAU,kBAAMwH,EAAgBR,IAChC/G,WAAYsH,GAAgBA,EAAalI,KAAO2H,EAAM3H,GACtDwG,WAAYmB,EAAMmB,aAClBzJ,SAAU,SAAC0J,GAAD,OAAY1J,EAASsI,EAAOoB,KAnBjCpB,EAAM3H,IAuBjB,IAAIuK,EAAOV,EAAMhF,OACbgF,EAAMW,MAAK,SAACnD,GAAD,OAAUA,EAAKrH,KAAO2H,EAAMC,WAAW2C,QAClD,GACJ,OACE,cAAC,GAAD,CACElC,KAAMV,EAAM3H,GAAGsI,WACfmC,KAAM9C,EAAMC,WAAW6C,KACvBxB,WAAYsB,EAAKG,UACjBxB,SACEqB,EAAKI,UAAL,cACWvE,IAAOC,UADlB,YAC+BkE,EAAKI,UADpC,KAEI,KAENxB,eAAgBA,EAChBE,WAAYA,EACZuB,SAAUjD,EAAMC,WAAWiD,KAC3BC,KAAMnD,EAAMC,WAAWC,MACvBf,YAAaa,EAAMC,WAAWf,OAC9BA,OAAQc,EAAMC,WAAWmD,OACzBC,eAAe,EAEfhH,EAAGwE,WAAWb,EAAMC,WAAW/D,MAAQ,GACvCK,EAAGsE,WAAWb,EAAMC,WAAW3D,KAAO,GACtCgH,QAAS,EACTC,QAAS,EAGTlD,QAASL,EAAMC,WAAWI,QAC1BnC,SAAU8B,EAAMC,WAAW/B,SAC3BH,QACGiC,EAAMC,WAAWlC,QAAU,IACD,IAA1BiC,EAAMC,WAAW9B,MAAc,EAAI,GAEtCH,QACGgC,EAAMC,WAAWjC,QAAU,IACD,IAA1BgC,EAAMC,WAAW7B,MAAc,EAAI,GAEtC0C,YAAad,EAAMC,WAAWa,YAC9BC,WAAYf,EAAMC,WAAWc,WAC7BC,cAAehB,EAAMC,WAAWe,cAChCC,cAAejB,EAAMC,WAAWgB,cAChCC,cAAelB,EAAMC,WAAWiB,cAChClI,SAAU,kBAAMwH,EAAgBR,IAChC/G,WAAYsH,GAAgBA,EAAalI,KAAO2H,EAAM3H,GACtDwG,WAAYmB,EAAMmB,aAClBzJ,SAAU,SAAC0J,GAAD,OAAY1J,EAASsI,EAAOoB,KAzBjCpB,EAAM3H,UCpBRmL,GAtDc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cACxBC,EAAQpK,mBAuBd,OAJAgB,qBAAU,YAjBQ,WAChB,GAAImJ,EAAe,CACjB,IAEME,EAFQD,EAAMxJ,QAAQ0J,WAEDC,QAAQ,IAAMJ,EAAcpL,IACvD,GAAIsL,IAAiBD,EAAMxJ,QAAQD,OACjC,OAGE0J,EACFD,EAAMxJ,QAAQ4J,MAAM,CAACH,IAErBD,EAAMxJ,QAAQ6J,SAEhBL,EAAMxJ,QAAQ8J,WAAWC,aAI3BC,MAGET,EAEA,cAAC,IAAD,CACEzG,IAAK0G,EACLS,aACEV,EAAcxD,WAAWmE,aACzBX,EAAcxD,WAAWoE,aAI3BC,eACEb,EAAcxD,WAAWmE,YACzBX,EAAcxD,WAAWoE,YACrB,CAAC,WAAY,YAAa,cAAe,gBACzC,CACE,WACA,aACA,YACA,eACA,cACA,cACA,gBACA,kBAKP,8B,mBCwIME,GAzKD,WACZ,IAAMC,EAAWlL,iBAAO,MAClB5C,EAAWC,cAFC,EAGa8N,cAAvBpN,EAHU,EAGVA,MAAOgD,EAHG,EAGHA,OAAQ2C,EAHL,EAGKA,IACjB7D,EAAYtC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoC,aACtDnC,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,QACjDJ,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1B2H,EAAiB1H,aAAY,SAACC,GAAD,OAAWA,EAAM4N,eAAexK,WAC7DyK,EAAgB9N,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc1K,WAC3D2K,EAAYhO,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAaC,QACtDC,EAAWnO,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYF,QACpDvD,EAAiB3K,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYxD,cAC1DlB,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAa5K,WAIzDgL,EAAkB,SAACtH,GAEAA,EAAEpF,SAAWoF,EAAEpF,OAAOoL,YACvBrD,GACpB7J,EAAS8J,aAAgB,QAmCvBhC,EAAkB,SAAC0E,IACnB/J,EAAU9B,MAAQ6L,EAAK7L,OAAS8B,EAAUkB,OAAS6I,EAAK7I,SAC1D3D,EACEyO,YAAkB,CAChB9N,MAAO8C,KAAKC,IAAIjB,EAAU9B,MAAO6L,EAAK7L,OACtCgD,OAAQF,KAAKC,IAAIjB,EAAUkB,OAAQ6I,EAAK7I,YAK1C+K,EAAwB,SAACpF,EAAOoB,GACpC1K,EACE2O,aAAY,2BACPrF,GADM,IAETC,WAAW,2BACND,EAAMC,YACNmB,QAKLkE,EAAoB,SAACtF,GACzBtJ,EAAS8J,aAAgBR,KAM3B,OACE,cAAC/I,EAAA,EAAD,CACEI,MAAM,OACNgD,OAAO,OACPnD,QAAQ,OACRC,eAAe,SACfoO,WAAW,SACXC,OAAO,OACPxI,IAAKA,EAPP,SASE,cAAC,IAAD,CACE3F,MAAOA,EACPgD,OAAQA,EACRoL,YAAaP,EACbQ,YA1EkB,SAAC9H,KA2EnB+H,UAxEgB,SAAC/H,KAyEjBgI,aAAcV,EACdW,QAvEkB,SAAClO,GAEvB,GADAA,EAAMmO,IAAIC,iBACe,OAArBvB,EAAStK,SAAoBvC,EAAMmO,IAAIE,QAAS,CAClD,IAAMC,EAAQzB,EAAStK,QACjBgM,EAAWD,EAAMlI,SAF2B,EAGbkI,EAAME,qBAAhCC,EAHuC,EAG1C/J,EAAgBgK,EAH0B,EAG7B9J,EACf+J,EAAe,CACnBjK,GAAI+J,EAAWH,EAAM5J,KAAO6J,EAC5B3J,GAAI8J,EAAWJ,EAAM1J,KAAO2J,GAExBK,EAAWpM,KAAKC,IACpBD,KAAKqM,IACH7O,EAAMmO,IAAIW,OAAS,EAAIP,EA3Bf,QA2BoCA,EAC5C,IAEF,KAEFxP,EAAS4B,YAAQiO,IACjB,IAAMG,EAAS,CACbrK,EAAG+J,EAAWE,EAAajK,EAAIkK,EAC/BhK,EAAG8J,EAAWC,EAAa/J,EAAIgK,GAEjCN,EAAMtN,SAAS+N,GACfT,EAAMhC,cAiDJlG,OAAQ/G,GAAQ,EAChBgH,OAAQhH,GAAQ,EAChBgG,IAAKwH,EACLvH,WAAS,EAXX,SAaE,eAAC,IAAD,WAEE,cAAC,IAAD,CACEZ,EAAG,EACHE,EAAG,EACHlF,MAAO8B,EAAU9B,MACjBgD,OAAQlB,EAAUkB,OAClB8I,KAC+B,gBAA7BwB,EAAcgC,WACVhC,EAAcgC,WACd,IAAMhC,EAAcgC,WAE1B9H,WAAW,IAEb,cAAC,EAAD,CAAYS,OAAQuF,EAAWrG,gBAAiBA,IAEhD,cAAC,EAAD,CACED,eAAgBA,EAChB3H,eAAgBA,EAChB4H,gBAAiBA,IAGnB,cAAC,EAAD,CACEc,OAAQuF,EACRtG,eAAgBA,EAChBC,gBAAiBA,IAEnB,cAAC,EAAD,CACEc,OAAQuF,EACRrG,gBAAiBA,EACjBrF,UAAWA,EACXoH,aAAcA,EACdC,gBAAiB8E,EACjB5N,SAAU0N,IAGZ,cAAC,GAAD,CACE9F,OAAQuF,EACR3C,MAAO8C,EACPxD,eAAgBA,EAChBjB,aAAcA,EACdpH,UAAWA,EACXqH,gBAAiB8E,EACjB5N,SAAU0N,EACV1D,WAvEY,SAACJ,GACrB5K,EAASkQ,aAAuBtF,OAyE1B,cAAC,EAAD,CACE/C,eAAgBA,EAChB3H,eAAgBA,EAChB4H,gBAAiBA,EACjBrF,UAAWA,IAGb,cAAC,GAAD,CAAsBsK,cAAelD,Y,2CCrIhCsG,GA3CE,WACf,IAAMnQ,EAAWC,cADI,EAGa6C,oBAAS,GAHtB,mBAGdsN,EAHc,KAGHC,EAHG,KAIfpC,EAAgB9N,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc1K,WAWjE,OACE,eAACjD,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfoO,WAAW,SACXyB,GAAI,EACJC,GAAI,EALN,UAOE,eAAChQ,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,MAAlC,UACE,cAACC,GAAA,EAAD,CACE1P,MAAOkN,EAAgBA,EAAcjE,KAAO,GAC5ChJ,SApBiB,SAACC,GACxBjB,EAAS0Q,aAAezP,EAAMa,OAAOf,QACrCsP,GAAa,MAoBRD,EACC,cAACjR,EAAA,EAAD,CAAQuC,QAnBO,WACrB1B,EAAS2Q,aAAW1C,EAActM,GAAIsM,EAAcjE,OACpDqG,GAAa,IAiB0BzP,QAAQ,WAAzC,kBAIA,gCAGJ,cAACvB,EAAA,EAAD,UACE,cAACuR,GAAA,EAAD,U,qLCjCFrR,GAAUT,YAAOyB,KAAV,wEAAGzB,CAAH,kHAyEE+R,GA/DE,SAACjR,GAAW,IAEzBwJ,EAQExJ,EARFwJ,cACAqB,EAOE7K,EAPF6K,aACA2B,EAMExM,EANFwM,KACA0E,EAKElR,EALFkR,cACAC,EAIEnR,EAJFmR,aACAC,EAGEpR,EAHFoR,SACAC,EAEErR,EAFFqR,YACA3O,EACE1C,EADF0C,SAeF,OACE,cAAC,GAAD,CACE4O,EAAG,EACHX,GAAI,EACJ/P,QAAQ,OACRG,MAAM,OACNwQ,OAAQ,EACRC,YAAY,WACZC,aAAc,EACd3P,QAASY,EACTgP,UAAWC,aAAKP,GAAY,cAT9B,SAWE,eAACQ,GAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,gBAAgB7C,WAAW,SAAS7P,QAAS,EAArE,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAf,SACE,eAACH,GAAA,EAAD,CAAMC,WAAS,EAACG,KAAK,SAAS/C,WAAW,SAAS7P,QAAS,EAA3D,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAACtS,EAAA,EAAD,CAAYqC,QA5BI,SAACwF,GAC3BA,EAAE2K,kBACF3K,EAAE4K,YAAYC,2BACdjB,KAyBoDtE,KAAK,QAA/C,SACGpD,EAAgB,cAAC4I,GAAA,EAAD,IAAqB,cAACC,GAAA,EAAD,QAG1C,cAACT,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAf,SACE,cAAC9S,EAAA,EAAD,CAAYqT,QAAM,EAAlB,SAAoB9F,WAIxB6E,EAOA,6BANA,cAACO,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAACtS,EAAA,EAAD,CAAYqC,QAjCG,SAACwF,GACxBA,EAAE2K,kBACF3K,EAAE4K,YAAYC,2BACdhB,KA8B+CvE,KAAK,QAA5C,SACG/B,EAAe,cAAC0H,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,cC1CvCC,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAYJ,EAAMK,YAAYC,OAAO,YAAa,CAChDC,SAAUP,EAAMK,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAITtT,GAASL,YAAOM,KAAV,oEAAGN,CAAkBE,KAC3BiU,GAAcnU,YAAOoU,MAAV,yEAAGpU,CAAuBE,KACrCmU,GAAYrU,YAAOK,IAAV,uEAAGL,CAAH,qJAyIAsU,GA3HG,SAACxT,GACjB,IAAMyT,EAAUhB,KACVrS,EAAWC,cAFU,EAGK6C,oBAAS,GAHd,mBAGpBwQ,EAHoB,KAGVC,EAHU,KAIrB1J,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAa5K,WAE7D2K,EAMEvO,EANFuO,UACAqF,EAKE5T,EALF4T,MACAC,EAIE7T,EAJF6T,QACAC,EAGE9T,EAHF8T,cACAzC,EAEErR,EAFFqR,YACA0C,EACE/T,EADF+T,WAEIC,EAAa/K,IAAEC,QAAQqF,EAAW,CAAC,eAAgB,CAAC,QAE1DvK,qBAAU,WACR,IAAK,IAAIiQ,KAASD,EACZA,EAAWC,GAAOC,cAAgBjS,SAASgS,GAAS,GACtD7T,EACE2O,aAAY,2BACPiF,EAAWC,IADL,IAETC,YAAajS,SAASgS,GAAS,QAKtC,CAAC1F,EAAU3H,SAEd,IAgBMuN,EAAc,SAACpS,EAAIqS,GACvB,IAAM1K,EAAQ6E,EAAUhC,MAAK,SAACnD,GAAD,OAAUA,EAAKrH,KAAOA,KACnD3B,EACE2O,aAAY,2BACPrF,GADM,mBAER0K,EAAQ1K,EAAM0K,GAAS,EAAI,OAQlC,OACE,cAACzT,EAAA,EAAD,CAAKgQ,GAAI,EAAT,SACE,eAAC0D,GAAA,EAAD,WACE,cAACC,GAAA,EAAD,CACEV,MAAOA,EACPW,OACE,eAAC5T,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGiT,EACC,cAAC,GAAD,CAAa5S,GAAI,EAAjB,SACG4S,EAAQpK,KAAI,SAAC8K,EAAQN,GAAT,OACX,cAACV,GAAD,CAEEzR,QAASyS,EAAOzS,QAChB8K,KAAK,QACL4H,UAAW,cAACC,GAAA,EAAD,IACXC,QAAS,cAAC,KAAD,CAAiBC,KAAMJ,EAAOI,KAAM/H,KAAK,OAClD5L,QAAQ,YALHiT,QAUX,6BAEF,cAACxU,EAAA,EAAD,CACEqC,QArDY,WACxB6R,GAAY,SAACiB,GAAD,OAAeA,MAqDflD,UAAWC,aAAK8B,EAAQb,OAAT,gBACZa,EAAQL,WAAaM,IAH1B,SAME,cAACmB,GAAA,EAAD,WAKR,cAACC,GAAA,EAAD,CAAUC,GAAIrB,EAAd,SACE,eAACsB,GAAA,EAAD,WACE,cAAC,iBAAD,CACEvG,KAAMuF,EACNiB,QAhEc,SAACxG,GAAU,IAAD,WACzBwF,GACP,IAAMvK,EAAQ6E,EAAUhC,MAAK,SAACnD,GAAD,OAAUA,EAAKrH,IAAM0M,EAAKwF,GAAOlS,MAC1D2H,GAASA,EAAMwK,cAAgBjS,SAASgS,GAAS,GACnD7T,EACE2O,aAAY,2BACPrF,GADM,IAETwK,YAAajS,SAASgS,GAAS,OANvC,IAAK,IAAIA,KAASxF,EAAO,EAAhBwF,IAgECiB,UAAW,IACXC,SAAU,SAAC3F,GAAD,OAASlK,QAAQC,IAAIiK,IAC/B9M,SAAU,SAAC8M,GAAD,OAASlK,QAAQC,IAAIiK,IAC/B4F,MAAOrB,EANT,SAQGC,EAAWvK,KAAI,SAACL,GAAD,OACd,cAAC,GAAD,CACEoD,KAAMpD,EAAKO,WAAWS,KACtBZ,cAAeJ,EAAKI,cACpBqB,aAAczB,EAAKyB,aAEnBqG,cAAe,kBAAMiD,EAAY/K,EAAKrH,GAAI,kBAC1CoP,aAAc,kBAAMgD,EAAY/K,EAAKrH,GAAI,iBACzCqP,SAAUnH,GAAgBA,EAAalI,KAAOqH,EAAKrH,GACnDW,SAAU,kBAzDLgH,EAyDuBN,OAxD1ChJ,EAAS8J,aAAgBR,IADP,IAACA,GA0DL2H,YAAaA,GALRjI,EAAKrH,SASf+R,a,iGC9JPvU,GAASL,YAAOM,KAAV,8EAAGN,CAAkBE,KAE3BiW,GAAuBnW,YAAOoW,MAAV,4FAAGpW,CAAH,6DAMpBqW,GAAiBrW,YAAOsW,MAAV,sFAAGtW,CAAH,qDAIduW,GAAqBvW,YAAOwW,MAAV,0FAAGxW,CAAH,qBAGlByW,GAAYzW,IAAOgH,IAAV,iFAAGhH,CAAH,kEAuDA0W,GAhDS,SAAC5V,GACvB,IADiC,EAEPkD,mBADb,IADoB,mBAE1B2S,EAF0B,KAEnBC,EAFmB,KAGzBC,EAA2C/V,EAA3C+V,WAAYC,EAA+BhW,EAA/BgW,SAAUC,EAAqBjW,EAArBiW,KAAMC,EAAelW,EAAfkW,WAKpC,OACE,eAACC,GAAA,EAAD,CAAQC,kBAAgB,oBAAoBH,KAAMA,EAAMI,QAASL,EAAjE,UACE,cAACM,GAAA,EAAD,CAAavU,GAAG,oBAAhB,+BACA,cAACwU,GAAA,EAAD,CAAeC,UAAQ,EAACzU,GAAG,4BAA3B,SACE,cAACsT,GAAD,CACEoB,WAAYZ,EACZa,KATa,WACnBZ,EAASD,EALE,KAcLc,QAASd,EAAQE,EAAWnP,OAC5BgQ,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,4BALnB,SAOE,cAACvB,GAAD,CAAgBwB,WAAY,IAAKC,KAAM,EAAvC,SACGjB,EAAWkB,MAAM,EAAGpB,GAAOpM,KAAI,SAACyN,GAAD,OAC9B,eAACzB,GAAD,CAEEuB,KAAM,EACNlV,QAAS,kBAAMoU,EAAWgB,IAH5B,UAKE,cAACvB,GAAD,CACEnT,IAAG,UAAK2F,IAAOC,UAAZ,kBAA+B8O,EAAUnV,GAAzC,gBACHoV,IAAKD,EAAUE,mBAEjB,cAACC,GAAA,EAAD,CACEzD,MAAOsD,EAAUI,UACjBC,SAAUL,EAAUE,qBAVjBF,EAAUnV,aAiBzB,cAACyV,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,UAAjC,0B,gCC5EF6I,GAAYC,cAAW,SAACC,GAAD,MAAY,CACvC8E,OAAO,cACLpV,SAAU,WACVoP,aAAckB,EAAM+E,MAAMjG,aAC1BkG,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnBpG,OAAQ,oBACRxQ,MAAO,QACN4R,EAAMiF,YAAYC,GAAG,MAAQ,CAC5B9W,MAAO,SAGX+W,WAAY,CACVC,QAASpF,EAAMvT,QAAQ,EAAG,GAC1B2E,OAAQ,OACR1B,SAAU,WACV2V,cAAe,OACfpX,QAAS,OACTqO,WAAY,SACZpO,eAAgB,UAElBoX,UAAW,CACTrO,MAAO,UACP7I,MAAO,QAETmX,WAAY,CACVH,QAASpF,EAAMvT,QAAQ,EAAG,EAAG,EAAG,GAEhC+Y,YAAY,cAAD,OAAgBxF,EAAMvT,QAAQ,GAA9B,OACX2T,WAAYJ,EAAMK,YAAYC,OAAO,SACrClS,MAAO,YA+BIqX,GA3BG,SAACpY,GAAW,IACpBmB,EAAoBnB,EAApBmB,MAAOC,EAAapB,EAAboB,SAETqS,EAAUhB,KAKhB,OACE,sBAAKf,UAAW+B,EAAQgE,OAAxB,UACE,qBAAK/F,UAAW+B,EAAQqE,WAAxB,SACE,cAAC,KAAD,MAEF,cAACO,GAAA,EAAD,CACEC,YAAY,SACZ7E,QAAS,CACP8E,KAAM9E,EAAQwE,UACdO,MAAO/E,EAAQyE,YAEjB/W,MAAOA,EACPsX,WAAY,CAAE,aAAc,UAC5BrX,SAjBe,SAACC,GACpBD,EAASC,EAAMa,OAAOf,cCzBpB5B,GAASL,YAAOM,KAAV,0EAAGN,CAAkBE,KAE3BiW,GAAuBnW,YAAOoW,MAAV,wFAAGpW,CAAH,6DAMpBqW,GAAiBrW,YAAOsW,MAAV,kFAAGtW,CAAH,qDAIduW,GAAqBvW,YAAOwW,MAAV,sFAAGxW,CAAH,qBAGlBwZ,GAAsBxZ,YAAOqX,MAAV,uFAAGrX,CAAH,kBAGnByW,GAAYzW,IAAOgH,IAAV,6EAAGhH,CAAH,kEAoEAyZ,GA7DK,SAAC3Y,GACnB,IAD6B,EAEHkD,mBADb,IADgB,mBAEtB2S,EAFsB,KAEfC,EAFe,OAGD5S,mBAAS,IAHR,mBAGtBuU,EAHsB,KAGdmB,EAHc,KAIrBC,EAAwC7Y,EAAxC6Y,OAAQ7C,EAAgChW,EAAhCgW,SAAUC,EAAsBjW,EAAtBiW,KAAM6C,EAAgB9Y,EAAhB8Y,YAM1BC,EAAiBF,EAAO1P,QAC5B,SAACC,GAAD,OACEA,EAAKgB,KAAKzF,cAAcC,SAAS6S,EAAO9S,gBACxCyE,EAAK4P,YAAYrU,cAAcC,SAAS6S,EAAO9S,kBAGnD,OACE,eAACwR,GAAA,EAAD,CAAQC,kBAAgB,cAAcH,KAAMA,EAAMI,QAASL,EAA3D,UACE,cAACM,GAAA,EAAD,CAAavU,GAAG,cAAhB,0BACA,eAAC2W,GAAD,CAAqBlC,UAAQ,EAA7B,UACE,cAAC7V,EAAA,EAAD,CAAKgQ,GAAI,EAAT,SACE,cAAC,GAAD,CAAWxP,MAAOsW,EAAQrW,SAAU,SAACD,GAAD,OAAWyX,EAAUzX,QAE3D,cAACR,EAAA,EAAD,CAAKoB,GAAG,uBAAuBkX,SAAS,OAAOlV,OAAO,OAAtD,SACE,cAAC,GAAD,CACE0S,WAAYZ,EACZa,KApBW,WACnBZ,EAASD,EANE,KA0BHc,QAASd,EAAQkD,EAAenS,OAChCgQ,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,uBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG+B,EAAe9B,MAAM,EAAGpB,GAAOpM,KAAI,SAACiO,GAAD,OAClC,eAAC,GAAD,CAEEV,KAAM,EACNlV,QAAS,kBAAMgX,EAAYpB,IAH7B,UAKE,cAAC,GAAD,CACElV,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBsP,EAAMwB,eAClC/B,IAAKO,EAAMtN,OAEb,cAACiN,GAAA,EAAD,CACEzD,MAAO8D,EAAMtN,KACbmN,SAAUG,EAAMsB,gBAVbtB,EAAM3V,gBAkBvB,cAACyV,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,UAAjC,0B,+BC1EFrK,GAASL,YAAOM,KAAV,wEAAGN,CAAkBE,KAC3BH,GAAaC,YAAOC,KAAV,4EAAGD,CAAsBE,KAEnCiW,GAAuBnW,YAAOoW,MAAV,sFAAGpW,CAAH,6DAMpBqW,GAAiBrW,YAAOsW,MAAV,gFAAGtW,CAAH,qDAIduW,GAAqBvW,YAAOwW,MAAV,oFAAGxW,CAAH,qBAGlBwZ,GAAsBxZ,YAAOqX,MAAV,qFAAGrX,CAAH,kBAGnByW,GAAYzW,IAAOgH,IAAV,2EAAGhH,CAAH,kEAOTia,GAAaC,aAAW,CAC5BC,UAAW,CACTzY,QAAS,OACTC,eAAgB,SAChB8W,gBAAiB,cACjB,WAAY,CACV2B,SAAU,GACVvY,MAAO,OACP4W,gBAAiB,aARJyB,EAWhB,SAACpZ,GAAD,OAAW,cAACuZ,GAAA,EAAD,2BAAUvZ,GAAV,IAAiBwZ,kBAAmB,CAAEC,SAAU,gCAExDC,GAAYN,cAAW,SAACzG,GAAD,MAAY,CACvC4F,KAAM,CACJoB,cAAe,OACf/P,MAAO,OACPgQ,WAAYjH,EAAMkH,WAAWC,kBAC7BnN,SAAU,OACVoN,YAAa,EACbhC,QAAS,UACTiC,SAAU,GACV,UAAW,CACTjQ,QAAS,OAVGqP,EAad,SAACpZ,GAAD,OAAW,cAACia,GAAA,EAAD,aAAKC,eAAa,GAAKla,OAEhCma,GAAW,SAACna,GAAW,IACnByZ,EAAqCzZ,EAArCyZ,SAAUtY,EAA2BnB,EAA3BmB,MAAO8S,EAAoBjU,EAApBiU,MAAUmG,EADT,YACmBpa,EADnB,8BAG1B,OACE,6CACEqa,KAAK,WACLC,OAAQnZ,IAAU8S,EAClBlS,GAAE,wBAAmBkS,GACrBmC,kBAAA,mBAA6BnC,IACzBmG,GALN,aAOGjZ,IAAU8S,GAAS,mCAAGwF,QAK7B,SAASc,GAAUtG,GACjB,MAAO,CACLlS,GAAG,YAAD,OAAckS,GAChB,gBAAgB,iBAAhB,OAAkCA,IAItC,IAmHeuG,GAnHI,SAACxa,GAClB,IAD4B,EAEMkD,mBADrB,IADe,mBAErBuX,EAFqB,KAEVC,EAFU,OAGMxX,mBAFrB,IADe,mBAGrByX,EAHqB,KAGVC,EAHU,OAII1X,mBAAS,GAJb,mBAIrB2X,EAJqB,KAIXC,EAJW,OAKA5X,mBAAS,IALT,mBAKrBuU,EALqB,KAKbmB,EALa,KAMpBmC,EAAsC/a,EAAtC+a,MAAO/E,EAA+BhW,EAA/BgW,SAAUC,EAAqBjW,EAArBiW,KAAM+E,EAAehb,EAAfgb,WAazBC,EAAgBF,EAAM5R,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAKzF,cAAcC,SAAS6S,EAAO9S,gBAC1B,SAAdyE,EAAK8R,QAEHC,EAAgBJ,EAAM5R,QAC1B,SAACC,GAAD,OACEA,EAAKgB,KAAKzF,cAAcC,SAAS6S,EAAO9S,gBAC1B,SAAdyE,EAAK8R,QAGT,OACE,eAAC/E,GAAA,EAAD,CAAQC,kBAAgB,aAAaH,KAAMA,EAAMI,QAASL,EAA1D,UACE,cAACM,GAAA,EAAD,CAAavU,GAAG,aAAhB,SACE,eAACpB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,MAAM3B,WAAW,SAAnD,UACE,cAAC,GAAD,CAAYjO,QAAQ,KAAKC,GAAI,EAA7B,qBAGA,eAACkY,GAAD,CACEhY,MAAO0Z,EACPzZ,SAzBc,SAACC,EAAO+Z,GAC9BN,EAAYM,GACZxC,EAAU,KAwBFrX,aAAW,WAHb,UAKE,cAACmY,GAAD,aAAW2B,MAAM,QAAWd,GAAU,KACtC,cAACb,GAAD,aAAW2B,MAAM,QAAWd,GAAU,aAI5C,eAAC,GAAD,CAAqB/D,UAAQ,EAA7B,UACE,cAAC7V,EAAA,EAAD,CAAKgQ,GAAI,EAAT,SACE,cAAC,GAAD,CAAWxP,MAAOsW,EAAQrW,SAAU,SAACD,GAAD,OAAWyX,EAAUzX,QAE3D,cAAC,GAAD,CAAUA,MAAO0Z,EAAU5G,MAAO,EAAlC,SACE,cAACtT,EAAA,EAAD,CAAKoB,GAAG,sBAAsBkX,SAAS,OAAOlV,OAAO,OAArD,SACE,cAAC,GAAD,CACE0S,WAAYgE,EACZ/D,KA/Ca,WACvBgE,EAAaD,EARF,KAuDD9D,QAAS8D,EAAYQ,EAAcrU,OACnCgQ,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGiE,EAAchE,MAAM,EAAGwD,GAAWhR,KAAI,SAAC6R,GAAD,OACrC,eAAC,GAAD,CAEEtE,KAAM,EACNlV,QAAS,kBAAMkZ,EAAWM,IAH5B,UAKE,cAAC,GAAD,CACE9Y,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBkT,EAAKC,cACjCpE,IAAKmE,EAAKlR,OAEZ,cAACiN,GAAA,EAAD,CAAiBzD,MAAO0H,EAAKlR,SARxBkR,EAAKvZ,eAetB,cAAC,GAAD,CAAUZ,MAAO0Z,EAAU5G,MAAO,EAAlC,SACE,cAACtT,EAAA,EAAD,CAAKoB,GAAG,sBAAsBkX,SAAS,OAAOlV,OAAO,OAArD,SACE,cAAC,GAAD,CACE0S,WAAYkE,EACZjE,KAvEa,WACvBkE,EAAaD,EAXF,KAkFDhE,QAASgE,EAAYQ,EAAcvU,OACnCgQ,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGmE,EAAclE,MAAM,EAAG0D,GAAWlR,KAAI,SAAC6R,GAAD,OACrC,eAAC,GAAD,CAEEtE,KAAM,EACNlV,QAAS,kBAAMkZ,EAAWM,IAH5B,UAKE,cAAC,GAAD,CACE9Y,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBkT,EAAKC,cACjCpE,IAAKmE,EAAKlR,OAEZ,cAACiN,GAAA,EAAD,CAAiBzD,MAAO0H,EAAKlR,SARxBkR,EAAKvZ,kBAgBxB,cAACyV,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,UAAjC,0B,qBC1LFrK,GAASL,YAAOM,KAAV,uEAAGN,CAAkBE,KAE3BiW,GAAuBnW,YAAOoW,MAAV,qFAAGpW,CAAH,6DAMpBqW,GAAiBrW,YAAOsW,MAAV,+EAAGtW,CAAH,qDAIduW,GAAqBvW,YAAOwW,MAAV,mFAAGxW,CAAH,qBAGlBwZ,GAAsBxZ,YAAOqX,MAAV,oFAAGrX,CAAH,kBAGnByW,GAAYzW,IAAOgH,IAAV,0EAAGhH,CAAH,kEAoGAsc,GA7FM,SAACxb,GACpB,IACMI,EAAWC,cACXob,EAAOlb,aAAY,SAACC,GAAD,OAAWA,EAAMkb,YAAYD,QAChDpN,EAAgB9N,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc1K,WAJnC,EAMJV,mBALb,IADiB,mBAMvB2S,EANuB,KAMhBC,EANgB,OAOJ5S,mBAAS,IAPL,mBAOvByY,EAPuB,KAOhBC,EAPgB,OAQQ1Y,mBAAS,GARjB,mBAQvB2Y,EARuB,KAQVC,EARU,KAStBC,EAA0C/b,EAA1C+b,QAAS/F,EAAiChW,EAAjCgW,SAAUC,EAAuBjW,EAAvBiW,KAAM+F,EAAiBhc,EAAjBgc,aAK3BC,EAAsB,SAACC,GAC3B,OAAOA,EAAUC,UACfD,EAAUE,YAAY,YAAc,WAAWxV,OAC/CsV,EAAUE,YAAY,OAc1B,OACE,eAACjG,GAAA,EAAD,CAAQC,kBAAgB,eAAeH,KAAMA,EAAMI,QAASL,EAA5D,UACE,cAACM,GAAA,EAAD,CAAavU,GAAG,eAAhB,wBACA,eAAC,GAAD,CAAqByU,UAAQ,EAA7B,UACE,cAAC,KAAD,CACEpV,SAhBqB,SAACib,GAC5BT,EAASS,GACT/W,QAAQC,IAAI8W,IAeNlb,MAAOwa,EACPW,wBAAwB,EACxBC,eAAe,EACfC,SAAU,IACLX,GAENF,EAAM/U,OACL,cAACjG,EAAA,EAAD,CAAK8b,GAAI,EAAG1b,MAAM,OAAOH,QAAQ,OAAOC,eAAe,SAAvD,SACE,cAAC,GAAD,CACEG,QAAQ,YACR4I,MAAM,UACN9H,QAxBc,WACxBwD,QAAQC,IAAIoW,GACZvb,EAASsc,aAAYjB,EAAK1Z,GAAIsM,EAActM,GAAI4Z,IAChDC,EAAS,IACTE,EAAeD,EAAc,IAiBrB,sCASF,6BAEF,cAAClb,EAAA,EAAD,CAAKoB,GAAG,wBAAwBkX,SAAS,OAAOlV,OAAO,OAAO0Y,GAAI,EAAlE,SACE,cAAC,GAAD,CACEhG,WAAYZ,EACZa,KAhDW,WACnBZ,EAASD,EAXE,KA2DHc,QAASd,EAAQkG,EAAQnV,OACzBgQ,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,wBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG+E,EAAQ9E,MAAM,EAAGpB,GAAOpM,KAAI,SAACkT,GAAD,OAC3B,eAAC,GAAD,CAEE3F,KAAM,EACNlV,QAAS,kBAAMka,EAAaW,IAH9B,UAKE,cAAC,GAAD,CACEna,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBuU,EAAWT,WACvC/E,IAAK8E,EAAoBU,EAAWT,aAEtC,cAAC7E,GAAA,EAAD,CACEzD,MAAOqI,EAAoBU,EAAWT,eATnCS,EAAW5a,gBAiB5B,cAACyV,GAAA,EAAD,UACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,UAAjC,0B,2ECzHF3K,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnCwd,GAAc1d,YAAO2d,MAAV,8EAAG3d,CAAH,oFAOX4d,GAAgB5d,YAAOyB,KAAV,gFAAGzB,CAAH,8DAqEJ6d,GA9DK,SAAC/c,GAAW,IACtBqb,EAA2Crb,EAA3Cqb,MAAOnL,EAAoClQ,EAApCkQ,IAAKpM,EAA+B9D,EAA/B8D,IAAK3C,EAA0BnB,EAA1BmB,MAAO6b,EAAmBhd,EAAnBgd,SAAUC,EAASjd,EAATid,KAQ1C,OACE,eAACrL,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC,GAAD,CAAY/Q,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,SACGoa,MAGL,cAACzJ,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,eAACpR,EAAA,EAAD,CAAKC,QAAQ,OAAOqO,WAAW,SAA/B,UACE,cAAC6N,GAAD,UACE,cAACI,GAAA,EAAD,CACEhN,IAAKA,EACLpM,IAAKA,EACLmZ,KAAMA,EACN9b,MAAOA,EACPC,SAAU,SAACC,EAAOF,GAAR,OAAkB6b,EAAS7b,IACrCiV,kBAAgB,aAChB+G,oBAAqB,SAACnd,GAAD,OACnB,cAACod,GAAA,EAAD,CACEnH,KAAMjW,EAAMiW,KACZoH,gBAAiB,EACjBC,UAAU,MACV1J,MAAO5T,EAAMmB,MAJf,SAMGnB,EAAMyZ,gBAKf,cAACmD,GAAD,CACEzb,MAAOA,EACP+N,OAAO,QACPgM,KAAK,SACL9Z,SAAU,SAACC,GAAD,OACR2b,EACyB,KAAvB3b,EAAMa,OAAOf,MACT+O,GAAO,EACPqN,OAAOlc,EAAMa,OAAOf,SAG5Bqc,OA/CS,WACbrc,EAAQ+O,EACV8M,EAAS9M,GACA/O,EAAQ2C,GACjBkZ,EAASlZ,IA4CH2U,WAAY,CACVvI,IAAKA,EACLpM,IAAKA,EACL,kBAAmB,2B,sBCvE3B2Z,GAASve,YAAOwe,MAAV,wEAAGxe,CAAkBE,KAE3Bue,GAAeze,YAAOue,IAAV,8EAAGve,CAAH,yEAOZ0e,GAAY1e,IAAOgH,IAAV,2EAAGhH,CAAH,mCAyCA2e,GApCI,SAAC7d,GAAW,IACrB0O,EAA8B1O,EAA9B0O,SAAUvN,EAAoBnB,EAApBmB,MAAOC,EAAapB,EAAboB,SAEzB,OACE,cAACuc,GAAD,CACEG,QAAQ,oBACR/b,GAAG,uBACHZ,MAAOA,EACPC,SAAUA,EACVia,MAAM,OACN1K,GAAI,EACJoN,YAAa,SAAChc,GACZ,IAAMuK,EAAOoC,EAASnC,MAAK,SAACnD,GAAD,OAAUA,EAAKrH,KAAOA,KACjD,OAAKuK,EAIH,cAACsR,GAAD,CACEpb,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBkE,EAAK0R,cACjC7G,IAAK7K,EAAKG,YALL,oDAVb,SAoBGiC,EAASjF,KAAI,SAAC6C,GAAD,OACZ,cAAC2R,GAAA,EAAD,CAAU9c,MAAOmL,EAAKvK,GAAtB,SACE,cAAC6b,GAAD,CACEpb,IAAG,UAAK2F,IAAOC,UAAZ,YAAyBkE,EAAK0R,cACjC7G,IAAK7K,EAAKG,aAHiBH,EAAKvK,U,WCzCtCmc,GAAkBhf,YAAO2R,MAAV,uFAAG3R,CAAH,iBAwCNif,GApCU,SAACne,GAAW,IAC3BmB,EAAsDnB,EAAtDmB,MAAOC,EAA+CpB,EAA/CoB,SAAUgd,EAAqCpe,EAArCoe,cAAerS,EAAsB/L,EAAtB+L,MAAOsS,EAAere,EAAfqe,WAQ/C,OACE,eAAC1d,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS3B,WAAW,SAAtD,UACE,eAACtO,EAAA,EAAD,CAAKC,QAAQ,OAAOqO,WAAW,SAA/B,UACE,cAAC,KAAD,CACE9N,MAAOA,GAAS,GAChBC,SAAU,SAACwI,GAAD,OAAWxI,EAASwI,EAAM0U,IAAI3G,kBACxC4G,QAASC,IACTC,UAAQ,EACRC,eAAa,IAEf,cAACR,GAAD,CACE/c,MAAOA,GAAS,GAChBC,SAAU,SAACC,GAAD,OAAW+c,EAAc/c,EAAMa,OAAOf,QAChDwd,UAnBmB,SAACtd,GACR,UAAdA,EAAMud,KACRxd,EAASC,EAAMa,OAAOf,aAoBrB4K,EACC,cAAC9M,EAAA,EAAD,CAAY2K,MAAM,YAAY5I,QAAQ,QAAtC,SACGqd,IAGH,iCChBF9e,GAASL,YAAOM,KAAV,yEAAGN,CAAkBE,KAC3ByR,GAAY3R,YAAO2f,MAAV,4EAAG3f,CAAqBE,KACjCH,GAAaC,YAAOC,KAAV,6EAAGD,CAAsBE,KACnC0f,GAAmB5f,YAAO2R,IAAV,mFAAG3R,CAAH,uCAMhB6f,GAAY,SAAC/e,GAAW,IAE1B0O,EAOE1O,EAPF0O,SACAsQ,EAMEhf,EANFgf,OACAC,EAKEjf,EALFif,WACAC,EAIElf,EAJFkf,aACAC,EAGEnf,EAHFmf,cACAC,EAEEpf,EAFFof,QACAtU,EACE9K,EADF8K,OAEF,OACE,qCACE,cAACgU,GAAD,CACE1U,KAAK,OACLiR,MAAM,OACN/C,YAAY,kBACZtX,QAAQ,WACRG,MAAO2J,EAAO0B,KACdT,MAAOsT,QAAQD,EAAQ5S,MAAQwS,EAAOxS,MACtC6R,WAAYe,EAAQ5S,MAAQwS,EAAOxS,KACnCgR,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAGZ,eAACC,GAAA,EAAD,CAAaze,QAAQ,WAArB,UACE,cAAC0e,GAAA,EAAD,CAAY3d,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEZ,MAAO2J,EAAOwB,KACdlL,SAAU,SAACkG,GAAD,OAAO6X,EAAc,OAAQ7X,EAAEpF,OAAOf,QAChDuN,SAAUA,OAGd,eAACkD,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAI4N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEtE,MAAM,YACNnL,IAAK,EACLpM,IAAK,GACL3C,MAAO2J,EAAO8B,KACdoQ,SAAU,SAAC7b,GAAD,OAAWge,EAAc,OAAQhe,QAG/C,cAACyQ,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAI4N,GAAI,EAAvB,SACE,eAAChf,EAAA,EAAD,CACEC,QAAQ,OACRgQ,cAAc,MACd3B,WAAW,SACXpO,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYG,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,wBAGA,cAAC,GAAD,CACEE,MAAO2J,EAAOlB,MACdxI,SAAU,SAACwI,GAAD,OAAWuV,EAAc,QAASvV,IAC5CwU,cAAe,SAACxU,GAAD,OAAWuV,EAAc,QAASvV,cAMzD,eAACgI,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAI4N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEtE,MAAM,eACNnL,IAAK,EACLpM,IAAK,GACL3C,MAAO2J,EAAOlC,OACdoU,SAAU,SAAC7b,GAAD,OAAWge,EAAc,SAAUhe,QAGjD,cAACyQ,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAI4N,GAAI,EAAvB,SACE,eAAChf,EAAA,EAAD,CACEC,QAAQ,OACRgQ,cAAc,MACd3B,WAAW,SACXpO,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYG,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,0BAGA,cAAC,GAAD,CACEE,MAAO2J,EAAOgC,OACd1L,SAAU,SAACwI,GAAD,OAAWuV,EAAc,SAAUvV,IAC7CwU,cAAe,SAACxU,GAAD,OAAWuV,EAAc,SAAUvV,cAM1D,cAACgI,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,SACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,GAAI4N,GAAI,EAAvB,SACE,cAAC,GAAD,CACEtE,MAAM,WACNnL,KAAM,IACNpM,IAAK,IACL3C,MAAO2J,EAAOlD,SACdoV,SAAU,SAAC7b,GAAD,OAAWge,EAAc,WAAYhe,cA0D5Cye,GAlDI,SAAC5f,GAAW,IACrB0O,EAAuC1O,EAAvC0O,SAAUsH,EAA6BhW,EAA7BgW,SAAUC,EAAmBjW,EAAnBiW,KAAM4J,EAAa7f,EAAb6f,SAElC,OACE,eAAC1J,GAAA,EAAD,CAAQC,kBAAgB,oBAAoBH,KAAMA,EAAMI,QAASL,EAAjE,UACE,cAACM,GAAA,EAAD,CAAavU,GAAG,oBAAhB,yBACA,cAAC,KAAD,CACE+d,cAAe,CACbtT,KAAM,GACNF,KAAM,EACNM,KAAM,GACNhD,MAAO,UACPhB,OAAQ,EACRkE,OAAQ,UACRlF,SAAU,GAEZmY,iBAAkBC,OAAatI,MAAM,CACnClL,KAAMwT,OAAaC,SAAS,cAE9BC,SAAU,SAACpV,GAET,OADAxF,QAAQC,IAAIuF,GACL,IAETqV,SAAUN,EAjBZ,SAmBG,SAACO,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAA1B,UACE,cAAC9J,GAAA,EAAD,CAAeC,UAAQ,EAACzU,GAAG,6BAA3B,SACE,cAAC,GAAD,2BAAeqe,GAAf,IAA0B1R,SAAUA,OAEtC,eAAC8I,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEsR,KAAK,SACLtR,MAAM,UACN5I,QAAQ,WACRsf,SAAUF,EAAUG,aAJtB,iCC/IR5gB,GAAUT,YAAOyB,KAAV,uEAAGzB,CAAH,mDAKPshB,GAAmBthB,YAAOK,KAAV,gFAAGL,CAAH,2BAuLPuhB,GAnLC,SAACzgB,GAAW,IAClB0gB,EAAkC1gB,EAAlC0gB,OAAQC,EAA0B3gB,EAA1B2gB,UAAWC,EAAe5gB,EAAf4gB,WAErBxgB,EAAWC,cAEXgO,EAAgB9N,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc1K,WAC3D2K,EAAYhO,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAaC,QACtDoS,EAActgB,aAAY,SAACC,GAAD,OAAWA,EAAMsgB,eAAerS,QAC1DsS,EAAWxgB,aAAY,SAACC,GAAD,OAAWA,EAAMwgB,YAAYvS,QACpDwS,EAAa1gB,aAAY,SAACC,GAAD,OAAWA,EAAM0gB,cAAczS,QACxDC,EAAWnO,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYF,QACpD5L,EAAYtC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaoC,aACtDkT,EAAaxV,aAAY,SAACC,GAAD,OAAWA,EAAM2gB,iBAAiB1S,QAE3D2S,EACyB,gBAA7B/S,EAAcgC,WACVhC,EAAcgC,WACd,IAAMhC,EAAcgC,WAjBD,EAkBWnN,mBAASke,GAlBpB,mBAkBlBC,EAlBkB,KAkBNC,EAlBM,OAmBWpe,oBAAS,GAnBpB,mBAmBlBqe,EAnBkB,KAmBNC,EAnBM,KA8DzB,OACE,eAAC,GAAD,CAASlQ,EAAG,EAAZ,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CACEsC,MAAM,YACNrF,UAAWA,EAAUpF,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OAE3C8H,aAAa,EACb0C,YAAY,IAEd,cAAC,GAAD,CACEH,MAAM,eACNrF,UAAWA,EAAUpF,QACnB,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAW6C,MAC/B/C,EAAKC,aAAeC,IAAW+C,MAC/BjD,EAAKC,aAAeC,IAAW8C,UAEnCyH,QAAS,CACP,CACE/R,QAAS,kBAAM6e,EAAUc,IAAYrV,SACrCuI,KAAM+M,MAER,CACE5f,QAAS,kBAAM6e,EAAUc,IAAYtV,OACrCwI,KAAMgN,MAER,CACE7f,QAAS,kBAAM6e,EAAUc,IAAYpV,OACrCsI,KAAMiN,SAIZ,cAAC,GAAD,CACEhO,MAAM,SACNrF,UAAWA,EAAUpF,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWa,WAE3C0J,QAAS,CACP,CACE/R,QAAS,kBAAM6e,EAAUc,IAAYI,QACrClN,KAAMmN,SAIZ,cAAC,GAAD,CACElO,MAAM,aACNrF,UAAWA,EAAUpF,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWQ,QAE3C+J,QAAS,CACP,CACE/R,QAAS,kBAAM6e,EAAUc,IAAYM,YACrCpN,KAAMqN,OAGV3Q,aAAa,EACbyC,cACE,eAACnT,EAAA,EAAD,CACEC,QAAQ,OACRqO,WAAW,SACXpO,eAAe,gBAHjB,UAKE,cAAC,GAAD,CACEM,MAAOkgB,EACPjgB,SAjFuB,SAACwI,GAClCxJ,EAAS6hB,aAAgB5T,EAActM,GAAI6H,IAC3C0X,EAAc1X,GACd4X,GAAc,IA+EJpD,cA7E4B,SAACxU,GACvC0X,EAAc1X,GACW4X,EAArB5X,IAAUwX,MA6ELG,EACC,cAACf,GAAD,CACE1e,QA5EoB,WAChC1B,EAAS6hB,aAAgB5T,EAActM,GAAIsf,IAC3CG,GAAc,IA2EFxgB,QAAQ,WAFV,mBAOA,kCAMR,cAAC,GAAD,CACEiV,KAAMyK,IAAWe,IAAYM,UAC7BhM,WAAYA,EACZG,WA/HiB,SAACgM,GACtB9hB,EAAS+hB,aAA0B9T,EAActM,GAAImgB,IACrDvB,EAAU,MACVC,KA6HI5K,SAAU,kBAAM2K,EAAU,SAE5B,cAAC,GAAD,CACE1K,KAAMyK,IAAWe,IAAYI,MAC7BhJ,OAAQgI,EACR/H,YAhIkB,SAACpB,GACvBtX,EAASgiB,aAAqB/T,EAActM,GAAI2V,EAAO7U,IACvD8d,EAAU,MACVC,KA8HI5K,SAAU,kBAAM2K,EAAU,SAE5B,cAAC,GAAD,CACE1K,KAAMyK,IAAWe,IAAYtV,KAC7B4O,MAAOgG,EACP/F,WAjIiB,SAACM,GACtBlb,EAASiiB,aAAoBhU,EAActM,GAAIuZ,EAAMzY,IACrD8d,EAAU,MACVC,KA+HI5K,SAAU,kBAAM2K,EAAU,SAE5B,cAAC,GAAD,CACE1K,KAAMyK,IAAWe,IAAYrV,OAC7B2P,QAASkF,EACTjF,aAlImB,SAACsG,GACxBliB,EAASmiB,aAAsBlU,EAActM,GAAIugB,EAAQzf,IACzD8d,EAAU,MACVC,KAgII5K,SAAU,kBAAM2K,EAAU,SAE5B,cAAC,GAAD,CACE1K,KAAMyK,IAAWe,IAAYpV,KAC7BqC,SAAUA,EACVmR,SAnImB,SAAC/U,GACxB1K,EAASoiB,aAAgBnU,EAActM,GAAI+I,EAAQjI,IACnD8d,EAAU,MACVC,KAiII5K,SAAU,kBAAM2K,EAAU,a,uDCnM5B7B,GAAmB5f,YAAO2R,MAAV,uFAAG3R,CAAH,uCAgJPujB,GA1IS,SAACziB,GAAW,IAEhCgf,EAOEhf,EAPFgf,OACAC,EAMEjf,EANFif,WACAC,EAKElf,EALFkf,aAEAE,GAGEpf,EAJFmf,cAIEnf,EAHFof,SACAtU,EAEE9K,EAFF8K,OACAqJ,EACEnU,EADFmU,YAR+B,EAWDjR,oBAAS,GAXR,mBAW1BwQ,EAX0B,KAWhBC,EAXgB,KAgBjC,MAJ+B,OAA3B+O,KAAKC,UAAU3D,IACjB1Z,QAAQC,IAAIyZ,GAIX4D,IAAkB9X,EAAOzB,YAAYzE,SAAS,oBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,wBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAC7C,cAAC,GAAD,CACEwF,KAAK,kBACLiR,MAAM,OACNra,QAAQ,WACRG,MAAO2J,EAAOnB,WAAWS,KACzB2B,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWS,MACnB4U,EAAOrV,YACPqV,EAAOrV,WAAWS,MAEtBiU,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWS,MACnB4U,EAAOrV,YACPqV,EAAOrV,WAAWS,KAEpBoT,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAC7C,cAAC,GAAD,CACEwF,KAAK,kBACLiR,MAAM,OACNra,QAAQ,WACRG,MAAO2J,EAAOnB,WAAW6C,KACzBT,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAW6C,MACnBwS,EAAOrV,YACPqV,EAAOrV,WAAW6C,MAEtB6R,WACEe,EAAQzV,YACRyV,EAAQzV,WAAW6C,MACnBwS,EAAOrV,YACPqV,EAAOrV,WAAW6C,KAEpBgR,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SAAS,iBAC7C,eAACjE,EAAA,EAAD,CACEC,QAAQ,OACRqO,WAAW,SACX2B,cAAc,MACd/P,eAAe,gBAJjB,UAME,cAAC5B,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,wBAGA,cAACxB,EAAA,EAAD,CACEqC,QAAS,kBAAMqS,EAAY,kBAC3BvH,KAAK,QAFP,SAIG9B,EAAOtB,cACN,cAAC4I,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,SAKN,6BAEDuQ,IAAkB9X,EAAOzB,YAAYzE,SAAS,gBAC7C,eAACjE,EAAA,EAAD,CACEC,QAAQ,OACRqO,WAAW,SACX2B,cAAc,MACd/P,eAAe,gBAJjB,UAME,cAAC5B,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,qBAGA,cAACxB,EAAA,EAAD,CACEqC,QAAS,kBAAMqS,EAAY,iBAC3BvH,KAAK,QAFP,SAIG9B,EAAOD,aAAe,cAAC0H,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,SAI1C,qCA9GD,8B,sBC3BLsM,GAAmB5f,YAAO2R,MAAV,oFAAG3R,CAAH,uCAKhB+jB,GAAmB/jB,YAAOO,KAAV,oFAAGP,CAAH,+BA8PPgkB,GAzPM,SAACljB,GAAW,IAE7Bgf,EAQEhf,EARFgf,OACAC,EAOEjf,EAPFif,WAEAE,GAKEnf,EANFkf,aAMElf,EALFmf,eACAC,EAIEpf,EAJFof,QACAtU,EAGE9K,EAHF8K,OACAqY,EAEEnjB,EAFFmjB,qBACAlZ,EACEjK,EADFiK,aAT4B,EAWE/G,oBAAS,GAXX,mBAWvBwQ,EAXuB,KAWbC,EAXa,KAuD9B,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,qBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,sBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,sBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,qBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,qBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACE,eAACJ,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfE,MAAM,OACNkO,WAAW,SAJb,UAMG2T,IAAkB9X,EAAOzB,YAAYzE,SACpC,oBAEA,cAAC,GAAD,CACEwF,KAAK,mBACLiR,MAAM,QACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAW5I,OAC3CgL,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAW5I,OACnBie,EAAOrV,YACPqV,EAAOrV,WAAW5I,OAEtBsd,WACEe,EAAQzV,YACRyV,EAAQzV,WAAW5I,OACnBie,EAAOrV,YACPqV,EAAOrV,WAAW5I,MAEpByc,OAAQyB,EACR7d,SArFY,SAACC,GACzB,IAAIF,EAAQoJ,WAAWlJ,EAAMa,OAAOf,QAAU,EAC1C2J,EAAOnB,WAAWmE,YACpBqR,EACE,oBACChe,EAAQ8I,EAAaN,WAAW5F,OAAUkG,EAAaN,WAAW5I,OAGvEoe,EAAc,mBAAoB5U,WAAWlJ,EAAMa,OAAOf,QAAU,IA8ExDme,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEFge,IAAkB9X,EAAOzB,YAAYzE,SACnC,qBAEA,cAACqe,GAAD,CACEnhB,QAAS,kBAAMqhB,EAAqB,eADtC,SAGGrY,EAAOnB,WAAWmE,WAAa,cAACsV,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,MAGjD,6BAEDT,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEA,cAAC,GAAD,CACEwF,KAAK,oBACLiR,MAAM,SACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAW5F,QAC3CgI,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAW5F,QACnBib,EAAOrV,YACPqV,EAAOrV,WAAW5F,QAEtBsa,WACEe,EAAQzV,YACRyV,EAAQzV,WAAW5F,QACnBib,EAAOrV,YACPqV,EAAOrV,WAAW5F,OAEpByZ,OAAQyB,EACR7d,SA1Ha,SAACC,GAC1B,IAAIF,EAAQoJ,WAAWlJ,EAAMa,OAAOf,QAAU,EAC1C2J,EAAOnB,WAAWmE,YACpBqR,EACE,mBACChe,EAAQ8I,EAAaN,WAAW5I,MAASkJ,EAAaN,WAAW5F,QAGtEob,EAAc,oBAAqB5U,WAAWlJ,EAAMa,OAAOf,QAAU,IAmHzDme,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAC7e,EAAA,EAAD,CACEC,QAAQ,OACRC,eAAe,gBACfE,MAAM,OACNkO,WAAW,SAJb,UAMG2T,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEA,cAAC,GAAD,CACEwF,KAAK,oBACLiR,MAAM,SACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAWlC,QAC3CsE,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWlC,QACnBuX,EAAOrV,YACPqV,EAAOrV,WAAWlC,QAEtB4W,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWlC,QACnBuX,EAAOrV,YACPqV,EAAOrV,WAAWlC,OAEpB+V,OAAQyB,EACR7d,SAxJa,SAACC,GAC1B,IAAIF,EAAQoJ,WAAWlJ,EAAMa,OAAOf,QAAU,EAC1C2J,EAAOnB,WAAWoE,aACpBoR,EACE,oBACChe,EAAQ8I,EAAaN,WAAWjC,OAC/BuC,EAAaN,WAAWlC,QAG9B0X,EAAc,oBAAqB5U,WAAWlJ,EAAMa,OAAOf,QAAU,IAgJzDme,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SACpC,sBAEFge,IAAkB9X,EAAOzB,YAAYzE,SACnC,qBAEA,cAACqe,GAAD,CACEnhB,QAAS,kBAAMqhB,EAAqB,gBADtC,SAGGrY,EAAOnB,WAAWoE,YAAc,cAACqV,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,MAGlD,6BAEDT,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEA,cAAC,GAAD,CACEwF,KAAK,oBACLiR,MAAM,SACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAWjC,QAC3CqE,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWjC,QACnBsX,EAAOrV,YACPqV,EAAOrV,WAAWjC,QAEtB2W,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWjC,QACnBsX,EAAOrV,YACPqV,EAAOrV,WAAWjC,OAEpB8V,OAAQyB,EACR7d,SA5La,SAACC,GAC1B,IAAIF,EAAQoJ,WAAWlJ,EAAMa,OAAOf,QAAU,EAC1C2J,EAAOnB,WAAWoE,aACpBoR,EACE,oBACChe,EAAQ8I,EAAaN,WAAWlC,OAC/BwC,EAAaN,WAAWjC,QAG9ByX,EAAc,oBAAqB5U,WAAWlJ,EAAMa,OAAOf,QAAU,IAoLzDme,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,wCAnLH,8BC5ELV,GAAmB5f,YAAO2R,MAAV,yFAAG3R,CAAH,uCAiGPokB,GA3FU,SAACtjB,GAAW,IAEjCgf,EAMEhf,EANFgf,OACAC,EAKEjf,EALFif,WACAC,EAIElf,EAJFkf,aAEAE,GAEEpf,EAHFmf,cAGEnf,EAFFof,SACAtU,EACE9K,EADF8K,OAPgC,EASF5H,oBAAS,GATP,mBAS3BwQ,EAT2B,KASjBC,EATiB,KAWlC,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,oBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,kBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,yBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAC7C,cAAC,GAAD,CACEwF,KAAK,kBACLiR,MAAM,OACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAW/D,MAC3CmG,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAW/D,MACnBoZ,EAAOrV,YACPqV,EAAOrV,WAAW/D,MAEtByY,WACEe,EAAQzV,YACRyV,EAAQzV,WAAW/D,MACnBoZ,EAAOrV,YACPqV,EAAOrV,WAAW/D,KAEpB4X,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SAAS,kBAC7C,cAAC,GAAD,CACEwF,KAAK,iBACLiR,MAAM,MACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAW3D,KAC3C+F,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAW3D,KACnBgZ,EAAOrV,YACPqV,EAAOrV,WAAW3D,KAEtBqY,WACEe,EAAQzV,YACRyV,EAAQzV,WAAW3D,KACnBgZ,EAAOrV,YACPqV,EAAOrV,WAAW3D,IAEpBwX,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,qCApED,8BChBLC,GAAcvgB,YAAOqkB,MAAV,+EAAGrkB,CAAuBE,KAsF5BokB,GApFM,SAACxjB,GAAW,IAE7Bgf,EAOEhf,EAPFgf,OAGAG,GAIEnf,EANFif,WAMEjf,EALFkf,aAKElf,EAJFmf,eACAC,EAGEpf,EAHFof,QACAtU,EAEE9K,EAFF8K,OACA4D,EACE1O,EADF0O,SAR4B,EAUExL,oBAAS,GAVX,mBAUvBwQ,EAVuB,KAUbC,EAVa,KAY9B,OAAKiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAGjD,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,qBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAC7C,eAAC,GAAD,CAAa5D,QAAQ,WAAWyb,GAAI,EAApC,UACE,cAACiD,GAAA,EAAD,CAAY3d,GAAG,oBAAf,kBACA,cAAC,GAAD,CACEZ,MAAO2J,EAAOnB,WAAW2C,KACzBlL,SAAU,SAACkG,GAAD,OACR6X,EAAc,kBAAmB7X,EAAEpF,OAAOf,QAE5CuN,SAAUA,OAId,6BAEDkU,IAAkB9X,EAAOzB,YAAYzE,SAAS,oBAC7C,eAACgN,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC9S,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,0BAIF,cAAC2Q,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC,GAAD,CACE5Q,MAAO2J,EAAOnB,WAAWC,MACzBxI,SAAU,SAACwI,GAAD,OAAWuV,EAAc,mBAAoBvV,IACvDwU,cAAe,SAACxU,GAAD,OACbuV,EAAc,mBAAoBvV,IAEpC6Z,KAAMpE,QACJD,EAAQzV,YACNyV,EAAQzV,WAAWC,OACnBoV,EAAOrV,YACPqV,EAAOrV,WAAWC,OAEtByU,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWC,OACnBoV,EAAOrV,YACPqV,EAAOrV,WAAWC,aAM1B,6BAEDgZ,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAC7C,cAAC,GAAD,CACEyW,MAAM,YACNnL,IAAK,EACLpM,IAAK,GACL3C,MAAO2J,EAAOnB,WAAWiD,KACzBoQ,SAAU,SAAC7b,GAAD,OAAWge,EAAc,kBAAmBhe,MAGxD,qCA/DD,8BC4DIuiB,GA9EQ,SAAC1jB,GAAW,IAE/Bgf,EAMEhf,EANFgf,OAGAG,GAGEnf,EALFif,WAKEjf,EAJFkf,aAIElf,EAHFmf,eACAC,EAEEpf,EAFFof,QACAtU,EACE9K,EADF8K,OAP8B,EASA5H,oBAAS,GATT,mBASzBwQ,EATyB,KASfC,EATe,KAWhC,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,sBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,qBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,uBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEA,eAACgN,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC9S,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,4BAIF,cAAC2Q,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC,GAAD,CACE5Q,MAAO2J,EAAOnB,WAAWmD,OACzB1L,SAAU,SAACwI,GAAD,OACRuV,EAAc,oBAAqBvV,IAErCwU,cAAe,SAACxU,GAAD,OACbuV,EAAc,oBAAqBvV,IAErCmC,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWmD,QACnBkS,EAAOrV,YACPqV,EAAOrV,WAAWmD,QAEtBuR,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWmD,QACnBkS,EAAOrV,YACPqV,EAAOrV,WAAWmD,cAM1B,6BAED8V,IAAkB9X,EAAOzB,YAAYzE,SACpC,qBAEA,cAAC,GAAD,CACEyW,MAAM,eACNnL,IAAK,EACLpM,IAAK,GACL3C,MAAO2J,EAAOnB,WAAWf,OACzBoU,SAAU,SAAC7b,GAAD,OAAWge,EAAc,oBAAqBhe,MAG1D,qCAvDD,8BC6DIwiB,GA5EO,SAAC3jB,GAAW,IAE9Bgf,EAMEhf,EANFgf,OAGAG,GAGEnf,EALFif,WAKEjf,EAJFkf,aAIElf,EAHFmf,eACAC,EAEEpf,EAFFof,QACAtU,EACE9K,EADF8K,OAP6B,EASC5H,oBAAS,GATV,mBASxBwQ,EATwB,KASdC,EATc,KAW/B,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,qBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,sBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,8BAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SAAS,qBAC/CkG,EAAOzB,aAAeC,IAAW+C,KAC/B,eAACuF,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC9S,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,qBAIF,cAAC2Q,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC,GAAD,CACE5Q,MAAO2J,EAAOnB,WAAWC,MACzBxI,SAAU,SAACwI,GAAD,OAAWuV,EAAc,mBAAoBvV,IACvDwU,cAAe,SAACxU,GAAD,OACbuV,EAAc,mBAAoBvV,IAEpC6Z,KAAMpE,QACJD,EAAQzV,YACNyV,EAAQzV,WAAWC,OACnBoV,EAAOrV,YACPqV,EAAOrV,WAAWC,OAEtByU,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWC,OACnBoV,EAAOrV,YACPqV,EAAOrV,WAAWC,aAM1B,6BAEDgZ,IAAkB9X,EAAOzB,YAAYzE,SACpC,sBAEA,cAAC,GAAD,CACEyW,MAAM,UACNnL,IAAK,EACLpM,IAAK,EACLmZ,KAAM,IACN9b,MAAO2J,EAAOnB,WAAWI,QACzBiT,SAAU,SAAC7b,GAAD,OAAWge,EAAc,qBAAsBhe,MAG3D,qCArDD,8B,sBC8EIyiB,GA7FU,SAAC5jB,GAQpBA,EANFgf,OAMEhf,EALFif,WAKEjf,EAJFkf,aAJiC,IAKjCC,EAGEnf,EAHFmf,cAEArU,GACE9K,EAFFof,QAEEpf,EADF8K,QAPgC,EASF5H,oBAAS,GATP,mBAS3BwQ,EAT2B,KASjBC,EATiB,KAWlC,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,wBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,oBAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,mBAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,yBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SACpC,uBAEA,cAAC,GAAD,CACEyW,MAAM,WACNnL,KAAM,IACNpM,IAAK,IACL3C,MAAO0C,KAAK4E,MAAMqC,EAAOnB,WAAW/B,UACpCoV,SAAU,SAAC7b,GAAD,OAAWge,EAAc,sBAAuBhe,MAG5D,6BAEF,eAACR,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,eAAnC,UACG+hB,IAAkB9X,EAAOzB,YAAYzE,SACpC,mBAEA,cAAC6a,GAAA,EAAD,CAAaoE,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEpa,MAAM,UACNqa,QAAS5E,QAAQvU,EAAOnB,WAAW9B,MACnCzG,SAAU,SAACC,GAAD,OACR8d,EACE,kBACA9d,EAAMa,OAAO+hB,QAAU,EAAI,MAKnC5I,MAAM,OACN6I,eAAe,YAInB,6BAEDtB,IAAkB9X,EAAOzB,YAAYzE,SACpC,mBAEA,cAAC6a,GAAA,EAAD,CAAaoE,UAAU,WAAvB,SACE,cAACC,GAAA,EAAD,CACEC,QACE,cAACC,GAAA,EAAD,CACEpa,MAAM,UACNqa,QAAS5E,QAAQvU,EAAOnB,WAAW7B,MACnC1G,SAAU,SAACC,GAAD,OACR8d,EACE,kBACA9d,EAAMa,OAAO+hB,QAAU,EAAI,MAKnC5I,MAAM,OACN6I,eAAe,YAInB,wCApEH,8BCdLpF,GAAmB5f,YAAO2R,MAAV,uFAAG3R,CAAH,uCAiMPilB,GA3LQ,SAACnkB,GAAW,IAE/Bgf,EAMEhf,EANFgf,OACAC,EAKEjf,EALFif,WACAC,EAIElf,EAJFkf,aACAC,EAGEnf,EAHFmf,cACAC,EAEEpf,EAFFof,QACAtU,EACE9K,EADF8K,OAP8B,EASA5H,oBAAS,GATT,mBASzBwQ,EATyB,KASfC,EATe,KAWhC,OACGiP,IAAkB9X,EAAOzB,YAAYzE,SAAS,2BAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SAAS,0BAC9Cge,IAAkB9X,EAAOzB,YAAYzE,SACpC,6BAEDge,IAAkB9X,EAAOzB,YAAYzE,SACpC,6BAEDge,IAAkB9X,EAAOzB,YAAYzE,SAAS,4BAI/C,eAACie,GAAA,EAAD,CAAWnP,SAAUA,EAAUtS,SAAU,kBAAMuS,GAAaD,IAA5D,UACE,cAACoP,GAAA,EAAD,CAAkBC,WAAY,cAAClO,GAAA,EAAD,IAA9B,SACE,cAAC5V,EAAA,EAAD,uBAEF,cAAC+jB,GAAA,EAAD,UACE,eAACriB,EAAA,EAAD,CAAKC,QAAQ,OAAOgQ,cAAc,SAAS7P,MAAM,OAAjD,UACG6hB,IAAkB9X,EAAOzB,YAAYzE,SACpC,0BAEA,eAACgN,GAAA,EAAD,CAAMC,WAAS,EAACzS,QAAS,EAAzB,UACE,cAACwS,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC9S,EAAA,EAAD,CAAY+B,QAAQ,QAAQ4I,MAAM,gBAAgB3I,GAAI,EAAtD,4BAIF,cAAC2Q,GAAA,EAAD,CAAMxI,MAAI,EAAC2I,GAAI,EAAf,SACE,cAAC,GAAD,CACE5Q,MAAO2J,EAAOnB,WAAWa,YACzBpJ,SAAU,SAACwI,GAAD,OACRuV,EAAc,yBAA0BvV,IAE1CwU,cAAe,SAACxU,GAAD,OACbuV,EAAc,yBAA0BvV,IAE1CmC,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWa,aACnBwU,EAAOrV,YACPqV,EAAOrV,WAAWa,aAEtB6T,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWa,aACnBwU,EAAOrV,YACPqV,EAAOrV,WAAWa,mBAM1B,6BAEDoY,IAAkB9X,EAAOzB,YAAYzE,SACpC,yBAEA,cAAC,GAAD,CACEwF,KAAK,wBACLiR,MAAM,cACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAWc,YAC3CsB,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWc,YACnBuU,EAAOrV,YACPqV,EAAOrV,WAAWc,YAEtB4T,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWc,YACnBuU,EAAOrV,YACPqV,EAAOrV,WAAWc,WAEpB+S,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SACpC,4BAEA,cAAC,GAAD,CACEyW,MAAM,iBACNnL,IAAK,EACLpM,IAAK,EACLmZ,KAAM,IACN9b,MAAO2J,EAAOnB,WAAWe,cACzBsS,SAAU,SAAC7b,GAAD,OACRge,EAAc,2BAA4Bhe,MAI9C,6BAEDyhB,IAAkB9X,EAAOzB,YAAYzE,SACpC,4BAEA,cAAC,GAAD,CACEwF,KAAK,2BACLiR,MAAM,iBACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAWgB,eAC3CoB,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWgB,eACnBqU,EAAOrV,YACPqV,EAAOrV,WAAWgB,eAEtB0T,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWgB,eACnBqU,EAAOrV,YACPqV,EAAOrV,WAAWgB,cAEpB6S,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,6BAEDoD,IAAkB9X,EAAOzB,YAAYzE,SACpC,4BAEA,cAAC,GAAD,CACEwF,KAAK,2BACLiR,MAAM,iBACNra,QAAQ,WACRka,KAAK,SACL/Z,MAAO0E,IAAOC,WAAWgF,EAAOnB,WAAWiB,eAC3CmB,MAAOsT,QACLD,EAAQzV,YACNyV,EAAQzV,WAAWiB,eACnBoU,EAAOrV,YACPqV,EAAOrV,WAAWiB,eAEtByT,WACEe,EAAQzV,YACRyV,EAAQzV,WAAWiB,eACnBoU,EAAOrV,YACPqV,EAAOrV,WAAWiB,cAEpB4S,OAAQyB,EACR7d,SAAU8d,EACVI,WAAS,EACTpQ,OAAO,SACPyB,GAAI,EACJ4O,gBAAiB,CACfC,QAAQ,KAIZ,qCA7JD,8BCzBL7f,GAAUT,YAAOyB,KAAV,2EAAGzB,CAAH,yGAuOEklB,GA7NK,WAClB,IAAMhkB,EAAWC,cACX4J,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAa5K,WACzD8K,EAAWnO,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYF,QAKpD0F,EAAc,SAACC,GACnBhU,EACE2O,aAAY,2BACP9E,GADM,mBAERmK,EAAQnK,EAAamK,GAAS,EAAI,OAInC+O,EAAuB,SAAC/O,GAC5BhU,EACE2O,aAAY,2BACP9E,GADM,IAETN,WAAW,2BACNM,EAAaN,YADR,mBAEPyK,EAAQnK,EAAaN,WAAWyK,GAAS,EAAI,SAMhDiQ,EAAiB,SAACza,GACtB,OAAKA,IAAUA,EAAMhD,QACd0d,KAAc1a,IAGjB2a,EAAa,SAACzZ,GAClB,IAAK,IAAIpC,KAAKoC,EAAOnB,WACnB,GAAImB,EAAOnB,WAAWjB,IAAMuB,EAAaN,WAAWjB,GAClD,OAAO,EAGX,IAAK,IAAIA,KAAKoC,EACZ,GAAS,cAALpC,GAAqBoC,EAAOpC,IAAMuB,EAAavB,GACjD,OAAO,EAGX,OAAO,GAGT,GAAIuB,EAAc,CAChB,IAAMua,EAAgBvb,IAAEwb,KACtB,CACEjb,cAAe,EACfqB,aAAc,EACdlB,WAAYV,IAAEwb,KACZ,CACEra,KAAM,GACNoC,KAAM,GACNzL,MAAO,EACPgD,OAAQ,EACR6B,KAAM,EACNI,IAAK,EACL4B,SAAU,EACVC,KAAM,EACNC,KAAM,EACNL,OAAQ,EACRC,OAAQ,EACRkB,OAAQ,EACR0D,KAAM,EACNM,KAAM,EACNE,OAAQ,UACRlD,MAAO,KACPG,QAAS,EACTS,YAAa,KACbC,WAAY,EACZC,cAAe,EACfC,cAAe,EACfC,cAAe,GAEjBgY,IAAkB3Y,EAAaZ,YAC5BF,QAAO,SAACC,GAAD,OAAUA,EAAKxE,SAAS,kBAC/B6E,KAAI,SAACL,GAAD,OAAUA,EAAKd,QAAQ,cAAe,SAGjDsa,IAAkB3Y,EAAaZ,YAAYF,QACzC,SAACC,GAAD,OAAWA,EAAKxE,SAAS,mBAI7B,OACE,cAAC,GAAD,CAAS8f,GAAI,EAAGhU,GAAI,EAApB,SACE,cAAC,KAAD,CACEoP,cAAa,uCACR0E,GACAva,GAFQ,IAGXN,WAAW,2BACN6a,EAAc7a,YACdM,EAAaN,cAGpBoW,iBAAkBC,KAAW,CAC3B9L,YAAa8L,OACbxW,cAAewW,OACfnV,aAAcmV,OACdrW,WAAYqW,KAAW,CACrB5V,KAAM4V,OAAaC,SAAS,YAC5BzT,KAAMwT,OAAa2E,KACjB,kBACA,YACA,SAACxjB,GAAD,OACGA,GAASA,EAAMyF,QAChBqD,EAAaZ,aAAeC,IAAW+C,QAE3CtL,MAAOif,OACJ4E,SAAS,EAAG,0BACZD,KACC,mBACA,YACA,SAACxjB,GAAD,OACEA,GACA8I,EAAaZ,aAAeC,IAAW+C,MACvCpC,EAAaZ,aAAeC,IAAWC,KACvCU,EAAaZ,aAAeC,IAAWQ,QAE7C/F,OAAQic,OACL4E,SAAS,EAAG,0BACZD,KACC,oBACA,YACA,SAACxjB,GAAD,OACEA,GACA8I,EAAaZ,aAAeC,IAAW+C,MACvCpC,EAAaZ,aAAeC,IAAWC,KACvCU,EAAaZ,aAAeC,IAAWQ,QAE7ClE,KAAMoa,OACNha,IAAKga,OACLpY,SAAUoY,OACP4E,UAAU,IAAK,6BACfC,SAAS,IAAK,yBACjBhd,KAAMmY,OACNlY,KAAMkY,OACNvY,OAAQuY,OAAa4E,SAAS,EAAG,0BACjCld,OAAQsY,OAAa4E,SAAS,EAAG,0BACjChb,MAAOoW,OACJ8E,WACAH,KACC,mBACA,yBACAN,GAEJzX,KAAMoT,OACNlT,OAAQkT,OACL8E,WACAH,KACC,mBACA,yBACAN,GAEJzb,OAAQoX,OACR1T,KAAM0T,OACNjW,QAASiW,OACTxV,YAAawV,OACV8E,WACAH,KACC,mBACA,yBACAN,GAEJ5Z,WAAYuV,OACZtV,cAAesV,OACfrV,cAAeqV,OACfpV,cAAeoV,WAGnB+E,oBAAkB,EAClB7E,SAAU,SAACpV,GAET,OADAxF,QAAQC,IAAIuF,GACL,IAETqV,SA7KY,SAACrV,GACnB1K,EAAS2O,aAAYjE,KAmFjB,SA2FG,SAACsV,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAc2E,YAAU,EAAlD,UACE,eAACrkB,EAAA,EAAD,CACEC,QAAQ,OACRgQ,cAAc,MACd/P,eAAe,gBACfoO,WAAW,SACXlL,OAAO,OALT,UAOE,cAAC9E,EAAA,EAAD,CAAY+B,QAAQ,KAAKsR,QAAM,EAA/B,wBAGC8N,EAAU6E,SAAWV,EAAWnE,EAAUtV,QACzC,cAACvL,EAAA,EAAD,CAAQ2b,KAAK,SAAStR,MAAM,UAAU5I,QAAQ,WAA9C,mBAIA,gCAGJ,cAAC,GAAD,2BAAqBof,GAArB,IAAgCjM,YAAaA,KAC7C,cAAC,GAAD,2BAAkBiM,GAAlB,IAA6B1R,SAAUA,KACvC,cAAC,GAAD,eAAmB0R,IACnB,cAAC,GAAD,eAAoBA,IACpB,cAAC,GAAD,2BACMA,GADN,IAEE+C,qBAAsBA,EACtBlZ,aAAcA,KAEhB,cAAC,GAAD,eAAsBmW,IACtB,cAAC,GAAD,eAAsBA,IACtB,cAAC,GAAD,eAAoBA,YAOhC,OAAO,8BC7OH7gB,GAASL,YAAOM,KAAV,4EAAGN,CAAkBE,KA4BlB8lB,GA1BO,SAACllB,GAAW,IACxBwM,EAAoCxM,EAApCwM,KAAMyJ,EAA8BjW,EAA9BiW,KAAMD,EAAwBhW,EAAxBgW,SAAUmP,EAAcnlB,EAAdmlB,UAE9B,OACE,eAAChP,GAAA,EAAD,CAAQC,kBAAgB,gBAAgBH,KAAMA,EAA9C,UACE,cAACK,GAAA,EAAD,CAAavU,GAAG,gBAAhB,qBACA,cAACwU,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACvX,EAAA,EAAD,CAAY+B,QAAQ,QAApB,SAA6BwL,MAE/B,eAACgL,GAAA,EAAD,WACE,cAAC,GAAD,CAAQ1V,QAASkU,EAAUpM,MAAM,UAAjC,oBAGA,cAAC,GAAD,CACE9H,QAASqjB,EACTvb,MAAM,UACN5I,QAAQ,WACRokB,WAAS,EAJX,4B,oBCKFzlB,GAAUT,YAAOyB,KAAV,sEAAGzB,CAAH,2BACS,SAACc,GAAD,OAAWA,EAAMqlB,cAkOxBC,UA/NA,WACb,IAAMllB,EAAWC,cACXklB,EAASC,cAFI,EAGyBtiB,mBAAS,IAHlC,mBAGZuiB,EAHY,KAGIC,EAHJ,OAISxiB,mBAAS,MAJlB,mBAIZwd,EAJY,KAIJC,EAJI,KAMbgF,EAAO3iB,iBAAO,GACd4iB,EAAW5iB,iBAAO,GAElByY,EAAOlb,aAAY,SAACC,GAAD,OAAWA,EAAMkb,YAAYD,QAChDpN,EAAgB9N,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc1K,WAC3DqG,EAAe1J,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAa5K,WACzDiiB,EAAiBtlB,aAAY,SAACC,GAAD,OAAWA,EAAMgO,aAAasX,aAC3DjF,EAActgB,aAAY,SAACC,GAAD,OAAWA,EAAMsgB,eAAerS,QAC1DsS,EAAWxgB,aAAY,SAACC,GAAD,OAAWA,EAAMwgB,YAAYvS,QACpDC,EAAWnO,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYF,QACpD/N,EAAOH,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAaC,QACjDJ,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAG1BylB,EAAgBxlB,aAAY,SAACC,GAAD,OAAWA,EAAM8N,cAAc0X,WAC3DC,EAAiB1lB,aAAY,SAACC,GAAD,OAAWA,EAAM4N,eAAe4X,WAC7DE,EAAc3lB,aAAY,SAACC,GAAD,OAAWA,EAAMmO,YAAYqX,WACvDG,EAAqB5lB,aACzB,SAACC,GAAD,OAAWA,EAAM0gB,cAAckF,eAG3BC,EAAe,WACnBjmB,EAAS4B,YAAQ6B,KAAKC,IAAID,KAAKqM,IAAW,KAAPxP,EAAa,IAAK,QAEjD4lB,EAAgB,WACpBlmB,EAAS4B,YAAQ6B,KAAKC,IAAID,KAAKqM,IAAIxP,EAAO,KAAM,IAAK,QAEjD6lB,EAA6B,SAACjlB,GAClClB,EAASomB,YAAkBllB,KAEvBmlB,EAAuB,SAACC,GAC5B,IAAIC,EAAiB,YAAOrmB,GACxB2T,EAAQ0S,EAAkBC,QAAQF,GAClCzS,GAAS,EACX0S,EAAkBE,OAAO5S,EAAO,GAEhC0S,EAAkBrjB,KAAKojB,GAEzBH,EAA2BI,IAMvBG,EAAiB,SAAClI,EAAKvd,GA8C3B,GA5CAiE,QAAQC,IAAI,aAAcqZ,EAAKvd,GACF,UAAzBA,EAAMa,OAAO6kB,SAAsC,YAAf1lB,EAAM6Z,OAEjC,QAAR0D,GAAyB,cAARA,IAClB3U,GACAA,EAAaZ,aAAeC,IAAWC,IAKtB,QAARqV,GAAiB3U,EAC1B7J,EAAS8J,aAAgB,OACF,MAAd7I,EAAMud,KAAevd,EAAM2lB,SACpCX,IACuB,MAAdhlB,EAAMud,KAAevd,EAAM2lB,SACpCV,IACuB,MAAdjlB,EAAMud,KAAevd,EAAM2lB,SACpC5mB,EAAS4B,YAAQ,IACM,MAAdX,EAAMud,KAAevd,EAAMqO,SAAWzF,EAC/C7J,EAAS6mB,aAAkBhd,IACJ,MAAd5I,EAAMud,KAAevd,EAAMqO,SAAWmW,EAC/CzlB,EAAS8mB,aAAWrB,IACH,MAARjH,EACT6H,EAAqBjlB,IAAeC,SACnB,MAARmd,EACT6H,EAAqBjlB,IAAeE,WACnB,MAARkd,EACT6H,EAAqBjlB,IAAeG,eACnB,MAARid,EACT6H,EAAqBjlB,IAAeI,cACnB,MAARgd,EACT6H,EAAqBjlB,IAAeK,MACnB,MAAR+c,EACT+B,EAAUc,IAAYpV,MACL,MAARuS,EACT+B,EAAUc,IAAYI,OACL,MAARjD,EACT+B,EAAUc,IAAYtV,MACL,MAARyS,GACT+B,EAAUc,IAAYM,WAhCtB2D,EAAkB,2BAAD,OACYzb,EAAaN,WAAWS,KADpC,QAqCQ,UAAzB/I,EAAMa,OAAO6kB,SAEb,CAAC,aAAc,YAAa,UAAW,aAAaniB,SAClDvD,EAAMud,MAER3U,IACC,CAACX,IAAWC,IAAKD,IAAWQ,MAAMlF,SAASqF,EAAaZ,YACzD,CACA,IAAI8d,EAAQ9lB,EAAM2lB,SAAW,GAAK,EAC9BI,EACY,cAAd/lB,EAAMud,KACDuI,EACa,eAAd9lB,EAAMud,IACNuI,EACA,EACFE,EACY,YAAdhmB,EAAMud,KACDuI,EACa,cAAd9lB,EAAMud,IACNuI,EACA,EACN,GAAmB,UAAf9lB,EAAM6Z,KAAkB,CAC1B,IAAIvR,EAAU,eAAQM,EAAaN,YAC/Bic,EAAShiB,SAAW+hB,EAAK/hB,UAC3B+F,EAAW/D,KAAOqE,EAAaN,WAAW/D,KAAOwhB,EACjDzd,EAAW3D,IAAMiE,EAAaN,WAAW3D,IAAMqhB,GAEjDjnB,EACE2O,aAAY,2BACP9E,GADM,IAETN,WAAYA,WAIZic,EAAShiB,SAAW+hB,EAAK/hB,UAC3BgiB,EAAShiB,QAAU0jB,OAAOC,OAAO5B,EAAK/hB,SACtCxD,EACEonB,aAAgB,2BACXvd,GADU,IAEbN,WAAW,2BACNM,EAAaN,YADR,IAER/D,KAAMqE,EAAaN,WAAW/D,KAAOwhB,EACrCphB,IAAKiE,EAAaN,WAAW3D,IAAMqhB,WAoCnD,OAtBArjB,qBAAU,WACJyX,GAAQA,EAAK1Z,IAAMwjB,EAAOxjB,KACvBsM,GACHjO,EAASqnB,aAAUlC,EAAOxjB,KAEvBokB,GACH/lB,EAASsnB,aAAsBjM,EAAK1Z,KAEjC8e,EAAYja,QAAQxG,EAASunB,gBAC7B5G,EAASna,QAAQxG,EAASwnB,gBAC1BlZ,EAAS9H,QAAQxG,EAASynB,mBAGhC,CAACpM,IAEJzX,qBAAU,WACR,IAAM8jB,EAAWC,aAAY,WAC3BpC,EAAK/hB,SAAW,IACf,KACH,OAAO,kBAAMokB,cAAcF,MAC1B,IAGD,qCACE,cAACG,EAAA,EAAD,CAAQrU,MAAOvF,EAAgBA,EAAcjE,KAAO,OACnD2b,GAAiBE,GAAkBC,IAAgB7X,EAClD,cAAC6Z,EAAA,EAAD,IAEA,eAACvnB,EAAA,EAAD,CAAKI,MAAM,OAAOgD,OAAO,OAAOnD,QAAQ,OAAOgQ,cAAc,SAA7D,UACE,cAAC,IAAD,CACEuX,WAAY,CAAC,OACbC,WAAYtB,IAEd,cAAC,IAAD,CACEqB,WAAY,CAAC,OACbE,gBAAgB,QAChBD,WAAYtB,IAEd,eAACnmB,EAAA,EAAD,CAAKI,MAAM,OAAOgD,OAAO,oBAAoBnD,QAAQ,OAArD,UACE,cAAC,GAAD,CACE8f,OAAQA,EACRC,UAAWA,EACXC,WApJO,WACjB0H,YAAW,kBAAMxjB,SAASyjB,cAAcC,SAAQ,QAqJxC,cAAC,GAAD,CACEznB,MAAM,qBACNskB,WAAW,UACXpM,SAAS,SAHX,SAKE,cAAC,GAAD,MAEF,cAAC,GAAD,OAEF,cAAC,EAAD,CACEhZ,SAAUomB,EACVnmB,UAAWomB,EACXnmB,uBAAwBomB,OAI9B,cAAC,GAAD,CACE/Z,KAAMiZ,EACNxP,KAAgC,IAA1BwP,EAAe7e,OACrBoP,SAAU,kBAAM0P,EAAkB,KAClCP,UArEgB,WACpB/kB,EAASqoB,aAAYxe,IACrByb,EAAkB,Y,iCC3LtB,OAoCe,KACbgD,uBAnC6B,SAACC,GAC9B,IAAMC,GACJ,IAAIviB,MAAOwiB,UAAY,IAAO,IAAIxiB,KAAKsiB,GAAWE,UACpD,GAAID,EAAuB,GACzB,MAAM,GAAN,OAAU/kB,KAAK4E,MAAMmgB,GAArB,gBAEF,IAAME,EAAoBF,EAAuB,GACjD,GAAIE,EAAoB,GACtB,MAAM,GAAN,OAAUjlB,KAAK4E,MAAMqgB,GAArB,gBAEF,IAAMC,EAAqBD,EAAoB,GAC/C,GAAIC,EAAqB,GACvB,MAAM,GAAN,OAAUllB,KAAK4E,MAAMsgB,GAArB,cAEF,IAAMC,EAAoBD,EAAqB,GAC/C,MAAM,GAAN,OAAUllB,KAAK4E,MAAMugB,GAArB,cAqBAljB,WAJiB,SAACmjB,GAAD,OAASplB,KAAK4E,MAA+B,KAAxBwgB,EAAM1L,OAAO2L,UAAkB,KAKrEpiB,UAnBgB,SAACqiB,GACjB,IAAIC,EACFD,EAAIviB,OAAS,EACT,wDAAwDyiB,KAAKF,GAC7D,4CAA4CE,KAAKF,GACvD,OAAKC,EACE,CACLriB,EAAG9E,SAASmnB,EAAO,GAAI,IACvBniB,EAAGhF,SAASmnB,EAAO,GAAI,IACvBjiB,EAAGlF,SAASmnB,EAAO,GAAI,IACvB5kB,EAAG2kB,EAAIviB,OAAS,EAAI3E,SAASmnB,EAAO,GAAI,IAAM,KAL5B","file":"static/js/6.7f17d240.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setZoom } from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport { ZoomIn as ZoomInIcon, ZoomOut as ZoomOutIcon } from \"react-feather\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst Button = styled(MuiButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst Toolbar = (props) => {\r\n  const { onZoomIn, onZoomOut, onChangePaintingGuides } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = (event, newFormats) => {\r\n    onChangePaintingGuides(newFormats);\r\n  };\r\n\r\n  const handleZoomChange = (event) => {\r\n    dispatch(setZoom(parseInt(event.target.value || 0) / 100.0));\r\n  };\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <Typography variant=\"subtitle1\" mr={2}>\r\n            Painting Guides:\r\n          </Typography>\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <Typography variant=\"caption\">car mask</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <Typography variant=\"caption\">wireframe</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">sponsor blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <Typography variant=\"caption\">number blocks</Typography>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <Typography variant=\"caption\">grid</Typography>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button mr={2} variant=\"outlined\">\r\n            SHORTCUTS\r\n          </Button>\r\n          <Button mr={2} variant=\"outlined\">\r\n            SIM PREVIEW\r\n          </Button>\r\n          <IconButton onClick={onZoomOut}>\r\n            <ZoomOutIcon />\r\n          </IconButton>\r\n          <IconButton onClick={onZoomIn} mr={1}>\r\n            <ZoomInIcon />\r\n          </IconButton>\r\n          <CustomOutlinedInput\r\n            id=\"zoom-value\"\r\n            value={zoom * 100}\r\n            onChange={handleZoomChange}\r\n            endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n            // inputProps={{\r\n            //   \"aria-label\": \"weight\",\r\n            // }}\r\n            labelWidth={0}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport Helper from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  src,\r\n  tellSize,\r\n  isSelected,\r\n  onSelect,\r\n  onChange,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: Helper.mathRound2(props.x - width / 2),\r\n        top: Helper.mathRound2(props.y - height / 2),\r\n        width: Helper.mathRound2(width),\r\n        height: Helper.mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        width: Helper.mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: Helper.mathRound2(\r\n          Math.max(1, node.height() * Math.abs(scaleY))\r\n        ),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n      if (filterColor) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor ? Helper.hexToRgba(filterColor).r : null}\r\n      green={filterColor ? Helper.hexToRgba(filterColor).g : null}\r\n      blue={filterColor ? Helper.hexToRgba(filterColor).b : null}\r\n      alpha={filterColor ? Helper.hexToRgba(filterColor).a / 255 : null}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      // onTransform={handleTransform}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const gridPadding = 10;\r\n  const { paintingGuides, currentCarMake, handleImageSize, frameSize } = props;\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.CARMASK) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/mask.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.WIREFRAME) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/wireframe.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.GRID) ? (\r\n        <>\r\n          {Array.from(\r\n            Array(Math.round(frameSize.width / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`x-${i}`}\r\n                  points={[\r\n                    Math.round(i * gridPadding),\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.width,\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n          {Array.from(\r\n            Array(Math.round(frameSize.height / gridPadding)),\r\n            (e, i) => {\r\n              return (\r\n                <Line\r\n                  key={`y-${i}`}\r\n                  points={[\r\n                    0,\r\n                    Math.round(i * gridPadding),\r\n                    frameSize.height,\r\n                    Math.round(i * gridPadding),\r\n                  ]}\r\n                  stroke=\"#ddd\"\r\n                  strokeWidth={0.1}\r\n                  listening={false}\r\n                />\r\n              );\r\n            }\r\n          )}\r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideTop;\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const { paintingGuides, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/sponsor_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n      {paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? (\r\n        <URLImage\r\n          src={`${\r\n            config.assetsURL\r\n          }/templates/${currentCarMake.folder_directory.replace(\r\n            \" \",\r\n            \"_\"\r\n          )}/number_blocks.png`}\r\n          tellSize={handleImageSize}\r\n          listening={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaintingGuideBottom;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const { layers, currentCarMake, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          tellSize={handleImageSize}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarParts;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, handleImageSize } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE && item.layer_visible\r\n        ),\r\n        [\"layer_order\", \"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          tellSize={handleImageSize}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          key={layer.id}\r\n          listening={false}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BasePaints;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst Overlays = (props) => {\r\n  const { layers, currentLayer, setCurrentLayer, frameSize, onChange } = props;\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(\r\n        layers.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY && item.layer_visible\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ).map((layer) => (\r\n        <URLImage\r\n          name={layer.id.toString()}\r\n          src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n          key={layer.id}\r\n          x={parseFloat(layer.layer_data.left || 0)}\r\n          y={parseFloat(layer.layer_data.top || 0)}\r\n          allowFit={true}\r\n          filterColor={layer.layer_data.color}\r\n          width={layer.layer_data.width}\r\n          height={layer.layer_data.height}\r\n          rotation={layer.layer_data.rotation}\r\n          opacity={layer.layer_data.opacity}\r\n          scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n          scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n          shadowColor={layer.layer_data.shadowColor}\r\n          shadowBlur={layer.layer_data.shadowBlur}\r\n          shadowOpacity={layer.layer_data.shadowOpacity}\r\n          shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n          shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n          onSelect={() => setCurrentLayer(layer)}\r\n          isSelected={currentLayer && currentLayer.id === layer.id}\r\n          listening={!layer.layer_locked}\r\n          frameSize={frameSize}\r\n          onChange={(values) => onChange(layer, values)}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Overlays;\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport Helper from \"helper\";\r\n\r\nconst TextNode = ({\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  isSelected,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: Helper.mathRound2(e.target.x()),\r\n        top: Helper.mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: Helper.mathRound2(node.x()),\r\n        top: Helper.mathRound2(node.y()),\r\n        // set minimal value\r\n        // width: Helper.mathRound2(Math.max(5, node.width())),\r\n        // height: Helper.mathRound2(Math.max(5, node.height())),\r\n        rotation: Helper.mathRound2(node.rotation()) || 0,\r\n        scaleX: Helper.mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: Helper.mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    fonts,\r\n    frameSize,\r\n    currentLayer,\r\n    setCurrentLayer,\r\n    onChange,\r\n    onFontLoad,\r\n  } = props;\r\n  const filteredLayers = layers.filter(\r\n    (item) =>\r\n      (item.layer_type === LayerTypes.LOGO ||\r\n        item.layer_type === LayerTypes.UPLOAD ||\r\n        item.layer_type === LayerTypes.TEXT) &&\r\n      item.layer_visible\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {_.orderBy(filteredLayers, [\"layer_order\"], [\"desc\"]).map((layer) => {\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              key={layer.id}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n              shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n              opacity={layer.layer_data.opacity}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              isSelected={currentLayer && currentLayer.id === layer.id}\r\n              listening={!layer.layer_locked}\r\n              onChange={(values) => onChange(layer, values)}\r\n            />\r\n          );\r\n        }\r\n        let font = fonts.length\r\n          ? fonts.find((item) => item.id === layer.layer_data.font)\r\n          : {};\r\n        return (\r\n          <TextNode\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            key={layer.id}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={layer.layer_data.shadowOffsetX}\r\n            shadowOffsetY={layer.layer_data.shadowOffsetY}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            isSelected={currentLayer && currentLayer.id === layer.id}\r\n            listening={!layer.layer_locked}\r\n            onChange={(values) => onChange(layer, values)}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogosAndTexts;\r\n","import React, { useRef, useEffect } from \"react\";\r\n\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({ selectedLayer }) => {\r\n  const trRef = useRef();\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked\r\n            ? true\r\n            : false\r\n        }\r\n        enabledAnchors={\r\n          selectedLayer.layer_data.sizeLocked ||\r\n          selectedLayer.layer_data.scaleLocked\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, { useRef } from \"react\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\n\r\nimport { setFrameSizeToMax, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nconst Board = () => {\r\n  const stageRef = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n\r\n  const scaleBy = 1.2;\r\n\r\n  const handleMouseDown = (e) => {\r\n    // console.log(\"Mouse Down\");\r\n    const clickedOnEmpty = e.target === e.target.getStage();\r\n    if (clickedOnEmpty && currentLayer) {\r\n      dispatch(setCurrentLayer(null));\r\n    }\r\n  };\r\n  const handleMouseMove = (e) => {\r\n    // console.log(\"Mouse Move\");\r\n  };\r\n  const handleMouseUp = (e) => {\r\n    // console.log(\"Mouse Up\");\r\n  };\r\n  const handleZoomStage = (event) => {\r\n    event.evt.preventDefault();\r\n    if (stageRef.current !== null && event.evt.ctrlKey) {\r\n      const stage = stageRef.current;\r\n      const oldScale = stage.scaleX();\r\n      const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n      const mousePointTo = {\r\n        x: (pointerX - stage.x()) / oldScale,\r\n        y: (pointerY - stage.y()) / oldScale,\r\n      };\r\n      const newScale = Math.max(\r\n        Math.min(\r\n          event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n          10\r\n        ),\r\n        0.25\r\n      );\r\n      dispatch(setZoom(newScale));\r\n      const newPos = {\r\n        x: pointerX - mousePointTo.x * newScale,\r\n        y: pointerY - mousePointTo.y * newScale,\r\n      };\r\n      stage.position(newPos);\r\n      stage.batchDraw();\r\n    }\r\n  };\r\n  const handleImageSize = (size) => {\r\n    if (frameSize.width < size.width || frameSize.height < size.height) {\r\n      dispatch(\r\n        setFrameSizeToMax({\r\n          width: Math.max(frameSize.width, size.width),\r\n          height: Math.max(frameSize.height, size.height),\r\n        })\r\n      );\r\n    }\r\n  };\r\n  const handleLayerDataChange = (layer, values) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        layer_data: {\r\n          ...layer.layer_data,\r\n          ...values,\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleLayerSelect = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n  const handleAddFont = (fontFamily) => {\r\n    dispatch(insertToLoadedFontList(fontFamily));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        ref={stageRef}\r\n        draggable\r\n      >\r\n        <Layer>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints layers={layerList} handleImageSize={handleImageSize} />\r\n\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            handleImageSize={handleImageSize}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n          />\r\n\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            currentLayer={currentLayer}\r\n            frameSize={frameSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n          />\r\n\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            handleImageSize={handleImageSize}\r\n            frameSize={frameSize}\r\n          />\r\n\r\n          <TransformerComponent selectedLayer={currentLayer} />\r\n        </Layer>\r\n      </Stage>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { changeName, setCurrentName } from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, Button, IconButton, TextField } from \"@material-ui/core\";\r\nimport { Settings as SettingsIcon } from \"@material-ui/icons\";\r\n\r\nconst TitleBar = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [dirtyName, setDirtyName] = useState(false);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = (event) => {\r\n    dispatch(setCurrentName(event.target.value));\r\n    setDirtyName(true);\r\n  };\r\n  const handleSaveName = () => {\r\n    dispatch(changeName(currentScheme.id, currentScheme.name));\r\n    setDirtyName(false);\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      mb={2}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"row\">\r\n        <TextField\r\n          value={currentScheme ? currentScheme.name : \"\"}\r\n          onChange={handleNameChange}\r\n        />\r\n        {dirtyName ? (\r\n          <Button onClick={handleSaveName} variant=\"outlined\">\r\n            Save\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Box>\r\n      <IconButton>\r\n        <SettingsIcon />\r\n      </IconButton>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default TitleBar;\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, Grid, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n  } = props;\r\n\r\n  const handleToggleVisible = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleVisible();\r\n  };\r\n\r\n  const handleToggleLock = (e) => {\r\n    e.stopPropagation();\r\n    e.nativeEvent.stopImmediatePropagation();\r\n    toggleLocked();\r\n  };\r\n\r\n  return (\r\n    <Wrapper\r\n      p={2}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      className={clsx(selected && \"activeItem\")}\r\n    >\r\n      <Grid container justify=\"space-between\" alignItems=\"center\" spacing={2}>\r\n        <Grid item xs={10}>\r\n          <Grid container wrap=\"nowrap\" alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={2}>\r\n              <IconButton onClick={handleToggleVisible} size=\"small\">\r\n                {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n              </IconButton>\r\n            </Grid>\r\n            <Grid item xs={10}>\r\n              <Typography noWrap>{text}</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {!disableLock ? (\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={handleToggleLock} size=\"small\">\r\n              {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n            </IconButton>\r\n          </Grid>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PartItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n  } = props;\r\n  const sortedList = _.orderBy(layerList, [\"layer_order\"], [\"asc\"]);\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...sortedList[index],\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = () => {\r\n    setExpanded((preValue) => !preValue);\r\n  };\r\n  const handleChangeLayer = (list) => {\r\n    for (let index in list) {\r\n      const layer = layerList.find((item) => item.id == list[index].id);\r\n      if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer({\r\n            ...layer,\r\n            layer_order: parseInt(index) + 1,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n  const toggleField = (id, field) => {\r\n    const layer = layerList.find((item) => item.id === id);\r\n    dispatch(\r\n      updateLayer({\r\n        ...layer,\r\n        [field]: layer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const selectLayer = (layer) => {\r\n    dispatch(setCurrentLayer(layer));\r\n  };\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={item.layer_data.name}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  onSelect={() => selectLayer(item)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default BasePaintDialog;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ShapeDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default LogoDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles } from \"redux/reducers/uploadReducer\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  .infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  const getNameFromFileName = (file_name) => {\r\n    return file_name.substring(\r\n      file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n      file_name.lastIndexOf(\".\")\r\n    );\r\n  };\r\n  const handleDropZoneChange = (files_up) => {\r\n    setFiles(files_up);\r\n    console.log(files_up);\r\n  };\r\n  const handleUploadFiles = () => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  };\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default UploadDialog;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst InnerForm = (props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TextDialog = (props) => {\r\n  const { fontList, onCancel, open, onCreate } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: \"#000000\",\r\n          stroke: 0,\r\n          scolor: \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm {...formProps} fontList={fontList} />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TextDialog;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { DialogTypes, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport {\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const { dialog, setDialog, focusBoard } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const baseColor =\r\n    currentScheme.base_color === \"transparent\"\r\n      ? currentScheme.base_color\r\n      : \"#\" + currentScheme.base_color;\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  const handleOpenBase = (base) => {\r\n    dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenShape = (shape) => {\r\n    dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenLogo = (logo) => {\r\n    dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleOpenUpload = (upload) => {\r\n    dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n  const handleCreateText = (values) => {\r\n    dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n    setDialog(null);\r\n    focusBoard();\r\n  };\r\n\r\n  const handleChangeBasePaintColor = (color) => {\r\n    dispatch(changeBaseColor(currentScheme.id, color));\r\n    setColorInput(color);\r\n    setColorDirty(false);\r\n  };\r\n  const handleChangeBasePaintColorInput = (color) => {\r\n    setColorInput(color);\r\n    if (color !== baseColor) setColorDirty(true);\r\n    else setColorDirty(false);\r\n  };\r\n  const handleApplyBasePaintColor = () => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  };\r\n\r\n  return (\r\n    <Wrapper p={3}>\r\n      <TitleBar />\r\n      <PartGroup\r\n        title=\"Car Parts\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.CAR\r\n        )}\r\n        disableLock={true}\r\n        disableDnd={true}\r\n      />\r\n      <PartGroup\r\n        title=\"Logos & Text\"\r\n        layerList={layerList.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.TEXT ||\r\n            item.layer_type === LayerTypes.UPLOAD\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.UPLOAD),\r\n            icon: faFolderOpen,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.LOGO),\r\n            icon: faImage,\r\n          },\r\n          {\r\n            onClick: () => setDialog(DialogTypes.TEXT),\r\n            icon: faFont,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Shapes\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.OVERLAY\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.SHAPE),\r\n            icon: faShapes,\r\n          },\r\n        ]}\r\n      />\r\n      <PartGroup\r\n        title=\"Base Paint\"\r\n        layerList={layerList.filter(\r\n          (item) => item.layer_type === LayerTypes.BASE\r\n        )}\r\n        actions={[\r\n          {\r\n            onClick: () => setDialog(DialogTypes.BASEPAINT),\r\n            icon: faCar,\r\n          },\r\n        ]}\r\n        disableLock={true}\r\n        extraChildren={\r\n          <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <ColorPickerInput\r\n              value={colorInput}\r\n              onChange={handleChangeBasePaintColor}\r\n              onInputChange={handleChangeBasePaintColorInput}\r\n            />\r\n            {colorDirty ? (\r\n              <ColorApplyButton\r\n                onClick={handleApplyBasePaintColor}\r\n                variant=\"outlined\"\r\n              >\r\n                Apply\r\n              </ColorApplyButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        }\r\n      />\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.text\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default GeneralProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const handleChangeWidth = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.height\",\r\n        (value * currentLayer.layer_data.height) / currentLayer.layer_data.width\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeHeight = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.sizeLocked) {\r\n      setFieldValue(\r\n        \"layer_data.width\",\r\n        (value * currentLayer.layer_data.width) / currentLayer.layer_data.height\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleX = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleY\",\r\n        (value * currentLayer.layer_data.scaleY) /\r\n          currentLayer.layer_data.scaleX\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n  };\r\n  const handleChangeScaleY = (event) => {\r\n    let value = parseFloat(event.target.value) || 0;\r\n    if (values.layer_data.scaleLocked) {\r\n      setFieldValue(\r\n        \"layer_data.scaleX\",\r\n        (value * currentLayer.layer_data.scaleX) /\r\n          currentLayer.layer_data.scaleY\r\n      );\r\n    }\r\n    setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n  };\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.width\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.height\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scaleY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label=\"Width\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.width\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked ? <LinkIcon /> : <LinkOfficon />}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.height\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label=\"Height\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleX\"\r\n            ) &&\r\n            AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked ? <LinkIcon /> : <LinkOfficon />}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.scaleY\"\r\n            ) ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={Helper.mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default SizeProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.left\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.left\"\r\n              label=\"Left\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.left)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.left &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.left\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.left &&\r\n                errors.layer_data &&\r\n                errors.layer_data.left\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.top\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.top\"\r\n              label=\"Top\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.top)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.top &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.top\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.top &&\r\n                errors.layer_data &&\r\n                errors.layer_data.top\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default PositionProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (!AllowedLayerProps[values.layer_type].includes(\"layer_data.font\"))\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) =>\r\n                  setFieldValue(\"layer_data.font\", e.target.value)\r\n                }\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  rror={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.color &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.color\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.color &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.color\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default FontProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.scolor\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.scolor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.scolor &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.scolor\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.scolor &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scolor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.stroke\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Stroke Width\"\r\n              min={0}\r\n              max={10}\r\n              value={values.layer_data.stroke}\r\n              setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default StrokeProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.opacity\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Color/Opacity</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => setFieldValue(\"layer_data.color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  rror={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.color &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.color\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.color &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.color\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.opacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.opacity}\r\n              setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ColorProperty;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { AllowedLayerProps } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flip\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.rotation\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Box display=\"flex\" justifyContent=\"space-around\">\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flop\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flop)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flop\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flop\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerProps[values.layer_type].includes(\r\n              \"layer_data.flip\"\r\n            ) ? (\r\n              <FormControl component=\"fieldset\">\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      color=\"primary\"\r\n                      checked={Boolean(values.layer_data.flip)}\r\n                      onChange={(event) =>\r\n                        setFieldValue(\r\n                          \"layer_data.flip\",\r\n                          event.target.checked ? 1 : 0\r\n                        )\r\n                      }\r\n                    />\r\n                  }\r\n                  label=\"Flip\"\r\n                  labelPlacement=\"start\"\r\n                />\r\n              </FormControl>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default RotationProperty;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps } from \"constant\";\r\nimport Helper from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n\r\n  if (\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOpacity\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\r\n      \"layer_data.shadowOffsetX\"\r\n    ) &&\r\n    !AllowedLayerProps[values.layer_type].includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowColor\"\r\n          ) ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.shadowColor\", color)\r\n                  }\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowColor &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowColor &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowBlur\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOpacity\"\r\n          ) ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetX\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetX\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetX)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetX\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetX &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetX\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerProps[values.layer_type].includes(\r\n            \"layer_data.shadowOffsetY\"\r\n          ) ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowOffsetY\"\r\n              label=\"Shadow OffsetX\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Helper.mathRound2(values.layer_data.shadowOffsetY)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowOffsetY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowOffsetY\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowOffsetY &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowOffsetY\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default ShadowProperty;\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport validateColor from \"validate-color\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport zhCN from \"date-fns/locale/zh-CN/index\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n\r\n  const handleApply = (values) => {\r\n    dispatch(updateLayer(values));\r\n  };\r\n  const toggleField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        [field]: currentLayer[field] ? 0 : 1,\r\n      })\r\n    );\r\n  };\r\n  const toggleLayerDataField = (field) => {\r\n    dispatch(\r\n      updateLayer({\r\n        ...currentLayer,\r\n        layer_data: {\r\n          ...currentLayer.layer_data,\r\n          [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const colorValidator = (color) => {\r\n    if (!color || !color.length) return true;\r\n    return validateColor(color);\r\n  };\r\n\r\n  const checkDirty = (values) => {\r\n    for (let i in values.layer_data) {\r\n      if (values.layer_data[i] != currentLayer.layer_data[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    for (let i in values) {\r\n      if (i != \"layer_data\" && values[i] != currentLayer[i]) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  if (currentLayer) {\r\n    const defaultValues = _.pick(\r\n      {\r\n        layer_visible: 1,\r\n        layer_locked: 0,\r\n        layer_data: _.pick(\r\n          {\r\n            name: \"\",\r\n            text: \"\",\r\n            width: 0,\r\n            height: 0,\r\n            left: 0,\r\n            top: 0,\r\n            rotation: 0,\r\n            flop: 0,\r\n            flip: 0,\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n            stroke: 0,\r\n            font: 0,\r\n            size: 0,\r\n            scolor: \"#000000\",\r\n            color: null,\r\n            opacity: 1,\r\n            shadowColor: null,\r\n            shadowBlur: 0,\r\n            shadowOpacity: 1,\r\n            shadowOffsetX: 0,\r\n            shadowOffsetY: 0,\r\n          },\r\n          AllowedLayerProps[currentLayer.layer_type]\r\n            .filter((item) => item.includes(\"layer_data.\"))\r\n            .map((item) => item.replace(\"layer_data.\", \"\"))\r\n        ),\r\n      },\r\n      AllowedLayerProps[currentLayer.layer_type].filter(\r\n        (item) => !item.includes(\"layer_data.\")\r\n      )\r\n    );\r\n\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object({\r\n              name: Yup.string().required(\"Required\"),\r\n              text: Yup.string().test(\r\n                \"text-validation\",\r\n                \"Required\",\r\n                (value) =>\r\n                  (value && value.length) ||\r\n                  currentLayer.layer_type !== LayerTypes.TEXT\r\n              ),\r\n              width: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"width-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              height: Yup.number()\r\n                .moreThan(0, \"Must be greater than 0\")\r\n                .test(\r\n                  \"height-validation\",\r\n                  \"Required\",\r\n                  (value) =>\r\n                    value ||\r\n                    currentLayer.layer_type === LayerTypes.TEXT ||\r\n                    currentLayer.layer_type === LayerTypes.CAR ||\r\n                    currentLayer.layer_type === LayerTypes.BASE\r\n                ),\r\n              left: Yup.number(),\r\n              top: Yup.number(),\r\n              rotation: Yup.number()\r\n                .moreThan(-180, \"Must be greater than -180\")\r\n                .lessThan(180, \"Must be less than 180\"),\r\n              flop: Yup.number(),\r\n              flip: Yup.number(),\r\n              scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n              color: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              size: Yup.number(),\r\n              scolor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              stroke: Yup.number(),\r\n              font: Yup.number(),\r\n              opacity: Yup.number(),\r\n              shadowColor: Yup.string()\r\n                .nullable()\r\n                .test(\r\n                  \"color-validation\",\r\n                  \"Incorrect Color Format\",\r\n                  colorValidator\r\n                ),\r\n              shadowBlur: Yup.number(),\r\n              shadowOpacity: Yup.number(),\r\n              shadowOffsetX: Yup.number(),\r\n              shadowOffsetY: Yup.number(),\r\n            }),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <Form onSubmit={formProps.handleSubmit} noValidate>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                height=\"34px\"\r\n              >\r\n                <Typography variant=\"h5\" noWrap>\r\n                  Properties\r\n                </Typography>\r\n                {formProps.isValid && checkDirty(formProps.values) ? (\r\n                  <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n                    Apply\r\n                  </Button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n              <GeneralProperty {...formProps} toggleField={toggleField} />\r\n              <FontProperty {...formProps} fontList={fontList} />\r\n              <ColorProperty {...formProps} />\r\n              <StrokeProperty {...formProps} />\r\n              <SizeProperty\r\n                {...formProps}\r\n                toggleLayerDataField={toggleLayerDataField}\r\n                currentLayer={currentLayer}\r\n              />\r\n              <PositionProperty {...formProps} />\r\n              <RotationProperty {...formProps} />\r\n              <ShadowProperty {...formProps} />\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default ConfirmDialog;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setPaintingGuides, setZoom } from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const handleZoomIn = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom * 1.25, 10), 0.25)));\r\n  };\r\n  const handleZoomOut = () => {\r\n    dispatch(setZoom(Math.max(Math.min(zoom / 1.25, 10), 0.25)));\r\n  };\r\n  const handleChangePaintingGuides = (newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  };\r\n  const togglePaintingGuides = (guide) => {\r\n    let newPaintingGuides = [...paintingGuides];\r\n    let index = newPaintingGuides.indexOf(guide);\r\n    if (index > -1) {\r\n      newPaintingGuides.splice(index, 1);\r\n    } else {\r\n      newPaintingGuides.push(guide);\r\n    }\r\n    handleChangePaintingGuides(newPaintingGuides);\r\n  };\r\n  const focusBoard = () => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  };\r\n\r\n  const handleKeyEvent = (key, event) => {\r\n    // Delete Selected Layer\r\n    console.log(\"KeyEvent: \", key, event);\r\n    if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n      if (\r\n        (key === \"del\" || key === \"backspace\") &&\r\n        currentLayer &&\r\n        currentLayer.layer_type !== LayerTypes.CAR\r\n      ) {\r\n        setConfirmMessage(\r\n          `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n        );\r\n      } else if (key === \"esc\" && currentLayer) {\r\n        dispatch(setCurrentLayer(null));\r\n      } else if (event.key === \"+\" && event.shiftKey) {\r\n        handleZoomIn();\r\n      } else if (event.key === \"_\" && event.shiftKey) {\r\n        handleZoomOut();\r\n      } else if (event.key === \")\" && event.shiftKey) {\r\n        dispatch(setZoom(1));\r\n      } else if (event.key === \"c\" && event.ctrlKey && currentLayer) {\r\n        dispatch(setLayerClipboard(currentLayer));\r\n      } else if (event.key === \"v\" && event.ctrlKey && clipboardLayer) {\r\n        dispatch(cloneLayer(clipboardLayer));\r\n      } else if (key === \"1\") {\r\n        togglePaintingGuides(PaintingGuides.CARMASK);\r\n      } else if (key === \"2\") {\r\n        togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n      } else if (key === \"3\") {\r\n        togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n      } else if (key === \"4\") {\r\n        togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n      } else if (key === \"5\") {\r\n        togglePaintingGuides(PaintingGuides.GRID);\r\n      } else if (key === \"t\") {\r\n        setDialog(DialogTypes.TEXT);\r\n      } else if (key === \"s\") {\r\n        setDialog(DialogTypes.SHAPE);\r\n      } else if (key === \"l\") {\r\n        setDialog(DialogTypes.LOGO);\r\n      } else if (key === \"b\") {\r\n        setDialog(DialogTypes.BASEPAINT);\r\n      }\r\n    }\r\n\r\n    // Arrow Keys\r\n    if (event.target.tagName !== \"INPUT\") {\r\n      if (\r\n        [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n          event.key\r\n        ) &&\r\n        currentLayer &&\r\n        ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n      ) {\r\n        let speed = event.shiftKey ? 10 : 1;\r\n        let speedX =\r\n          event.key === \"ArrowLeft\"\r\n            ? -speed\r\n            : event.key === \"ArrowRight\"\r\n            ? speed\r\n            : 0;\r\n        let speedY =\r\n          event.key === \"ArrowUp\"\r\n            ? -speed\r\n            : event.key === \"ArrowDown\"\r\n            ? speed\r\n            : 0;\r\n        if (event.type === \"keyup\") {\r\n          let layer_data = { ...currentLayer.layer_data };\r\n          if (prevTick.current != tick.current) {\r\n            layer_data.left = currentLayer.layer_data.left + speedX;\r\n            layer_data.top = currentLayer.layer_data.top + speedY;\r\n          }\r\n          dispatch(\r\n            updateLayer({\r\n              ...currentLayer,\r\n              layer_data: layer_data,\r\n            })\r\n          );\r\n        } else {\r\n          if (prevTick.current != tick.current) {\r\n            prevTick.current = Object.assign(tick.current);\r\n            dispatch(\r\n              updateLayerOnly({\r\n                ...currentLayer,\r\n                layer_data: {\r\n                  ...currentLayer.layer_data,\r\n                  left: currentLayer.layer_data.left + speedX,\r\n                  top: currentLayer.layer_data.top + speedY,\r\n                },\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const handleConfirm = () => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import _ from \"lodash\";\r\n\r\nconst getDifferenceFromToday = (past_date) => {\r\n  const difference_In_Second =\r\n    new Date().getTime() / 1000 - new Date(past_date).getTime();\r\n  if (difference_In_Second < 60) {\r\n    return `${Math.round(difference_In_Second)} seconds ago`;\r\n  }\r\n  const difference_In_Min = difference_In_Second / 60;\r\n  if (difference_In_Min < 60) {\r\n    return `${Math.round(difference_In_Min)} minutes ago`;\r\n  }\r\n  const difference_In_Hour = difference_In_Min / 60;\r\n  if (difference_In_Hour < 24) {\r\n    return `${Math.round(difference_In_Hour)} hours ago`;\r\n  }\r\n  const difference_In_Day = difference_In_Hour / 24;\r\n  return `${Math.round(difference_In_Day)} days ago`;\r\n};\r\n\r\nconst hexToRgba = (hex) => {\r\n  let result =\r\n    hex.length > 7\r\n      ? /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\r\n      : /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  if (!result) return null;\r\n  return {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16),\r\n    a: hex.length > 7 ? parseInt(result[4], 16) : 255,\r\n  };\r\n};\r\n\r\nconst mathRound2 = (num) => Math.round((num + Number.EPSILON) * 100) / 100;\r\n\r\nexport default {\r\n  getDifferenceFromToday,\r\n  mathRound2,\r\n  hexToRgba,\r\n};\r\n"],"sourceRoot":""}