{"version":3,"sources":["utils/tga.js","components/LightTooltip.jsx","dialogs/ZoomPopover.jsx","pages/scheme/Toolbar.jsx","components/URLImage.jsx","pages/scheme/guides/PaintingGuideTop.jsx","pages/scheme/guides/PaintingGuideCarMask.jsx","pages/scheme/guides/PaintingGuideBottom.jsx","pages/scheme/layers/CarParts.jsx","pages/scheme/layers/BasePaints.jsx","pages/scheme/layers/Overlays.jsx","components/TextNode.jsx","pages/scheme/layers/LogosAndTexts.jsx","components/Shape.jsx","pages/scheme/layers/Shapes.jsx","components/TransformerComponent.jsx","pages/scheme/Board.jsx","components/SliderInput.jsx","components/ColorPickerInput.jsx","dialogs/SchemeSettingsDialog.jsx","dialogs/ShortCutsDialog.jsx","pages/scheme/sideBar/TitleBar.jsx","pages/scheme/sideBar/PartItem.jsx","pages/scheme/sideBar/PartGroup.jsx","dialogs/BasePaintDialog.jsx","dialogs/ShapeDialog.jsx","dialogs/LogoDialog.jsx","dialogs/ConfirmDialog.jsx","dialogs/YesNoDialog.jsx","dialogs/UploadDialog.jsx","components/FontSelect.jsx","dialogs/TextDialog.jsx","pages/scheme/sideBar/DrawerBar.jsx","pages/scheme/sideBar/index.jsx","pages/scheme/propertyBar/GeneralProperty.jsx","pages/scheme/propertyBar/SizeProperty.jsx","pages/scheme/propertyBar/PositionProperty.jsx","pages/scheme/propertyBar/FontProperty.jsx","pages/scheme/propertyBar/StrokeProperty.jsx","pages/scheme/propertyBar/ColorProperty.jsx","pages/scheme/propertyBar/RotationProperty.jsx","pages/scheme/propertyBar/ShadowProperty.jsx","pages/scheme/propertyBar/CornerProperty.jsx","pages/scheme/propertyBar/ExtraProperty.jsx","pages/scheme/propertyBar/index.jsx","pages/scheme/index.jsx","components/SearchBox.jsx"],"names":["Targa","arguments","length","h","this","header","createHeader","setHeaderBooleans","checkHeader","idLength","defaultFor","colorMapType","imageType","Type","RGB","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","width","height","pixelDepth","flags","arg","val","hasEncoding","RLE_INDEXED","RLE_RGB","RLE_GREY","hasColorMap","INDEXED","isGreyColor","GREY","bytePerPixel","origin","Origin","MASK","SHIFT","alphaBits","ALPHA","NO_DATA","Error","getImageData8bits","imageData","indexes","colorMap","y_start","y_step","y_end","x_start","x_step","x_end","color","index","offset","i","x","y","getImageData16bits","pixels","colormap","getImageData24bits","bpp","getImageData32bits","getImageData32bitsPre","alpha","getImageDataGrey8bits","getImageDataGrey16bits","readFooter","view","byteLength","FOOTER_SIZE","signature","SIGNATURE","footer","signatureArray","Uint8Array","buffer","str","charCodeAt","isSignatureValid","String","fromCharCode","apply","hasFooter","extensionOffset","getUint32","LITTLE_ENDIAN","developerOffset","hasExtensionArea","hasDeveloperArea","attributeType","getUint8","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","HEADER_SIZE","RLE_BIT","RLE_MASK","RLE_PACKET","RAW_PACKET","prototype","open","path","callback","req","tga","XMLHttpRequest","responseType","onload","status","arrayBuffer","response","load","call","send","data","dataView","DataView","headerData","littleEndian","getUint16","readHeader","colorMapSize","palette","bytesPerPixel","imageSize","pixelTotal","RLELength","RLEData","outputSize","pos","c","count","output","set","decodeRLE","usesAlpha","getImageData","document","createElement","getContext","createImageData","Uint8ClampedArray","setImageData","expectedLength","packetType","packetLength","packetHeader","tgaLength","isSamePixel","getPacketType","encodeRLE","bufferSize","ArrayBuffer","footerData","headerView","setUint8","setUint16","writeHeader","writeFooter","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","getBlobURL","blob","Blob","URL","createObjectURL","LightTooltip","withStyles","theme","tooltip","backgroundColor","boxShadow","fontSize","arrow","Tooltip","CustomOutlinedInput","styled","OutlinedInput","ZoomPopover","anchorEl","zoom","setZoom","onZoomIn","onZoomOut","onZoomFit","onClose","handleZoomChange","useCallback","event","parseInt","target","value","handleFocus","select","handleZoom100","Popover","Boolean","anchorOrigin","vertical","horizontal","transformOrigin","Box","display","flexDirection","p","justifyContent","alignItems","Button","onClick","Typography","variant","mb","id","onChange","onFocus","endAdornment","InputAdornment","position","labelWidth","autoFocus","React","memo","MuiTypography","spacing","ToggleButton","MuiToggleButton","IconButton","MuiIconButton","Wrapper","div","ZoomButton","Toolbar","props","onChangePaintingGuides","onDownloadTGA","useState","setAnchorEl","dispatch","useDispatch","paintingGuides","useSelector","state","boardReducer","actionHistoryIndex","actionHistory","handleChangePaintingGuides","newFormats","handleUndoRedo","isUndo","historyActionBack","historyActionUp","handleZoomPoperOpen","currentTarget","handleCloseZoomPoper","handleZoom","alignContent","ToggleButtonGroup","aria-label","PaintingGuides","CARMASK","title","WIREFRAME","SPONSORBLOCKS","NUMBERBLOCKS","GRID","disabled","Undo","Redo","endIcon","toFixed","URLImage","src","filterColor","frameSize","allowFit","layer_data","loadedStatus","onLoadLayer","tellSize","onSelect","onHover","imageRef","useRef","shapeRef","image","setImage","filters","push","Konva","Filters","RGBA","getPixelRatio","node","current","Math","max","useEffect","loadImage","removeEventListener","handleLoad","cache","pixelRatio","imageSmoothingEnabled","clearCache","a","originWidth","originHeight","toLowerCase","includes","Canvg","from","enableRedraw","v","console","log","documentElement","baseVal","resize","render","left","mathRound2","top","img","window","Image","Date","toISOString","crossOrigin","addEventListener","onTap","ref","draggable","red","hexToRgba","r","green","g","blue","b","onDragStart","e","onDragEnd","onTransformEnd","scaleX","scaleY","xyScale","abs","rotation","flop","flip","shadowBlur","shadowOffsetX","shadowOffsetY","perfectDrawEnabled","shadowForStrokeEnabled","onMouseOver","listening","onMouseOut","PaintingGuideTop","currentCarMake","handleImageSize","guideData","loadedStatuses","gridPadding","grid_padding","gridStroke","grid_stroke","config","assetsURL","folder_directory","replace","wireframe_color","opacity","wireframe_opacity","visible","Array","round","points","stroke","grid_color","grid_opacity","strokeWidth","PaintingGuideCarMask","carmask_color","carmask_opacity","PaintingGuideBottom","sponsor_color","sponsor_opacity","numberblock_color","numberblock_opacity","CarParts","layers","filteredLayers","useMemo","_","orderBy","filter","item","layer_type","LayerTypes","CAR","map","layer","layer_visible","BasePaints","BASE","Overlays","setCurrentLayer","mouseMode","boardRotate","OVERLAY","getShadowOffset","getRelativeShadowOffset","shadowOffset","name","toString","source_file","parseFloat","shadowColor","shadowOpacity","layer_locked","MouseModes","DEFAULT","values","flag","TextNode","fontFamily","fontFile","loadedFontList","loadedList","onFontLoad","loadedFontFamily","setLoadedFontFamily","loadFont","FontFace","then","loaded_face","fonts","add","catch","error","warn","LogosAndTexts","LOGO","UPLOAD","TEXT","layerFont","find","font","text","font_name","font_file","size","fill","scolor","strokeEnabled","Shape","radius","lineCap","lineJoin","offsetsFromStroke","pointerLength","pointerWidth","innerRadius","outerRadius","cornerRadius","numPoints","angle","handleDragStart","handleDragEnd","AllowedLayerTypes","AllowedLayerProps","SHAPE","pick","handleTransformEnd","ELLIPSE","radiusX","radiusY","cornerTopLeft","cornerTopRight","cornerBottomLeft","cornerBottomRight","point","RECT","CIRCLE","STAR","RING","REGULARPOLYGON","sides","WEDGE","ARC","LINE","PEN","POLYGON","closed","ARROW","Shapes","drawingLayer","getOffsetsFromStroke","strokeType","removeDuplicatedPointFromEnd","globalCompositeOperation","blendType","TransformerComponent","selectedLayer","pressedKey","hoveredTransform","trRef","keepRatio","sizeLocked","scaleLocked","selectedNode","getStage","findOne","nodes","detach","getLayer","batchDraw","checkNode","rotateAroundCenter","shape","deltaDeg","cos","sin","rotateAroundPoint","getCenter","enabledAnchors","rotateEnabled","boundBoxFunc","oldBoundBox","newBoundBox","diff","rot","PI","son","getSnapRotation","borderStroke","RotationButton","Board","hoveredLayerJSON","onChangeHoverJSONItem","onChangeBoardRotation","stageRef","baseLayerRef","mainLayerRef","carMaskLayerRef","prevPosition","setPrevPosition","drawingLayerRef","prevTick","currentTick","tick","setTick","useResizeDetector","carMakeReducer","currentScheme","schemeReducer","schemeSaving","saving","schemeLoaded","loaded","fontList","fontReducer","list","layerList","layerReducer","currentLayer","drawingStatus","DrawingStatus","ADD_TO_SHAPE","createShape","setMouseMode","CLEAR_COMMAND","setDrawingStatus","useInterval","min","handleMouseDown","handleContentMouseDown","getRelativePointerPosition","concat","newLayer","DefaultLayer","guide_data","default_shape_color","default_shape_opacity","default_shape_scolor","default_shape_stroke","handleMouseMove","positionX","positionY","splice","handleMouseUp","handleContentDoubleClick","handleZoomStage","evt","preventDefault","ctrlKey","stage","oldScale","getPointerPosition","pointerX","pointerY","mousePointTo","newScale","deltaY","newPos","setFrameSizeToMax","handleLayerDataChange","updateLayer","handleLayerSelect","handleHoverLayer","handleAddFont","insertToLoadedFontList","handleChangeBoardRotation","newBoardRotate","isRight","handleLoadLayer","layerID","setLoadedStatus","key","margin","onMousedown","onContentMousedown","onContentMousemove","onContentMouseup","onDblClick","onTouchStart","onWheel","style","cursor","base_color","right","RotateLeft","RotateRight","bgcolor","ScreenLoader","CustomInput","Input","SliderWrapper","Grid","SliderInput","label","setValue","step","container","xs","mr","Slider","aria-labelledby","ValueLabelComponent","enterTouchDelay","placement","children","Number","onBlur","inputProps","ColorInputField","TextField","ColorPickerInput","onInputChange","helperText","css","Palette","deferred","hideTextfield","onKeyDown","MuiButton","CustomAccordionSummary","AccordionSummary","SubForm","colorKey","opacityKey","errors","setFieldValue","handleBlur","handleChange","touched","extraChildren","expanded","setExpanded","Accordion","expandIcon","ExpandMore","AccordionDetails","sm","SchemeSettingsDialog","onCancel","onApply","Dialog","fullWidth","maxWidth","DialogTitle","initialValues","validationSchema","Yup","nullable","test","colorValidator","validate","onSubmit","formProps","handleSubmit","noValidate","DialogContent","dividers","DialogActions","isSubmitting","isValid","ShortCuts","DELETE","ENTER","1","2","3","4","5","T","S","L","B","MuiGrid","KeyText","DescriptionText","ShortCutsDialog","Object","keys","CustomIcon","FontAwesomeIcon","DialogTypes","NameInput","TitleBar","history","useHistory","setName","dialog","setDialog","handleNameChange","handleSaveName","changeName","handleNameKeyDown","keyCode","handleDiscardName","handleGoBack","clearCurrentScheme","handleApplySettings","updateScheme","px","my","Save","icon","faChevronLeft","faQuestion","Settings","CustomTypography","active","SmallIconButton","PartItem","toggleVisible","toggleLocked","selected","disableLock","hovered","wrapperRef","handleToggleVisible","stopPropagation","nativeEvent","stopImmediatePropagation","handleToggleLock","py","border","borderColor","borderRadius","onMouseEnter","onMouseLeave","className","clsx","noWrap","Lock","LockOpen","Visibility","VisibilityOff","useStyles","makeStyles","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","ButtonGroup","MuiButtonGroup","AddButton","CustomCardHeader","CardHeader","CustomCardContent","CardContent","PartGroup","classes","user","authReducer","actions","disableDnd","sortedList","layer_order","handleExpandClick","preValue","handleChangeLayer","toggleField","field","selectLayer","hoverLayer","layerName","indexOf","slice","Card","action","startIcon","Add","Collapse","in","setList","animation","onChoose","sort","CustomInfiniteScroll","InfiniteScroll","CustomGridList","GridList","CustomGridListTile","GridListTile","CustomImg","BasePaintDialog","limit","setLimit","basePaints","onOpenBase","dataLength","next","hasMore","loader","Loader","scrollableTarget","cellHeight","cols","basepaint","alt","base_description","GridListTileBar","base_name","subtitle","CustomDialogContent","ShapeDialog","search","setSearch","shapes","onOpenShape","filteredShapes","description","SearchBox","overflow","overlay_thumb","StyledTabs","indicator","Tabs","TabIndicatorProps","StyledTab","root","textTransform","fontWeight","typography","fontWeightRegular","marginRight","padding","minWidth","Tab","disableRipple","TabPanel","other","role","hidden","a11yProps","LogoDialog","logoLimit","setLogoLimit","flagLimit","setFlagLimit","tabValue","setTabValue","logos","onOpenLogo","filteredLogos","filteredFlags","newValue","logo","preview_file","ConfirmDialog","onConfirm","TextWrapper","YesNoDialog","onYes","onNo","DeleteButton","UploadDialog","uploadToDelete","setUploadToDelete","associatedSchemes","setAssociatedSchemes","files","setFiles","dropZoneKey","setDropZoneKey","uploads","onOpenUpload","increaseData","getNameFromFileName","file_name","temp","substring","lastIndexOf","handleDropZoneChange","files_up","handleUploadFiles","uploadFiles","handleClickDeleteUpload","uploadItem","handleDeleteUploadConfirm","SchemeService","getSchemeListByUploadID","schemes","deleteUpload","setMessage","message","handleDeleteUploadFinally","deleteFromAll","deleteLayerItemsByUploadID","showFileNamesInPreview","showFileNames","maxFiles","mt","actionIcon","Delete","Select","MuiSelect","CustomSelect","FontImage","FontSelect","labelId","renderValue","font_preview","MenuItem","MuiTextField","CustomeTextField","TextPreviewWrapper","backColor","TextPreview","rotate","InnerForm","baseColor","placeholder","InputLabelProps","shrink","FormControl","InputLabel","TextDialog","defaultColor","defaultStrokeColor","onCreate","required","Divider","MuiDivider","ToolWrapper","CustomItem","CustomFontAwesomeIcon","isstretch","modes","faMousePointer","faDrawPolygon","faPaintBrush","faSquare","faCircle","faStar","faDotCircle","faCuttlefish","dialog_modes","faFolderOpen","faImage","faFont","faShapes","BASEPAINT","faCar","DrawerBar","focusBoard","overlayList","overlayReducer","logoList","logoReducer","uploadList","uploadReducer","basePaintReducer","handleModeChange","handleOpenBase","base","createLayersFromBasePaint","handleOpenShape","createLayerFromShape","handleOpenLogo","createLayerFromLogo","handleOpenUpload","upload","createLayerFromUpload","handleCreateText","createTextLayer","mode","LayerWrapper","TitleWrapper","ColorApplyButton","Sidebar","colorInput","setColorInput","colorDirty","setColorDirty","handleChangeBasePaintColor","changeBaseColor","handleChangeBasePaintColorInput","handleApplyBasePaintColor","pr","pb","GeneralProperty","JSON","stringify","CustomIconButton","SizeProperty","toggleLayerDataField","pressingShiftKey","handleChangeWidth","handleChangeHeight","handleChangeScaleX","handleChangeScaleY","handleChangeInnerRadius","handleChangeOuterRadius","Link","LinkOff","PositionProperty","MuiFormControl","FontProperty","onLayerDataUpdate","StrokeProperty","ColorProperty","RotationProperty","SwapHoriz","faSlash","SwapVert","ShadowProperty","handleColorChange","applyNow","CornerProperty","ExtraProperty","onClone","isDirty","PropertyBar","defaultValues","handleClone","cloneLayer","handleApply","handleLayerDataUpdate","moreThan","lessThan","enableReinitialize","background","Scheme","params","useParams","confirmMessage","setConfirmMessage","hoveredJSON","setHoveredJSON","clipboardLayer","clipboard","currentSchemeRef","frameSizeRef","schemeLoading","loading","carMakeLoading","fontLoading","uploadsInitialized","initialized","setHoveredJSONItem","handleZoomIn","mathRound4","handleZoomOut","handleZoomFit","attrs","newZoom","setPaintingGuides","newRotation","setBoardRotate","togglePaintingGuides","guide","newPaintingGuides","setTimeout","activeElement","blur","handleKeyEvent","tagName","setPressedKey","shiftKey","metaKey","setLayerClipboard","speed","initialspeedX","initialspeedY","speedX","speedY","assign","updateLayerOnly","handleConfirm","deleteLayer","takeScreenshot","isPNG","setAttrs","draw","baseLayerURL","addImageProcess","baseLayerImg","mainLayerURL","mainLayerImg","carMaskLayerURL","carMaskLayerImg","omit","drawImage","handleUploadThumbnail","setSaving","dataURL","dataURItoBlob","fileOfBlob","File","formData","FormData","append","uploadThumbnail","handleDownloadTGA","TGA","url","href","download","click","revokeObjectURL","getScheme","getUploadListByUserID","getOverlayList","getLogoList","getFontList","interval","setInterval","startTimout","thumbnailInterval","clearInterval","clearTimeout","every","k","setLoaded","Helmet","handleKeys","onKeyEvent","handleEventType","breakpoints","up","searchIcon","pointerEvents","inputRoot","inputInput","paddingLeft","input"],"mappings":"4QAkCA,SAASA,IACP,GAAwB,GAApBC,UAAUC,OAAa,CACzB,IAAIC,EAAIF,UAAU,GAElBG,KAAKC,OAASC,EAAaH,GAC3BI,EAAkBH,KAAKC,QACvBG,EAAYJ,KAAKC,SA4CrB,SAASC,EAAaD,GACpB,MAAO,CACYI,SAAUC,EAAWL,EAAOI,SAAU,GACtCE,aAAcD,EAAWL,EAAOM,aAAc,GAC9CC,UAAWF,EAAWL,EAAOO,UAAWZ,EAAMa,KAAKC,KACnDC,cAAeL,EAAWL,EAAOU,cAAe,GAChDC,eAAgBN,EAAWL,EAAOW,eAAgB,GAClDC,cAAeP,EAAWL,EAAOY,cAAe,GAChDC,QAASR,EAAWL,EAAOa,QAAS,GACpCC,QAAST,EAAWL,EAAOc,QAAS,GACpCC,MAAOV,EAAWL,EAAOe,MAAO,GAChCC,OAAQX,EAAWL,EAAOgB,OAAQ,GAClCC,WAAYZ,EAAWL,EAAOiB,WAAY,IAC1CC,MAAOb,EAAWL,EAAOkB,MAAO,IAIrD,SAASb,EAAWc,EAAKC,GACvB,MAAsB,qBAARD,EAAsBA,EAAMC,EAqE5C,SAASlB,EAAkBF,GACzBA,EAAOqB,YACLrB,EAAOO,YAAcZ,EAAMa,KAAKc,aAChCtB,EAAOO,YAAcZ,EAAMa,KAAKe,SAChCvB,EAAOO,YAAcZ,EAAMa,KAAKgB,SAClCxB,EAAOyB,YACLzB,EAAOO,YAAcZ,EAAMa,KAAKc,aAChCtB,EAAOO,YAAcZ,EAAMa,KAAKkB,QAClC1B,EAAO2B,YACL3B,EAAOO,YAAcZ,EAAMa,KAAKgB,UAChCxB,EAAOO,YAAcZ,EAAMa,KAAKoB,KAClC5B,EAAO6B,aAAe7B,EAAOiB,YAAc,EAC3CjB,EAAO8B,QAAU9B,EAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MACnEjC,EAAOkC,UAAYlC,EAAOkB,MAAQvB,EAAMoC,OAAOI,MASjD,SAAShC,EAAYH,GAEnB,GAAIA,EAAOO,YAAcZ,EAAMa,KAAK4B,QAClC,MAAM,IAAIC,MAAM,kCAIlB,GAAIrC,EAAOyB,YAAa,CACtB,GAAIzB,EAAOW,eAAiB,KAA+B,IAAxBX,EAAOM,aACxC,MAAM,IAAI+B,MACR,gEAGJ,GAC2B,KAAzBrC,EAAOY,eACkB,KAAzBZ,EAAOY,eACkB,KAAzBZ,EAAOY,cAEP,MAAM,IAAIyB,MAAM,0DAGlB,GAAIrC,EAAOM,aACT,MAAM,IAAI+B,MACR,iEAMN,GAAIrC,EAAOe,OAAS,GAAKf,EAAOgB,QAAU,EACxC,MAAM,IAAIqB,MAAM,6CAIlB,GACwB,IAAtBrC,EAAOiB,YACe,KAAtBjB,EAAOiB,YACe,KAAtBjB,EAAOiB,YACe,KAAtBjB,EAAOiB,WAEP,MAAM,IAAIoB,MACR,8CAAgDrC,EAAOiB,WAAa,KAKxE,GACuB,IAArBjB,EAAOkC,WACc,IAArBlC,EAAOkC,WACc,IAArBlC,EAAOkC,UAEP,MAAM,IAAIG,MAAM,kDA2JpB,SAASC,EACPC,EACAC,EACAC,EACA1B,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOC,EAAOC,EAAQC,EAAGC,EAAGC,EAC5BxB,EAAe9B,KAAKC,OAAOY,eAAiB,EAEhD,IAAKuC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,IAC1CD,EAA2B,GAAjBE,EAAIrC,EAAQsC,GACtBJ,EAAQT,EAAQW,GAAKtB,EACA,IAAjBA,GACFU,EAAUW,GAAUT,EAASQ,EAAQ,GACrCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,GACzCV,EAAUW,EAAS,GAAKT,EAASQ,GACjCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,IACf,IAAjBpB,GACTU,EAAUW,GAAUT,EAASQ,EAAQ,GACrCV,EAAUW,EAAS,GAAKT,EAASQ,EAAQ,GACzCV,EAAUW,EAAS,GAAKT,EAASQ,GACjCV,EAAUW,EAAS,GAAK,KACE,IAAjBrB,IACTmB,EAAQP,EAASQ,GAAUR,EAASQ,EAAQ,IAAM,EAClDV,EAAUW,IAAmB,MAARF,IAAmB,EACxCT,EAAUW,EAAS,IAAc,IAARF,IAAmB,EAC5CT,EAAUW,EAAS,IAAc,GAARF,IAAmB,EAC5CT,EAAUW,EAAS,GAAa,MAARF,EAAiB,EAAI,KAKnD,OAAOT,EAkBT,SAASe,EACPf,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CH,EAAQO,EAAOJ,GAAMI,EAAOJ,EAAI,IAAM,EAEtCZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,KACO,MAARL,IAAmB,EACxCT,EAAUW,EAAS,IAAc,IAARF,IAAmB,EAC5CT,EAAUW,EAAS,IAAc,GAARF,IAAmB,EAC5CT,EAAUW,EAAS,GAAa,MAARF,EAAiB,EAAI,IAIjD,OAAOT,EAkBT,SAASkB,EACPlB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIG,EAAQC,EAAGC,EAAGC,EACdK,EAAM3D,KAAKC,OAAOiB,YAAc,EAEpC,IAAKkC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAKO,EAE/CnB,GADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACH,GAAK,IACxBd,EAAUW,EAAS,GAAKK,EAAOJ,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GACnCZ,EAAUW,GAAUK,EAAOJ,EAAI,GAInC,OAAOZ,EAkBT,SAASoB,EACPpB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAII,EAAGC,EAAGC,EAAGH,EAEb,IAAKC,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAE/CZ,GADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACH,GAAKE,EAAOJ,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GACnCZ,EAAUW,GAAUK,EAAOJ,EAAI,GAC/BZ,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EAkBT,SAASqB,EACPrB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAII,EAAGC,EAAGC,EAAGH,EAAQW,EAErB,IAAKV,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CD,EAA2B,GAAjBE,EAAIrC,EAAQsC,GACtBQ,EAAwB,IAAhBN,EAAOJ,EAAI,GACnBZ,EAAUW,EAAS,GAAKK,EAAOJ,GAAKU,EACpCtB,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAAKU,EACxCtB,EAAUW,GAAUK,EAAOJ,EAAI,GAAKU,EACpCtB,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EAkBT,SAASuB,EACPvB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,IAC1CH,EAAQO,EAAOJ,GAEfZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACFL,EACpBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAK,IAI5B,OAAOX,EAkBT,SAASwB,EACPxB,EACAgB,EACAC,EACAzC,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAIC,EAAOE,EAAQC,EAAGC,EAAGC,EAEzB,IAAKF,EAAI,EAAGE,EAAIX,EAASW,IAAMT,EAAOS,GAAKV,EACzC,IAAKS,EAAIP,EAASO,IAAML,EAAOK,GAAKN,EAAQK,GAAK,EAC/CH,EAAQO,EAAOJ,GAEfZ,EADAW,EAA2B,GAAjBE,EAAIrC,EAAQsC,IACFL,EACpBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKF,EACxBT,EAAUW,EAAS,GAAKK,EAAOJ,EAAI,GAIvC,OAAOZ,EA2BT,SAASyB,EAAWC,GAClB,IAAIf,EAASe,EAAKC,WAAavE,EAAMwE,YACjCC,EAAYzE,EAAM0E,UAElBC,EAAS,GAETC,EAAiB,IAAIC,WACvBP,EAAKQ,OACLvB,EAAS,EACTkB,EAAUvE,QAIZ,OAkBF,SAA0B6E,GAGxB,IAFA,IAAIN,EAAYzE,EAAM0E,UAEblB,EAAI,EAAGA,EAAIiB,EAAUvE,OAAQsD,IACpC,GAAIuB,EAAIC,WAAWxB,KAAOiB,EAAUO,WAAWxB,GAC7C,OAAO,EAIX,OAAO,EA3BFyB,CAFKC,OAAOC,aAAaC,MAAM,KAAMR,KAO1CD,EAAOU,WAAY,EACnBV,EAAOW,gBAAkBhB,EAAKiB,UAAUhC,EAAQvD,EAAMwF,eACtDb,EAAOc,gBAAkBnB,EAAKiB,UAAUhC,EAAS,EAAMvD,EAAMwF,eAC7Db,EAAOe,iBAA8C,IAA3Bf,EAAOW,gBACjCX,EAAOgB,iBAA8C,IAA3BhB,EAAOc,gBAE7Bd,EAAOW,kBACTX,EAAOiB,cAAgBtB,EAAKuB,SAASlB,EAAOW,gBAAkB,MAGzDX,IAdLA,EAAOU,WAAY,EACZV,GAlrBX3E,EAAMa,KAAO,CACX4B,QAAS,EACTV,QAAS,EACTjB,IAAK,EACLmB,KAAM,EACNN,YAAa,EACbC,QAAS,GACTC,SAAU,IAMZ7B,EAAMoC,OAAS,CACb0D,YAAa,EACbC,aAAc,EACdC,SAAU,EACVC,UAAW,EACX3D,MAAO,EACPD,KAAM,GACNG,MAAO,GAGTxC,EAAMkG,YAAc,GACpBlG,EAAMwE,YAAc,GACpBxE,EAAMwF,eAAgB,EACtBxF,EAAMmG,QAAU,IAChBnG,EAAMoG,SAAW,IACjBpG,EAAMqG,WAAa,EACnBrG,EAAMsG,WAAa,EACnBtG,EAAM0E,UAAY,sBAmnBlB1E,EAAMuG,UAAUC,KAAO,SAAmBC,EAAMC,GAC9C,IAAIC,EACFC,EAAMxG,MACRuG,EAAM,IAAIE,gBACNL,KAAK,MAAOC,GAAM,GACtBE,EAAIG,aAAe,cACnBH,EAAII,OAAS,WACS,MAAhB3G,KAAK4G,SACPJ,EAAIK,YAAcN,EAAIO,SACtBN,EAAIO,KAAKP,EAAIK,aACTP,GACFA,EAASU,KAAKR,KAIpBD,EAAIU,KAAK,OAmDXrH,EAAMuG,UAAUY,KAAO,SAAmBG,GACxC,IAAIC,EAAW,IAAIC,SAASF,GAE5BlH,KAAKqH,WAAa,IAAI5C,WAAWyC,EAAM,EAAGtH,EAAMkG,aAEhD9F,KAAKC,OAznBP,SAAoBiE,GAClB,IAAIoD,EAAe1H,EAAMwF,cAGzB,GAAIlB,EAAKC,WAAa,GACpB,MAAM,IAAI7B,MAAM,qDAGlB,IAAIrC,EAAS,GAcb,OAbAA,EAAOI,SAAW6D,EAAKuB,SAAS,GAChCxF,EAAOM,aAAe2D,EAAKuB,SAAS,GACpCxF,EAAOO,UAAY0D,EAAKuB,SAAS,GACjCxF,EAAOU,cAAgBuD,EAAKqD,UAAU,EAAMD,GAC5CrH,EAAOW,eAAiBsD,EAAKqD,UAAU,EAAMD,GAC7CrH,EAAOY,cAAgBqD,EAAKuB,SAAS,GACrCxF,EAAOa,QAAUoD,EAAKqD,UAAU,EAAMD,GACtCrH,EAAOc,QAAUmD,EAAKqD,UAAU,GAAMD,GACtCrH,EAAOe,MAAQkD,EAAKqD,UAAU,GAAMD,GACpCrH,EAAOgB,OAASiD,EAAKqD,UAAU,GAAMD,GACrCrH,EAAOiB,WAAagD,EAAKuB,SAAS,IAClCxF,EAAOkB,MAAQ+C,EAAKuB,SAAS,IAEtBxF,EAmmBOuH,CAAWL,GACzBhH,EAAkBH,KAAKC,QACvBG,EAAYJ,KAAKC,QAEjB,IAAIkD,EAASvD,EAAMkG,YAGnB,IADA3C,GAAUnD,KAAKC,OAAOI,WACR6G,EAAK/C,WACjB,MAAM,IAAI7B,MAAM,2BAIlB,GAAItC,KAAKC,OAAOyB,YAAa,CAC3B,IAAI+F,EACFzH,KAAKC,OAAOW,gBAAkBZ,KAAKC,OAAOY,eAAiB,GAC7Db,KAAK0H,QAAU,IAAIjD,WAAWyC,EAAM/D,EAAQsE,GAC5CtE,GAAUsE,EAGZ,IAAIE,EAAgB3H,KAAKC,OAAOiB,YAAc,EAC1C0G,EAAY5H,KAAKC,OAAOe,MAAQhB,KAAKC,OAAOgB,OAC5C4G,EAAaD,EAAYD,EAE7B,GAAI3H,KAAKC,OAAOqB,YAAa,CAE3B,IAAIwG,EAAYZ,EAAK/C,WAAahB,EAASvD,EAAMwE,YAC7C2D,EAAU,IAAItD,WAAWyC,EAAM/D,EAAQ2E,GAC3C9H,KAAKwC,UAniBT,SAAmB0E,EAAMS,EAAeK,GACtC,IAAIC,EAAKC,EAAGC,EAAO/E,EAAGD,EAClBK,EAAQ4E,EAOZ,IALAA,EAAS,IAAI3D,WAAWuD,GACxBxE,EAAS,IAAIiB,WAAWkD,GACxBxE,EAAS,EACT8E,EAAM,EAECA,EAAMD,GAKX,GAHAG,EAA+B,IAD/BD,EAAIhB,EAAK/D,MACIvD,EAAMoG,UAGfkC,EAAItI,EAAMmG,QAAS,CAErB,IAAK3C,EAAI,EAAGA,EAAIuE,IAAiBvE,EAC/BI,EAAOJ,GAAK8D,EAAK/D,KAInB,IAAKC,EAAI,EAAGA,EAAI+E,IAAS/E,EACvBgF,EAAOC,IAAI7E,EAAQyE,GACnBA,GAAON,OAOT,IADAQ,GAASR,EACJvE,EAAI,EAAGA,EAAI+E,IAAS/E,EACvBgF,EAAOH,KAASf,EAAK/D,KAK3B,GAAI8E,EAAMD,EACR,MAAM,IAAI1F,MACR,oCACE2F,EACA,oBACAD,GAIN,OAAOI,EAsfYE,CAAUP,EAASJ,EAAeE,QAGnD7H,KAAKwC,UAAY,IAAIiC,WACnByC,EACA/D,EACAnD,KAAKC,OAAOyB,YAAckG,EAAYC,GAI1C7H,KAAKuE,OAASN,EAAWkD,IAGG,IAA1BnH,KAAKC,OAAOkC,WACXnC,KAAKuE,OAAOe,mBACoB,IAA9BtF,KAAKuE,OAAOiB,eAAqD,IAA9BxF,KAAKuE,OAAOiB,kBAElDxF,KAAKuE,OAAOgE,WAAY,IAU5B3I,EAAMuG,UAAUqC,aAAe,SAA2BhG,GACxD,IAGIM,EAASC,EAAQC,EAAOL,EAASC,EAAQC,EACzC2F,EAJAxH,EAAQhB,KAAKC,OAAOe,MACpBC,EAASjB,KAAKC,OAAOgB,OACrBc,GAAU/B,KAAKC,OAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MA4CrE,OAvCKM,IAEDA,EADEiG,SACUA,SACTC,cAAc,UACdC,WAAW,MACXC,gBAAgB5H,EAAOC,GAId,CACVD,MAAOA,EACPC,OAAQA,EACRiG,KAAM,IAAI2B,kBAAkB7H,EAAQC,EAAS,KAK/Cc,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO6D,WAC9DlD,EAAU,EACVC,EAAS,EACTC,EAAQ5B,IAER0B,EAAU1B,EAAS,EACnB2B,GAAU,EACVC,GAAS,GAGPd,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO0D,aAC9D5C,EAAU,EACVC,EAAS,EACTC,EAAQhC,IAER8B,EAAU9B,EAAQ,EAClB+B,GAAU,EACVC,GAAS,GAKHhD,KAAKC,OAAOiB,YAClB,KAAK,EACHsH,EAAexI,KAAKC,OAAO2B,YACvBmC,EACAxB,EACJ,MAEF,KAAK,GACHiG,EAAexI,KAAKC,OAAO2B,YACvBoC,EACAT,EACJ,MAEF,KAAK,GACHiF,EAAe9E,EACf,MAEF,KAAK,GAIC8E,EAHAxI,KAAKuE,OAAOe,iBACoB,IAA9BtF,KAAKuE,OAAOiB,cAEC5B,EACwB,IAA9B5D,KAAKuE,OAAOiB,cAEN3B,EAGAH,EAGa,IAA1B1D,KAAKC,OAAOkC,UACCyB,EAGAF,EAoBvB,OAbA8E,EAAaxB,KACXhH,KACAwC,EAAU0E,KACVlH,KAAKwC,UACLxC,KAAK0H,QACL1G,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAEKR,GAQT5C,EAAMuG,UAAU2C,aAAe,SAA2BtG,GACxD,IAAKA,EACH,MAAM,IAAIF,MAAM,sDAGlB,IAIIQ,EAASC,EAAQC,EAAOL,EAASC,EAAQC,EAJzC7B,EAAQhB,KAAKC,OAAOe,MACpBC,EAASjB,KAAKC,OAAOgB,OACrB8H,EAAiB/H,EAAQC,GAAUjB,KAAKC,OAAOiB,YAAc,GAC7Da,GAAU/B,KAAKC,OAAOkB,MAAQvB,EAAMoC,OAAOC,OAASrC,EAAMoC,OAAOE,MAGjEH,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO6D,WAC9DlD,EAAU,EACVC,EAAS,EACTC,EAAQ5B,IAER0B,EAAU1B,EAAS,EACnB2B,GAAU,EACVC,GAAS,GAGPd,IAAWnC,EAAMoC,OAAO4D,UAAY7D,IAAWnC,EAAMoC,OAAO0D,aAC9D5C,EAAU,EACVC,EAAS,EACTC,EAAQhC,IAER8B,EAAU9B,EAAQ,EAClB+B,GAAU,EACVC,GAAS,GAGNhD,KAAKwC,YACRxC,KAAKwC,UAAY,IAAIiC,WAAWsE,IAOlCnF,EACE5D,KAAKwC,UACLA,EAAU0E,KACVlH,KAAK0H,QACL1G,EACA2B,EACAC,EACAC,EACAC,EACAC,EACAC,GAGF,IAAIkE,EAAOlH,KAAKwC,UAEZxC,KAAKC,OAAOqB,cACd4F,EA5qBJ,SAAmBjH,EAAQuC,GAyBzB,IAxBA,IACIY,EAMA4F,EAAYC,EAAcC,EAL1BhC,EAAO1E,EACP4F,EAAS,GACTH,EAAM,EACNN,EAAgB1H,EAAOiB,YAAc,EACrCiC,EAAS,EAETgG,EAAYlJ,EAAOe,MAAQf,EAAOgB,OAAS0G,EAC3CyB,EAAc,SAAqBnB,EAAK9E,GAC1C,IAAK,IAAIC,EAAI,EAAGA,EAAIuE,EAAevE,IACjC,GAAI8D,EAAKe,EAAMN,EAAgBvE,KAAO8D,EAAK/D,EAASwE,EAAgBvE,GAClE,OAAO,EAGX,OAAO,GAELiG,EAAgB,SAAUpB,GAC5B,OAAImB,EAAYnB,EAAKA,EAAM,GAClBrI,EAAMqG,WAERrG,EAAMsG,YAGR+B,EAAMN,EAAgBT,EAAKpH,QAAUmI,EAAMN,EAAgBwB,GAAW,CAM3E,GADAF,EAAe,GAHfD,EAAaK,EAAcpB,MAIRrI,EAAMqG,WACvB,KACEgC,EAAMgB,EAAe/B,EAAKpH,QAC1BmJ,EAjCmB,KAkCnBG,EAAYnB,EAAKA,EAAMgB,IAEvBA,SAIF,KACEhB,EAAMgB,EAAe/B,EAAKpH,QAC1BmJ,EA1CmB,KA2CnBI,EAAcpB,EAAMgB,KAAkBrJ,EAAMsG,YAE5C+C,IAYJ,GAPAC,EAAeD,EAAe,EAC1BD,IAAepJ,EAAMqG,aACvBiD,GAAgBtJ,EAAMmG,SAExBqC,EAAOjF,KAAY+F,EAGfF,IAAepJ,EAAMqG,WAAY,CACnC,IAAK7C,EAAI,EAAGA,EAAIuE,EAAevE,IAC7BgF,EAAOhF,EAAID,GAAU+D,EAAK9D,EAAI6E,EAAMN,GAEtCxE,GAAUwE,MACL,CACL,IAAKvE,EAAI,EAAGA,EAAIuE,EAAgBsB,EAAc7F,IAC5CgF,EAAOhF,EAAID,GAAU+D,EAAK9D,EAAI6E,EAAMN,GAEtCxE,GAAUwE,EAAgBsB,EAE5BhB,GAAOgB,EAGT,OAAO,IAAIxE,WAAW2D,GAomBbkB,CAAUtJ,KAAKC,OAAQiH,IAGhC,IAAIqC,EAAa3J,EAAMkG,YAAcoB,EAAKpH,OAASF,EAAMwE,YACrDM,EAAS,IAAI8E,YAAYD,GAE7BvJ,KAAK6G,YAAcnC,EAEnB1E,KAAKqH,WAAa,IAAI5C,WAAWC,EAAQ,EAAG9E,EAAMkG,aAClD9F,KAAK+H,QAAU,IAAItD,WAAWC,EAAQ9E,EAAMkG,YAAaoB,EAAKpH,QAC9DE,KAAKyJ,WAAa,IAAIhF,WACpBC,EACA9E,EAAMkG,YAAcoB,EAAKpH,OACzBF,EAAMwE,aAGR,IAAIsF,EAAa,IAAItC,SAASpH,KAAKqH,WAAW3C,SAp3BhD,SAAqBzE,EAAQiE,GAC3B,IAAIoD,EAAe1H,EAAMwF,cAEzBlB,EAAKyF,SAAS,EAAM1J,EAAOI,UAC3B6D,EAAKyF,SAAS,EAAM1J,EAAOM,cAC3B2D,EAAKyF,SAAS,EAAM1J,EAAOO,WAC3B0D,EAAK0F,UAAU,EAAM3J,EAAOU,cAAe2G,GAC3CpD,EAAK0F,UAAU,EAAM3J,EAAOW,eAAgB0G,GAC5CpD,EAAKyF,SAAS,EAAM1J,EAAOY,eAC3BqD,EAAK0F,UAAU,EAAM3J,EAAOa,QAASwG,GACrCpD,EAAK0F,UAAU,GAAM3J,EAAOc,QAASuG,GACrCpD,EAAK0F,UAAU,GAAM3J,EAAOe,MAAOsG,GACnCpD,EAAK0F,UAAU,GAAM3J,EAAOgB,OAAQqG,GACpCpD,EAAKyF,SAAS,GAAM1J,EAAOiB,YAC3BgD,EAAKyF,SAAS,GAAM1J,EAAOkB,OAu2B3B0I,CAAY7J,KAAKC,OAAQyJ,GACzB1J,KAAK+H,QAAQM,IAAInB,GAn4BnB,SAAqB3C,GAGnB,IAFA,IAAIF,EAAYzE,EAAM0E,UAClBnB,EAASoB,EAAOJ,WAAaE,EAAUvE,OAClCsD,EAAI,EAAGA,EAAIiB,EAAUvE,OAAQsD,IACpCmB,EAAOpB,EAASC,GAAKiB,EAAUO,WAAWxB,GAg4B5C0G,CAAY9J,KAAKyJ,aAQnB7J,EAAMuG,UAAU4D,UAAY,WAC1B,IAAIC,EAAQC,EAAKzH,EAWjB,OAPAA,GADAyH,GADAD,EAASvB,SAASC,cAAc,WACnBC,WAAW,OACRC,gBAAgB5I,KAAKC,OAAOe,MAAOhB,KAAKC,OAAOgB,QAE/D+I,EAAOhJ,MAAQhB,KAAKC,OAAOe,MAC3BgJ,EAAO/I,OAASjB,KAAKC,OAAOgB,OAE5BgJ,EAAIC,aAAalK,KAAKwI,aAAahG,GAAY,EAAG,GAE3CwH,GASTpK,EAAMuG,UAAUgE,WAAa,SAAwBC,GACnD,OAAOpK,KAAK+J,YAAYM,UAAUD,GAAQ,cAQ5CxK,EAAMuG,UAAUmE,WAAa,WAC3B,IAAKtK,KAAK6G,YACR,MAAM,IAAIvE,MAAM,oDAElB,IAAIiI,EAAO,IAAIC,KAAK,CAACxK,KAAK6G,aAAc,CAAEuD,KAAM,gBAChD,OAAOK,IAAIC,gBAAgBH,IAGd3K,Q,wICnhCA+K,EAZMC,aAAW,SAACC,GAAD,MAAY,CAC1CC,QAAS,CACPC,gBAAiB,QACjB9H,MAAO,sBACP+H,UAAW,qBACXC,SAAU,IAEZC,MAAO,CACLjI,MAAO,YARU2H,CAUjBO,K,qCCFEC,GAAsBC,YAAOC,KAAV,sFAAGD,CAAH,8HAWnBE,GAAc,SAAC,GAQd,IAPLC,EAOI,EAPJA,SACAC,EAMI,EANJA,KACAC,EAKI,EALJA,QACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,UACAC,EACI,EADJA,QAEMC,EAAmBC,uBACvB,SAACC,GACCP,EAAQQ,SAASD,EAAME,OAAOC,OAAS,GAAK,OAE9C,CAACV,IAGGW,EAAcL,uBAAY,SAACC,GAAD,OAAWA,EAAME,OAAOG,WAAU,IAE5DC,EAAgBP,uBAAY,WAChCN,EAAQ,KACP,CAACA,IAEJ,OACE,cAACc,EAAA,EAAD,CACEpG,KAAMqG,QAAQjB,GACdA,SAAUA,EACVM,QAASA,EACTY,aAAc,CACZC,SAAU,MACVC,WAAY,SAEdC,gBAAiB,CACfF,SAAU,SACVC,WAAY,SAVhB,SAaE,eAACE,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASC,EAAG,EAAGjM,MAAM,QAAvD,UACE,eAAC8L,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAAS1B,EAAjB,qBACA,cAAC2B,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAASzB,EAAjB,sBACA,cAAC0B,EAAA,EAAD,CAAYC,QAAQ,QAApB,4BAEF,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,UACE,cAACC,EAAA,EAAD,CAAQC,QAASxB,EAAjB,yBACA,cAACyB,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,eAACT,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACXK,GAAI,EAJN,UAME,cAACJ,EAAA,EAAD,CAAQC,QAASd,EAAjB,0BACA,cAACe,EAAA,EAAD,CAAYC,QAAQ,QAApB,wBAEF,cAACnC,GAAD,CACEqC,GAAG,aACHrB,MAAc,IAAPX,EACPiC,SAAU3B,EACV4B,QAAStB,EACTuB,aAAc,cAACC,EAAA,EAAD,CAAgBC,SAAS,MAAzB,eACdC,WAAY,EACZC,WAAW,UAONC,OAAMC,KAAK3C,IChEpB+B,GAAajC,YAAO8C,KAAV,0EAAG9C,CAAsB+C,KACnCC,GAAehD,YAAOiD,KAAV,4EAAGjD,CAAwB+C,KACvCG,GAAalD,YAAOmD,KAAV,0EAAGnD,CAAsB+C,KAEnCK,GAAUpD,IAAOqD,IAAV,uEAAGrD,CAAH,4FAQPsD,GAAatD,YAAO+B,KAAV,0EAAG/B,CAAH,gFAsKDuD,GA/JCX,IAAMC,MAAK,SAACW,GAAW,IAEnClD,EAKEkD,EALFlD,SACAC,EAIEiD,EAJFjD,UACAC,EAGEgD,EAHFhD,UACAiD,EAEED,EAFFC,uBACAC,EACEF,EADFE,cANkC,EAQJC,mBAAS,MARL,mBAQ7BxD,EAR6B,KAQnByD,EARmB,KAU9BC,EAAWC,cACXC,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1BI,EAAqBH,aACzB,SAACC,GAAD,OAAWA,EAAMC,aAAaC,sBAE1BC,EAAgBJ,aACpB,SAACC,GAAD,OAAWA,EAAMC,aAAaE,iBAE1BhE,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QAEjDiE,EAA6B1D,uBACjC,SAACC,EAAO0D,GACNb,EAAuBa,KAEzB,CAACb,IAGGc,EAAiB5D,uBACrB,WAAoB,IAAnB6D,IAAkB,yDAEfX,EADEW,EACOC,cAEAC,iBAGb,CAACb,IAGGc,EAAsBhE,uBAC1B,SAACC,GACCgD,EAAYhD,EAAMgE,iBAEpB,CAAChB,IAGGiB,EAAuBlE,uBAAY,WACvCiD,EAAY,QACX,CAACA,IAEEkB,EAAanE,uBACjB,SAACI,GACC8C,EAASxD,YAAQU,MAEnB,CAAC8C,IAGH,OACE,cAACT,GAAD,UACE,eAAC3B,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfkD,aAAa,SACbpP,MAAM,OAJR,UAME,cAAC8L,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,QAAQkD,aAAa,SAAxD,SACE,eAACC,EAAA,EAAD,CACEjE,MAAOgD,EACP1B,SAAUgC,EACVY,aAAW,kBAHb,UAKE,cAAC,GAAD,CAAclE,MAAOmE,IAAeC,QAASF,aAAW,WAAxD,SACE,cAAC,EAAD,CAAcG,MAAM,oCAAoCvF,OAAK,EAA7D,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,0BAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeG,UACtBJ,aAAW,YAFb,SAIE,cAAC,EAAD,CAAcG,MAAM,qCAAqCvF,OAAK,EAA9D,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,2BAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeI,cACtBL,aAAW,iBAFb,SAIE,cAAC,EAAD,CACEG,MAAM,0CACNvF,OAAK,EAFP,SAIE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,gCAGJ,cAAC,GAAD,CACEnB,MAAOmE,IAAeK,aACtBN,aAAW,gBAFb,SAIE,cAAC,EAAD,CACEG,MAAM,yCACNvF,OAAK,EAFP,SAIE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,+BAGJ,cAAC,GAAD,CAAcnB,MAAOmE,IAAeM,KAAMP,aAAW,OAArD,SACE,cAAC,EAAD,CAAcG,MAAM,gCAAgCvF,OAAK,EAAzD,SACE,cAAC,GAAD,CAAYqC,QAAQ,UAApB,2BAKR,eAACT,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,WAAWkD,aAAa,SAA3D,UACE,cAAChD,EAAA,EAAD,CAAQG,QAAQ,WAAWF,QAAS0B,EAApC,0BAGA,cAAC,EAAD,CAAc0B,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAAC,GAAD,CACE4F,UAAkC,IAAxBtB,EACVnC,QAAS,kBAAMuC,GAAe,IAFhC,SAIE,cAACmB,EAAA,EAAD,QAIJ,cAAC,EAAD,CAAcN,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAAC,GAAD,CACE4F,SAAUtB,IAAuBC,EAAc3P,OAAS,EACxDuN,QAAS,kBAAMuC,GAAe,IAFhC,SAIE,cAACoB,EAAA,EAAD,QAIJ,eAACrC,GAAD,CACEpB,QAAQ,YACR0D,QAAS,cAAC,IAAD,IACT5D,QAAS2C,EAHX,WAKW,IAAPvE,GAAYyF,QAAQ,GALxB,QAQA,cAAC,GAAD,CACE1F,SAAUA,EACVC,KAAMA,EACNC,QAASyE,EACTxE,SAAUA,EACVC,UAAWA,EACXC,UAAWA,EACXC,QAASoE,e,iHCWNiB,GA7ME,SAAC,GAcX,IAbL1D,EAaI,EAbJA,GACA2D,EAYI,EAZJA,IACAC,EAWI,EAXJA,YACAC,EAUI,EAVJA,UACAC,EASI,EATJA,SACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,YACAC,EAKI,EALJA,SACAC,EAII,EAJJA,SACAlE,EAGI,EAHJA,SACAmE,EAEI,EAFJA,QACGhD,EACC,uJACEiD,EAAWC,iBAAO,MAClBC,EAAWD,mBAFb,EAGsB/C,mBAAS,MAH/B,mBAGGiD,EAHH,KAGUC,EAHV,KAIEC,EAAU,GAEZd,GAAeA,EAAYvR,QAC7BqS,EAAQC,KAAKC,KAAMC,QAAQC,MAE7B,IAAMC,EAAgB,SAACC,GACrB,OAAIX,EAASY,QACJC,KAAKC,IACV,EACAd,EAASY,QAAQ1R,MAAQyR,EAAKzR,QAC9B8Q,EAASY,QAAQzR,OAASwR,EAAKxR,UAG5B,GAGT4R,qBAAU,WAIR,OAHqB,IAAjBpB,IAA2C,IAAjBA,GAAyBC,GAAejE,GACpEiE,EAAYjE,GAAI,GAClBqF,IACO,WACDhB,EAASY,SACXZ,EAASY,QAAQK,oBAAoB,OAAQC,MAGhD,IAEHH,qBAAU,WACJb,EAASU,UACPrB,GAAeA,EAAYvR,OAC7BkS,EAASU,QAAQO,MAAM,CACrBC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIzBnB,EAASU,QAAQU,gBAGpB,CAAC/B,IAEJ,IAAM2B,EAAU,uCAAG,wCAAAK,EAAA,yDACbC,GACD/B,GACAO,EAASY,QAAQ1R,OAASsQ,EAAUtQ,MAAQ,GAC3C8Q,EAASY,QAAQzR,QAAUqQ,EAAUrQ,OAAS,EAC5C6Q,EAASY,QAAQ1R,MACjBsQ,EAAUtQ,MAAQ,EACpBuS,GACDhC,GACAO,EAASY,QAAQ1R,OAASsQ,EAAUtQ,MAAQ,GAC3C8Q,EAASY,QAAQzR,QAAUqQ,EAAUrQ,OAAS,EAC5C6Q,EAASY,QAAQzR,OACfqQ,EAAUtQ,MAAQ,EAAK8Q,EAASY,QAAQzR,OAC1C6Q,EAASY,QAAQ1R,MACnBA,EAAQ6N,EAAM7N,OAASsS,EACvBrS,EAAS4N,EAAM5N,QAAUsS,GAG3BnC,EAAIoC,cAAcC,SAAS,SACzB3B,EAASY,QAAQ1R,OAAU8Q,EAASY,QAAQzR,OAnB/B,wBAqBX+I,EAASvB,SAASC,cAAc,UAC9BuB,EAAMD,EAAOrB,WAAW,MAtBf,SAuBC+K,KAAMC,KAAK1J,EAAKmH,EAAK,CACnCwC,cAAc,IAxBD,cAuBTC,EAvBS,OA0BfC,QAAQC,IAAIF,GACZ7S,EAAQA,GAAS6S,EAAEG,gBAAgBvB,KAAKzR,MAAMiT,QAAQ7H,OAAS,IAC/DnL,EAASA,GAAU4S,EAAEG,gBAAgBvB,KAAKxR,OAAOgT,QAAQ7H,OAAS,IAClEyH,EAAEK,OAAOlT,EAAOC,EAAQ,QA7BT,UA8BT4S,EAAEM,SA9BO,QA+BfjC,EAASlI,GA/BM,wBAiCfkI,EAASJ,EAASY,SAjCH,SAoCbhF,GAAamB,EAAM7N,OAAU6N,EAAM5N,QACrCyM,EAAS,CACP0G,KAAMC,aAAWxF,EAAMxL,EAAIrC,EAAQ,GACnCsT,IAAKD,aAAWxF,EAAMvL,EAAIrC,EAAS,GACnCD,MAAOqT,aAAWrT,GAClBC,OAAQoT,aAAWpT,KAInBoQ,GAAeA,EAAYvR,QAC7BkS,EAASU,QAAQO,MAAM,CACrBC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIvBxB,GACFA,EAAS,CACP3Q,MAAOA,EACPC,OAAQA,IAGRyQ,GAAejE,GAAIiE,EAAYjE,GAAI,GA1DtB,4CAAH,qDA4DVqF,EAAS,uCAAG,4BAAAO,EAAA,uDACVkB,EAAM,IAAIC,OAAOC,OAEnBrD,IAAMA,EAAG,sBAAiB,IAAIsD,MAAOC,eACzCJ,EAAIK,YAAc,YAClB9C,EAASY,QAAU6B,EACnBzC,EAASY,QAAQmC,iBAAiB,OAAQ7B,GAN1B,2CAAH,qDAwDf,OACE,cAAC,KAAD,2BACMnE,GADN,IAEEoD,MAAOA,EACP5E,QAASuE,EACTkD,MAAOlD,EACPmD,IAAK/C,EACLgD,UAAWtH,EACXyE,QAASA,EAAQrS,OAASqS,EAAU,KACpC8C,IAAK5D,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAa8D,EAAI,KACpEC,MACE/D,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAagE,EAAI,KAEjEC,KAAMjE,GAAeA,EAAYvR,OAASoV,aAAU7D,GAAakE,EAAI,KACrEzR,MACEuN,GAAeA,EAAYvR,OACvBoV,aAAU7D,GAAagC,EAAI,IAC3B,KAENmC,YAnEoB,SAACC,GACvB7D,KAmEE8D,UAjEkB,SAACD,GACjB/H,GACFA,EAAS,CACP0G,KAAMC,aAAWoB,EAAEtJ,OAAO9I,KAC1BiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,QA8D3BqS,eA1DuB,SAACF,GAC1B,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACpB/B,QAAQC,IAAI,mBAAoB6B,EAAQC,GAExCpD,EAAKmD,OAAOA,EAAS,EAAI,GAAK,GAC9BnD,EAAKoD,OAAOA,EAAS,EAAI,GAAK,GAC9B,IAAMC,EAAUnD,KAAKoD,IACc,IAAjCpD,KAAKoD,IAAI1B,aAAWwB,IAAiBA,EAASD,GAEhDlI,EAAS,CACP0G,KAAMC,aAAW5B,EAAKpP,KACtBiR,IAAKD,aAAW5B,EAAKnP,KAErBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,QAAU2R,KAAKoD,IAAIH,KACtD3U,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,SAAW0R,KAAKoD,IAAIF,KACxDG,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBM,WAAY9B,aAAW5B,EAAK0D,aAAeL,GAC3CM,cAAe/B,aAAW7C,EAAW4E,cAAgBzD,KAAKoD,IAAIH,IAC9DS,cAAehC,aAAW7C,EAAW6E,cAAgB1D,KAAKoD,IAAIF,MAE5DxE,GAAeA,EAAYvR,OAC7B2S,EAAKQ,MAAM,CACTC,WAAYV,EAAcR,EAASU,SACnCS,uBAAuB,IAIzBV,EAAKW,eA2BPkD,oBAAoB,EACpBC,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,Q,SCvMxD8E,GAAmB,SAAC9H,GAAW,IAEjCO,EAOEP,EAPFO,eACAwH,EAME/H,EANF+H,eACAC,EAKEhI,EALFgI,gBACAvF,EAIEzC,EAJFyC,UACAwF,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAEIsF,EAAcF,EAAUG,cAAgB,GACxCC,EAAaJ,EAAUK,aAAe,GAE5C,OACE,qCACE,cAAC,GAAD,CACE1J,GAAG,kBACHgE,aAAcsF,EAAe,mBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,kBAMH5F,SAAUkF,EACVxF,YAAayF,EAAUU,gBACvBC,QAASX,EAAUY,kBACnBjB,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeG,WAEzCgB,YAAaA,IAGdkG,MAAMjE,KAAKiE,MAAMjF,KAAKkF,MAAMvG,EAAUtQ,MAAQgW,KAAe,SAACvB,EAAGrS,GAChE,OACE,cAAC,KAAD,CAEE0U,OAAQ,CACNnF,KAAKkF,MAAMzU,EAAI4T,GACf,EACArE,KAAKkF,MAAMzU,EAAI4T,GACf1F,EAAUtQ,OAEZ+W,OAAQjB,EAAUkB,YAAc,OAChCP,QAASX,EAAUmB,cAAgB,EACnCC,YAAahB,EACbT,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeM,OAb3C,YACYzN,OAiBfwU,MAAMjE,KAAKiE,MAAMjF,KAAKkF,MAAMvG,EAAUrQ,OAAS+V,KAAe,SAACvB,EAAGrS,GACjE,OACE,cAAC,KAAD,CAEE0U,OAAQ,CACN,EACAnF,KAAKkF,MAAMzU,EAAI4T,GACf1F,EAAUrQ,OACV0R,KAAKkF,MAAMzU,EAAI4T,IAEjBe,OAAQjB,EAAUkB,YAAc,OAChCP,QAASX,EAAUmB,cAAgB,EACnCC,YAAahB,EACbT,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeM,OAb3C,YACYzN,WAqBP6K,OAAMC,KAAKyI,IC/EpBwB,GAAuB,SAACtJ,GAAW,IAErCO,EAMEP,EANFO,eACAwH,EAKE/H,EALF+H,eACAC,EAIEhI,EAJFgI,gBACAC,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAGF,OACE,cAAC,GAAD,CACEjE,GAAG,aACHgE,aAAcsF,EAAe,cAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,aAMH5F,SAAUkF,EACVxF,YAAayF,EAAUsB,cACvBX,QAASX,EAAUuB,gBACnB5B,WAAW,EACXkB,UAASvI,EAAeqE,SAASlD,IAAeC,SAChDkB,YAAaA,KAKJzD,OAAMC,KAAKiK,IC9BpBG,GAAsB,SAACzJ,GAAW,IAEpCO,EAMEP,EANFO,eACAwH,EAKE/H,EALF+H,eACAC,EAIEhI,EAJFgI,gBACAC,EAGEjI,EAHFiI,UACAC,EAEElI,EAFFkI,eACArF,EACE7C,EADF6C,YAGF,OACE,qCACE,cAAC,GAAD,CACEjE,GAAG,sBACHgE,aAAcsF,EAAe,uBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,uBAMH5F,SAAUkF,EACVxF,YAAayF,EAAUyB,cACvBd,QAASX,EAAU0B,gBACnB/B,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeI,eAEzCe,YAAaA,IAGf,cAAC,GAAD,CACEjE,GAAG,qBACHgE,aAAcsF,EAAe,sBAC7B3F,IAAG,UACDgG,KAAOC,UADN,sBAEWT,EAAeU,iBAAiBC,QAC5C,IACA,KAJC,sBAMH5F,SAAUkF,EACVxF,YAAayF,EAAU2B,kBACvBhB,QAASX,EAAU4B,oBACnBjC,WAAW,EACXkB,UACEvI,EAAeqE,SAASlD,IAAeK,cAEzCc,YAAaA,QAMNzD,OAAMC,KAAKoK,ICpDpBK,GAAW,SAAC9J,GAAW,IAEzB+J,EAKE/J,EALF+J,OACAhC,EAIE/H,EAJF+H,eACAG,EAGElI,EAHFkI,eACAF,EAEEhI,EAFFgI,gBACAnF,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OACvD,CAAC,eACD,CAAC,WAEL,CAACT,IAGH,OACE,mCACGC,EAAeS,KAAI,SAACC,GAAD,OAClB,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV2D,IACEgG,KAAOC,UACP,cACAT,EAAeU,iBAAiBC,QAAQ,IAAK,KAF7C,WAGIgC,EAAM/H,WAAW+C,KAEvBlD,YAAakI,EAAM/H,WAAWvO,MAC9BwT,WAAW,EACXkB,UAAS4B,EAAMC,cACf/H,aAAcsF,EAAewC,EAAM9L,IACnCiE,YAAaA,EACbC,SAAUkF,GAbL0C,EAAM9L,UAoBNQ,OAAMC,KAAKyK,IC3CpBc,GAAa,SAAC5K,GAAW,IACrB+J,EAAyD/J,EAAzD+J,OAAQ7B,EAAiDlI,EAAjDkI,eAAgBF,EAAiChI,EAAjCgI,gBAAiBnF,EAAgB7C,EAAhB6C,YAE3CmH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWM,QACvD,CAAC,cAAe,WAEpB,CAACd,IAGH,OACE,mCACGC,EAAeS,KAAI,SAACC,GAAD,OAClB,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV2D,IAAG,UAAKgG,KAAOC,UAAZ,kBAA+BkC,EAAM/H,WAAW/D,GAAhD,YAAsD8L,EAAM/H,WAAW+C,KAC1EkD,QAAS8B,EAAM/H,WAAWiG,QAC1BpG,YAAakI,EAAM/H,WAAWvO,MAC9BwT,WAAW,EACXkB,UAAS4B,EAAMC,cACf/H,aAAcsF,EAAewC,EAAM9L,IACnCkE,SAAUkF,EACVnF,YAAaA,GATR6H,EAAM9L,UAgBNQ,OAAMC,KAAKuL,IC/BpBE,GAAW,SAAC9K,GAAW,IAEzB+J,EASE/J,EATF+J,OACAgB,EAQE/K,EARF+K,gBACAtI,EAOEzC,EAPFyC,UACAuI,EAMEhL,EANFgL,UACAC,EAKEjL,EALFiL,YACA/C,EAIElI,EAJFkI,eACArJ,EAGEmB,EAHFnB,SACAmE,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWW,WACvD,CAAC,eACD,CAAC,WAEL,CAACnB,IAEGoB,EAAkBhO,uBACtB,SAACuN,GACC,OAAOU,aAAwBH,EAAa,CAC1CzW,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAACyD,IAGH,OACE,mCACGjB,EAAeS,KAAI,SAACC,GACnB,IAAIW,EAAeF,EAAgBT,GAEnC,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV0M,KAAMZ,EAAM9L,GAAG2M,WACfhJ,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBkC,EAAM/H,WAAW6I,aAC7ChX,EAAGiX,WAAWf,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGgX,WAAWf,EAAM/H,WAAW8C,KAAO,GACtC/C,UAAU,EACVF,YAAakI,EAAM/H,WAAWvO,MAC9BjC,MAAOuY,EAAM/H,WAAWxQ,MACxBC,OAAQsY,EAAM/H,WAAWvQ,OACzB+U,SAAUuD,EAAM/H,WAAWwE,SAC3B8D,YAAaA,EACbrI,aAAcsF,EAAewC,EAAM9L,IACnCgK,QAAS8B,EAAM/H,WAAWiG,QAC1B7B,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3CqE,YAAahB,EAAM/H,WAAW+I,YAC9BpE,WAAYoD,EAAM/H,WAAW2E,WAC7BqE,cAAejB,EAAM/H,WAAWgJ,cAChCpE,cAAe8D,EAAa7W,EAC5BgT,cAAe6D,EAAa5W,EAC5BsO,SAAU,kBAAMgI,EAAgBL,IAChC9C,WAAY8C,EAAMkB,cAAgBZ,IAAca,IAAWC,QAC3DrJ,UAAWA,EACXE,WAAY+H,EAAM/H,WAClB9D,SAAU,SAACkN,GAAD,OAAYlN,EAAS6L,EAAOqB,IACtC/I,QAAS,SAACgJ,GAAD,OAAUhJ,EAAQ0H,EAAOsB,IAClClD,UAAS4B,EAAMC,cACf9H,YAAaA,GA5BR6H,EAAM9L,UAoCRQ,OAAMC,KAAKyL,IC0BXmB,GAxGE,SAAC,GAiBX,IAhBLrN,EAgBI,EAhBJA,GACAsN,EAeI,EAfJA,WACAC,EAcI,EAdJA,SACAC,EAaI,EAbJA,eAEAV,GAWI,EAZJW,WAYI,EAXJX,aACApE,EAUI,EAVJA,WACAqE,EASI,EATJA,cACApE,EAQI,EARJA,cACAC,EAOI,EAPJA,cACA3E,EAMI,EANJA,YACAE,EAKI,EALJA,SACAlE,EAII,EAJJA,SACAyN,EAGI,EAHJA,WACAtJ,EAEI,EAFJA,QACGhD,EACC,qNAC4CG,mBAAS,MADrD,mBACGoM,EADH,KACqBC,EADrB,KAEErJ,EAAWD,mBACjBc,qBAAU,WACJkI,GAAcC,IACXC,EAAexH,SAASsH,IAG3BM,EAAoBN,GAChBrJ,GAAejE,GAAIiE,EAAYjE,GAAI,IAHvC6N,OAMH,CAACP,EAAYC,IAEhB,IAAMM,EAAW,WACE,IAAIC,SAASR,EAAYC,GAEvCjU,OACAyU,MAAK,SAAUC,GACdhT,SAASiT,MAAMC,IAAIF,GACnBN,EAAWJ,GACXM,EAAoBN,GAChBrJ,GAAejE,GAAIiE,EAAYjE,GAAI,MAExCmO,OAAM,SAAUC,GAEf/H,QAAQgI,KAAKD,EAAOd,OAqC1B,OACE,cAAC,KAAD,2BACMlM,GADN,IAEEkM,WAAYK,EACZ/N,QAASuE,EACTkD,MAAOlD,EACPmD,IAAK/C,EACLuI,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACX8H,YA9CoB,SAACC,GACvB7D,KA8CE8D,UA5CkB,SAACD,GACrB,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QACtBhF,EAAS,CACP0G,KAAMC,aAAWoB,EAAEtJ,OAAO9I,KAC1BiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,KACzBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,UACnCC,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,eAsCtC0U,eAlCuB,SAACF,GAC1B,GAAI/H,EAAU,CACZ,IAAM+E,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACpBnI,EAAS,CACP0G,KAAMC,aAAW5B,EAAKpP,KACtBiR,IAAKD,aAAW5B,EAAKnP,KAErBtC,MAAOqT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKzR,UACnCC,OAAQoT,aAAW1B,KAAKC,IAAI,EAAGH,EAAKxR,WACpC+U,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCJ,OAAQvB,aAAW1B,KAAKC,IAAI,IAAMgD,IAClCC,OAAQxB,aAAW1B,KAAKC,IAAI,IAAMiD,IAClCI,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,MAoBzBS,oBAAoB,EACpBC,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,QC/FxDkK,GAAgB,SAAClN,GAAW,IAE9B+J,EAYE/J,EAZF+J,OACAqC,EAWEpM,EAXFoM,eACAlE,EAUElI,EAVFkI,eACA2E,EASE7M,EATF6M,MACApK,EAQEzC,EARFyC,UACAuI,EAOEhL,EAPFgL,UACAD,EAME/K,EANF+K,gBACAE,EAKEjL,EALFiL,YACApM,EAIEmB,EAJFnB,SACAyN,EAGEtM,EAHFsM,WACAtJ,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAEImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QACL,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAW4C,MAC/B9C,EAAKC,aAAeC,IAAW6C,QAC/B/C,EAAKC,aAAeC,IAAW8C,QAEnC,CAAC,eACD,CAAC,WAEL,CAACtD,IAEGuD,EAAYnQ,uBAChB,SAACuN,GACC,OAAOmC,EAAM5b,OACT4b,EAAMU,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,KAAO8L,EAAM/H,WAAW6K,QAClD,KAEN,CAACX,IAEG1B,EAAkBhO,uBACtB,SAACuN,GACC,OAAOU,aAAwBH,EAAa,CAC1CzW,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAACyD,IAGH,OACE,mCACGjB,EAAeS,KAAI,SAACC,GACnB,IAAIW,EAAeF,EAAgBT,GAEnC,GAAIA,EAAMJ,aAAeC,IAAW8C,KAClC,OACE,cAAC,GAAD,CAEEzO,GAAI8L,EAAM9L,GACV0M,KAAMZ,EAAM9L,GAAG2M,WACfhJ,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBkC,EAAM/H,WAAW6I,aAC7C5I,aAAcsF,EAAewC,EAAM9L,IACnCpK,EAAGiX,WAAWf,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGgX,WAAWf,EAAM/H,WAAW8C,KAAO,GACtC/C,UAAU,EACVvQ,MAAOuY,EAAM/H,WAAWxQ,MACxBC,OAAQsY,EAAM/H,WAAWvQ,OACzBqQ,UAAWA,EACX0E,SAAUuD,EAAM/H,WAAWwE,SAC3B8D,YAAaA,EACblE,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3CqE,YAAahB,EAAM/H,WAAW+I,YAC9BpE,WAAYoD,EAAM/H,WAAW2E,WAC7BqE,cAAejB,EAAM/H,WAAWgJ,cAChCpE,cAAe8D,EAAa7W,EAC5BgT,cAAe6D,EAAa5W,EAC5BmU,QAAS8B,EAAM/H,WAAWiG,QAC1BjG,WAAY+H,EAAM/H,WAClBI,SAAU,kBAAMgI,EAAgBL,IAChC9C,WACG8C,EAAMkB,cAAgBZ,IAAca,IAAWC,QAElDjN,SAAU,SAACkN,GAAD,OAAYlN,EAAS6L,EAAOqB,IACtC/I,QAAS,SAACgJ,GAAD,OAAUhJ,EAAQ0H,EAAOsB,IAClClD,UAAS4B,EAAMC,cACf9H,YAAaA,GA7BR6H,EAAM9L,IAiCjB,IAAI4O,EAAOF,EAAU5C,GACrB,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACV0M,KAAMZ,EAAM9L,GAAG2M,WACfkC,KAAM/C,EAAM/H,WAAW8K,KACvBvB,WAAYsB,EAAKE,UACjBvB,SACEqB,EAAKG,UAAL,cACWpF,KAAOC,UADlB,YAC+BgF,EAAKG,UADpC,KAEI,KAENvB,eAAgBA,EAChBxJ,aAAcsF,EAAewC,EAAM9L,IACnC0N,WAAYA,EACZlQ,SAAUsO,EAAM/H,WAAWiL,KAC3BC,KAAMnD,EAAM/H,WAAWvO,MACvBiV,YAAaqB,EAAM/H,WAAWuG,OAC9BA,OAAQwB,EAAM/H,WAAWmL,OACzBC,eAAe,EACfvZ,EAAGiX,WAAWf,EAAM/H,WAAW4C,MAAQ,GACvC9Q,EAAGgX,WAAWf,EAAM/H,WAAW8C,KAAO,GACtCxT,QAAS,EACTC,QAAS,EAGT0W,QAAS8B,EAAM/H,WAAWiG,QAC1BzB,SAAUuD,EAAM/H,WAAWwE,SAC3BJ,QACG2D,EAAM/H,WAAWoE,QAAU,IACD,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,GAEtCJ,QACG0D,EAAM/H,WAAWqE,QAAU,IACD,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,GAEtCqE,YAAahB,EAAM/H,WAAW+I,YAC9BpE,WAAYoD,EAAM/H,WAAW2E,WAC7BqE,cAAejB,EAAM/H,WAAWgJ,cAChCpE,cAAe8D,EAAa7W,EAC5BgT,cAAe6D,EAAa5W,EAC5BqU,UAAS4B,EAAMC,cACf5H,SAAU,kBAAMgI,EAAgBL,IAChC9C,WAAY8C,EAAMkB,cAAgBZ,IAAca,IAAWC,QAC3DjN,SAAU,SAACkN,GAAD,OAAYlN,EAAS6L,EAAOqB,IACtC/I,QAAS,SAACgJ,GAAD,OAAUhJ,EAAQ0H,EAAOsB,IAClCnJ,YAAaA,GA5CR6H,EAAM9L,UAoDRQ,OAAMC,KAAK6N,IC4PXc,GAlYD,SAAC,GA8BR,IA7BLpP,EA6BI,EA7BJA,GACArD,EA4BI,EA5BJA,KACA/G,EA2BI,EA3BJA,EACAC,EA0BI,EA1BJA,EACAtC,EAyBI,EAzBJA,MACAC,EAwBI,EAxBJA,OACA6b,EAuBI,EAvBJA,OACAhF,EAsBI,EAtBJA,OACAiF,EAqBI,EArBJA,QACAC,EAoBI,EApBJA,SACAC,EAmBI,EAnBJA,kBACAC,EAkBI,EAlBJA,cACAC,EAiBI,EAjBJA,aACAC,EAgBI,EAhBJA,YACAC,EAeI,EAfJA,YACAC,EAcI,EAdJA,aACAC,EAaI,EAbJA,UACAC,EAYI,EAZJA,MACA5L,EAWI,EAXJA,SACAlE,EAUI,EAVJA,SACAmE,EASI,EATJA,QACA0I,EAQI,EARJA,YACApE,EAOI,EAPJA,WACAqE,EAMI,EANJA,cACApE,EAKI,EALJA,cACAC,EAII,EAJJA,cACA7E,EAGI,EAHJA,WACAE,EAEI,EAFJA,YACG7C,EACC,sVACEmD,EAAWD,mBACX0L,EAAkB,SAAChI,GACvB7D,KAEI8L,EAAgB,SAACjI,GACrB,GAAI/H,EAAU,CACZ,IAAMiQ,EAAoBC,IAAkBxE,IAAWyE,OAAOzT,GAC9DsD,EACEqL,IAAE+E,KACA,CACE1J,KAAMC,aAAWoB,EAAEtJ,OAAO9I,IAAM4Z,EAAkB5Z,GAClDiR,IAAKD,aAAWoB,EAAEtJ,OAAO7I,IAAM2Z,EAAkB3Z,IAEnDqa,EAAkB1E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAK9CwG,EAAqB,SAACtI,GAC1B,GAAI/H,EAAU,CACZ,IAAMiQ,EAAoBC,IAAkBxE,IAAWyE,OAAOzT,GACxDqI,EAAOT,EAASU,QAChBkD,EAASnD,EAAKmD,SACdC,EAASpD,EAAKoD,SACd7U,EAAQoJ,IAASsQ,IAAWsD,QAAUvL,EAAKzR,QAAUyR,EAAKwL,UAC1Dhd,EACJmJ,IAASsQ,IAAWsD,QAAUvL,EAAKxR,SAAWwR,EAAKyL,UAC/CpI,EAAUnD,KAAKoD,IACc,IAAjCpD,KAAKoD,IAAI1B,aAAWwB,IAAiBA,EAASD,GAIhDnD,EAAKmD,OAAOA,EAAS,EAAI,GAAK,GAC9BnD,EAAKoD,OAAOA,EAAS,EAAI,GAAK,GAE9BnI,EACEqL,IAAE+E,KACA,CACE1J,KAAMC,aAAW5B,EAAKpP,IAAM4Z,EAAkB5Z,GAC9CiR,IAAKD,aAAW5B,EAAKnP,IAAM2Z,EAAkB3Z,GAC7CtC,MAAOqT,aACL1B,KAAKC,IAAI,EAAG5R,EAAQ2R,KAAKoD,IAAIH,IAAWqH,EAAkBjc,OAE5DC,OAAQoT,aACN1B,KAAKC,IAAI,EAAG3R,EAAS0R,KAAKoD,IAAIF,IAAWoH,EAAkBhc,QAE7D6b,OAAQrK,EAAKqK,OACTzI,aACE1B,KAAKC,IAAI,EAAGH,EAAKqK,SAAWnK,KAAKoD,IAAIF,IACnCoH,EAAkBH,QAEtB,EACJM,YAAa3K,EAAK2K,YACd/I,aACE1B,KAAKC,IAAI,EAAGH,EAAK2K,cAAgBzK,KAAKoD,IAAIF,IACxCoH,EAAkBG,aAEtB,EACJC,YAAa5K,EAAK4K,YACdhJ,aACE1B,KAAKC,IAAI,EAAGH,EAAK4K,cAAgB1K,KAAKoD,IAAIF,IACxCoH,EAAkBI,aAEtB,EACJrH,SAAU3B,aAAW5B,EAAKuD,aAAe,EACzCC,KAAML,EAAS,EAAI,EAAI,EACvBM,KAAML,EAAS,EAAI,EAAI,EACvBkC,OAAQ1D,aAAW5B,EAAKyF,cAAgBpC,GACxCK,WAAY9B,aAAW5B,EAAK0D,aAAeL,GAC3CM,cAAe/B,aACb7C,EAAW4E,cAAgBzD,KAAKoD,IAAIH,IAEtCS,cAAehC,aACb7C,EAAW6E,cAAgB1D,KAAKoD,IAAIF,IAEtCsI,cAAe9J,aAAW7C,EAAW2M,cAAgBrI,GACrDsI,eAAgB/J,aAAW7C,EAAW4M,eAAiBtI,GACvDuI,iBAAkBhK,aAAW7C,EAAW6M,iBAAmBvI,GAC3DwI,kBAAmBjK,aACjB7C,EAAW8M,kBAAoBxI,GAEjCgC,OAAQA,EAAOwB,KAAI,SAACiF,EAAOrb,GAAR,OACjBA,EAAQ,IAAM,EACVmR,aAAWkK,EAAQ5L,KAAKoD,IAAIH,IAC5BvB,aAAWkK,EAAQ5L,KAAKoD,IAAIF,QAGpC8H,EAAkB1E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAQpD,OAHA1E,qBAAU,WACJnB,GAAejE,GAAIiE,EAAYjE,GAAI,KACtC,IAED,mCACGrD,IAASsQ,IAAW8D,KACnB,cAAC,KAAD,2BACM3P,GADN,IAEEkG,IAAK/C,EACLuI,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDiH,aAAcA,EACdja,EAAGA,EACHC,EAAGA,EACHtC,MAAOA,EACPC,OAAQA,EACR+T,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAW+D,OACtB,cAAC,KAAD,2BACM5P,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwZ,OAAQA,EACRvC,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWsD,QACtB,cAAC,KAAD,2BACMnP,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH2a,QAASjd,EACTkd,QAASjd,EACTsZ,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWgE,KACtB,cAAC,KAAD,2BACM7P,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH8Z,YAAaA,EACbC,YAAaA,EACbE,UAAWA,EACXhD,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWiE,KACtB,cAAC,KAAD,2BACM9P,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH8Z,YAAaA,EACbC,YAAaA,EACb9C,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWkE,eACtB,cAAC,KAAD,2BACM/P,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwZ,OAAQA,EACR+B,MAAOtB,EACPhD,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWoE,MACtB,cAAC,KAAD,2BACMjQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwZ,OAAQA,EACRU,MAAOA,EACPjD,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWqE,IACtB,cAAC,KAAD,2BACMlQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACH8Z,YAAaA,EACbC,YAAaA,EACbG,MAAOA,EACPjD,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBxH,wBAAwB,EACxBC,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWsE,MAAQ5U,IAASsQ,IAAWuE,IAClD,cAAC,KAAD,2BACMpQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRiF,QAASA,EACTC,SAAUA,EACVzC,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBvH,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAWwE,QACtB,cAAC,KAAD,2BACMrQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRiF,QAASA,EACTC,SAAUA,EACVzC,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXyR,QAAQ,EACR9R,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBvH,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAExDzH,IAASsQ,IAAW0E,MACtB,cAAC,KAAD,2BACMvQ,GADN,IAEEkG,IAAK/C,EACL3O,EAAGA,EACHC,EAAGA,EACHwU,OAAQA,EACRiF,QAASA,EACTC,SAAUA,EACVE,cAAeA,EACfC,aAAcA,EACd5C,YAAavI,EAASU,QAAU6H,EAAc,KAC9CpE,WAAYnE,EAASU,QAAUyD,EAAa,KAC5CqE,cAAexI,EAASU,QAAU8H,EAAgB,KAClDpE,cAAepE,EAASU,QAAU0D,EAAgB,KAClDC,cAAerE,EAASU,QAAU2D,EAAgB,KAClDrB,UAAWtH,EACXL,QAASuE,EACT4D,YAAaiI,EACb/H,UAAWgI,EACX/H,eAAgBoI,EAChBvH,YAAa,kBAAM3H,EAAM4H,WAAa5E,GAAWA,GAAQ,IACzD6E,WAAY,kBAAM7H,EAAM4H,WAAa5E,GAAWA,GAAQ,OAG1D,gCCvYFwN,GAAS,SAACxQ,GAAW,IAEvB+J,EASE/J,EATF+J,OACA0G,EAQEzQ,EARFyQ,aACA1F,EAOE/K,EAPF+K,gBACAE,EAMEjL,EANFiL,YACAD,EAKEhL,EALFgL,UACA9C,EAIElI,EAJFkI,eACArJ,EAGEmB,EAHFnB,SACAmE,EAEEhD,EAFFgD,QACAH,EACE7C,EADF6C,YAGImH,EAAiBC,mBACrB,kBACEC,IAAEC,QACAJ,EAAOK,QAAO,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWyE,SACvD,CAAC,eACD,CAAC,WAEL,CAACjF,IAEGoB,EAAkBhO,uBACtB,SAACuN,GACC,OAAOU,aAAwBH,EAAa,CAC1CzW,EAAGkW,EAAM/H,WAAW4E,cACpB9S,EAAGiW,EAAM/H,WAAW6E,kBAGxB,CAACyD,IAEGyF,EAAuBvT,uBAAY,SAACuN,GACxC,MAAoC,WAAhCA,EAAM/H,WAAWgO,WACZ,CACLnc,EAAG,CAACqX,IAAW8D,KAAM9D,IAAWsD,SAASvK,SAAS8F,EAAMJ,YACpDI,EAAM/H,WAAWuG,OAAS,EAC1B,EACJzU,EAAG,CAACoX,IAAW8D,KAAM9D,IAAWsD,SAASvK,SAAS8F,EAAMJ,YACpDI,EAAM/H,WAAWuG,OAAS,EAC1B,EACJ9W,QAASsY,EAAM/H,WAAWuG,OAAS,EACnC/W,OAAQuY,EAAM/H,WAAWuG,OAAS,EAClC+E,QAASvD,EAAM/H,WAAWuG,OAAS,EACnCmF,eAAgB3D,EAAM/H,WAAWuG,OAAS,EAC1CoF,cAAe5D,EAAM/H,WAAWuG,OAAS,EACzCqF,YAAa7D,EAAM/H,WAAWuG,OAAS,EACvCsF,aAAc9D,EAAM/H,WAAWuG,OAAS,GAER,YAAhCwB,EAAM/H,WAAWgO,WACZ,CACLnc,EAAG,CAACqX,IAAW8D,KAAM9D,IAAWsD,SAASvK,SAAS8F,EAAMJ,aACnDI,EAAM/H,WAAWuG,OAAS,EAC3B,EACJzU,EAAG,CAACoX,IAAW8D,KAAM9D,IAAWsD,SAASvK,SAAS8F,EAAMJ,aACnDI,EAAM/H,WAAWuG,OAAS,EAC3B,EACJ9W,OAAQsY,EAAM/H,WAAWuG,OAAS,EAClC/W,MAAOuY,EAAM/H,WAAWuG,OAAS,EACjC+E,OAAQvD,EAAM/H,WAAWuG,OAAS,EAClCmF,cAAe3D,EAAM/H,WAAWuG,OAAS,EACzCoF,aAAc5D,EAAM/H,WAAWuG,OAAS,EACxCqF,aAAc7D,EAAM/H,WAAWuG,OAAS,EACxCsF,YAAa9D,EAAM/H,WAAWuG,OAAS,GAEpC,CACL1U,EAAG,EACHC,EAAG,EACHrC,OAAQ,EACRD,MAAO,EACP8b,OAAQ,EACRI,cAAe,EACfC,aAAc,EACdC,YAAa,EACbC,YAAa,KAEd,IAEH,OACE,qCACGxE,EAAeS,KAAI,SAACC,GACnB,IAAIW,EAAeF,EAAgBT,GAC/B0D,EAAoBsC,EAAqBhG,GAE7C,OACE,cAAC,GAAD,CAEE9L,GAAI8L,EAAM9L,GACVrD,KAAMmP,EAAM/H,WAAWpH,KACvB/G,EAAGiX,WAAWf,EAAM/H,WAAW4C,KAAO6I,EAAkB5Z,GAAK,GAC7DC,EAAGgX,WAAWf,EAAM/H,WAAW8C,IAAM2I,EAAkB3Z,GAAK,GAC5DtC,MAAO2R,KAAKoD,IAAIwD,EAAM/H,WAAWxQ,MAAQic,EAAkBjc,OAC3DC,OAAQ0R,KAAKoD,IACXwD,EAAM/H,WAAWvQ,OAASgc,EAAkBhc,QAE9C6b,OAAQnK,KAAKoD,IACXwD,EAAM/H,WAAWsL,OAASG,EAAkBH,QAE9CG,kBAAmBA,EACnBnF,OACEyB,EAAM/H,WAAWsG,OACb2H,aAA6BlG,EAAM/H,WAAWsG,QAC9C,GAENrG,aAAcsF,EAAewC,EAAM9L,IACnCyP,cAAevK,KAAKoD,IAClBwD,EAAM/H,WAAW0L,cAAgBD,EAAkBC,eAErDC,aAAcxK,KAAKoD,IACjBwD,EAAM/H,WAAW2L,aAAeF,EAAkBE,cAEpDJ,QAASxD,EAAM/H,WAAWuL,QAC1BC,SAAUzD,EAAM/H,WAAWwL,SAC3BI,YAAazK,KAAKoD,IAChBwD,EAAM/H,WAAW4L,YAAcH,EAAkBG,aAEnDC,YAAa1K,KAAKoD,IAChBwD,EAAM/H,WAAW6L,YAAcJ,EAAkBI,aAEnDE,UAAWhE,EAAM/H,WAAW+L,UAC5BD,aAAc,CACZ/D,EAAM/H,WAAW2M,cACjB5E,EAAM/H,WAAW4M,eACjB7E,EAAM/H,WAAW6M,iBACjB9E,EAAM/H,WAAW8M,mBAEnBtI,SAAUuD,EAAM/H,WAAWwE,SAC3BwH,MAAOjE,EAAM/H,WAAWgM,MACxB/F,QAAS8B,EAAM/H,WAAWiG,QAC1B7B,OAAkC,IAA1B2D,EAAM/H,WAAWyE,MAAc,EAAI,EAC3CJ,OAAkC,IAA1B0D,EAAM/H,WAAW0E,MAAc,EAAI,EAC3CqE,YAAahB,EAAM/H,WAAW+I,YAC9BpE,WAAYoD,EAAM/H,WAAW2E,WAC7BqE,cAAejB,EAAM/H,WAAWgJ,cAChCpE,cAAe8D,EAAa7W,EAC5BgT,cAAe6D,EAAa5W,EAC5BoZ,KAAMnD,EAAM/H,WAAWvO,MACvBiV,YAAaqB,EAAM/H,WAAWuG,OAC9BA,OAAQwB,EAAM/H,WAAWmL,OACzBC,eAAe,EACf8C,yBACiC,WAA/BnG,EAAM/H,WAAWmO,UACb,KACApG,EAAM/H,WAAWmO,UAEvBxF,KAAMZ,EAAM9L,GAAG2M,WACfzC,UAAS4B,EAAMC,cACfhI,WAAY+H,EAAM/H,WAClB8E,oBAAoB,EACpB1E,SAAU,kBAAMgI,EAAgBL,IAChC9C,WAAY8C,EAAMkB,cAAgBZ,IAAca,IAAWC,QAC3DjN,SAAU,SAACkN,GAAD,OAAYlN,EAAS6L,EAAOqB,IACtC/I,QAAS,SAACgJ,GAAD,OAAUhJ,EAAQ0H,EAAOsB,IAClCnJ,YAAaA,GAnER6H,EAAM9L,OAuEhB6R,EACC,cAAC,GAAD,CACElV,KAAMkV,EAAa9N,WAAWpH,KAC9B/G,EAAGiX,WAAWgF,EAAa9N,WAAW4C,MAAQ,GAC9C9Q,EAAGgX,WAAWgF,EAAa9N,WAAW8C,KAAO,GAC7CtT,MAAOse,EAAa9N,WAAWxQ,MAC/BC,OAAQqe,EAAa9N,WAAWvQ,OAChC6b,OAAQnK,KAAKoD,IAAIuJ,EAAa9N,WAAWsL,QACzCU,MAAO8B,EAAa9N,WAAWgM,MAC/B1F,OACEwH,EAAa9N,WAAWsG,OACpB2H,aAA6BH,EAAa9N,WAAWsG,QACrD,GAENoF,cAAeoC,EAAa9N,WAAW0L,cACvCC,aAAcmC,EAAa9N,WAAW2L,aACtCJ,QAASuC,EAAa9N,WAAWuL,QACjCC,SAAUsC,EAAa9N,WAAWwL,SAClCI,YAAazK,KAAKoD,IAAIuJ,EAAa9N,WAAW4L,aAC9CC,YAAa1K,KAAKoD,IAAIuJ,EAAa9N,WAAW6L,aAC9CE,UAAW+B,EAAa9N,WAAW+L,UACnCb,KAAM4C,EAAa9N,WAAWvO,MAC9BiV,YAAaoH,EAAa9N,WAAWuG,OACrCA,OAAQuH,EAAa9N,WAAWmL,OAChCC,eAAe,EACfpL,WAAY8N,EAAa9N,WACzB8E,oBAAoB,IAGtB,iCAMOrI,OAAMC,KAAKmR,IC9DXO,GAnIc,SAAC,GAIvB,IAHLC,EAGI,EAHJA,cACAC,EAEI,EAFJA,WACAC,EACI,EADJA,iBAEMC,EAAQjO,mBACRkO,EAAYnH,mBAChB,kBACE+G,IACCA,EAAcrO,WAAW0O,YACxBL,EAAcrO,WAAW2O,aACzB,CACEzF,IAAW+D,OACX/D,IAAWgE,KACXhE,IAAWiE,KACXjE,IAAWkE,eACXlE,IAAWoE,MACXpE,IAAWqE,KACXtL,SAASoM,EAAcrO,WAAWpH,OACrB,UAAf0V,KACJ,CAACD,EAAeC,IAoBlBjN,qBAAU,YAjBQ,WAChB,GAAIgN,EAAe,CACjB,IAEMO,EAFQJ,EAAMtN,QAAQ2N,WAEDC,QAAQ,IAAMT,EAAcpS,IACvD,GAAI2S,IAAiBJ,EAAMtN,QAAQD,OACjC,OAGE2N,EACFJ,EAAMtN,QAAQ6N,MAAM,CAACH,IAErBJ,EAAMtN,QAAQ8N,SAEhBR,EAAMtN,QAAQ+N,WAAWC,aAI3BC,MAGF,IAiCMC,EAAqB,SAACC,EAAOC,GAEjC,OAtBwB,SAACD,EAAOC,EAAUvC,GAC1C,IAAMlb,EAAIsP,KAAKkF,MACb0G,EAAMlb,GACHwd,EAAMxd,EAAIkb,EAAMlb,GAAKsP,KAAKoO,IAAID,IAC9BD,EAAMvd,EAAIib,EAAMjb,GAAKqP,KAAKqO,IAAIF,IAE7Bxd,EAAIqP,KAAKkF,MACb0G,EAAMjb,GACHud,EAAMxd,EAAIkb,EAAMlb,GAAKsP,KAAKqO,IAAIF,IAC9BD,EAAMvd,EAAIib,EAAMjb,GAAKqP,KAAKoO,IAAID,IAGnC,OAAO,2BACFD,GADL,IAEE7K,SAAU6K,EAAM7K,SAAW8K,EAC3Bzd,IACAC,MAMK2d,CAAkBJ,EAAOC,EAnChB,SAACD,GACjB,MAAO,CACLxd,EACEwd,EAAMxd,EACLwd,EAAM7f,MAAQ,EAAK2R,KAAKoO,IAAIF,EAAM7K,UAClC6K,EAAM5f,OAAS,EAAK0R,KAAKqO,KAAKH,EAAM7K,UACvC1S,EACEud,EAAMvd,EACLud,EAAM5f,OAAS,EAAK0R,KAAKoO,IAAIF,EAAM7K,UACnC6K,EAAM7f,MAAQ,EAAK2R,KAAKqO,IAAIH,EAAM7K,WAyBxBkL,CAAUL,KAwB3B,OAAIhB,EAEA,cAAC,KAAD,CACE9K,IAAKiL,EACLC,UAAWA,EACXkB,eACEpB,EACI,GACAE,EACA,CAAC,WAAY,YAAa,cAAe,gBACzC,CACE,WACA,aACA,YACA,eACA,cACA,cACA,gBACA,gBAGRmB,eAAgBrB,EAChBsB,aArCe,SAACC,EAAaC,GACjC,IACMC,EAPgB,SAACC,GACvB,IAAMzL,EAAWyL,EAAM,EAAI,EAAI9O,KAAK+O,GAAKD,EAAMA,EACzCE,EAAMhP,KAAK+O,GAAK,GACtB,OAAO/O,KAAKkF,MAAM7B,EAAW2L,GAAOA,EAGjBC,CAAgBL,EAAYvL,UACrBsL,EAAYtL,SACtC,MAAmB,UAAf8J,EACEyB,EAAYvL,SAAWsL,EAAYtL,WAAa,EAC3CuL,EAEL5O,KAAKoD,IAAIyL,GAAQ,EACZZ,EAAmBU,EAAaE,GAElCF,EAEFC,GA0BHM,aAAc9B,EAAmB,MAAQ,OAGxC,8B,mBCjFHxR,GAAalD,YAAOmD,KAAV,wEAAGnD,CAAsB+C,KACnC0T,GAAiBzW,YAAOkD,IAAV,4EAAGlD,CAAH,gEAkkBL0W,GA1jBD,SAAC,GAQR,IAAD,EAPJC,EAOI,EAPJA,iBACAC,EAMI,EANJA,sBACAC,EAKI,EALJA,sBACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,aACAC,EACI,EADJA,gBACI,EAEoCtT,mBAAS,IAF7C,mBAEGuT,EAFH,KAEiBC,EAFjB,KAGEC,EAAkB1Q,iBAAO,MACzB2Q,EAAW3Q,iBAAO,GAClB4Q,EAAc5Q,iBAAO,GALvB,EAMoB/C,mBAAS,GAN7B,mBAMG4T,EANH,KAMSC,EANT,KAQE3T,EAAWC,cARb,EAS2B2T,eAAvB9hB,EATJ,EASIA,MAAOC,EATX,EASWA,OAAQ8T,EATnB,EASmBA,IAEjBzD,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aACtD7F,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QACjD2D,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAE1B0Q,EAAazQ,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAauQ,cACvDhG,EAAczK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAauK,eACxDD,EAAYxK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAasK,aACtDjD,EAAiBvH,aAAY,SAACC,GAAD,OAAWA,EAAMyT,eAAerQ,WAC7DsQ,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAC3DwQ,EAAe7T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcE,UAC1DC,EAAe/T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcI,UAC1DC,EAAWjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYC,QACpDvI,EAAiB5L,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYrI,cAC1DuI,EAAYpU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAaF,QACtDG,EAAetU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAahR,WACzDqE,EAAiB1H,aACrB,SAACC,GAAD,OAAWA,EAAMoU,aAAa3M,kBAE1B6M,EAAgBvU,aACpB,SAACC,GAAD,OAAWA,EAAMoU,aAAaE,iBAGhC/Q,qBAAU,WACR,OAAQ+Q,GACN,KAAKC,KAAcC,aACjB,GAAIrB,EAAgB/P,QAAS,CAC3B,IAAI6G,EAAK,2BACJkJ,EAAgB/P,SADZ,IAEPlB,WAAW,2BACNiR,EAAgB/P,QAAQlB,YADnB,IAERsG,OAAQ2H,aACNgD,EAAgB/P,QAAQlB,WAAWsG,YAIzC5I,EAAS6U,aAAYf,EAAcvV,GAAI8L,IACvCrK,EAAS8U,YAAatJ,IAAWC,UAEnC,MACF,KAAKkJ,KAAcI,cAEjBxB,EAAgB/P,QAAU,KAC1BxD,EAASgV,aAAiB,UAK7B,CAACN,IAEJO,MAAY,WACNtK,IAAca,IAAWC,SAC3BkI,EAAQD,EAAO,KAEhB,IAAMjQ,KAAKyR,IAAIzB,EAAYjQ,QAAUgQ,EAAShQ,QAAU,EAAIiQ,EAAYjQ,QAAUgQ,EAAShQ,SAAWiQ,EAAYjQ,QAAUgQ,EAAShQ,SAAW,EAAG,KAAO,IAE7JyR,MAAY,WACNtK,IAAca,IAAWC,UAC3BgI,EAAYjQ,QAAUiQ,EAAYjQ,QAAU,KAE7C,GAEH,IAAM2R,EAAkBrY,uBACtB,SAACyJ,GAEKoE,IAAca,IAAWC,UACJlF,EAAEtJ,SAAWsJ,EAAEtJ,OAAOkU,YACvBsD,GACpBzU,EAAS0K,aAAgB,UAI/B,CAAC1K,EAAU2K,EAAW8J,IAElBW,GAAyBtY,uBAC7B,SAACyJ,GACC,GAAIoE,IAAca,IAAWC,QAAS,CACpC,IAAM7M,EAAWyW,aAA2BpC,EAASzP,SACrD,GAAK+P,EAAgB/P,SAgCnB,GACE,CAACgI,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAASzL,SACtDoG,GAEF,CACA,IAAIN,EAAK,2BACJkJ,EAAgB/P,SADZ,IAEPlB,WAAW,2BACNiR,EAAgB/P,QAAQlB,YADnB,IAERsG,OAAQ2H,aACNgD,EAAgB/P,QAAQlB,WAAWsG,YAIzCyB,EAAM/H,WAAWsG,OAASyB,EAAM/H,WAAWsG,OAAO0M,OAAO,CACvD1W,EAASzK,EAAIof,EAAgB/P,QAAQlB,WAAW4C,KAChDtG,EAASxK,EAAImf,EAAgB/P,QAAQlB,WAAW8C,IAChDxG,EAASzK,EAAIof,EAAgB/P,QAAQlB,WAAW4C,KAChDtG,EAASxK,EAAImf,EAAgB/P,QAAQlB,WAAW8C,MAGlDmO,EAAgB/P,QAAU6G,OArDA,CAC5B,IAAIkL,EAAQ,2BACPC,KADO,IAEVvL,WAAYC,IAAWyE,MACvBrM,WAAW,2BACNkT,IAAalT,YADR,IAERpH,KAAMyP,EACNM,KAAMN,EACNzF,KAAMtG,EAASzK,EACfiR,IAAKxG,EAASxK,EACdL,MAAO+f,EAAc2B,WAAWC,qBAAuB,UACvDnN,QAASuL,EAAc2B,WAAWE,uBAAyB,EAC3DlI,OACEqG,EAAc2B,WAAWG,sBAAwB,UACnD/M,OAAQiL,EAAc2B,WAAWI,sBAAwB,MAK3D,CAACrK,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAASzL,SACtDoG,KAGF4K,EAASjT,WAAWuG,OAAS,EAC7B0M,EAASjT,WAAWsG,OAAS,CAAC,EAAG,EAAG,EAAG,IAErC+B,IAAca,IAAWuE,MAC3BwF,EAASjT,WAAWuG,OAAS,EAC7B0M,EAASjT,WAAWsG,OAAS,CAAC,EAAG,IAEnC2K,EAAgB/P,QAAU+R,MA4BhC,CACE5K,EACA0K,KACA9B,EAAgB/P,QAChByP,EAASzP,UAGPsS,GAAkBhZ,uBAAY,WAGlC,GAAI6N,IAAca,IAAWC,SAAW8H,EAAgB/P,QAAS,CAC/D,IAAM5E,EAAWyW,aAA2BpC,EAASzP,SAC/C1R,EAAQ8M,EAASzK,EAAIof,EAAgB/P,QAAQlB,WAAW4C,KACxDnT,EAAS6M,EAASxK,EAAImf,EAAgB/P,QAAQlB,WAAW8C,IACzD2Q,EAAYnX,EAASzK,EAAIof,EAAgB/P,QAAQlB,WAAW4C,KAC5D8Q,EAAYpX,EAASxK,EAAImf,EAAgB/P,QAAQlB,WAAW8C,IAClE,IACEmO,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,GACnDmlB,IACExC,EAAgB/P,QAAQlB,WAAWsG,OACjC2K,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,IAEvDolB,IACEzC,EAAgB/P,QAAQlB,WAAWsG,OACjC2K,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,MAIrD6iB,EAAYjQ,QAAUgQ,EAAShQ,QAAU,GACzC+P,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,GACnD6S,KAAKoD,IACHkP,EACExC,EAAgB/P,QAAQlB,WAAWsG,OACjC2K,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,IAErD,IACJ6S,KAAKoD,IACHmP,EACEzC,EAAgB/P,QAAQlB,WAAWsG,OACjC2K,EAAgB/P,QAAQlB,WAAWsG,OAAOhY,OAAS,IAErD,IACJ,CACA,IAAIyZ,EAAK,2BACJkJ,EAAgB/P,SADZ,IAEPlB,WAAW,2BACNiR,EAAgB/P,QAAQlB,YADnB,IAERsG,OAAO,YAAK2K,EAAgB/P,QAAQlB,WAAWsG,QAC/C9W,MACE0Z,IAAWsD,UAAYyE,EAAgB/P,QAAQyG,YAC/CnY,EAAQ,EACJA,EACA,EACNC,OACEyZ,IAAWsD,UAAYyE,EAAgB/P,QAAQyG,YAC/ClY,EAAS,EACLA,EACA,EACN6b,OAAQnK,KAAKoD,IAAI/U,GACjBoc,YAAazK,KAAKoD,IAAI/U,GAAS,IAC/Bqc,YAAa1K,KAAKoD,IAAI/U,OAIxB,CAAC0Z,IAAWsE,KAAMtE,IAAW0E,MAAO1E,IAAWwE,SAASzL,SACtDoG,IAGFN,EAAM/H,WAAWsG,OAAOqN,QAAQ,EAAG,EAAGF,EAAWC,GAE/CrL,IAAca,IAAWuE,MAC3B1F,EAAM/H,WAAWsG,OAAO1F,KAAK6S,GAC7B1L,EAAM/H,WAAWsG,OAAO1F,KAAK8S,IAE/BzC,EAAgB/P,QAAU6G,EAG9BmJ,EAAShQ,QAAUiQ,EAAYjQ,WAEhC,CACDmH,EACA4I,EAAgB/P,QAChB6R,KACApC,EAASzP,QACTiQ,EAAYjQ,UAER0S,GAAgBpZ,uBACpB,SAACyJ,GAGI,CACCiF,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACXzL,SAASoG,IAEX3K,EAASgV,aAAiBL,KAAcC,eAE1C,IAAMhW,EAAWyW,aAA2BpC,EAASzP,SACrD8P,EAAgB1U,KAElB,CAACoB,EAAU2K,EAAW0K,KAA4B/B,IAE9C6C,GAA2BrZ,uBAC/B,SAACyJ,GACC,IAAM3H,EAAWyW,aAA2BpC,EAASzP,SAEnD,CACEgI,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACXzL,SAASoG,IACX4I,EAAgB/P,SAChB6P,EAAalf,IAAMyK,EAASzK,GAC5Bkf,EAAajf,IAAMwK,EAASxK,GAE5B4L,EAASgV,aAAiBL,KAAcC,iBAG5C,CACE5U,EACA2K,EACA0K,KACA9B,EAAgB/P,QAChB6P,IAGE+C,GAAkBtZ,uBACtB,SAACC,GAEC,GADAA,EAAMsZ,IAAIC,iBACe,OAArBrD,EAASzP,SAAoBzG,EAAMsZ,IAAIE,QAAS,CAClD,IAAMC,EAAQvD,EAASzP,QACjBiT,EAAWD,EAAM9P,SAF2B,EAGb8P,EAAME,qBAAhCC,EAHuC,EAG1CxiB,EAAgByiB,EAH0B,EAG7BxiB,EACfyiB,EAAe,CACnB1iB,GAAIwiB,EAAWH,EAAMriB,KAAOsiB,EAC5BriB,GAAIwiB,EAAWJ,EAAMpiB,KAAOqiB,GAExBK,EAAWrT,KAAKC,IACpBD,KAAKyR,IACHnY,EAAMsZ,IAAIU,OAAS,EAAIN,EAhSjB,QAgSsCA,EAC5C,IAEF,KAEFzW,EAASxD,YAAQsa,IACjB,IAAME,EAAS,CACb7iB,EAAGwiB,EAAWE,EAAa1iB,EAAI2iB,EAC/B1iB,EAAGwiB,EAAWC,EAAaziB,EAAI0iB,GAEjCN,EAAM5X,SAASoY,GACfR,EAAMhF,eAGV,CAACxR,EAAUiT,EAASzP,UAEhBmE,GAAkB7K,uBACtB,SAACyQ,IACKnL,EAAUtQ,MAAQyb,EAAKzb,OAASsQ,EAAUrQ,OAASwb,EAAKxb,SAC1DiO,EACEiX,YAAkB,CAChBnlB,MAAO2R,KAAKC,IAAItB,EAAUtQ,MAAOyb,EAAKzb,OACtCC,OAAQ0R,KAAKC,IAAItB,EAAUrQ,OAAQwb,EAAKxb,aAKhD,CAACiO,EAAUoC,IAEP8U,GAAwBpa,uBAC5B,SAACuN,EAAOqB,GACN1L,EACEmX,aAAY,2BACP9M,GADM,IAET/H,WAAW,2BACN+H,EAAM/H,YACNoJ,SAKX,CAAC1L,IAEGoX,GAAoBta,uBACxB,SAACuN,GACCrK,EAAS0K,aAAgBL,MAE3B,CAACrK,IAEGqX,GAAmBva,uBACvB,SAACuN,EAAOsB,GACNoH,EAAsB1I,EAAM9L,GAAIoN,KAElC,CAACoH,IAEGuE,GAAgBxa,uBACpB,SAAC+O,GACC7L,EAASuX,aAAuB1L,MAElC,CAAC7L,IAGGwX,GAA4B1a,uBAChC,WAAqB,IACf2a,EADLC,IAAmB,yDAEdA,GACFD,EAAiB7M,EAAc,KACT,MAAK6M,EAAiB,IAE5CA,EAAiB7M,EAAc,IACV,IAAG6M,EAAiB,KAE3CzE,EAAsByE,KAExB,CAAC7M,EAAaoI,IAEV2E,GAAkB7a,uBACtB,SAAC8a,EAASjM,GACR3L,EAAS6X,aAAgB,CAAEC,IAAKF,EAAS1a,MAAOyO,OAElD,CAAC3L,IAGH,OACE,eAACpC,EAAA,GAAD,GACE9L,MAAM,OACNC,OAAO,OACP8L,QAAQ,OACRG,eAAe,SACfF,cAAc,SACdG,WAAW,SACX8Z,OAAO,OACPnZ,SAAS,WACTL,GAAG,iBATL,yBAUW,YAVX,oBAWOsH,GAXP,0BAaE,eAAC,KAAD,CACE/T,MAAOA,EACPC,OAAQA,EACRimB,YAAa7C,EACb8C,mBAAoB7C,GACpB8C,mBAAoBpC,GACpBqC,iBAAkBjC,GAClBkC,WAAYjC,GACZkC,aAAclD,EACdmD,QAASlC,GACT1P,OAAQnK,GAAQ,EAChBoK,OAAQpK,GAAQ,EAChBuK,SAAU8D,EACVzW,EAAGrC,EAAQsQ,EAAUtQ,MAAQ,EAC7BsC,EAAGrC,EAASqQ,EAAUrQ,OAAS,EAC/BH,QAASE,EAAQ,EACjBD,QAASE,EAAS,EAClB8T,IAAKoN,EACLnN,UAAW6E,IAAca,IAAWC,QACpC8M,MAAO,CACLC,OAAQ7N,IAAca,IAAWC,QAAU,UAAY,aApB3D,UAuBE,eAAC,KAAD,CAAO5F,IAAKqN,EAAc3L,WAAW,EAArC,UAEE,cAAC,KAAD,CACEpT,EAAG,EACHC,EAAG,EACHtC,MAAOsQ,EAAUtQ,MACjBC,OAAQqQ,EAAUrQ,OAClByb,KAC+B,gBAA7BsG,EAAc2E,WACV3E,EAAc2E,WACd,IAAM3E,EAAc2E,WAE1BlR,WAAW,IAEb,cAAC,GAAD,CACEmC,OAAQ6K,EACR1M,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAamV,QAGjB,cAAC,KAAD,CAAOpQ,WAAW,EAAlB,SACE,cAAC,GAAD,CACEG,eAAgBA,EAChBxH,eAAgBA,EAChB0H,UAAWkM,EAAc2B,WACzB5N,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAamV,OAGjB,eAAC,KAAD,CAAO9R,IAAKsN,EAAZ,UACE,cAAC,GAAD,CACEzJ,OAAQ6K,EACR7M,eAAgBA,EAChBG,eAAgBA,EAChBF,gBAAiBA,GACjBnF,YAAamV,KAEf,cAAC,GAAD,CACEjO,OAAQ6K,EACRnS,UAAWA,EACXwI,YAAaA,EACb6J,aAAcA,EACd9J,UAAWA,EACX9C,eAAgBA,EAChBF,gBAAiBA,GACjB+C,gBAAiB0M,GACjB5Y,SAAU0Y,GACVvU,QAAS0U,GACT7U,YAAamV,KAEf,cAAC,GAAD,CACEjO,OAAQ6K,EACRnE,aAAcmD,EAAgB/P,QAC9BoH,YAAaA,EACbD,UAAWA,EACX8J,aAAcA,EACd5M,eAAgBA,EAChB6C,gBAAiB0M,GACjB5Y,SAAU0Y,GACVvU,QAAS0U,GACT7U,YAAamV,KAEf,cAAC,GAAD,CACEjO,OAAQ6K,EACR/H,MAAO4H,EACPrI,eAAgBA,EAChB3J,UAAWA,EACXuI,UAAWA,EACXC,YAAaA,EACb/C,eAAgBA,EAChB4M,aAAcA,EACd/J,gBAAiB0M,GACjB5Y,SAAU0Y,GACVjL,WAAYqL,GACZ3U,QAAS0U,GACT7U,YAAamV,QAGjB,cAAC,KAAD,CAAO9R,IAAKuN,EAAiB7L,WAAW,EAAxC,SACE,cAAC,GAAD,CACEG,eAAgBA,EAChBxH,eAAgBA,EAChB2H,eAAgBA,EAChBD,UAAWkM,EAAc2B,WACzB9N,gBAAiBA,GACjBnF,YAAamV,OAGjB,eAAC,KAAD,WACE,cAAC,GAAD,CACEjQ,eAAgBA,EAChBxH,eAAgBA,EAChB2H,eAAgBA,EAChBzF,UAAWA,EACXwF,UAAWkM,EAAc2B,WACzB9N,gBAAiBA,GACjBnF,YAAamV,KAEf,cAAC,GAAD,CACEhH,cAAe8D,EACf7D,WAAYA,KAEbkC,GACC2B,GAAiB3B,EAAiB2B,EAAalW,IAQ/C,6BAPA,cAAC,GAAD,CACEoS,cAAe4D,EAAUrH,MACvB,SAAClD,GAAD,OAAU8I,EAAiB9I,EAAKzL,OAElCsS,kBAAkB,UAO1B,eAACjT,EAAA,EAAD,CAAKgB,SAAS,WAAW8Z,MAAOjE,EAAe,QAAU,EAAGrP,IAAK,EAAjE,UACE,cAAC,EAAD,CAAc7D,MAAM,cAAc3C,SAAS,SAAS5C,OAAK,EAAzD,SACE,cAAC4W,GAAD,CAAgBzU,QAAS,kBAAMqZ,IAA0B,IAAzD,SACE,cAACmB,GAAA,EAAD,QAGJ,cAAC,EAAD,CAAcpX,MAAM,eAAe3C,SAAS,SAAS5C,OAAK,EAA1D,SACE,cAAC4W,GAAD,CAAgBzU,QAAS,kBAAMqZ,IAA0B,IAAzD,SACE,cAACoB,GAAA,EAAD,WAIL5E,IAAiBE,EAChB,cAACtW,EAAA,EAAD,CACE9L,MAAM,OACNC,OAAO,OACP8mB,QAAQ,UACRja,SAAS,WACTsG,KAAK,IACLE,IAAI,IANN,SAQE,cAACxH,EAAA,EAAD,CACEgB,SAAS,WACTwG,IAAI,mBACJsT,MAAM,mBAHR,SAKE,cAACI,EAAA,EAAD,QAIJ,+BAvLJ,K,sNC/aE1a,GAAajC,YAAO8C,KAAV,6EAAG9C,CAAsB+C,KACnC6Z,GAAc5c,YAAO6c,MAAV,8EAAG7c,CAAH,oFAOX8c,GAAgB9c,YAAOyB,KAAV,gFAAGzB,CAAH,8DAMboD,GAAUpD,YAAO+c,MAAV,0EAAG/c,CAAH,qCAoEEgd,GA/DK,SAACxZ,GAAW,IACtByZ,EAA2CzZ,EAA3CyZ,MAAOlE,EAAoCvV,EAApCuV,IAAKxR,EAA+B/D,EAA/B+D,IAAKxG,EAA0ByC,EAA1BzC,MAAOmc,EAAmB1Z,EAAnB0Z,SAAUC,EAAS3Z,EAAT2Z,KAQ1C,OACE,eAAC,GAAD,CAASC,WAAS,EAAlB,UACE,cAACL,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC,GAAD,CAAYnb,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,SACGL,MAGL,cAACF,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,eAAC5b,EAAA,EAAD,CAAKC,QAAQ,OAAOI,WAAW,SAA/B,UACE,cAACgb,GAAD,UACE,cAACS,GAAA,EAAD,CACExE,IAAKA,EACLxR,IAAKA,EACL4V,KAAMA,EACNpc,MAAOA,EACPsB,SAAU,SAACzB,EAAOG,GAAR,OAAkBmc,EAASnc,IACrCyc,kBAAgB,aAChBC,oBAAqB,SAACja,GAAD,OACnB,cAAC1D,EAAA,EAAD,CACE/E,KAAMyI,EAAMzI,KACZ2iB,gBAAiB,EACjBC,UAAU,MACVvY,MAAO5B,EAAMzC,MAJf,SAMGyC,EAAMoa,gBAKf,cAAChB,GAAD,CACE7b,MAAOA,EACP6a,OAAO,QACP7c,KAAK,SACLoe,KAAMA,GAAQ,EACd9a,SAAU,SAACzB,GAAD,OACRsc,EACyB,KAAvBtc,EAAME,OAAOC,MACTgY,GAAO,EACP8E,OAAOjd,EAAME,OAAOC,SAG5B+c,OAhDS,WACb/c,EAAQgY,EACVmE,EAASnE,GACAhY,EAAQwG,GACjB2V,EAAS3V,IA6CHwW,WAAY,CACVhF,IAAKA,EACLxR,IAAKA,EACL,kBAAmB,2B,UC9E3ByW,GAAkBhe,YAAOie,MAAV,uFAAGje,CAAH,iBAwCNke,GApCU,SAAC1a,GAAW,IAC3BzC,EAAsDyC,EAAtDzC,MAAOsB,EAA+CmB,EAA/CnB,SAAU8b,EAAqC3a,EAArC2a,cAAe3N,EAAsBhN,EAAtBgN,MAAO4N,EAAe5a,EAAf4a,WAQ/C,OACE,eAAC3c,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAASG,WAAW,SAAtD,UACE,eAACL,EAAA,EAAD,CAAKC,QAAQ,OAAOI,WAAW,SAA/B,UACE,cAAC,KAAD,CACEf,MAAOA,GAAS,GAChBsB,SAAU,SAACzK,GAAD,OAAWyK,EAASzK,EAAMymB,IAAI3e,kBACxCrD,QAASiiB,IACTC,UAAQ,EACRC,eAAa,IAEf,cAACR,GAAD,CACEjd,MAAOA,GAAS,GAChBsB,SAAU,SAACzB,GAAD,OAAWud,EAAcvd,EAAME,OAAOC,QAChD0d,UAnBmB,SAAC7d,GACR,UAAdA,EAAM+a,KACRtZ,EAASzB,EAAME,OAAOC,aAoBrByP,EACC,cAACvO,EAAA,EAAD,CAAYrK,MAAM,YAAYsK,QAAQ,QAAtC,SACGkc,IAGH,iCCdFrc,GAAS/B,YAAO0e,KAAV,mFAAG1e,CAAkB+C,KAC3Bd,GAAajC,YAAO8C,KAAV,uFAAG9C,CAAsB+C,KACnC4b,GAAyB3e,YAAO4e,MAAV,mGAAG5e,CAAH,2CAKtB6e,GAAU,SAACrb,GAAW,IAExByZ,EAUEzZ,EAVFyZ,MACA6B,EASEtb,EATFsb,SACAC,EAQEvb,EARFub,WACAC,EAOExb,EAPFwb,OAGAC,GAIEzb,EANF0b,WAME1b,EALF2b,aAKE3b,EAJFyb,eAEA1P,GAEE/L,EAHF4b,QAGE5b,EAFF+L,QACA8P,EACE7b,EADF6b,cAXuB,EAaO1b,oBAAS,GAbhB,mBAalB2b,EAbkB,KAaRC,EAbQ,KAczB,OACE,eAACC,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACX,GAAD,CAAwBc,WAAY,cAACC,GAAA,EAAD,IAApC,SACE,cAAC,GAAD,UAAazC,MAEf,cAAC0C,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAOwM,GAAI,EAA5D,UACE,eAAC4a,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACne,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,mBAGA,cAAC,GAAD,CACEvc,MAAOwO,EAAOuP,GACdzc,SAAU,SAACzK,GAAD,OAAWqnB,EAAcH,EAAUlnB,IAC7CumB,cAAe,SAACvmB,GAAD,OAAWqnB,EAAcH,EAAUlnB,IAClD4Y,MAAOpP,QAAQ4d,EAAOF,IACtBV,WAAYY,EAAOF,UAIzB,cAAC/B,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,UACNlE,IAAK,EACLxR,IAAK,EACL4V,KAAM,IACNpc,MAAOwO,EAAOwP,GACd7B,SAAU,SAACnc,GAAD,OAAWke,EAAcF,EAAYhe,WAIpDse,WAOLQ,GAAuB,SAACrc,GAAW,IAC/Bsc,EAA4Btc,EAA5Bsc,SAAU/kB,EAAkByI,EAAlBzI,KAAMglB,EAAYvc,EAAZuc,QAClBzG,EAAatV,aACjB,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,QAAQiS,cAGzC,OACE,eAAC0G,GAAA,EAAD,CACExC,kBAAgB,oBAChBziB,KAAMA,EACN0F,QAASqf,EACTG,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAa/d,GAAG,oBAAhB,sBACA,cAAC,KAAD,CACEge,cAAe,CACbrT,cAAeuM,EAAWvM,eAAiB,GAC3CC,gBAAiBsM,EAAWtM,iBAAmB,EAC/Cb,gBAAiBmN,EAAWnN,iBAAmB,GAC/CE,kBAAmBiN,EAAWjN,mBAAqB,EACnDa,cAAeoM,EAAWpM,eAAiB,GAC3CC,gBAAiBmM,EAAWnM,iBAAmB,EAC/CC,kBAAmBkM,EAAWlM,mBAAqB,GACnDC,oBAAqBiM,EAAWjM,qBAAuB,EACvDV,WAAY2M,EAAW3M,YAAc,GACrCC,aAAc0M,EAAW1M,cAAgB,EACzChB,aAAc0N,EAAW1N,cAAgB,GACzCE,YAAawN,EAAWxN,aAAe,GACvCyN,oBAAqBD,EAAWC,qBAAuB,UACvDC,sBAAuBF,EAAWE,uBAAyB,EAC3DC,qBAAsBH,EAAWG,sBAAwB,UACzDC,qBAAsBJ,EAAWI,sBAAwB,GAE3D2G,iBAAkBC,OAAa9K,MAAM,CACnCzI,cAAeuT,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDtU,gBAAiBmU,OACdC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDvT,cAAeoT,OACZC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDrT,kBAAmBkT,OAChBC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtD9T,WAAY2T,OACTC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDlH,oBAAqB+G,OAClBC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDhH,qBAAsB6G,OACnBC,WACAC,KAAK,mBAAoB,yBAA0BC,QAExDC,SAAU,SAACnR,GAET,OADA9G,QAAQC,IAAI6G,GACL,IAEToR,SAAUZ,EA9CZ,SAgDG,SAACa,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,eAACC,GAAA,EAAD,CAAeC,UAAQ,EAAC5e,GAAG,6BAA3B,UACE,cAAC,GAAD,aACE6a,MAAM,WACN6B,SAAS,gBACTC,WAAW,mBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,YACN6B,SAAS,kBACTC,WAAW,qBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,iBACN6B,SAAS,gBACTC,WAAW,mBACP6B,IAEN,cAAC,GAAD,aACE3D,MAAM,gBACN6B,SAAS,oBACTC,WAAW,uBACP6B,IAEN,cAAC,GAAD,yBACE3D,MAAM,OACN6B,SAAS,aACTC,WAAW,gBACP6B,GAJN,IAKEvB,cACE,eAACtC,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,cACNlE,IAAK,EACLxR,IAAK,GACL4V,KAAM,EACNpc,MAAO6f,EAAUrR,OAAO3D,aACxBsR,SAAU,SAACnc,GAAD,OACR6f,EAAU3B,cAAc,eAAgBle,QAI9C,cAACgc,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,IACLxR,IAAK,EACL4V,KAAM,IACNpc,MAAO6f,EAAUrR,OAAOzD,YACxBoR,SAAU,SAACnc,GAAD,OACR6f,EAAU3B,cAAc,cAAele,cAOnD,cAAC,GAAD,yBACEkc,MAAM,iBACN6B,SAAS,sBACTC,WAAW,yBACP6B,GAJN,IAKEvB,cACE,eAACtC,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACne,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CACEK,QAAQ,QACRtK,MAAM,gBACN0lB,GAAI,EAHN,0BAOA,cAAC,GAAD,CACEvc,MAAO6f,EAAUrR,OAAV,qBACPlN,SAAU,SAACzK,GAAD,OACRgpB,EAAU3B,cACR,uBACArnB,IAGJumB,cAAe,SAACvmB,GAAD,OACbgpB,EAAU3B,cACR,uBACArnB,IAGJ4Y,MAAOpP,QACLwf,EAAU5B,OAAV,sBAEFZ,WAAYwC,EAAU5B,OAAV,4BAIlB,cAACjC,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,EACLxR,IAAK,EACL4V,KAAM,IACNpc,MAAO6f,EAAUrR,OAAV,qBACP2N,SAAU,SAACnc,GAAD,OACR6f,EAAU3B,cAAc,uBAAwBle,iBAQ9D,eAACkgB,GAAA,EAAD,WACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEmH,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRuD,SAAUmb,EAAUM,eAAiBN,EAAUO,QAJjD,gCAgBCve,OAAMC,KAAKgd,ICzRpBuB,GAAY,CAChBC,OAAQ,eACRC,MAAO,mBACPC,EAAG,wBACHC,EAAG,yBACHC,EAAG,6BACHC,EAAG,4BACHC,EAAG,oBACHC,EAAG,cACHC,EAAG,iBACHC,EAAG,cACHC,EAAG,mBACH,SAAK,gBACL,SAAK,kBACL,SAAK,iBACL,SAAK,kBACL,eAAW,oBACX,eAAW,sBACX,eAAW,qBACX,eAAW,sBACX,UAAW,UACX,UAAW,WACX,UAAW,cACX,UAAW,eACX,UAAW,qBACX,UAAW,qBACX,UAAW,yBACX,UAAW,sBACX,UAAW,uBACX,UAAW,oBACX,UAAW,oBACX,UAAW,+BACX,UAAW,qBACX,UAAW,mBACX,UAAW,uBACX,UAAW,oBACX,UAAW,qBACX,cAAe,0BACf,cAAe,6BACf,cAAe,cACf,cAAe,eAGXhF,GAAO/c,YAAOgiB,MAAV,2EAAGhiB,CAAgB+C,KACvBkf,GAAUjiB,YAAOiC,KAAV,8EAAGjC,CAAH,4FAOPkiB,GAAkBliB,YAAOiC,KAAV,sFAAGjC,CAAH,oCAKfmiB,GAAkB,SAAC3e,GAAW,IAC1Bsc,EAAmBtc,EAAnBsc,SAAU/kB,EAASyI,EAATzI,KAElB,OACE,eAACilB,GAAA,EAAD,CACExC,kBAAgB,mBAChBziB,KAAMA,EACN0F,QAASqf,EACTG,WAAS,EACTC,SAAS,KALX,UAOE,cAACC,GAAA,EAAD,CAAa/d,GAAG,mBAAhB,uBACA,cAAC2e,GAAA,EAAD,CAAeC,UAAQ,EAAC5e,GAAG,4BAA3B,SACGggB,OAAOC,KAAKjB,IAAWnT,KAAI,SAACJ,EAAMhW,GAAP,OAC1B,eAAC,GAAD,CAAMulB,WAAS,EAAajb,GAAI,EAAhC,UACE,cAAC,GAAD,CAAM0L,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC4E,GAAD,UAAUpU,MAEZ,cAAC,GAAD,CAAMA,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC6E,GAAD,UAAkBd,GAAUvT,SALXhW,YAchB+K,OAAMC,KAAKsf,IC1EpBG,GAAatiB,YAAOuiB,MAAV,0EAAGviB,CAAH,4BAIVwiB,GACO,YADPA,GAEM,WAGNC,GAAYziB,YAAOie,MAAV,yEAAGje,CAAH,gBACJ,SAACwD,GAAD,OAAWA,EAAM7N,SAGtB+sB,GAAW,WACf,IAAMC,EAAUC,cACV/e,EAAWC,cAFI,EAIGH,mBAAS,IAJZ,mBAIdmL,EAJc,KAIR+T,EAJQ,OAKOlf,mBAAS,MALhB,mBAKdmf,EALc,KAKNC,EALM,KAOfpL,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAE3D2b,EAAmBriB,uBACvB,SAACC,GACCiiB,EAAQjiB,EAAME,OAAOC,SAEvB,CAAC8hB,IAEGI,EAAiBtiB,uBAAY,WACjCkD,EAASqf,aAAWvL,EAAcvV,GAAI0M,MACrC,CAACjL,EAAU8T,GAAiBA,EAAcvV,GAAI0M,IAC3CqU,EAAoBxiB,uBACxB,SAACC,GACuB,KAAlBA,EAAMwiB,UACRxiB,EAAMuZ,iBACN8I,OAGJ,CAACA,IAGGI,EAAoB1iB,uBAAY,WACpCkiB,EAAQlL,EAAc7I,QACrB,CAAC+T,EAASlL,GAAiBA,EAAc7I,OAEtCwU,EAAe3iB,uBAAY,WAC/BkD,EAAS0f,gBACTZ,EAAQ5b,KAAK,OACZ,CAAC4b,EAAS9e,IAEP2f,EAAsB7iB,uBAC1B,SAAC2Y,GACCzV,EACE4f,aAAa,2BACR9L,GADO,IAEV2B,WAAYA,MAGhByJ,EAAU,QAEZ,CAAClf,EAAU8T,EAAeoL,IAQ5B,OANAvb,qBAAU,WACJmQ,GACFkL,EAAQlL,EAAc7I,QAEvB,CAAC6I,GAAiBA,EAAc7I,OAGjC,eAACrN,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACX4hB,GAAI,EACJC,GAAI,EALN,UAOE,cAAClB,GAAD,CACE1hB,MAAO+N,EACPzM,SAAU2gB,EACVvE,UAAW0E,EACXxtB,MAAOgiB,GAAiB7I,IAAS6I,EAAc7I,KAAO,QAAU,UAElE,eAACrN,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGiW,GAAiB7I,IAAS6I,EAAc7I,KACvC,cAAC,EAAD,CAAc1J,MAAM,iBAAiBvF,OAAK,EAA1C,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAASqhB,EAAmBzrB,MAAM,YAA9C,SACE,cAAC,KAAD,QAIJ,6BAED+f,GAAiB7I,IAAS6I,EAAc7I,KACvC,cAAC,EAAD,CAAc1J,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAASihB,EAArB,SACE,cAACW,GAAA,EAAD,QAIJ,6BAEF,cAAC,EAAD,CAAcxe,MAAM,OAAOvF,OAAK,EAAhC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAASshB,EAArB,SACE,cAAChB,GAAD,CAAYuB,KAAMC,KAAe1S,KAAK,WAG1C,cAAC,EAAD,CAAchM,MAAM,YAAYvF,OAAK,EAArC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS,kBAAM+gB,EAAUP,KAArC,SACE,cAACF,GAAD,CAAYuB,KAAME,KAAY3S,KAAK,WAGvC,cAAC,EAAD,CAAchM,MAAM,WAAWvF,OAAK,EAApC,SACE,cAACqD,EAAA,EAAD,CAAYlB,QAAS,kBAAM+gB,EAAUP,KAArC,SACE,cAACwB,GAAA,EAAD,WAKN,cAAC,GAAD,CACEjpB,KAAM+nB,IAAWN,GACjB1C,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEhoB,KAAM+nB,IAAWN,GACjBzC,QAASyD,EACT1D,SAAU,kBAAMiD,EAAU,aAMnBngB,OAAMC,KAAK6f,I,4IC9IpBtf,GAAUpD,YAAOyB,KAAV,wEAAGzB,CAAH,uKAYPikB,GAAmBjkB,YAAOiC,KAAV,iFAAGjC,CAAH,gBACX,SAACwD,GAAD,MAA6B,SAAjBA,EAAM0gB,OAAoB,QAAU,cAErDC,GAAkBnkB,YAAOkD,KAAV,gFAAGlD,CAAH,+CAOfokB,GAAW,SAAC5gB,GAAW,IAEzB2K,EAUE3K,EAVF2K,cACAiB,EASE5L,EATF4L,aACA6B,EAQEzN,EARFyN,KACAoT,EAOE7gB,EAPF6gB,cACAC,EAME9gB,EANF8gB,aACAC,EAKE/gB,EALF+gB,SACAC,EAIEhhB,EAJFghB,YACAje,EAGE/C,EAHF+C,SACAke,EAEEjhB,EAFFihB,QACAje,EACEhD,EADFgD,QAGIke,EAAahe,iBAAO,MAEpBie,EAAsBhkB,uBAC1B,SAACyJ,GACCA,EAAEwa,kBACFxa,EAAEya,YAAYC,2BACdT,MAEF,CAACA,IAGGU,EAAmBpkB,uBACvB,SAACyJ,GACCA,EAAEwa,kBACFxa,EAAEya,YAAYC,2BACdR,MAEF,CAACD,IAGH,OACE,cAAC,GAAD,CACE3a,IAAKgb,EACLhB,GAAI,EACJsB,GAAI,EACJ7iB,GAAI,EACJT,QAAQ,OACR/L,MAAM,OACNsvB,OAAQ,EACRC,YAAY,WACZC,aAAc,EACdnjB,QAASuE,EACT6e,aAAc,kBAAM5e,GAAQ,IAC5B6e,aAAc,kBAAM7e,GAAQ,IAC5B8e,UAAWC,aAAKhB,GAAY,aAAcE,GAAW,eAbvD,SAeE,eAAChjB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACfC,WAAW,SACXnM,MAAM,OAJR,UAME,cAACsuB,GAAD,CACE/hB,QAAQ,QACRgiB,OAAQ/V,EAAgB,OAAS,QACjCqX,QAAM,EAHR,SAKGvU,IAEH,eAACxP,EAAA,EAAD,CAAKC,QAAQ,OAAOG,eAAe,gBAAgBC,WAAW,SAA9D,WACI0iB,IAAgBD,GAAYE,GAAWrV,GACvC,cAAC3N,EAAA,EAAD,CAAK6b,GAAI,EAAT,SACE,cAAC6G,GAAD,CAAiBniB,QAAS+iB,EAAkB3T,KAAK,QAAjD,SACGhC,EAAe,cAACqW,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,QAInC,cAACjkB,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,OAAO0nB,GAAI,IAErCiH,GAAYE,IAAYtW,EACvB,cAACgW,GAAD,CAAiBniB,QAAS2iB,EAAqBvT,KAAK,QAApD,SACGjD,EAAgB,cAACwX,GAAA,EAAD,IAAqB,cAACC,GAAA,EAAD,MAGxC,cAACnkB,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,kBAQtBgN,OAAMC,KAAKuhB,ICtFpByB,GAAYC,cAAW,SAACtmB,GAAD,MAAY,CACvCumB,OAAQ,CACNC,UAAW,eACXC,WAAY,OACZC,WAAY1mB,EAAM2mB,YAAYC,OAAO,YAAa,CAChDC,SAAU7mB,EAAM2mB,YAAYE,SAASC,YAGzCC,WAAY,CACVP,UAAW,sBAITjkB,GAAS/B,YAAO0e,KAAV,oEAAG1e,CAAkB+C,KAC3ByjB,GAAcxmB,YAAOymB,MAAV,yEAAGzmB,CAAuB+C,KACrC2jB,GAAY1mB,YAAO+B,IAAV,uEAAG/B,CAAH,qJAaT2mB,GAAmB3mB,YAAO4mB,MAAV,8EAAG5mB,CAAH,sIAUhB6mB,GAAoB7mB,YAAO8mB,MAAV,+EAAG9mB,CAAH,oBAmKR+mB,GA/JG,SAACvjB,GACjB,IAAMwjB,EAAUnB,KACVhiB,EAAWC,cAFU,EAGKH,oBAAS,GAHd,mBAGpB2b,EAHoB,KAGVC,EAHU,KAIrBjH,EAAetU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAahR,WACzD4f,EAAOjjB,aAAY,SAACC,GAAD,OAAWA,EAAMijB,YAAYD,QAEpD7O,EAQE5U,EARF4U,UACAhT,EAOE5B,EAPF4B,MACA+hB,EAME3jB,EANF2jB,QACA9H,EAKE7b,EALF6b,cACAmF,EAIEhhB,EAJFghB,YACA4C,EAGE5jB,EAHF4jB,WACAzQ,EAEEnT,EAFFmT,iBACAC,EACEpT,EADFoT,sBAGIyQ,EAAa5Z,mBACjB,kBAAMC,IAAEC,QAAQyK,EAAW,CAAC,eAAgB,CAAC,UAC7C,CAACA,IAGH5Q,qBAAU,WACR,IAAK,IAAI3P,KAASwvB,EACZA,EAAWxvB,GAAOyvB,cAAgBzmB,SAAShJ,GAAS,GACtDgM,EACEmX,aAAY,2BAELqM,EAAWxvB,IAFP,IAGPyvB,YAAazmB,SAAShJ,GAAS,KAEjC,MAKP,CAACugB,EAAU3jB,SAEd,IAAM8yB,EAAoB5mB,uBAAY,WACpC4e,GAAY,SAACiI,GAAD,OAAeA,OAC1B,CAACjI,IACEkI,EAAoB9mB,uBACxB,SAACwX,GAAU,IAAD,WACCtgB,GACP,IAAMqW,EAAQkK,EAAUrH,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,IAAM+V,EAAKtgB,GAAOuK,MAC1D8L,GAASA,EAAMoZ,cAAgBzmB,SAAShJ,GAAS,GACnDgM,EACEmX,aAAY,2BAEL9M,GAFI,IAGPoZ,YAAazmB,SAAShJ,GAAS,KAEjC,KATR,IAAK,IAAIA,KAASsgB,EAAO,EAAhBtgB,KAeX,CAACugB,EAAWvU,IAER6jB,EAAc/mB,uBAClB,SAACyB,EAAIulB,GACH,IAAMzZ,EAAQkK,EAAUrH,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,KAAOA,KACnDyB,EACEmX,aAAY,2BACP9M,GADM,kBAERyZ,EAAQzZ,EAAMyZ,GAAS,EAAI,QAIlC,CAACvP,EAAWvU,IAER+jB,EAAcjnB,uBAClB,SAACuN,GACCrK,EAAS0K,aAAgBL,IACzBrK,EAAS8U,YAAatJ,IAAWC,YAEnC,CAACzL,IAEGgkB,EAAalnB,uBACjB,SAACuN,EAAOsB,GACNoH,EAAsB1I,EAAM9L,GAAIoN,KAElC,CAACoH,IAEGkR,EAAYnnB,uBAAY,SAACmO,EAAM/P,GACnC,OAAIA,IAASgP,IAAW6C,QAA+C,IAArC9B,EAAKiZ,QAAQd,EAAK7kB,GAAG2M,YAC9CD,EAAKkZ,MAAMf,EAAK7kB,GAAG2M,WAAWta,OAAS,GACzCqa,IACN,IAEH,OACE,cAACrN,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,eAAC8lB,GAAA,EAAD,WACE,cAACtB,GAAD,CACEvhB,MAAOA,EACP8iB,OACE,eAACzmB,EAAA,EAAD,CAAKC,QAAQ,OAAb,UACGylB,EACC,cAAC,GAAD,CAAa7J,GAAI,EAAjB,SACG6J,EAAQlZ,KAAI,SAACia,EAAQrwB,GAAT,OACX,cAAC6uB,GAAD,CAEE1kB,QAASkmB,EAAOlmB,QAChBoP,KAAK,QACL+W,UAAW,cAACC,GAAA,EAAD,IACXxiB,QAAS,cAAC,KAAD,CAAiBie,KAAMqE,EAAOrE,KAAMzS,KAAK,OAClDlP,QAAQ,YALHrK,QAUX,6BAEF,cAACqL,EAAA,EAAD,CACElB,QAASulB,EACTjC,UAAWC,aAAKyB,EAAQjB,OAAT,eACZiB,EAAQT,WAAajH,IAH1B,SAME,cAACI,GAAA,EAAD,WAKR,cAAC2I,GAAA,EAAD,CAAUC,GAAIhJ,EAAd,SACE,eAACuH,GAAD,WACE,cAAC,iBAAD,CACE1O,KAAMkP,EACNkB,QAASd,EACTe,UAAW,IACXC,SAAU,SAACvO,GAAD,OAASzR,QAAQC,IAAIwR,IAC/B3T,SAAU,SAAC2T,GAAD,OAASzR,QAAQC,IAAIwR,IAC/BwO,MAAOtB,EANT,SAQGC,EAAWpZ,KAAI,SAACJ,GAAD,OACd,cAAC,GAAD,CACEoD,KAAM6W,EAAUja,EAAK1H,WAAW2I,KAAMjB,EAAKC,YAC3CK,cAAeN,EAAKM,cACpBiB,aAAcvB,EAAKuB,aAEnBiV,cAAe,kBAAMqD,EAAY7Z,EAAKzL,GAAI,kBAC1CkiB,aAAc,kBAAMoD,EAAY7Z,EAAKzL,GAAI,iBACzCmiB,SAAUjM,GAAgBA,EAAalW,KAAOyL,EAAKzL,GACnDqiB,QAAS9N,EAAiB9I,EAAKzL,IAC/BmE,SAAU,kBAAMqhB,EAAY/Z,IAC5BrH,QAAS,SAACgJ,GAAD,OAAUqY,EAAWha,EAAM2B,IACpCgV,YAAaA,GAPR3W,EAAKzL,SAWfid,a,kICjNPtd,GAAS/B,YAAO0e,KAAV,8EAAG1e,CAAkB+C,KAE3B4lB,GAAuB3oB,YAAO4oB,MAAV,4FAAG5oB,CAAH,8DAMpB6oB,GAAiB7oB,YAAO8oB,MAAV,sFAAG9oB,CAAH,qDAId+oB,GAAqB/oB,YAAOgpB,MAAV,0FAAGhpB,CAAH,qBAGlBipB,GAAYjpB,IAAOkJ,IAAV,iFAAGlJ,CAAH,kEAuDAkpB,GAhDStmB,IAAMC,MAAK,SAACW,GAClC,IAD4C,EAElBG,mBADb,IAD+B,mBAErCwlB,EAFqC,KAE9BC,EAF8B,KAGpCC,EAA2C7lB,EAA3C6lB,WAAYvJ,EAA+Btc,EAA/Bsc,SAAU/kB,EAAqByI,EAArBzI,KAAMuuB,EAAe9lB,EAAf8lB,WAKpC,OACE,eAACtJ,GAAA,EAAD,CAAQxC,kBAAgB,oBAAoBziB,KAAMA,EAAM0F,QAASqf,EAAjE,UACE,cAACK,GAAA,EAAD,CAAa/d,GAAG,oBAAhB,+BACA,cAAC2e,GAAA,EAAD,CAAeC,UAAQ,EAAC5e,GAAG,4BAA3B,SACE,cAACumB,GAAD,CACEY,WAAYJ,EACZK,KATa,WACnBJ,EAASD,EALE,KAcLM,QAASN,EAAQE,EAAW50B,OAC5Bi1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,4BALnB,SAOE,cAACf,GAAD,CAAgBgB,WAAY,IAAKC,KAAM,EAAvC,SACGT,EAAWrB,MAAM,EAAGmB,GAAOlb,KAAI,SAAC8b,GAAD,OAC9B,eAAChB,GAAD,CAEEe,KAAM,EACN9nB,QAAS,kBAAMsnB,EAAWS,IAH5B,UAKE,cAACd,GAAD,CACEljB,IAAG,UAAKgG,KAAOC,UAAZ,kBAA+B+d,EAAU3nB,GAAzC,gBACH4nB,IAAKD,EAAUE,mBAEjB,cAACC,GAAA,EAAD,CACE9kB,MAAO2kB,EAAUI,UACjBC,SAAUL,EAAUE,qBAVjBF,EAAU3nB,aAiBzB,cAAC6e,GAAA,EAAD,UACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,4B,UC5DFmK,GAAS/B,YAAO0e,KAAV,0EAAG1e,CAAkB+C,KAE3B4lB,GAAuB3oB,YAAO4oB,MAAV,wFAAG5oB,CAAH,8DAMpB6oB,GAAiB7oB,YAAO8oB,MAAV,kFAAG9oB,CAAH,qDAId+oB,GAAqB/oB,YAAOgpB,MAAV,sFAAGhpB,CAAH,qBAGlBqqB,GAAsBrqB,YAAO+gB,MAAV,uFAAG/gB,CAAH,kBAGnBipB,GAAYjpB,IAAOkJ,IAAV,6EAAGlJ,CAAH,kEAOTsqB,GAAc,SAAC9mB,GACnB,IAD6B,EAEHG,mBADb,IADgB,mBAEtBwlB,EAFsB,KAEfC,EAFe,OAGDzlB,mBAAS,IAHR,mBAGtB4mB,EAHsB,KAGdC,EAHc,KAIrBC,EAAwCjnB,EAAxCinB,OAAQ3K,EAAgCtc,EAAhCsc,SAAU/kB,EAAsByI,EAAtBzI,KAAM2vB,EAAgBlnB,EAAhBknB,YAM1BC,EAAiBF,EAAO7c,QAC5B,SAACC,GAAD,OACEA,EAAKiB,KAAK3G,cAAcC,SAASmiB,EAAOpiB,gBACxC0F,EAAK+c,YAAYziB,cAAcC,SAASmiB,EAAOpiB,kBAGnD,OACE,eAAC6X,GAAA,EAAD,CAAQxC,kBAAgB,cAAcziB,KAAMA,EAAM0F,QAASqf,EAA3D,UACE,cAACK,GAAA,EAAD,CAAa/d,GAAG,cAAhB,0BACA,eAACioB,GAAD,CAAqBrJ,UAAQ,EAA7B,UACE,cAACvf,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC0oB,GAAA,EAAD,CAAW9pB,MAAOwpB,EAAQloB,SAAU,SAACtB,GAAD,OAAWypB,EAAUzpB,QAE3D,cAACU,EAAA,EAAD,CAAKW,GAAG,uBAAuB0oB,SAAS,OAAOl1B,OAAO,OAAtD,SACE,cAAC,GAAD,CACE2zB,WAAYJ,EACZK,KApBW,WACnBJ,EAASD,EANE,KA0BHM,QAASN,EAAQwB,EAAel2B,OAChCi1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,uBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGa,EAAe3C,MAAM,EAAGmB,GAAOlb,KAAI,SAACuH,GAAD,OAClC,eAAC,GAAD,CAEEsU,KAAM,EACN9nB,QAAS,kBAAM0oB,EAAYlV,IAH7B,UAKE,cAAC,GAAD,CACEzP,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBwJ,EAAMuV,eAClCf,IAAKxU,EAAM1G,OAEb,cAACob,GAAA,EAAD,CACE9kB,MAAOoQ,EAAM1G,KACbsb,SAAU5U,EAAMoV,gBAVbpV,EAAMpT,gBAkBvB,cAAC6e,GAAA,EAAD,UACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,0BAQOgL,OAAMC,KAAKynB,I,sBClFpBvoB,GAAS/B,YAAO0e,KAAV,wEAAG1e,CAAkB+C,KAC3Bd,GAAajC,YAAO8C,KAAV,4EAAG9C,CAAsB+C,KAEnC4lB,GAAuB3oB,YAAO4oB,MAAV,sFAAG5oB,CAAH,8DAMpB6oB,GAAiB7oB,YAAO8oB,MAAV,gFAAG9oB,CAAH,qDAId+oB,GAAqB/oB,YAAOgpB,MAAV,oFAAGhpB,CAAH,qBAGlBqqB,GAAsBrqB,YAAO+gB,MAAV,qFAAG/gB,CAAH,kBAGnBipB,GAAYjpB,IAAOkJ,IAAV,2EAAGlJ,CAAH,kEAOTgrB,GAAazrB,YAAW,CAC5B0rB,UAAW,CACTvpB,QAAS,OACTG,eAAgB,SAChBnC,gBAAiB,cACjB,WAAY,CACVwgB,SAAU,GACVvqB,MAAO,OACP+J,gBAAiB,aARJH,EAWhB,SAACiE,GAAD,OAAW,cAAC0nB,GAAA,EAAD,2BAAU1nB,GAAV,IAAiB2nB,kBAAmB,CAAEvN,SAAU,gCAExDwN,GAAY7rB,aAAW,SAACC,GAAD,MAAY,CACvC6rB,KAAM,CACJC,cAAe,OACf1zB,MAAO,OACP2zB,WAAY/rB,EAAMgsB,WAAWC,kBAC7B7rB,SAAU,OACV8rB,YAAa,EACbC,QAAS,UACTC,SAAU,GACV,UAAW,CACTxf,QAAS,OAVG7M,EAad,SAACiE,GAAD,OAAW,cAACqoB,GAAA,EAAD,aAAKC,eAAa,GAAKtoB,OAEhCuoB,GAAW,SAACvoB,GAAW,IACnBoa,EAAqCpa,EAArCoa,SAAU7c,EAA2ByC,EAA3BzC,MAAOlJ,EAAoB2L,EAApB3L,MAAUm0B,EADT,aACmBxoB,EADnB,8BAG1B,OACE,6CACEyoB,KAAK,WACLC,OAAQnrB,IAAUlJ,EAClBuK,GAAE,wBAAmBvK,GACrB2lB,kBAAA,mBAA6B3lB,IACzBm0B,GALN,aAOGjrB,IAAUlJ,GAAS,mCAAG+lB,QAK7B,SAASuO,GAAUt0B,GACjB,MAAO,CACLuK,GAAG,YAAD,OAAcvK,GAChB,gBAAgB,iBAAhB,OAAkCA,IAItC,IAAMu0B,GAAa,SAAC5oB,GAClB,IAD4B,EAEMG,mBADrB,IADe,mBAErB0oB,EAFqB,KAEVC,EAFU,OAGM3oB,mBAFrB,IADe,mBAGrB4oB,EAHqB,KAGVC,EAHU,OAII7oB,mBAAS,GAJb,mBAIrB8oB,EAJqB,KAIXC,EAJW,OAKA/oB,mBAAS,IALT,mBAKrB4mB,EALqB,KAKbC,EALa,KAMpBmC,EAAsCnpB,EAAtCmpB,MAAO7M,EAA+Btc,EAA/Bsc,SAAU/kB,EAAqByI,EAArBzI,KAAM6xB,EAAeppB,EAAfopB,WAazBC,EAAgBF,EAAM/e,QAC1B,SAACC,GAAD,OACEA,EAAKiB,KAAK3G,cAAcC,SAASmiB,EAAOpiB,gBAC1B,SAAd0F,EAAK9O,QAEH+tB,EAAgBH,EAAM/e,QAC1B,SAACC,GAAD,OACEA,EAAKiB,KAAK3G,cAAcC,SAASmiB,EAAOpiB,gBAC1B,SAAd0F,EAAK9O,QAGT,OACE,eAACihB,GAAA,EAAD,CAAQxC,kBAAgB,aAAaziB,KAAMA,EAAM0F,QAASqf,EAA1D,UACE,cAACK,GAAA,EAAD,CAAa/d,GAAG,aAAhB,SACE,eAACX,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,MAAMG,WAAW,SAAnD,UACE,cAAC,GAAD,CAAYI,QAAQ,KAAKob,GAAI,EAA7B,qBAGA,eAAC0N,GAAD,CACEjqB,MAAO0rB,EACPpqB,SAzBc,SAACzB,EAAOmsB,GAC9BL,EAAYK,GACZvC,EAAU,KAwBFvlB,aAAW,WAHb,UAKE,cAACmmB,GAAD,aAAWnO,MAAM,QAAWkP,GAAU,KACtC,cAACf,GAAD,aAAWnO,MAAM,QAAWkP,GAAU,aAI5C,eAAC,GAAD,CAAqBnL,UAAQ,EAA7B,UACE,cAACvf,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC0oB,GAAA,EAAD,CAAW9pB,MAAOwpB,EAAQloB,SAAU,SAACtB,GAAD,OAAWypB,EAAUzpB,QAE3D,cAAC,GAAD,CAAUA,MAAO0rB,EAAU50B,MAAO,EAAlC,SACE,cAAC4J,EAAA,EAAD,CAAKW,GAAG,sBAAsB0oB,SAAS,OAAOl1B,OAAO,OAArD,SACE,cAAC,GAAD,CACE2zB,WAAY8C,EACZ7C,KA/Ca,WACvB8C,EAAaD,EARF,KAuDD5C,QAAS4C,EAAYQ,EAAcp4B,OACnCi1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACG+C,EAAc7E,MAAM,EAAGqE,GAAWpe,KAAI,SAAC+e,GAAD,OACrC,eAAC,GAAD,CAEElD,KAAM,EACN9nB,QAAS,kBAAM4qB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEjnB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBghB,EAAKC,cACjCjD,IAAKgD,EAAKle,OAEZ,cAACob,GAAA,EAAD,CAAiB9kB,MAAO4nB,EAAKle,SARxBke,EAAK5qB,eAetB,cAAC,GAAD,CAAUrB,MAAO0rB,EAAU50B,MAAO,EAAlC,SACE,cAAC4J,EAAA,EAAD,CAAKW,GAAG,sBAAsB0oB,SAAS,OAAOl1B,OAAO,OAArD,SACE,cAAC,GAAD,CACE2zB,WAAYgD,EACZ/C,KAvEa,WACvBgD,EAAaD,EAXF,KAkFD9C,QAAS8C,EAAYO,EAAcr4B,OACnCi1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,sBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGgD,EAAc9E,MAAM,EAAGuE,GAAWte,KAAI,SAAC+e,GAAD,OACrC,eAAC,GAAD,CAEElD,KAAM,EACN9nB,QAAS,kBAAM4qB,EAAWI,IAH5B,UAKE,cAAC,GAAD,CACEjnB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBghB,EAAKC,cACjCjD,IAAKgD,EAAKle,OAEZ,cAACob,GAAA,EAAD,CAAiB9kB,MAAO4nB,EAAKle,SARxBke,EAAK5qB,kBAgBxB,cAAC6e,GAAA,EAAD,UACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,0BAQOgL,OAAMC,KAAKupB,IC3MpBrqB,GAAS/B,YAAO0e,KAAV,4EAAG1e,CAAkB+C,KA4BlBmqB,GA1BOtqB,IAAMC,MAAK,SAACW,GAAW,IACnCyN,EAAoCzN,EAApCyN,KAAMlW,EAA8ByI,EAA9BzI,KAAM+kB,EAAwBtc,EAAxBsc,SAAUqN,EAAc3pB,EAAd2pB,UAE9B,OACE,eAACnN,GAAA,EAAD,CAAQxC,kBAAgB,gBAAgBziB,KAAMA,EAA9C,UACE,cAAColB,GAAA,EAAD,CAAa/d,GAAG,gBAAhB,qBACA,cAAC2e,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAAC/e,EAAA,EAAD,CAAYC,QAAQ,QAApB,SAA6B+O,MAE/B,eAACgQ,GAAA,EAAD,WACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,UAAjC,oBAGA,cAAC,GAAD,CACEoK,QAASmrB,EACTv1B,MAAM,UACNsK,QAAQ,WACRS,WAAS,EAJX,8BCfFZ,GAAS/B,YAAO0e,KAAV,sEAAG1e,CAAkB+C,KAC3BqqB,GAAcptB,YAAOyB,KAAV,2EAAGzB,CAAH,qBAIXqtB,GAAc,SAAC7pB,GAAW,IACtByN,EAA4BzN,EAA5ByN,KAAMlW,EAAsByI,EAAtBzI,KAAMuyB,EAAgB9pB,EAAhB8pB,MAAOC,EAAS/pB,EAAT+pB,KAE3B,OACE,eAACvN,GAAA,EAAD,CAAQxC,kBAAgB,gBAAgBziB,KAAMA,EAA9C,UACE,cAAColB,GAAA,EAAD,CAAa/d,GAAG,gBAAhB,qBACA,cAAC2e,GAAA,EAAD,CAAeC,UAAQ,EAAvB,SACE,cAACoM,GAAD,UAAcnc,MAEhB,eAACgQ,GAAA,EAAD,WACE,cAAC,GAAD,CAAQjf,QAASsrB,EAAO11B,MAAM,YAAYsK,QAAQ,WAAWS,WAAS,EAAtE,iBAGA,cAAC,GAAD,CAAQX,QAASurB,EAAM31B,MAAM,UAAUsK,QAAQ,WAA/C,uBAQOU,OAAMC,KAAKwqB,I,kDCNpBtrB,GAAS/B,YAAO0e,KAAV,uEAAG1e,CAAkB+C,KAE3B4lB,GAAuB3oB,YAAO4oB,MAAV,qFAAG5oB,CAAH,8DAMpB6oB,GAAiB7oB,YAAO8oB,MAAV,+EAAG9oB,CAAH,qDAId+oB,GAAqB/oB,YAAOgpB,MAAV,mFAAGhpB,CAAH,qBAGlBqqB,GAAsBrqB,YAAO+gB,MAAV,oFAAG/gB,CAAH,kBAGnBipB,GAAYjpB,IAAOkJ,IAAV,0EAAGlJ,CAAH,kEAMTwtB,GAAextB,YAAOkD,KAAV,6EAAGlD,CAAH,iBAIZytB,GAAe,SAACjqB,GACpB,IACMK,EAAWC,cACXmjB,EAAOjjB,aAAY,SAACC,GAAD,OAAWA,EAAMijB,YAAYD,QAChDtP,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAJnC,EAKc1D,mBAAS,MALvB,mBAKvB+pB,EALuB,KAKPC,EALO,OAMoBhqB,mBAAS,IAN7B,mBAMvBiqB,EANuB,KAMJC,EANI,OAQJlqB,mBAPb,IADiB,mBAQvBwlB,EARuB,KAQhBC,EARgB,OASJzlB,mBAAS,IATL,mBASvBmqB,EATuB,KAShBC,EATgB,OAUQpqB,mBAAS,GAVjB,mBAUvBqqB,EAVuB,KAUVC,EAVU,KAWtBC,EAA0C1qB,EAA1C0qB,QAASpO,EAAiCtc,EAAjCsc,SAAU/kB,EAAuByI,EAAvBzI,KAAMozB,EAAiB3qB,EAAjB2qB,aAE3BC,EAAeztB,uBAAY,WAC/ByoB,EAASD,EAbE,MAcV,CAACC,EAAUD,IACRkF,EAAsB1tB,uBAC1B,SAAC2tB,GACC,IAAIC,EAAOD,EAAUE,UACnBF,EAAUG,YAAY,YAAc,WAAWh6B,OAC/C65B,EAAUG,YAAY,MAExB,OAAyC,IAArCF,EAAKxG,QAAQd,EAAK7kB,GAAG2M,YAChBwf,EAAKvG,MAAMf,EAAK7kB,GAAG2M,WAAWta,OAAS,GACzC85B,IAET,CAACtH,EAAK7kB,KAEFssB,EAAuB/tB,uBAC3B,SAACguB,GACCZ,EAASY,GACTlmB,QAAQC,IAAIimB,KAEd,CAACZ,IAEGa,EAAoBjuB,uBAAY,WACpC8H,QAAQC,IAAIolB,GACZjqB,EAASgrB,aAAY5H,EAAK7kB,GAAIuV,EAAcvV,GAAI0rB,IAChDC,EAAS,IACTE,EAAeD,EAAc,KAC5B,CACDnqB,EACAojB,EAAK7kB,GACLuV,EAAcvV,GACd0rB,EACAC,EACAC,EACAC,IAEIa,EAA0BnuB,uBAC9B,SAACC,EAAOmuB,GACNnuB,EAAMgkB,kBACNhkB,EAAMikB,YAAYC,2BAClB6I,EAAkBoB,KAEpB,CAACpB,IAEGqB,EAA4BruB,sBAAW,sBAAC,4BAAAqH,EAAA,6DAC5CS,QAAQC,IAAI,aAAcglB,GADkB,kBAGtBuB,KAAcC,wBAChCxB,EAAetrB,IAJyB,QAGtC+sB,EAHsC,QAM9B16B,OACVo5B,EAAqBsB,IAErBtrB,EAASurB,aAAa1B,GAAgB,IACtCC,EAAkB,OAVsB,gDAa1C9pB,EAASwrB,aAAW,CAAEC,QAAS,KAAIA,WACnC3B,EAAkB,MAdwB,yDAgB3C,CAAC9pB,EAAU6pB,EAAgBG,EAAsBF,IAE9C4B,EAA4B5uB,uBAChC,WAA2B,IAA1B6uB,IAAyB,yDACpBA,IACF3rB,EAAS4rB,aAA2B/B,EAAetrB,KACnDyB,EAAS0K,aAAgB,QAE3B1K,EAASurB,aAAa1B,EAAgB8B,IACtC7B,EAAkB,MAClBE,EAAqB,MAEvB,CAAChqB,EAAU6pB,EAAgBC,EAAmBE,IAGhD,OACE,eAAC7N,GAAA,EAAD,CAAQxC,kBAAgB,eAAeziB,KAAMA,EAAM0F,QAASqf,EAA5D,UACE,cAACK,GAAA,EAAD,CAAa/d,GAAG,eAAhB,wBACA,eAAC,GAAD,CAAqB4e,UAAQ,EAA7B,UACE,cAAC,KAAD,CACE3e,SAAUqsB,EACV3tB,MAAO+sB,EACP4B,wBAAwB,EACxBC,eAAe,EACfC,SAAU,IACL5B,GAENF,EAAMr5B,OACL,cAACgN,EAAA,EAAD,CAAKouB,GAAI,EAAGl6B,MAAM,OAAO+L,QAAQ,OAAOG,eAAe,SAAvD,SACE,cAAC,GAAD,CACEK,QAAQ,YACRtK,MAAM,UACNoK,QAAS4sB,EAHX,sCASF,6BAEF,cAACntB,EAAA,EAAD,CAAKW,GAAG,wBAAwB0oB,SAAS,OAAOl1B,OAAO,OAAOi6B,GAAI,EAAlE,SACE,cAAC,GAAD,CACEtG,WAAYJ,EACZK,KAAM4E,EACN3E,QAASN,EAAQ+E,EAAQz5B,OACzBi1B,OAAQ,cAACC,GAAA,EAAD,IACRC,iBAAiB,wBALnB,SAOE,cAAC,GAAD,CAAgBC,WAAY,IAAKC,KAAM,EAAvC,SACGoE,EAAQlG,MAAM,EAAGmB,GAAOlb,KAAI,SAAC8gB,GAAD,OAC3B,eAAC,GAAD,CAEEjF,KAAM,EACN9nB,QAAS,kBAAMmsB,EAAaY,IAH9B,UAKE,cAAC,GAAD,CACEhpB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyB+iB,EAAWT,WACvCtE,IAAKqE,EAAoBU,EAAWT,aAEtC,cAACpE,GAAA,EAAD,CACE9kB,MAAOipB,EAAoBU,EAAWT,WACtCwB,WACE,cAACtC,GAAD,CACExrB,QAAS,SAACpB,GAAD,OACPkuB,EAAwBluB,EAAOmuB,IAFnC,SAKE,cAACgB,GAAA,EAAD,UAhBDhB,EAAW3sB,gBA0B5B,cAAC6e,GAAA,EAAD,UACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,sBAIF,cAAC,GAAD,CACEqZ,KACEyc,EAAc,kCACiBW,EACzBX,EAAeY,WAFP,MAIV,GAENvzB,OAAQ2yB,EACR5N,SAAU,kBAAM6N,EAAkB,OAClCR,UAAW6B,IAEb,cAAC,GAAD,CACE/d,KACE2c,EAAkBn5B,OAChB,oFAEE,6BACGm5B,EAAkB3f,KAAI,SAACJ,EAAMhW,GAAP,OACrB,6BAAiBgW,EAAKiB,MAAbjX,QAJf,wCAUA,GAGJkD,OAAQ6yB,EAAkBn5B,OAC1B64B,MAAO,kBAAMiC,GAA0B,IACvChC,KAAM,kBAAMgC,GAA0B,UAM/B3sB,OAAMC,KAAK4qB,I,iCCpPpBuC,GAAShwB,YAAOiwB,MAAV,wEAAGjwB,CAAkB+C,KAE3BmtB,GAAelwB,YAAOgwB,IAAV,8EAAGhwB,CAAH,yEAOZmwB,GAAYnwB,IAAOkJ,IAAV,2EAAGlJ,CAAH,mCAyCAowB,GApCI,SAAC5sB,GAAW,IACrByU,EAA8BzU,EAA9ByU,SAAUlX,EAAoByC,EAApBzC,MAAOsB,EAAamB,EAAbnB,SAEzB,OACE,cAAC6tB,GAAD,CACEG,QAAQ,oBACRjuB,GAAG,uBACHrB,MAAOA,EACPsB,SAAUA,EACV4a,MAAM,OACN9a,GAAI,EACJmuB,YAAa,SAACluB,GACZ,IAAM4O,EAAOiH,EAASlH,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,KAAOA,KACjD,OAAK4O,EAIH,cAACmf,GAAD,CACEpqB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBgF,EAAKuf,cACjCvG,IAAKhZ,EAAKE,YALL,oDAVb,SAoBG+G,EAAShK,KAAI,SAAC+C,GAAD,OACZ,cAACwf,GAAA,EAAD,CAAUzvB,MAAOiQ,EAAK5O,GAAtB,SACE,cAAC+tB,GAAD,CACEpqB,IAAG,UAAKgG,KAAOC,UAAZ,YAAyBgF,EAAKuf,cACjCvG,IAAKhZ,EAAKE,aAHiBF,EAAK5O,UCnBtCL,GAAS/B,YAAO0e,KAAV,yEAAG1e,CAAkB+C,KAC3Bkb,GAAYje,YAAOywB,MAAV,4EAAGzwB,CAAqB+C,KACjCd,GAAajC,YAAO8C,KAAV,6EAAG9C,CAAsB+C,KACnC2tB,GAAmB1wB,YAAOie,IAAV,mFAAGje,CAAH,uCAKhB2wB,GAAqB3wB,YAAOyB,KAAV,qFAAGzB,CAAH,oCAEP,SAACwD,GAAD,OAAWA,EAAMotB,aAE5BC,GAAc7wB,YAAOyB,KAAV,8EAAGzB,CAAH,uIACN,SAACwD,GAAD,OAAWA,EAAM5L,SACG,SAAC4L,GAAD,OAAWA,EAAMkJ,UACjB,SAAClJ,GAAD,OAAWA,EAAM8N,UACjC,SAAC9N,GAAD,OAAWA,EAAM4N,QACf,SAAC5N,GAAD,OAAWA,EAAMwN,QACZ,SAACxN,GAAD,OAAWA,EAAMstB,UAGjCC,GAAYnuB,IAAMC,MAAK,SAACW,GAAW,IAErCyU,EAQEzU,EARFyU,SACA+G,EAOExb,EAPFwb,OACAE,EAME1b,EANF0b,WACAC,EAKE3b,EALF2b,aACAF,EAIEzb,EAJFyb,cACAG,EAGE5b,EAHF4b,QACA7P,EAEE/L,EAFF+L,OACAyhB,EACExtB,EADFwtB,UAEIntB,EAAWC,cACX8L,EAAiB5L,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYrI,cAyBhE,OATArI,qBAAU,WACR,IAfgBkI,EAAYC,EAexBqB,EAAOiH,EAASxjB,OAChBwjB,EAASlH,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,KAAOmN,EAAOyB,QAC3C,KACAA,IAASpB,EAAexH,SAAS4I,EAAKE,aAlB1BxB,EAmBLsB,EAAKE,UAnBYvB,EAmBlB,cAAwB5D,KAAOC,UAA/B,YAA4CgF,EAAKG,UAAjD,KAlBO,IAAIjB,SAASR,EAAYC,GAEvCjU,OACAyU,MAAK,SAAUC,GACdhT,SAASiT,MAAMC,IAAIF,GACnBvM,EAASuX,aAAuB1L,OAEjCa,OAAM,SAAUC,GAEf/H,QAAQgI,KAAKD,EAAOd,SAWvB,CAACH,EAAOyB,OAGT,qCACE,cAAC0f,GAAD,CACE5hB,KAAK,OACLmO,MAAM,OACNgU,YAAY,kBACZ/uB,QAAQ,WACRnB,MAAOwO,EAAO0B,KACdT,MAAOpP,QAAQge,EAAQnO,MAAQ+N,EAAO/N,MACtCmN,WAAYgB,EAAQnO,MAAQ+N,EAAO/N,KACnC6M,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,GAEVxuB,WAAW,IAEb,eAACyuB,GAAA,EAAD,CAAalvB,QAAQ,WAArB,UACE,cAACmvB,GAAA,EAAD,CAAYjvB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACErB,MAAOwO,EAAOyB,KACd3O,SAAU,SAAC+H,GAAD,OAAO6U,EAAc,OAAQ7U,EAAEtJ,OAAOC,QAChDkX,SAAUA,OAGd,eAAC8E,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,YACNlE,IAAK,EACLxR,IAAK,GACLxG,MAAOwO,EAAO6B,KACd8L,SAAU,SAACnc,GAAD,OAAWke,EAAc,OAAQle,QAG/C,cAACgc,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACne,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,wBAGA,cAAC,GAAD,CACEvc,MAAOwO,EAAO3X,MACdyK,SAAU,SAACzK,GAAD,OAAWqnB,EAAc,QAASrnB,IAC5CumB,cAAe,SAACvmB,GAAD,OAAWqnB,EAAc,QAASrnB,IACjD4Y,MAAOpP,QAAQ4d,EAAOpnB,OACtBwmB,WAAYY,EAAOpnB,gBAM3B,eAACmlB,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,eACNlE,IAAK,EACLxR,IAAK,GACLxG,MAAOwO,EAAO7C,OACdwQ,SAAU,SAACnc,GAAD,OAAWke,EAAc,SAAUle,QAGjD,cAACgc,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,eAACne,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdG,WAAW,SACXD,eAAe,gBAJjB,UAME,cAAC,GAAD,CAAYK,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,0BAGA,cAAC,GAAD,CACEvc,MAAOwO,EAAO+B,OACdjP,SAAU,SAACzK,GAAD,OAAWqnB,EAAc,SAAUrnB,IAC7CumB,cAAe,SAACvmB,GAAD,OAAWqnB,EAAc,SAAUrnB,IAClD4Y,MAAOpP,QAAQ4d,EAAO1N,QACtB8M,WAAYY,EAAO1N,iBAM3B,cAACyL,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,SACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,GAAIuC,GAAI,EAAvB,SACE,cAAC,GAAD,CACE3C,MAAM,WACNlE,KAAM,IACNxR,IAAK,IACLxG,MAAOwO,EAAO5E,SACduS,SAAU,SAACnc,GAAD,OAAWke,EAAc,WAAYle,UAIrD,cAAC4vB,GAAD,CACEh7B,MAAM,OACNC,OAAO,QACP+tB,GAAI,EACJjiB,QAAQ,OACRG,eAAe,SACfC,WAAW,SACX8uB,UAAWI,EAPb,SASE,cAACH,GAAD,CACEj5B,MAAO2X,EAAO3X,MACd8U,OAAQ6C,EAAO7C,OACf4E,OAAQ/B,EAAO+B,OACfF,KAAM7B,EAAO6B,KACb0f,OAAQvhB,EAAO5E,SACfqG,KAAMiH,EAASlH,MAAK,SAAClD,GAAD,OAAUA,EAAKzL,KAAOmN,EAAOyB,QAAME,UANzD,SAQG3B,EAAO0B,eAOZqgB,GAAa,SAAC9tB,GAAW,IAE3ByU,EAOEzU,EAPFyU,SACA6H,EAMEtc,EANFsc,SACA/kB,EAKEyI,EALFzI,KACAi2B,EAIExtB,EAJFwtB,UACAO,EAGE/tB,EAHF+tB,aACAC,EAEEhuB,EAFFguB,mBACAC,EACEjuB,EADFiuB,SAGF,OACE,eAACzR,GAAA,EAAD,CAAQxC,kBAAgB,oBAAoBziB,KAAMA,EAAM0F,QAASqf,EAAjE,UACE,cAACK,GAAA,EAAD,CAAa/d,GAAG,oBAAhB,yBACA,cAAC,KAAD,CACEge,cAAe,CACbnP,KAAM,GACND,KAAM,EACNI,KAAM,GACNxZ,MAAO25B,GAAgB,UACvB7kB,OAAQ,EACR4E,OAAQkgB,GAAsB,UAC9B7mB,SAAU,GAEZ0V,iBAAkBC,OAAa9K,MAAM,CACnCvE,KAAMqP,OAAaoR,SAAS,YAC5B95B,MAAO0oB,OACJC,WACAC,KAAK,mBAAoB,yBAA0BC,MACtDnP,OAAQgP,OACLC,WACAC,KAAK,mBAAoB,yBAA0BC,QAExDC,SAAU,SAACnR,GAET,OADA9G,QAAQC,IAAI6G,GACL,IAEToR,SAAU8Q,EAvBZ,SAyBG,SAAC7Q,GAAD,OACC,eAAC,KAAD,CAAMD,SAAUC,EAAUC,aAA1B,UACE,cAACE,GAAA,EAAD,CAAeC,UAAQ,EAAC5e,GAAG,6BAA3B,SACE,cAAC2uB,GAAD,2BACMnQ,GADN,IAEE3I,SAAUA,EACV+Y,UAAWA,OAGf,eAAC/P,GAAA,EAAD,WACE,cAAC,GAAD,CAAQjf,QAAS8d,EAAUloB,MAAM,YAAjC,oBAGA,cAAC,GAAD,CACEmH,KAAK,SACLnH,MAAM,UACNsK,QAAQ,WACRuD,SAAUmb,EAAUM,aAJtB,iCAgBCte,OAAMC,KAAKyuB,ICvOpBK,GAAU3xB,YAAO4xB,MAAV,yEAAG5xB,CAAmB+C,KAC7BK,GAAUpD,YAAOyB,KAAV,yEAAGzB,CAAH,iDAIP6xB,GAAc7xB,YAAOyB,KAAV,6EAAGzB,CAAH,wDAKX8xB,GAAa9xB,YAAOwwB,MAAV,4EAAGxwB,CAAH,gFAIM,SAACwD,GAAD,MACD,SAAjBA,EAAM0gB,OAAoB,4BAA8B,UAGtD6N,GAAwB/xB,YAAOuiB,MAAV,uFAAGviB,CAAH,oBACZ,SAACwD,GAAD,MACS,SAApBA,EAAMwuB,UAAuB,0BAA4B,UAGvDC,GAAQ,CACZ,CACElxB,MAAOsO,IAAWC,QAClB2N,MAAO,eACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMqO,QAErC,CACEnxB,MAAOsO,IAAWwE,QAClBoJ,MAAO,eACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMsO,QAErC,CACEpxB,MAAOsO,IAAWsE,KAClBsJ,MAAO,YACP4G,KAAM,cAAC,KAAD,KAER,CACE9iB,MAAOsO,IAAWuE,IAClBqJ,MAAO,aACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMuO,QAErC,CACErxB,MAAOsO,IAAW8D,KAClB8J,MAAO,iBACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMwO,QAErC,CACEtxB,MAAOsO,IAAW+D,OAClB6J,MAAO,cACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMyO,QAErC,CACEvxB,MAAOsO,IAAWsD,QAClBsK,MAAO,eACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMyO,KAAUN,UAAU,UAEzD,CACEjxB,MAAOsO,IAAWgE,KAClB4J,MAAO,YACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAM0O,QAErC,CACExxB,MAAOsO,IAAWiE,KAClB2J,MAAO,YACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAM2O,QAErC,CACEzxB,MAAOsO,IAAWkE,eAClB0J,MAAO,uBACP4G,KAAM,cAAC,KAAD,CAAazS,KAAM,MAE3B,CACErQ,MAAOsO,IAAWoE,MAClBwJ,MAAO,aACP4G,KAAM,cAAC,KAAD,CAAWjkB,SAAS,WAE5B,CACEmB,MAAOsO,IAAWqE,IAClBuJ,MAAO,WACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAM4O,QAErC,CACE1xB,MAAOsO,IAAW0E,MAClBkJ,MAAO,aACP4G,KAAM,cAAC,KAAD,CAAWjkB,SAAS,YAIxB8yB,GAAe,CACnB,CACE3xB,MAAOyhB,IAAY5R,OACnBqM,MAAO,iCACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAM8O,QAErC,CACE5xB,MAAOyhB,IAAY7R,KACnBsM,MAAO,cACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAM+O,QAErC,CACE7xB,MAAOyhB,IAAY3R,KACnBoM,MAAO,cACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMgP,QAErC,CACE9xB,MAAOyhB,IAAYhQ,MACnByK,MAAO,iBACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMiP,QAErC,CACE/xB,MAAOyhB,IAAYuQ,UACnB9V,MAAO,mBACP4G,KAAM,cAACkO,GAAD,CAAuBlO,KAAMmP,SAIjCC,GAAY,SAAC,GAAuC,IAArCnQ,EAAoC,EAApCA,OAAQC,EAA4B,EAA5BA,UAAWmQ,EAAiB,EAAjBA,WAChCrvB,EAAWC,cACX0K,EAAYxK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAasK,aACtDmJ,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAC3D8rB,EAAcnvB,aAAY,SAACC,GAAD,OAAWA,EAAMmvB,eAAejb,QAC1Dkb,EAAWrvB,aAAY,SAACC,GAAD,OAAWA,EAAMqvB,YAAYnb,QACpDob,EAAavvB,aAAY,SAACC,GAAD,OAAWA,EAAMuvB,cAAcrb,QACxDF,EAAWjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYC,QACpDlS,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aACtDojB,EAAarlB,aAAY,SAACC,GAAD,OAAWA,EAAMwvB,iBAAiBtb,QAE3Dub,EAAmB/yB,uBACvB,SAACI,GACC8C,EAAS8U,YAAa5X,IAClBA,IAAUsO,IAAWC,SACvBzL,EAAS0K,aAAgB,SAG7B,CAAC1K,IAGG8vB,EAAiBhzB,uBACrB,SAACizB,GACC/vB,EAAS8U,YAAatJ,IAAWC,UACjCzL,EAASgwB,aAA0Blc,EAAcvV,GAAIwxB,IACrD7Q,EAAU,MACVmQ,MAEF,CAACrvB,EAAUkf,EAAWmQ,EAAYvb,GAAiBA,EAAcvV,KAE7D0xB,EAAkBnzB,uBACtB,SAAC6U,GACC3R,EAAS8U,YAAatJ,IAAWC,UACjCzL,EAASkwB,aAAqBpc,EAAcvV,GAAIoT,EAAOvP,IACvD8c,EAAU,MACVmQ,MAEF,CACErvB,EACAkf,EACAmQ,EACAvb,GAAiBA,EAAcvV,GAC/B6D,IAGE+tB,EAAiBrzB,uBACrB,SAACqsB,GACCnpB,EAAS8U,YAAatJ,IAAWC,UACjCzL,EAASowB,aAAoBtc,EAAcvV,GAAI4qB,EAAM/mB,IACrD8c,EAAU,MACVmQ,MAEF,CACErvB,EACAkf,EACAmQ,EACAvb,GAAiBA,EAAcvV,GAC/B6D,IAGEiuB,EAAmBvzB,uBACvB,SAACwzB,GACCtwB,EAAS8U,YAAatJ,IAAWC,UACjCzL,EAASuwB,aAAsBzc,EAAcvV,GAAI+xB,EAAQluB,IACzD8c,EAAU,MACVmQ,MAEF,CACErvB,EACAkf,EACAmQ,EACAvb,GAAiBA,EAAcvV,GAC/B6D,IAGEouB,EAAmB1zB,uBACvB,SAAC4O,GACC1L,EAAS8U,YAAatJ,IAAWC,UACjCzL,EAASywB,aAAgB3c,EAAcvV,GAAImN,EAAQtJ,IACnD8c,EAAU,MACVmQ,MAEF,CACErvB,EACAkf,EACAmQ,EACAvb,GAAiBA,EAAcvV,GAC/B6D,IAIJ,OACE,eAAC,GAAD,WACE,eAAC4rB,GAAD,WACGI,GAAMhkB,KAAI,SAACsmB,GAAD,OACT,cAAC,EAAD,CAEEnvB,MAAOmvB,EAAKtX,MACZpd,OAAK,EACL8d,UAAU,QAJZ,SAME,cAACmU,GAAD,CACE/wB,MAAOwzB,EAAKxzB,MACZiB,QAAS,kBAAM0xB,EAAiBa,EAAKxzB,QACrCmjB,OAAQqQ,EAAKxzB,QAAUyN,EAAY,OAAS,QAH9C,SAKG+lB,EAAK1Q,QAVH0Q,EAAKxzB,UAcd,cAAC,GAAD,CAAS4iB,GAAI,IACZ+O,GAAazkB,KAAI,SAACJ,GAAD,OAChB,cAAC,EAAD,CAEEzI,MAAOyI,EAAKoP,MACZpd,OAAK,EACL8d,UAAU,QAJZ,SAME,cAACmU,GAAD,CACE/wB,MAAO8M,EAAK9M,MACZiB,QAAS,kBAAM+gB,EAAUlV,EAAK9M,QAFhC,SAIG8M,EAAKgW,QATHhW,EAAK9M,aAehB,cAAC,GAAD,CACEhG,KAAM+nB,IAAWN,IAAYuQ,UAC7B1J,WAAYA,EACZC,WAAYqK,EACZ7T,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEhoB,KAAM+nB,IAAWN,IAAYhQ,MAC7BiY,OAAQ0I,EACRzI,YAAaoJ,EACbhU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEhoB,KAAM+nB,IAAWN,IAAY7R,KAC7Bgc,MAAO0G,EACPzG,WAAYoH,EACZlU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEhoB,KAAM+nB,IAAWN,IAAY5R,OAC7Bsd,QAASqF,EACTpF,aAAc+F,EACdpU,SAAU,kBAAMiD,EAAU,SAE5B,cAAC,GAAD,CACEhoB,KAAM+nB,IAAWN,IAAY3R,KAC7BoH,SAAUA,EACV+Y,UAAWrZ,EAAc2E,WACzBiV,aAAc5Z,EAAc2B,WAAWC,oBACvCiY,mBAAoB7Z,EAAc2B,WAAWG,qBAC7CgY,SAAU4C,EACVvU,SAAU,kBAAMiD,EAAU,aAMnBngB,OAAMC,KAAKowB,IC9TpBuB,GAAex0B,YAAOyB,KAAV,4EAAGzB,CAAH,mDAKZy0B,GAAez0B,YAAOyB,KAAV,4EAAGzB,CAAH,yBAGZoD,GAAUpD,YAAOyB,KAAV,uEAAGzB,CAAH,iDAIP00B,GAAmB10B,YAAO+B,KAAV,gFAAG/B,CAAH,2BA8IP20B,GA1IC,SAACnxB,GAAW,IAExBsf,EAKEtf,EALFsf,OACAC,EAIEvf,EAJFuf,UACAmQ,EAGE1vB,EAHF0vB,WACAvc,EAEEnT,EAFFmT,iBACAC,EACEpT,EADFoT,sBAGI/S,EAAWC,cAEX6T,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAC3D+Q,EAAYpU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAaF,QACtD5M,EAAiBvH,aAAY,SAACC,GAAD,OAAWA,EAAMyT,eAAerQ,WAE7D2pB,EAAYvjB,mBAChB,iBAC+B,gBAA7BkK,EAAc2E,WACV3E,EAAc2E,WACd,IAAM3E,EAAc2E,aAC1B,CAAC3E,EAAc2E,aApBQ,EAuBW3Y,mBAASqtB,GAvBpB,mBAuBlB4D,EAvBkB,KAuBNC,EAvBM,OAwBWlxB,oBAAS,GAxBpB,mBAwBlBmxB,EAxBkB,KAwBNC,EAxBM,KA0BzBvtB,qBAAU,WACRqtB,EAAc7D,KACb,CAACA,IAEJ,IAAMgE,EAA6Br0B,uBACjC,SAAC/I,GACCiM,EAASoxB,aAAgBtd,EAAcvV,GAAIxK,IAC3Ci9B,EAAcj9B,GACdm9B,GAAc,KAEhB,CAAClxB,EAAU8T,GAAiBA,EAAcvV,GAAIyyB,EAAeE,IAEzDG,EAAkCv0B,uBACtC,SAAC/I,GACCi9B,EAAcj9B,GACWm9B,EAArBn9B,IAAUo5B,KAGhB,CAACA,EAAW6D,EAAeE,IAEvBI,EAA4Bx0B,uBAAY,WAC5CkD,EAASoxB,aAAgBtd,EAAcvV,GAAIwyB,IAC3CG,GAAc,KACb,CAAClxB,EAAU8T,GAAiBA,EAAcvV,GAAIwyB,EAAYG,IAE7D,OACE,eAACtzB,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAlC,UACE,cAAC8yB,GAAD,CAAc/Q,GAAI,EAAlB,SACE,cAAC,GAAD,MAEF,eAAC,GAAD,CAAShiB,QAAQ,OAAjB,UACE,cAAC,GAAD,CACEohB,OAAQA,EACRC,UAAWA,EACXmQ,WAAYA,IAEd,eAACsB,GAAD,CAAcY,GAAI,EAAGC,GAAI,EAAzB,UACE,cAAC,GAAD,CACEjwB,MAAOmG,EAAiBA,EAAeuD,KAAO,GAC9CsJ,UAAWA,EAAUxK,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWC,OAE3CwW,aAAa,EACb4C,YAAY,EACZzQ,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACExR,MAAM,eACNgT,UAAWA,EAAUxK,QACnB,SAACC,GAAD,OACEA,EAAKC,aAAeC,IAAW4C,MAC/B9C,EAAKC,aAAeC,IAAW8C,MAC/BhD,EAAKC,aAAeC,IAAW6C,UAEnC+F,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACExR,MAAM,SACNgT,UAAWA,EAAUxK,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWyE,SAE3CmE,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACExR,MAAM,WACNgT,UAAWA,EAAUxK,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWW,WAE3CiI,iBAAkBA,EAClBC,sBAAuBA,IAEzB,cAAC,GAAD,CACExR,MAAM,aACNgT,UAAWA,EAAUxK,QACnB,SAACC,GAAD,OAAUA,EAAKC,aAAeC,IAAWM,QAE3CmW,aAAa,EACb7N,iBAAkBA,EAClBC,sBAAuBA,EACvByI,cACE,eAAC5d,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXD,eAAe,gBAHjB,UAKE,cAAC,GAAD,CACEd,MAAO6zB,EACPvyB,SAAU2yB,EACV7W,cAAe+W,IAEhBJ,EACC,cAACJ,GAAD,CACE1yB,QAASmzB,EACTjzB,QAAQ,WAFV,mBAOA,4CCvIZwuB,GAAmB1wB,YAAOie,MAAV,uFAAGje,CAAH,uCAMhBs1B,GAAkB,SAAC9xB,GAAW,IAEhCwb,EAOExb,EAPFwb,OACAE,EAME1b,EANF0b,WACAC,EAKE3b,EALF2b,aACAF,EAIEzb,EAJFyb,cACAG,EAGE5b,EAHF4b,QACA7P,EAEE/L,EAFF+L,OACAmY,EACElkB,EADFkkB,YAR+B,EAWD/jB,oBAAS,GAXR,mBAW1B2b,EAX0B,KAWhBC,EAXgB,KAY3BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAMH,MAJ+B,OAA3BgmB,KAAKC,UAAUxW,IACjBvW,QAAQC,IAAIsW,GAIX1M,EAAkBlK,SAAS,oBAC3BkK,EAAkBlK,SAAS,oBAC3BkK,EAAkBlK,SAAS,yBAC3BkK,EAAkBlK,SAAS,oBAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,wBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,mBAC1B,cAAC,GAAD,CACE0G,KAAK,kBACLmO,MAAM,OACN/a,QAAQ,WACRnB,MAAOwO,EAAOpJ,WAAW2I,KACzB0B,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW2I,MACnBkQ,EAAO7Y,YACP6Y,EAAO7Y,WAAW2I,MAEtBsP,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW2I,MACnBkQ,EAAO7Y,YACP6Y,EAAO7Y,WAAW2I,KAEpBgP,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,mBAC1B,cAAC,GAAD,CACE0G,KAAK,kBACLmO,MAAM,OACN/a,QAAQ,WACRnB,MAAOwO,EAAOpJ,WAAW8K,KACzBT,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW8K,MACnB+N,EAAO7Y,YACP6Y,EAAO7Y,WAAW8K,MAEtBmN,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW8K,MACnB+N,EAAO7Y,YACP6Y,EAAO7Y,WAAW8K,KAEpB6M,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,wBAC1B,cAAC,GAAD,CACE0G,KAAK,uBACLmO,MAAM,mBACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOuG,KAAKkF,MAAM+C,EAAOpJ,WAAW+L,WACpC1B,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW+L,WACnB8M,EAAO7Y,YACP6Y,EAAO7Y,WAAW+L,WAEtBkM,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW+L,WACnB8M,EAAO7Y,YACP6Y,EAAO7Y,WAAW+L,UAEpB4L,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,oBAC1B,cAAC,GAAD,CACE6U,MAAM,QACNlE,IAAK,EACLxR,IAAK,IACLxG,MAAOuG,KAAKkF,MAAM+C,EAAOpJ,WAAWgM,OACpC+K,SAAU,SAACnc,GAAD,OAAWke,EAAc,mBAAoBle,MAGzD,6BAEDuR,EAAkBlK,SAAS,iBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,wBAGA,cAACpa,EAAA,EAAD,CACElB,QAAS,kBAAM0lB,EAAY,kBAC3BtW,KAAK,QAFP,SAIG7B,EAAOpB,cACN,cAACwX,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,SAKN,6BAEDtT,EAAkBlK,SAAS,gBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,qBAGA,cAACpa,EAAA,EAAD,CACElB,QAAS,kBAAM0lB,EAAY,iBAC3BtW,KAAK,QAFP,SAIG7B,EAAOH,aAAe,cAACqW,GAAA,EAAD,IAAe,cAACC,GAAA,EAAD,SAI1C,qCAxJD,8BAgKI9iB,OAAMC,KAAKyyB,I,sBCrMpB5E,GAAmB1wB,YAAOie,MAAV,oFAAGje,CAAH,uCAKhBy1B,GAAmBz1B,YAAOkD,KAAV,oFAAGlD,CAAH,+BAKhB01B,GAAe,SAAClyB,GAAW,IAE7Bwb,EASExb,EATFwb,OACAE,EAQE1b,EARF0b,WACAC,EAOE3b,EAPF2b,aACAF,EAMEzb,EANFyb,cACAG,EAKE5b,EALF4b,QACA7P,EAIE/L,EAJF+L,OACAomB,EAGEnyB,EAHFmyB,qBACArd,EAEE9U,EAFF8U,aACA7D,EACEjR,EADFiR,WAV4B,EAYE9Q,oBAAS,GAZX,mBAYvB2b,EAZuB,KAYbC,EAZa,KAaxBjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAEGqmB,EAAmBnoB,mBAAQ,iBAAqB,UAAfgH,IAAwB,CAACA,IAE1DohB,EAAoBl1B,uBACxB,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW0O,YACpBoK,EACE,oBACCle,EAAQuX,EAAanS,WAAWvQ,OAC/B0iB,EAAanS,WAAWxQ,OAG9BspB,EAAc,mBAAoBhQ,WAAWrO,EAAME,OAAOC,QAAU,KAEtE,CACEke,EACA3G,GAAgBA,EAAanS,WAAWvQ,OACxC0iB,GAAgBA,EAAanS,WAAWxQ,QAGtCmgC,EAAqBn1B,uBACzB,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW0O,YACpBoK,EACE,mBACCle,EAAQuX,EAAanS,WAAWxQ,MAC/B2iB,EAAanS,WAAWvQ,QAG9BqpB,EAAc,oBAAqBhQ,WAAWrO,EAAME,OAAOC,QAAU,KAEvE,CACEke,EACA3G,GAAgBA,EAAanS,WAAWvQ,OACxC0iB,GAAgBA,EAAanS,WAAWxQ,QAGtCogC,EAAqBp1B,uBACzB,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW2O,aACpBmK,EACE,oBACCle,EAAQuX,EAAanS,WAAWqE,OAC/B8N,EAAanS,WAAWoE,QAG9B0U,EAAc,oBAAqBhQ,WAAWrO,EAAME,OAAOC,QAAU,KAEvE,CACEke,EACA3G,GAAgBA,EAAanS,WAAWqE,OACxC8N,GAAgBA,EAAanS,WAAWoE,SAGtCyrB,EAAqBr1B,uBACzB,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW2O,aACpBmK,EACE,oBACCle,EAAQuX,EAAanS,WAAWoE,OAC/B+N,EAAanS,WAAWqE,QAG9ByU,EAAc,oBAAqBhQ,WAAWrO,EAAME,OAAOC,QAAU,KAEvE,CACEke,EACA3G,GAAgBA,EAAanS,WAAWqE,OACxC8N,GAAgBA,EAAanS,WAAWoE,SAItC0rB,EAA0Bt1B,uBAC9B,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW2O,aACpBmK,EACE,yBACCle,EAAQuX,EAAanS,WAAW6L,YAC/BsG,EAAanS,WAAW4L,aAG9BkN,EACE,yBACAhQ,WAAWrO,EAAME,OAAOC,QAAU,KAGtC,CACEke,EACA3G,GAAgBA,EAAanS,WAAW6L,YACxCsG,GAAgBA,EAAanS,WAAW4L,cAGtCmkB,EAA0Bv1B,uBAC9B,SAACC,GACC,IAAIG,EAAQkO,WAAWrO,EAAME,OAAOC,QAAU,EAC1CwO,EAAOpJ,WAAW2O,aACpBmK,EACE,yBACCle,EAAQuX,EAAanS,WAAW4L,YAC/BuG,EAAanS,WAAW6L,aAG9BiN,EACE,yBACAhQ,WAAWrO,EAAME,OAAOC,QAAU,KAGtC,CACEke,EACA3G,GAAgBA,EAAanS,WAAW6L,YACxCsG,GAAgBA,EAAanS,WAAW4L,cAG5C,OACGO,EAAkBlK,SAAS,qBAC3BkK,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,2BAC3BkK,EAAkBlK,SAAS,2BAC3BkK,EAAkBlK,SAAS,6BAC3BkK,EAAkBlK,SAAS,2BAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,qBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACE,eAAC8L,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMGwQ,EAAkBlK,SAAS,oBAC1B,cAAC,GAAD,CACE0G,KAAK,mBACLmO,MACE1N,EAAOpJ,WAAWpH,OAASsQ,IAAWsD,QAClC,QACA,UAENzQ,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAWxQ,OACpC6a,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAWxQ,OACnBqpB,EAAO7Y,YACP6Y,EAAO7Y,WAAWxQ,OAEtByoB,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAWxQ,OACnBqpB,EAAO7Y,YACP6Y,EAAO7Y,WAAWxQ,MAEpBmoB,OAAQoB,EACR7c,SAAUwzB,EACV5V,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,qBAC5BkK,EAAkBlK,SAAS,qBACzB,cAACqtB,GAAD,CACEzzB,QAAS,kBAAM2zB,EAAqB,eADtC,SAGGpmB,EAAOpJ,WAAW0O,YAAc+gB,EAC/B,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAED9jB,EAAkBlK,SAAS,qBAC1B,cAAC,GAAD,CACE0G,KAAK,oBACLmO,MACE1N,EAAOpJ,WAAWpH,OAASsQ,IAAWsD,QAClC,SACA,UAENzQ,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAWvQ,QACpC4a,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAWvQ,QACnBopB,EAAO7Y,YACP6Y,EAAO7Y,WAAWvQ,QAEtBwoB,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAWvQ,QACnBopB,EAAO7Y,YACP6Y,EAAO7Y,WAAWvQ,OAEpBkoB,OAAQoB,EACR7c,SAAUyzB,EACV7V,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAC1vB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMGwQ,EAAkBlK,SAAS,qBAC1B,cAAC,GAAD,CACE0G,KAAK,oBACLmO,MAAM,SACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAWoE,QACpCiG,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAWoE,QACnByU,EAAO7Y,YACP6Y,EAAO7Y,WAAWoE,QAEtB6T,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAWoE,QACnByU,EAAO7Y,YACP6Y,EAAO7Y,WAAWoE,OAEpBuT,OAAQoB,EACR7c,SAAU0zB,EACV9V,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,sBAC5BkK,EAAkBlK,SAAS,qBACzB,cAACqtB,GAAD,CACEzzB,QAAS,kBAAM2zB,EAAqB,gBADtC,SAGGpmB,EAAOpJ,WAAW2O,aAAe8gB,EAChC,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAED9jB,EAAkBlK,SAAS,qBAC1B,cAAC,GAAD,CACE0G,KAAK,oBACLmO,MAAM,SACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAWqE,QACpCgG,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAWqE,QACnBwU,EAAO7Y,YACP6Y,EAAO7Y,WAAWqE,QAEtB4T,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAWqE,QACnBwU,EAAO7Y,YACP6Y,EAAO7Y,WAAWqE,OAEpBsT,OAAQoB,EACR7c,SAAU2zB,EACV/V,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGJ,eAAC1vB,EAAA,EAAD,CACEC,QAAQ,OACRG,eAAe,gBACflM,MAAM,OACNmM,WAAW,SAJb,UAMGwQ,EAAkBlK,SAAS,0BAC1B,cAAC,GAAD,CACE0G,KAAK,yBACLmO,MAAM,eACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW4L,aACpCvB,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW4L,aACnBiN,EAAO7Y,YACP6Y,EAAO7Y,WAAW4L,aAEtBqM,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW4L,aACnBiN,EAAO7Y,YACP6Y,EAAO7Y,WAAW4L,YAEpB+L,OAAQoB,EACR7c,SAAU4zB,EACVhW,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,2BAC5BkK,EAAkBlK,SAAS,0BACzB,cAACqtB,GAAD,CACEzzB,QAAS,kBAAM2zB,EAAqB,gBADtC,SAGGpmB,EAAOpJ,WAAW2O,aAAe8gB,EAChC,cAACO,GAAA,EAAD,IAEA,cAACC,GAAA,EAAD,MAIJ,6BAED9jB,EAAkBlK,SAAS,0BAC1B,cAAC,GAAD,CACE0G,KAAK,yBACLmO,MAAM,eACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW6L,aACpCxB,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW6L,aACnBgN,EAAO7Y,YACP6Y,EAAO7Y,WAAW6L,aAEtBoM,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW6L,aACnBgN,EAAO7Y,YACP6Y,EAAO7Y,WAAW6L,YAEpB8L,OAAQoB,EACR7c,SAAU6zB,EACVjW,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,gCAGH7e,EAAkBlK,SAAS,qBAC1B,cAAC,GAAD,CACE0G,KAAK,oBACLmO,MAAM,SACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAWsL,QACpCjB,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAWsL,QACnBuN,EAAO7Y,YACP6Y,EAAO7Y,WAAWsL,QAEtB2M,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAWsL,QACnBuN,EAAO7Y,YACP6Y,EAAO7Y,WAAWsL,OAEpBqM,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,2BAC1B,cAAC,GAAD,CACE0G,KAAK,0BACLmO,MAAM,gBACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW2L,cACpCtB,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW2L,cACnBkN,EAAO7Y,YACP6Y,EAAO7Y,WAAW2L,cAEtBsM,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW2L,cACnBkN,EAAO7Y,YACP6Y,EAAO7Y,WAAW2L,aAEpBgM,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,4BAC1B,cAAC,GAAD,CACE0G,KAAK,2BACLmO,MAAM,iBACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW0L,eACpCrB,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW0L,eACnBmN,EAAO7Y,YACP6Y,EAAO7Y,WAAW0L,eAEtBuM,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW0L,eACnBmN,EAAO7Y,YACP6Y,EAAO7Y,WAAW0L,cAEpBiM,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,qCApWD,8BA4WIvuB,OAAMC,KAAK6yB,IC9gBpBhF,GAAmB1wB,YAAOie,MAAV,yFAAGje,CAAH,uCAMhBq2B,GAAmB,SAAC7yB,GAAW,IAEjCwb,EAMExb,EANFwb,OACAE,EAKE1b,EALF0b,WACAC,EAIE3b,EAJF2b,aAEAC,GAEE5b,EAHFyb,cAGEzb,EAFF4b,SACA7P,EACE/L,EADF+L,OAPgC,EASF5L,oBAAS,GATP,mBAS3B2b,EAT2B,KASjBC,EATiB,KAU5BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OACG+C,EAAkBlK,SAAS,oBAC3BkK,EAAkBlK,SAAS,kBAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,yBAEF,cAAC0d,GAAA,EAAD,UACE,cAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,SACE,eAAConB,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAAC+R,GAAI,EAAf,SACGtN,EAAkBlK,SAAS,mBAC1B,cAAC,GAAD,CACE0G,KAAK,kBACLmO,MAAM,IACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW4C,MACpCyH,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW4C,MACnBiW,EAAO7Y,YACP6Y,EAAO7Y,WAAW4C,MAEtBqV,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW4C,MACnBiW,EAAO7Y,YACP6Y,EAAO7Y,WAAW4C,KAEpB+U,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMlP,MAAI,EAAC+R,GAAI,EAAf,SACGtN,EAAkBlK,SAAS,kBAC1B,cAAC,GAAD,CACE0G,KAAK,iBACLmO,MAAM,IACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW8C,KACpCuH,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW8C,KACnB+V,EAAO7Y,YACP6Y,EAAO7Y,WAAW8C,KAEtBmV,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW8C,KACnB+V,EAAO7Y,YACP6Y,EAAO7Y,WAAW8C,IAEpB6U,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,yCAxEL,8BAkFIvuB,OAAMC,KAAKwzB,IC1GpBjF,GAAcpxB,YAAOs2B,MAAV,+EAAGt2B,CAAuB+C,KAErCwzB,GAAe,SAAC/yB,GAAW,IAE7Bwb,EAQExb,EARFwb,OAGAC,GAKEzb,EAPF0b,WAOE1b,EANF2b,aAME3b,EALFyb,eAEA1P,GAGE/L,EAJF4b,QAIE5b,EAHF+L,QACA0I,EAEEzU,EAFFyU,SACAue,EACEhzB,EADFgzB,kBAT4B,EAWE7yB,oBAAS,GAXX,mBAWvB2b,EAXuB,KAWbC,EAXa,KAYxBjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OAAK+C,EAAkBlK,SAAS,mBAE9B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,qBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,mBAC1B,eAAC,GAAD,CAAalG,QAAQ,WAAW2tB,GAAI,EAApC,UACE,cAACwB,GAAA,EAAD,CAAYjvB,GAAG,oBAAf,kBACA,cAAC,GAAD,CACErB,MAAOwO,EAAOpJ,WAAW6K,KACzB3O,SAAU,SAAC+H,GAAD,OAAOosB,EAAkB,OAAQpsB,EAAEtJ,OAAOC,QACpDkX,SAAUA,OAId,6BAED3F,EAAkBlK,SAAS,oBAC1B,eAAC2U,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,0BAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC,GAAD,CACEtc,MAAOwO,EAAOpJ,WAAWvO,MACzByK,SAAU,SAACzK,GAAD,OAAW4+B,EAAkB,QAAS5+B,IAChDumB,cAAe,SAACvmB,GAAD,OACbqnB,EAAc,mBAAoBrnB,IAEpC4Y,MAAOpP,QAAQ4d,EAAO7Y,YAAc6Y,EAAO7Y,WAAWvO,OACtDwmB,WAAYY,EAAO7Y,YAAc6Y,EAAO7Y,WAAWvO,aAKzD,6BAED0a,EAAkBlK,SAAS,mBAC1B,cAAC,GAAD,CACE6U,MAAM,YACNlE,IAAK,EACLxR,IAAK,GACLxG,MAAOwO,EAAOpJ,WAAWiL,KACzB8L,SAAU,SAACnc,GAAD,OAAWke,EAAc,kBAAmBle,MAGxD,qCAnDiD,8BA2D9C6B,OAAMC,KAAK0zB,IClFpBE,GAAiB,SAACjzB,GAAW,IAE/Bwb,EAOExb,EAPFwb,OAGAC,GAIEzb,EANF0b,WAME1b,EALF2b,aAKE3b,EAJFyb,eAEA1P,GAEE/L,EAHF4b,QAGE5b,EAFF+L,QACAinB,EACEhzB,EADFgzB,kBAR8B,EAUA7yB,oBAAS,GAVT,mBAUzB2b,EAVyB,KAUfC,EAVe,KAW1BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OACG+C,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,sBAC3BkK,EAAkBlK,SAAS,yBAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,uBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,qBAC1B,eAAC2U,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,4BAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC,GAAD,CACEtc,MAAOwO,EAAOpJ,WAAWmL,OACzBjP,SAAU,SAACzK,GAAD,OAAW4+B,EAAkB,SAAU5+B,IACjDumB,cAAe,SAACvmB,GAAD,OACbqnB,EAAc,oBAAqBrnB,IAErC4Y,MAAOpP,QAAQ4d,EAAO7Y,YAAc6Y,EAAO7Y,WAAWmL,QACtD8M,WAAYY,EAAO7Y,YAAc6Y,EAAO7Y,WAAWmL,cAKzD,6BAEDgB,EAAkBlK,SAAS,qBAC1B,cAAC3G,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC,GAAD,CACE8a,MAAM,eACNlE,IAAK,EACLxR,IAAK,GACLxG,MAAOwO,EAAOpJ,WAAWuG,OACzBwQ,SAAU,SAACnc,GAAD,OAAWke,EAAc,oBAAqBle,QAI5D,6BAEDuR,EAAkBlK,SAAS,yBAC1B,eAAC2U,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,2BAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,eAAC2S,GAAA,EAAD,CACElhB,KAAK,wBACL5M,QAAQ,WACRnB,MAAOwO,EAAOpJ,WAAWgO,WACzB9R,SAAU,SAACzB,GAAD,OACR41B,EAAkB,aAAc51B,EAAME,OAAOC,QAE/Ckf,WAAS,EAPX,UASE,cAACuQ,GAAA,EAAD,CAAUzvB,MAAM,SAAhB,oBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,SAAhB,oBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,UAAhB,6BAKN,qCAnED,8BA2EI6B,OAAMC,KAAK4zB,ICnGpBC,GAAgB,SAAClzB,GAAW,IAE9Bwb,EAOExb,EAPFwb,OAGAC,GAIEzb,EANF0b,WAME1b,EALF2b,aAKE3b,EAJFyb,eAEA1P,GAEE/L,EAHF4b,QAGE5b,EAFF+L,QACAinB,EACEhzB,EADFgzB,kBAR6B,EAUC7yB,oBAAS,GAVV,mBAUxB2b,EAVwB,KAUdC,EAVc,KAWzBjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OACG+C,EAAkBlK,SAAS,qBAC3BkK,EAAkBlK,SAAS,uBAC3BkK,EAAkBlK,SAAS,wBAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,uBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,qBAC5BmH,EAAOzB,aAAeC,IAAW8C,KAC/B,eAACkM,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,qBAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC,GAAD,CACEtc,MAAOwO,EAAOpJ,WAAWvO,MACzByK,SAAU,SAACzK,GAAD,OAAW4+B,EAAkB,QAAS5+B,IAChDumB,cAAe,SAACvmB,GAAD,OACbqnB,EAAc,mBAAoBrnB,IAEpC4Y,MAAOpP,QAAQ4d,EAAO7Y,YAAc6Y,EAAO7Y,WAAWvO,OACtDwmB,WAAYY,EAAO7Y,YAAc6Y,EAAO7Y,WAAWvO,aAKzD,6BAED0a,EAAkBlK,SAAS,sBAC1B,cAAC3G,EAAA,EAAD,CAAKU,GAAI,EAAT,SACE,cAAC,GAAD,CACE8a,MAAM,UACNlE,IAAK,EACLxR,IAAK,EACL4V,KAAM,IACNpc,MAAOwO,EAAOpJ,WAAWiG,QACzB8Q,SAAU,SAACnc,GAAD,OAAWke,EAAc,qBAAsBle,QAI7D,6BAEDuR,EAAkBlK,SAAS,wBAC1B,eAAC2U,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,0BAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,eAAC2S,GAAA,EAAD,CACElhB,KAAK,uBACL5M,QAAQ,WACRnB,MAAOwO,EAAOpJ,WAAWmO,UACzBjS,SAAU,SAACzB,GAAD,OACR41B,EAAkB,YAAa51B,EAAME,OAAOC,QAE9Ckf,WAAS,EAPX,UASE,cAACuQ,GAAA,EAAD,CAAUzvB,MAAM,SAAhB,oBAEA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,WAAhB,sBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,SAAhB,oBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,UAAhB,qBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,aAAhB,wBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,QAAhB,mBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,SAAhB,oBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,UAAhB,qBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,MAAhB,iBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,aAAhB,wBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,aAAhB,wBACA,cAACyvB,GAAA,EAAD,CAAUzvB,MAAM,MAAhB,yBAKN,qCA/ED,8BAuFI6B,OAAMC,KAAK6zB,I,sBC1GpBC,GAAmB,SAACnzB,GAUpBA,EARFwb,OAQExb,EAPF0b,WAOE1b,EANF2b,aAJiC,IAKjCF,EAKEzb,EALFyb,cAGA1P,GAEE/L,EAJFkkB,YAIElkB,EAHF4b,QAGE5b,EAFF+L,QACAinB,EACEhzB,EADFgzB,kBATgC,EAWF7yB,oBAAS,GAXP,mBAW3B2b,EAX2B,KAWjBC,EAXiB,KAY5BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OACG+C,EAAkBlK,SAAS,wBAC3BkK,EAAkBlK,SAAS,oBAC3BkK,EAAkBlK,SAAS,mBAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,yBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,uBAC1B,cAAC,GAAD,CACE6U,MAAM,WACNlE,KAAM,IACNxR,IAAK,IACLxG,MAAOuG,KAAKkF,MAAM+C,EAAOpJ,WAAWwE,UACpCuS,SAAU,SAACnc,GAAD,OAAWke,EAAc,sBAAuBle,MAG5D,6BAEDuR,EAAkBlK,SAAS,mBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,kBAGA,cAACpa,EAAA,EAAD,CACElB,QAAS,kBACPw0B,EAAkB,OAAQjnB,EAAOpJ,WAAWyE,KAAO,EAAI,IAEzDwG,KAAK,QAJP,SAMG7B,EAAOpJ,WAAWyE,KACjB,cAACgsB,GAAA,EAAD,IAEA,qCACE,cAACA,GAAA,EAAD,IACA,cAACn1B,EAAA,EAAD,CAAKgB,SAAS,WAAWsG,KAAK,MAAME,IAAI,MAAxC,SACE,cAAC,KAAD,CAAiB4a,KAAMgT,KAASzlB,KAAK,iBAO/C,6BAEDkB,EAAkBlK,SAAS,mBAC1B,eAAC3G,EAAA,EAAD,CACEC,QAAQ,OACRI,WAAW,SACXH,cAAc,MACdE,eAAe,gBAJjB,UAME,cAACI,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,kBAGA,cAACpa,EAAA,EAAD,CACElB,QAAS,kBACPw0B,EAAkB,OAAQjnB,EAAOpJ,WAAW0E,KAAO,EAAI,IAEzDuG,KAAK,QAJP,SAMG7B,EAAOpJ,WAAW0E,KACjB,cAACisB,GAAA,EAAD,IAEA,qCACE,cAACA,GAAA,EAAD,IACA,cAACr1B,EAAA,EAAD,CAAKgB,SAAS,WAAWsG,KAAK,MAAME,IAAI,MAAxC,SACE,cAAC,KAAD,CAAiB4a,KAAMgT,KAASzlB,KAAK,iBAO/C,qCA/ED,8BAuFIxO,OAAMC,KAAK8zB,ICrHpBjG,GAAmB1wB,YAAOie,MAAV,uFAAGje,CAAH,uCAMhB+2B,GAAiB,SAACvzB,GACtB,IAEEwb,EAOExb,EAPFwb,OACAE,EAME1b,EANF0b,WACAC,EAKE3b,EALF2b,aACAF,EAIEzb,EAJFyb,cACAG,EAGE5b,EAHF4b,QACA7P,EAEE/L,EAFF+L,OACAinB,EACEhzB,EADFgzB,kBAT8B,EAWA7yB,oBAAS,GAXT,mBAWzB2b,EAXyB,KAWfC,EAXe,KAY1BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAEGynB,EAAoBr2B,uBACxB,SAACI,GAA4B,IAArBk2B,IAAoB,yDAEvB1nB,EAAOpJ,WAAW+I,aACe,gBAAlCK,EAAOpJ,WAAW+I,aAElB+P,EAAc,wBAxBK,GA0BjBgY,EAAUT,EAAkB,cAAez1B,GAC1Cke,EAAc,yBAA0Ble,KAE/C,CAACke,EAAeuX,EAAmBjnB,EAAOpJ,WAAW+I,cAGvD,OACGoD,EAAkBlK,SAAS,2BAC3BkK,EAAkBlK,SAAS,0BAC3BkK,EAAkBlK,SAAS,6BAC3BkK,EAAkBlK,SAAS,6BAC3BkK,EAAkBlK,SAAS,4BAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,uBAEF,cAAC0d,GAAA,EAAD,UACE,eAACle,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,UACG2c,EAAkBlK,SAAS,0BAC1B,eAAC2U,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAACpb,EAAA,EAAD,CAAYC,QAAQ,QAAQtK,MAAM,gBAAgB0lB,GAAI,EAAtD,4BAIF,cAACP,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACE,cAAC,GAAD,CACEtc,MAAOwO,EAAOpJ,WAAW+I,YACzB7M,SAAU,SAACzK,GAAD,OAAWo/B,EAAkBp/B,IACvCumB,cAAe,SAACvmB,GAAD,OAAWo/B,EAAkBp/B,GAAO,IACnD4Y,MAAOpP,QACL4d,EAAO7Y,YAAc6Y,EAAO7Y,WAAW+I,aAEzCkP,WACEY,EAAO7Y,YAAc6Y,EAAO7Y,WAAW+I,mBAM/C,6BAEDoD,EAAkBlK,SAAS,yBAC1B,cAAC,GAAD,CACE0G,KAAK,wBACLmO,MAAM,cACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW2E,YACpC0F,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW2E,YACnBkU,EAAO7Y,YACP6Y,EAAO7Y,WAAW2E,YAEtBsT,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW2E,YACnBkU,EAAO7Y,YACP6Y,EAAO7Y,WAAW2E,WAEpBgT,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,6BAED7e,EAAkBlK,SAAS,4BAC1B,cAAC,GAAD,CACE6U,MAAM,iBACNlE,IAAK,EACLxR,IAAK,EACL4V,KAAM,IACNpc,MAAOwO,EAAOpJ,WAAWgJ,cACzB+N,SAAU,SAACnc,GAAD,OACRke,EAAc,2BAA4Ble,MAI9C,6BAEF,eAACgc,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAAC+R,GAAI,EAAf,SACGtN,EAAkBlK,SAAS,4BAC1B,cAAC,GAAD,CACE0G,KAAK,2BACLmO,MAAM,iBACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW4E,eACpCyF,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW4E,eACnBiU,EAAO7Y,YACP6Y,EAAO7Y,WAAW4E,eAEtBqT,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW4E,eACnBiU,EAAO7Y,YACP6Y,EAAO7Y,WAAW4E,cAEpB+S,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMlP,MAAI,EAAC+R,GAAI,EAAf,SACGtN,EAAkBlK,SAAS,4BAC1B,cAAC,GAAD,CACE0G,KAAK,2BACLmO,MAAM,iBACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW6E,eACpCwF,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW6E,eACnBgU,EAAO7Y,YACP6Y,EAAO7Y,WAAW6E,eAEtBoT,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW6E,eACnBgU,EAAO7Y,YACP6Y,EAAO7Y,WAAW6E,cAEpB8S,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,0CA7IL,8BAuJIvuB,OAAMC,KAAKk0B,ICzMpBrG,GAAmB1wB,YAAOie,MAAV,sFAAGje,CAAH,uCAMhBk3B,GAAiB,SAAC1zB,GAAW,IAE/Bwb,EAMExb,EANFwb,OACAE,EAKE1b,EALF0b,WACAC,EAIE3b,EAJF2b,aAEAC,GAEE5b,EAHFyb,cAGEzb,EAFF4b,SACA7P,EACE/L,EADF+L,OAP8B,EASA5L,oBAAS,GATT,mBASzB2b,EATyB,KASfC,EATe,KAU1BjN,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OACG+C,EAAkBlK,SAAS,6BAC3BkK,EAAkBlK,SAAS,8BAC3BkK,EAAkBlK,SAAS,gCAC3BkK,EAAkBlK,SAAS,gCAI5B,eAACoX,GAAA,EAAD,CAAWF,SAAUA,EAAUjd,SAAU,kBAAMkd,GAAaD,IAA5D,UACE,cAACV,GAAA,EAAD,CAAkBa,WAAY,cAACC,GAAA,EAAD,IAA9B,SACE,cAACzd,EAAA,EAAD,8BAEF,cAAC0d,GAAA,EAAD,UACE,eAAC5C,GAAA,EAAD,CAAMK,WAAS,EAACra,QAAS,EAAzB,UACE,cAACga,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACG/K,EAAkBlK,SAAS,4BAC1B,cAAC,GAAD,CACE0G,KAAK,2BACLmO,MAAM,WACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW2M,eACpCtC,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW2M,eACnBkM,EAAO7Y,YACP6Y,EAAO7Y,WAAW2M,eAEtBsL,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW2M,eACnBkM,EAAO7Y,YACP6Y,EAAO7Y,WAAW2M,cAEpBgL,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACG/K,EAAkBlK,SAAS,6BAC1B,cAAC,GAAD,CACE0G,KAAK,4BACLmO,MAAM,YACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW4M,gBACpCvC,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW4M,gBACnBiM,EAAO7Y,YACP6Y,EAAO7Y,WAAW4M,gBAEtBqL,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW4M,gBACnBiM,EAAO7Y,YACP6Y,EAAO7Y,WAAW4M,eAEpB+K,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACG/K,EAAkBlK,SAAS,+BAC1B,cAAC,GAAD,CACE0G,KAAK,8BACLmO,MAAM,cACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW6M,kBACpCxC,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW6M,kBACnBgM,EAAO7Y,YACP6Y,EAAO7Y,WAAW6M,kBAEtBoL,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW6M,kBACnBgM,EAAO7Y,YACP6Y,EAAO7Y,WAAW6M,iBAEpB8K,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,+BAGJ,cAACpU,GAAA,EAAD,CAAMlP,MAAI,EAACwP,GAAI,EAAf,SACG/K,EAAkBlK,SAAS,gCAC1B,cAAC,GAAD,CACE0G,KAAK,+BACLmO,MAAM,eACN/a,QAAQ,WACRnD,KAAK,SACLgC,MAAOiI,aAAWuG,EAAOpJ,WAAW8M,mBACpCzC,MAAOpP,QACLge,EAAQjZ,YACNiZ,EAAQjZ,WAAW8M,mBACnB+L,EAAO7Y,YACP6Y,EAAO7Y,WAAW8M,mBAEtBmL,WACEgB,EAAQjZ,YACRiZ,EAAQjZ,WAAW8M,mBACnB+L,EAAO7Y,YACP6Y,EAAO7Y,WAAW8M,kBAEpB6K,OAAQoB,EACR7c,SAAU8c,EACVc,WAAS,EACTrE,OAAO,SACPzZ,GAAI,EACJ+uB,gBAAiB,CACfC,QAAQ,KAIZ,uCAzIH,8BAkJIvuB,OAAMC,KAAKq0B,ICzLpBC,GAAgB,SAAC3zB,GASjBA,EAPFwb,OAOExb,EANF0b,WAME1b,EALF2b,aAKE3b,EAJFyb,cAIEzb,EAHF4b,QAN8B,IAO9B7P,EAEE/L,EAFF+L,OACA6nB,EACE5zB,EADF4zB,QAEI9kB,EAAoB7E,mBACxB,kBACE8B,EAAOzB,aAAeC,IAAWyE,MAC7BD,IAAkBhD,EAAOzB,YACzByE,IAAkBhD,EAAOzB,YAAYyB,EAAOpJ,WAAWpH,QAC7D,CAACwQ,IAGH,OAAK+C,EAAkBlK,SAAS,SAE9B,cAAC3G,EAAA,EAAD,CAAKC,QAAQ,OAAOC,cAAc,SAAShM,MAAM,OAAjD,SACG2c,EAAkBlK,SAAS,SAC1B,cAACrG,EAAA,EAAD,CAAQG,QAAQ,WAAWF,QAASo1B,EAApC,mBAIA,+BAR2C,8BAcpCx0B,OAAMC,KAAKs0B,ICfpB/zB,GAAUpD,YAAOyB,KAAV,2EAAGzB,CAAH,yGAUP+wB,GAAYnuB,IAAMC,MACtB,YASO,IARLoV,EAQI,EARJA,SACAyP,EAOI,EAPJA,YACAiO,EAMI,EANJA,qBACArd,EAKI,EALJA,aACA7D,EAII,EAJJA,WACA2iB,EAGI,EAHJA,QACAZ,EAEI,EAFJA,kBACG5V,EACC,4HACEyW,EAAU5pB,mBAAQ,WACtB,IAAK,IAAI1V,KAAK6oB,EAAUrR,OAAOpJ,WAC7B,GAAIya,EAAUrR,OAAOpJ,WAAWpO,IAAMugB,EAAanS,WAAWpO,GAC5D,OAAO,EAGX,IAAK,IAAIA,KAAK6oB,EAAUrR,OACtB,GAAS,cAALxX,GAAqB6oB,EAAUrR,OAAOxX,IAAMugB,EAAavgB,GAC3D,OAAO,EAGX,OAAO,IACN,CAAC6oB,EAAUrR,OAAQ+I,IAEtB,OACE,eAAC,KAAD,CAAMqI,SAAUC,EAAUC,aAAcC,YAAU,EAAlD,UACE,eAACrf,EAAA,EAAD,CACEC,QAAQ,OACRC,cAAc,MACdE,eAAe,gBACfC,WAAW,SACXlM,OAAO,OALT,UAOE,cAACqM,EAAA,EAAD,CAAYC,QAAQ,KAAKsjB,QAAM,EAA/B,wBAGC5E,EAAUO,SAAWkW,EACpB,cAACt1B,EAAA,EAAD,CAAQhD,KAAK,SAASnH,MAAM,UAAUsK,QAAQ,WAA9C,mBAIA,gCAGJ,cAAC,GAAD,2BAAqB0e,GAArB,IAAgC8G,YAAaA,KAC7C,cAAC,GAAD,2BACM9G,GADN,IAEE3I,SAAUA,EACVue,kBAAmBA,KAErB,cAAC,GAAD,2BAAmB5V,GAAnB,IAA8B4V,kBAAmBA,KACjD,cAAC,GAAD,2BACM5V,GADN,gBAEE4V,kBAAmBA,GAFrB,oBAGqBA,KAErB,cAAC,GAAD,2BACM5V,GADN,IAEE+U,qBAAsBA,EACtBrd,aAAcA,EACd7D,WAAYA,KAEd,cAAC,GAAD,eAAsBmM,IACtB,cAAC,GAAD,2BACMA,GADN,IAEE8G,YAAaA,EACb8O,kBAAmBA,KAErB,cAAC,GAAD,2BAAoB5V,GAApB,IAA+B4V,kBAAmBA,KAClD,cAAC,GAAD,eAAoB5V,IACpB,cAAC,GAAD,2BAAmBA,GAAnB,IAA8BwW,QAASA,WA6NhCE,GAvNK,WAClB,IAAMzzB,EAAWC,cACXwU,EAAetU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAahR,WACzD4Q,EAAWjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYC,QACpD1D,EAAazQ,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAauQ,cACvDnC,EAAoB7E,mBACxB,kBACG6K,EAEGA,EAAaxK,aAAeC,IAAWyE,MACvCD,IAAkB+F,EAAaxK,YAC/ByE,IAAkB+F,EAAaxK,YAC7BwK,EAAanS,WAAWpH,MAJ1B,KAMN,CAACuZ,IAEGif,EAAgB9pB,mBACpB,kBACEC,IAAE+E,KACA,CACEtE,cAAe,EACfiB,aAAc,EACdjJ,WAAYuH,IAAE+E,KACZ4G,IAAalT,WACbmM,EAAkB1E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,SAGhDoG,EAAkB1E,QAAO,SAACC,GAAD,OAAWA,EAAKzF,SAAS,qBAEtD,CAACkK,IAEGklB,EAAc72B,uBAAY,WAC1B2X,GAAczU,EAAS4zB,aAAWnf,MACrC,CAACzU,EAAUyU,IACRof,EAAc/2B,uBAClB,SAAC4O,GACC1L,EAASmX,aAAYzL,MAEvB,CAAC1L,IAEG6jB,EAAc/mB,uBAClB,SAACgnB,GACC9jB,EACEmX,aAAY,2BACP1C,GADM,kBAERqP,EAAQrP,EAAaqP,GAAS,EAAI,QAIzC,CAAC9jB,EAAUyU,IAEPqf,EAAwBh3B,uBAC5B,SAACgb,EAAK5a,GACJ8C,EACEmX,aAAY,2BACP1C,GADM,IAETnS,WAAW,2BACNmS,EAAanS,YADR,kBAEPwV,EAAM5a,UAKf,CAAC8C,EAAUyU,IAEPqd,EAAuBh1B,uBAC3B,SAACgnB,GACC9jB,EACEmX,aAAY,2BACP1C,GADM,IAETnS,WAAW,2BACNmS,EAAanS,YADR,kBAEPwhB,EAAQrP,EAAanS,WAAWwhB,GAAS,EAAI,UAKtD,CAAC9jB,EAAUyU,IAGb,OAAIA,EAEA,cAAC,GAAD,CAAS0M,GAAI,EAAGtB,GAAI,EAApB,SACE,cAAC,KAAD,CACEtD,cAAa,uCACRmX,GACAjf,GAFQ,IAGXnS,WAAW,2BACNoxB,EAAcpxB,YACdmS,EAAanS,cAGpBka,iBAAkBC,KAAW,CAC3BgH,YAAahH,OACbnS,cAAemS,OACflR,aAAckR,OACdna,WAAYma,KACV5S,IAAE+E,KACA,CACE3D,KAAMwR,OAAaoR,SAAS,YAC5BzgB,KAAMqP,OAAaE,KACjB,kBACA,YACA,SAACzf,GAAD,OACGA,GAASA,EAAMtM,SACf6d,EAAkBlK,SAAS,sBAEhCzS,MAAO2qB,OAAaE,KAClB,mBACA,YACA,SAACzf,GAAD,OACEA,IAAUuR,EAAkBlK,SAAS,uBAEzCxS,OAAQ0qB,OAAaE,KACnB,oBACA,YACA,SAACzf,GAAD,OACEA,IAAUuR,EAAkBlK,SAAS,wBAEzCW,KAAMuX,OACNrX,IAAKqX,OACL3V,SAAU2V,OACPsX,UAAU,IAAK,6BACfC,SAAS,IAAK,yBACjBjtB,KAAM0V,OACNzV,KAAMyV,OACN/V,OAAQ+V,OAAasX,SAAS,EAAG,0BACjCptB,OAAQ8V,OAAasX,SAAS,EAAG,0BACjChgC,MAAO0oB,OACJC,WACAC,KACC,mBACA,yBACAC,MAEJrP,KAAMkP,OACNhP,OAAQgP,OACLC,WACAC,KACC,mBACA,yBACAC,MAEJ/T,OAAQ4T,OACRtP,KAAMsP,OACNlU,QAASkU,OACTpR,YAAaoR,OACVC,WACAC,KACC,mBACA,yBACAC,MAEJ3V,WAAYwV,OACZnR,cAAemR,OACfvV,cAAeuV,OACftV,cAAesV,OACfxN,cAAewN,OACfvN,eAAgBuN,OAChBtN,iBAAkBsN,OAClBrN,kBAAmBqN,OACnB7O,OAAQ6O,OAAasX,SAAS,EAAG,0BACjC7lB,YAAauO,OAAasX,SACxB,EACA,0BAEF5lB,YAAasO,OAAasX,SACxB,EACA,0BAEF1lB,UAAWoO,OAAasX,SAAS,EAAG,0BACpCzlB,MAAOmO,OACPzO,cAAeyO,OAAasX,SAC1B,EACA,0BAEF9lB,aAAcwO,OAAasX,SACzB,EACA,2BAGJtlB,EAAkB1E,QAAO,SAACC,GAAD,OACvBA,EAAKzF,SAAS,kBACd6F,KAAI,SAACJ,GAAD,OAAUA,EAAK3B,QAAQ,cAAe,WAIlD4rB,oBAAkB,EAClBpX,SAAU,SAACnR,GAET,OADA9G,QAAQC,IAAI6G,GACL,IAEToR,SAAU+W,EA7GZ,SA+GG,SAAC9W,GAAD,OACC,cAAC,GAAD,2BACMA,GADN,IAEE3I,SAAUA,EACVyP,YAAaA,EACbiO,qBAAsBA,EACtBrd,aAAcA,EACd7D,WAAYA,EACZ2iB,QAASI,EACThB,kBAAmBmB,UAOxB,8B,oBClRHv0B,GAAUpD,YAAOyB,KAAV,sEAAGzB,CAAH,2BACS,SAACwD,GAAD,OAAWA,EAAMu0B,cAyhBxBC,UAthBA,WACb,IAAMn0B,EAAWC,cACXm0B,EAASC,cAFI,EAGyBv0B,mBAAS,IAHlC,mBAGZw0B,EAHY,KAGIC,EAHJ,OAISz0B,mBAAS,MAJlB,mBAIZmf,EAJY,KAIJC,EAJI,OAKmBpf,mBAAS,IAL5B,mBAKZ00B,EALY,KAKCC,EALD,KAMbzwB,EAAa,GAEb0P,EAAO7Q,iBAAO,GACd2Q,EAAW3Q,iBAAO,GAClBoQ,EAAWpQ,iBAAO,MAClBqQ,EAAerQ,iBAAO,MACtBsQ,EAAetQ,iBAAO,MACtBuQ,EAAkBvQ,iBAAO,MAEzBugB,EAAOjjB,aAAY,SAACC,GAAD,OAAWA,EAAMijB,YAAYD,QAChDtP,EAAgB3T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcvQ,WAC3D0Q,EAAe/T,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcI,UAC1DM,EAAetU,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAahR,WACzDkxB,EAAiBv0B,aAAY,SAACC,GAAD,OAAWA,EAAMoU,aAAamgB,aAC3D9sB,EAAiB1H,aACrB,SAACC,GAAD,OAAWA,EAAMoU,aAAa3M,kBAE1BynB,EAAcnvB,aAAY,SAACC,GAAD,OAAWA,EAAMmvB,eAAejb,QAC1Dkb,EAAWrvB,aAAY,SAACC,GAAD,OAAWA,EAAMqvB,YAAYnb,QACpDF,EAAWjU,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAYC,QACpD/X,EAAO4D,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa9D,QACjDqU,EAAazQ,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAauQ,cACvDhG,EAAczK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAauK,eACxDxI,EAAYjC,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAa+B,aACtDuI,EAAYxK,aAAY,SAACC,GAAD,OAAWA,EAAMC,aAAasK,aACtDzK,EAAiBC,aACrB,SAACC,GAAD,OAAWA,EAAMC,aAAaH,kBAG1B00B,GAAmB/xB,iBAAO,MAC1BgyB,GAAehyB,iBAAO,MAEtBiyB,GAAgB30B,aAAY,SAACC,GAAD,OAAWA,EAAM2T,cAAcghB,WAC3DC,GAAiB70B,aAAY,SAACC,GAAD,OAAWA,EAAMyT,eAAekhB,WAC7DE,GAAc90B,aAAY,SAACC,GAAD,OAAWA,EAAMiU,YAAY0gB,WACvDG,GAAqB/0B,aACzB,SAACC,GAAD,OAAWA,EAAMuvB,cAAcwF,eAG3BC,GAAqBt4B,uBACzB,SAACgb,EAAK5a,GACJu3B,GAAe,SAAC5hC,GAAD,mBAAC,eAAiBA,GAAlB,kBAA2BilB,EAAM5a,SAElD,CAACu3B,IAGGY,GAAev4B,uBAAY,WAC/BkD,EAASxD,YAAQ84B,aAAW7xB,KAAKC,IAAID,KAAKyR,IAAW,KAAP3Y,EAAa,IAAK,UAC/D,CAACyD,EAAUzD,IACRg5B,GAAgBz4B,uBAAY,WAChCkD,EAASxD,YAAQ84B,aAAW7xB,KAAKC,IAAID,KAAKyR,IAAI3Y,EAAO,KAAM,IAAK,UAC/D,CAACyD,EAAUzD,IACRi5B,GAAgB14B,uBAAY,WAChC,IAAIhL,EAAQmhB,EAASzP,QAAQiyB,MAAM3jC,MAC/BC,EAASkhB,EAASzP,QAAQiyB,MAAM1jC,OAC9B2jC,EAAUJ,aACd7xB,KAAKyR,IAAIpjB,EAAQsQ,EAAUtQ,MAAOC,EAASqQ,EAAUrQ,SAEvDkhB,EAASzP,QAAQrP,GAAGrC,EAAQ,EAAIsQ,EAAUtQ,MAAQ,GAAK4jC,EAAU5jC,EAAQ,GACzEmhB,EAASzP,QAAQpP,GACdrC,EAAS,EAAIqQ,EAAUrQ,OAAS,GAAK2jC,EAAU3jC,EAAS,GAE3DiO,EAASxD,YAAQk5B,MAChB,CACD11B,EACAiT,EAASzP,SAAWyP,EAASzP,QAAQiyB,OAASxiB,EAASzP,QAAQiyB,MAAM3jC,MACrEmhB,EAASzP,SAAWyP,EAASzP,QAAQiyB,OAASxiB,EAASzP,QAAQiyB,MAAM1jC,OACrEqQ,IAEI5B,GAA6B1D,uBAAY,SAAC2D,GAC9CT,EAAS21B,YAAkBl1B,MAC1B,IACG+W,GAA4B1a,uBAAY,SAAC84B,GAC7C51B,EAAS61B,YAAeD,MACvB,IACGE,GAAuBh5B,uBAC3B,SAACi5B,GACC,IAAIC,EAAiB,YAAO91B,GACxBlM,EAAQgiC,EAAkB9R,QAAQ6R,GAClC/hC,GAAS,EACXgiC,EAAkB/f,OAAOjiB,EAAO,GAEhCgiC,EAAkB9yB,KAAK6yB,GAEzBv1B,GAA2Bw1B,KAE7B,CAAC91B,EAAgBM,KAEb6uB,GAAavyB,uBAAY,WAC7Bm5B,YAAW,kBAAM18B,SAAS28B,cAAcC,SAAQ,OAC/C,IAEGC,GAAiBt5B,uBACrB,SAACgb,EAAK/a,GAoGJ,GAjG6B,UAAzBA,EAAME,OAAOo5B,SAAsC,YAAft5B,EAAM7B,OACxC0V,IAAekH,GACjB9X,EAASs2B,YAAcxe,IAGd,QAARA,GAAyB,cAARA,IAClBrD,GACAA,EAAaxK,aAAeC,IAAWC,IAKtB,QAAR2N,GAAiBrD,EAC1BzU,EAAS0K,aAAgB,OACF,MAAd3N,EAAM+a,KAAe/a,EAAMw5B,SACpClB,KACuB,MAAdt4B,EAAM+a,KAAe/a,EAAMw5B,SACpChB,KACuB,MAAdx4B,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAASxD,YAAQ,IACM,MAAdO,EAAM+a,KAAe/a,EAAMw5B,SACpCf,KACuB,MAAdz4B,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWC,UACV,MAAd1O,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWuE,MACV,MAAdhT,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAW8D,OACV,MAAdvS,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAW+D,SACV,MAAdxS,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWsD,UACV,MAAd/R,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWgE,OACV,MAAdzS,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWiE,OACV,MAAd1S,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWkE,iBACV,MAAd3S,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWoE,QACV,MAAd7S,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWqE,MACV,MAAd9S,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWwE,UACV,MAAdjT,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAWsE,OACV,MAAd/S,EAAM+a,KAAe/a,EAAMw5B,SACpCv2B,EAAS8U,YAAatJ,IAAW0E,QAEnB,MAAdnT,EAAM+a,MACL/a,EAAMwZ,SAAWxZ,EAAMy5B,UACxB/hB,EAEAzU,EAASy2B,aAAkBhiB,IAEb,MAAd1X,EAAM+a,MACL/a,EAAMwZ,SAAWxZ,EAAMy5B,UACxB9B,EAEA10B,EAAS4zB,aAAWc,IACG,MAAd33B,EAAM+a,MAAgB/a,EAAMwZ,SAAWxZ,EAAMy5B,SACtDx2B,EAASY,eACc,MAAd7D,EAAM+a,MAAgB/a,EAAMwZ,SAAWxZ,EAAMy5B,SACtDx2B,EAASa,eACQ,MAARiX,EACTge,GAAqBz0B,IAAeC,SACnB,MAARwW,EACTge,GAAqBz0B,IAAeG,WACnB,MAARsW,EACTge,GAAqBz0B,IAAeI,eACnB,MAARqW,EACTge,GAAqBz0B,IAAeK,cACnB,MAARoW,EACTge,GAAqBz0B,IAAeM,MACnB,MAARmW,EACToH,EAAUP,IAAY3R,MACL,MAAR8K,EACToH,EAAUP,IAAYhQ,OACL,MAARmJ,EACToH,EAAUP,IAAY7R,MACL,MAARgL,EACToH,EAAUP,IAAYuQ,WACL,UAARpX,GAEP,CACEtM,IAAWC,QACXD,IAAWsE,KACXtE,IAAW0E,MACX1E,IAAWwE,SACXzL,SAASoG,IAEX3K,EAASgV,aAAiBL,KAAcC,eAlF1C2f,EAAkB,2BAAD,OACY9f,EAAanS,WAAW2I,KADpC,QAwFQ,UAAzBlO,EAAME,OAAOo5B,UACI,UAAft5B,EAAM7B,MACR8E,EAASs2B,YAAc,OAGvB,CAAC,aAAc,YAAa,UAAW,aAAa/xB,SAClDxH,EAAM+a,MAERrD,IACC,CAACvK,IAAWC,IAAKD,IAAWM,MAAMjG,SAASkQ,EAAaxK,aACzD,CACA,IAAIysB,EAAQ35B,EAAMw5B,SAAW,GAAK,EAC9BI,EACY,cAAd55B,EAAM+a,KACD4e,EACa,eAAd35B,EAAM+a,IACN4e,EACA,EACFE,EACY,YAAd75B,EAAM+a,KACD4e,EACa,cAAd35B,EAAM+a,IACN4e,EACA,EACFG,EAASF,EACTG,EAASF,EAWb,GAVoB,KAAhBhsB,GACFisB,EAASD,EACTE,GAAUH,GACe,MAAhB/rB,GACTisB,GAAUF,EACVG,GAAUF,GACe,MAAhBhsB,IACTisB,GAAUD,EACVE,EAASH,GAEQ,UAAf55B,EAAM7B,KAAkB,CAC1B,IAAIoH,EAAU,eAAQmS,EAAanS,YAC/BkR,EAAShQ,SAAWkQ,EAAKlQ,UAC3BlB,EAAW4C,KAAOuP,EAAanS,WAAW4C,KAAO2xB,EACjDv0B,EAAW8C,IAAMqP,EAAanS,WAAW8C,IAAM0xB,GAEjD92B,EACEmX,aAAY,2BACP1C,GADM,IAETnS,WAAYA,WAIZkR,EAAShQ,SAAWkQ,EAAKlQ,UAC3BgQ,EAAShQ,QAAU+a,OAAOwY,OAAOrjB,EAAKlQ,SACtCxD,EACEg3B,aAAgB,2BACXviB,GADU,IAEbnS,WAAW,2BACNmS,EAAanS,YADR,IAER4C,KAAMuP,EAAanS,WAAW4C,KAAO2xB,EACrCzxB,IAAKqP,EAAanS,WAAW8C,IAAM0xB,YASnD,CACE92B,EACA4Q,EACA6D,EACAigB,EACAlhB,EAAShQ,QACTkQ,EAAKlQ,UAGHyzB,GAAgBn6B,uBAAY,WAChCkD,EAASk3B,aAAYziB,IACrB8f,EAAkB,MACjB,CAACv0B,EAAUyU,EAAc8f,IAEtB4C,GAAiBr6B,sBAAW,sBAChC,gEAAAqH,EAAA,yDAAOizB,IAAP,iCACMt8B,EAASvB,SAASC,cAAc,UAChCuB,EAAMD,EAAOrB,WAAW,MAExB3H,EAAQ+iC,GAAarxB,QAAQ1R,MAAQkS,EACrCjS,EAAS8iC,GAAarxB,QAAQzR,OAASiS,EAEvCyxB,EAPN,eAOmBxiB,EAASzP,QAAQiyB,OAClCxiB,EAASzP,QAAQ6zB,SAAS,CACxBljC,EAAG,EACHC,EAAG,EACHxC,QAAS,EACTC,QAAS,EACT6U,OAAQ,EACRC,OAAQ,EACRG,SAAU,EACVhV,MAAO+iC,GAAarxB,QAAQ1R,MAC5BC,OAAQ8iC,GAAarxB,QAAQzR,SAE/BkhB,EAASzP,QAAQ8zB,QAEbpkB,EAAa1P,QArBnB,wBAsBQ+zB,EAAerkB,EAAa1P,QAAQrI,UAAU,CAAE6I,eAtBxD,UAuByBwzB,aAAgBD,GAvBzC,QAuBIE,EAvBJ,mBAyBMtkB,EAAa3P,QAzBnB,wBA0BQk0B,EAAevkB,EAAa3P,QAAQrI,UAAU,CAAE6I,eA1BxD,UA2ByBwzB,aAAgBE,GA3BzC,QA2BIC,EA3BJ,mBA6BMvkB,EAAgB5P,UAAW4zB,EA7BjC,wBA8BQQ,EAAkBxkB,EAAgB5P,QAAQrI,UAAU,CACtD6I,eA/BN,UAiC4BwzB,aAAgBI,GAjC5C,QAiCIC,EAjCJ,kBAoCE5kB,EAASzP,QAAQ6zB,SAASxtB,IAAEiuB,KAAKrC,EAAO,CAAC,eACzCxiB,EAASzP,QAAQ8zB,OACjBx8B,EAAOhJ,MAAQA,EACfgJ,EAAO/I,OAASA,EAEZ0lC,GACF18B,EAAIg9B,UACFN,EACA,EACA,EACAA,EAAa3lC,MACb2lC,EAAa1lC,QAGb4lC,GACF58B,EAAIg9B,UACFJ,EACA,EACA,EACAA,EAAa7lC,MACb6lC,EAAa5lC,QAGb8lC,GACF98B,EAAIg9B,UACFF,EACA,EACA,EACAA,EAAgB/lC,MAChB+lC,EAAgB9lC,SAGhBqlC,EApEN,0CAoEoBt8B,EAAOK,UAAU,cApErC,eAqEM7H,EAAYyH,EAAIzB,aAAa,EAAG,EAAGxH,EAAOC,GArEhD,kBAsESuB,GAtET,4CAwEA,CACEuhC,GAAarxB,QACbyP,EAASzP,QACT0P,EAAa1P,QACb2P,EAAa3P,QACb4P,EAAgB5P,UAIdw0B,GAAwBl7B,sBAAW,sBAAC,kCAAAqH,EAAA,0DACpC8O,EAASzP,UAAWoxB,GAAiBpxB,QADD,iCAGpCxD,EAASi4B,cAAU,IAHiB,SAIhBd,KAJgB,cAIhCe,EAJgC,OAKpCl4B,EAASi4B,cAAU,IACf58B,EAAO88B,aAAcD,GACrBE,EAAa,IAAIC,KACnB,CAACh9B,GADc,UAEZu5B,GAAiBpxB,QAAQjF,GAFb,QAGf,CACErD,KAAM,eAINo9B,EAAW,IAAIC,UACVC,OAAO,QAASJ,GACzBE,EAASE,OAAO,WAAY5D,GAAiBpxB,QAAQjF,IAjBjB,UAmB9B6sB,KAAcqN,gBAAgBH,GAnBA,0DAqBpCt4B,EAASwrB,aAAW,CAAEC,QAAS,KAAIA,WArBC,0DAwBvC,CACDzrB,EACA40B,GAAiBpxB,SAAWoxB,GAAiBpxB,QAAQjF,IACpD0U,EAASzP,QACV2zB,KAGIuB,GAAoB57B,sBAAW,sBAAC,uBAAAqH,EAAA,SAAAA,EAAA,0DAChC8O,EAASzP,UAAWoxB,GAAiBpxB,QADL,iCAGhCxD,EAASi4B,cAAU,IAHa,SAIVd,IAAe,GAJL,OAI5B7jC,EAJ4B,OAKhC0M,EAASi4B,cAAU,KACf3gC,EAAM,IAAIqhC,EAAI,CAChB7mC,MAAO+iC,GAAarxB,QAAQ1R,MAAQkS,EACpCjS,OAAQ8iC,GAAarxB,QAAQzR,OAASiS,EACtC1S,UAAWqnC,EAAIpnC,KAAKe,WAElBsH,aAAatG,GAGbslC,EAAMthC,EAAI8D,cAEV+I,EAAI5K,SAASC,cAAc,MAC7B+e,MAAQ,gBACVpU,EAAE00B,KAAOD,EACTz0B,EAAE20B,SAAF,UAAgBlE,GAAiBpxB,QAAQjF,GAAzC,QACA4F,EAAE40B,QACFzzB,OAAO/J,IAAIy9B,gBAAgBJ,GArBK,kDAuBhCh0B,QAAQC,IAAR,MACA7E,EAASwrB,aAAW,CAAEC,QAAS,KAAIA,WAxBH,0DA2BnC,CACDzrB,EACA40B,GAAiBpxB,SAAWoxB,GAAiBpxB,QAAQjF,IACpD0U,EAASzP,QACV2zB,KAmDF,OAhDAxzB,qBAAU,WACJyf,GAAQA,EAAK7kB,IAAM61B,EAAO71B,KACvBuV,GACH9T,EAASi5B,aAAU7E,EAAO71B,KAEvB22B,IACHl1B,EAASk5B,aAAsB9V,EAAK7kB,KAEjC+wB,EAAY1+B,QAAQoP,EAASm5B,gBAC7B3J,EAAS5+B,QAAQoP,EAASo5B,gBAC1BhlB,EAASxjB,QAAQoP,EAASq5B,mBAGhC,CAACjW,IAEJzf,qBAAU,WACR,IAAM21B,EAAWC,aAAY,WAC3B7lB,EAAKlQ,SAAW,IACf,KACGg2B,EAAcvD,WAAW+B,GAAuB,KAChDyB,EAAoBF,YAAYvB,GAAuB,KAE7D,OAAO,WACL0B,cAAcJ,GACdI,cAAcD,GACdE,aAAaH,MAEd,IAEH71B,qBAAU,YAELuQ,GACDqK,OAAOC,KAAK3W,GAAgB+xB,OAAM,SAACC,GAAD,OAAOhyB,EAAegyB,OACxD5mB,EAASzP,UAETxD,EAAS85B,cAAU,IACnBtE,QAED,CAAC3tB,IAEJlE,qBAAU,WACRixB,GAAiBpxB,QAAUsQ,IAC1B,CAACA,IAEJnQ,qBAAU,WACRkxB,GAAarxB,QAAUpB,IACtB,CAACA,IAGF,qCACE,cAAC23B,EAAA,EAAD,CAAQx4B,MAAOuS,EAAgBA,EAAc7I,KAAO,OACnD6pB,IAAiBE,IAAkBC,KAAgBnhB,EAClD,cAACgF,EAAA,EAAD,IAEA,eAAClb,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,OAAO8L,QAAQ,OAAOC,cAAc,SAA7D,UACE,cAAC,IAAD,CACEk8B,WAAY,CAAC,OACbC,WAAY7D,KAEd,cAAC,IAAD,CACE4D,WAAY,CAAC,OACbE,gBAAgB,QAChBD,WAAY7D,KAEd,eAACx4B,EAAA,EAAD,CAAK9L,MAAM,OAAOC,OAAO,oBAAoB8L,QAAQ,OAArD,UACE,cAAC,GAAD,CACEohB,OAAQA,EACRC,UAAWA,EACXmQ,WAAYA,GACZvc,iBAAkB0hB,EAClBzhB,sBAAuBqiB,KAEzB,cAAC,GAAD,CACEtjC,MAAM,qBACNoiC,WAAW,UACXjN,SAAS,SAHX,SAKE,cAAC,GAAD,CACEnU,iBAAkB0hB,EAClBzhB,sBAAuBqiB,GACvBpiB,sBAAuBwE,GACvBvE,SAAUA,EACVC,aAAcA,EACdC,aAAcA,EACdC,gBAAiBA,MAGrB,cAAC,GAAD,OAEF,cAAC,GAAD,CACE3W,SAAU44B,GACV34B,UAAW64B,GACX54B,UAAW64B,GACX51B,uBAAwBY,GACxBX,cAAe64B,QAIrB,cAAC,GAAD,CACEtrB,KAAMknB,EACNp9B,KAAgC,IAA1Bo9B,EAAe1jC,OACrBqrB,SAAU,kBAAMsY,EAAkB,KAClCjL,UAAW2N,U,iGChkBbjV,EAAYC,aAAW,SAACtmB,GAAD,MAAY,CACvC+qB,OAAO,aACL9nB,SAAU,WACV0iB,aAAc3lB,EAAMgW,MAAM2P,aAC1BzlB,gBAAiB,cACjB,UAAW,CACTA,gBAAiB,eAEnBulB,OAAQ,oBACRtvB,MAAO,QACN6J,EAAMw+B,YAAYC,GAAG,MAAQ,CAC5BtoC,MAAO,SAGXuoC,WAAY,CACVvS,QAASnsB,EAAMuD,QAAQ,EAAG,GAC1BnN,OAAQ,OACR6M,SAAU,WACV07B,cAAe,OACfz8B,QAAS,OACTI,WAAY,SACZD,eAAgB,UAElBu8B,UAAW,CACTxmC,MAAO,UACPjC,MAAO,QAET0oC,WAAY,CACV1S,QAASnsB,EAAMuD,QAAQ,EAAG,EAAG,EAAG,GAEhCu7B,YAAY,cAAD,OAAgB9+B,EAAMuD,QAAQ,GAA9B,OACXmjB,WAAY1mB,EAAM2mB,YAAYC,OAAO,SACrCzwB,MAAO,YA+BIk1B,IA3BG,SAACrnB,GAAW,IACpBzC,EAAoByC,EAApBzC,MAAOsB,EAAamB,EAAbnB,SAET2kB,EAAUnB,IAKhB,OACE,sBAAKP,UAAW0B,EAAQuD,OAAxB,UACE,qBAAKjF,UAAW0B,EAAQkX,WAAxB,SACE,cAAC,IAAD,MAEF,cAAC,IAAD,CACEjN,YAAY,SACZjK,QAAS,CACPqE,KAAMrE,EAAQoX,UACdG,MAAOvX,EAAQqX,YAEjBt9B,MAAOA,EACPgd,WAAY,CAAE,aAAc,UAC5B1b,SAjBe,SAACzB,GACpByB,EAASzB,EAAME,OAAOC","file":"static/js/6.05668610.chunk.js","sourcesContent":["/**\n * @file tgajs - Javascript decoder & (experimental) encoder for TGA files\n * @desc tgajs is a fork from https://github.com/vthibault/jsTGALoader\n * @author Vincent Thibault (Original author)\n * @author Lukas Schmitt\n * @version 1.0.0\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\n Redistribution and use in source and binary forms, with or without modification,\n are permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n list of conditions and the following disclaimer.\n * Redistributions in binary form must reproduce the above copyright notice,\n this list of conditions and the following disclaimer in the documentation\n and/or other materials provided with the distribution.\n\n THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\n ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\n ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n/**\n * TGA Namespace\n * @constructor\n */\nfunction Targa() {\n  if (arguments.length == 1) {\n    var h = arguments[0];\n\n    this.header = createHeader(h);\n    setHeaderBooleans(this.header);\n    checkHeader(this.header);\n  }\n}\n\n/**\n * @var {object} TGA type constants\n */\nTarga.Type = {\n  NO_DATA: 0,\n  INDEXED: 1,\n  RGB: 2,\n  GREY: 3,\n  RLE_INDEXED: 9,\n  RLE_RGB: 10,\n  RLE_GREY: 11,\n};\n\n/**\n * @var {object} TGA origin constants\n */\nTarga.Origin = {\n  BOTTOM_LEFT: 0x00,\n  BOTTOM_RIGHT: 0x01,\n  TOP_LEFT: 0x02,\n  TOP_RIGHT: 0x03,\n  SHIFT: 0x04,\n  MASK: 0x30,\n  ALPHA: 0x08,\n};\n\nTarga.HEADER_SIZE = 18;\nTarga.FOOTER_SIZE = 26;\nTarga.LITTLE_ENDIAN = true;\nTarga.RLE_BIT = 0x80;\nTarga.RLE_MASK = 0x7f;\nTarga.RLE_PACKET = 1;\nTarga.RAW_PACKET = 2;\nTarga.SIGNATURE = \"TRUEVISION-XFILE.\\0\";\n\n/**\n * Sets header or default values\n * @param header header\n * @returns {Object}\n */\nfunction createHeader(header) {\n  return {\n    /* 0x00  BYTE */ idLength: defaultFor(header.idLength, 0),\n    /* 0x01  BYTE */ colorMapType: defaultFor(header.colorMapType, 0),\n    /* 0x02  BYTE */ imageType: defaultFor(header.imageType, Targa.Type.RGB),\n    /* 0x03  WORD */ colorMapIndex: defaultFor(header.colorMapIndex, 0),\n    /* 0x05  WORD */ colorMapLength: defaultFor(header.colorMapLength, 0),\n    /* 0x07  BYTE */ colorMapDepth: defaultFor(header.colorMapDepth, 0),\n    /* 0x08  WORD */ offsetX: defaultFor(header.offsetX, 0),\n    /* 0x0a  WORD */ offsetY: defaultFor(header.offsetY, 0),\n    /* 0x0c  WORD */ width: defaultFor(header.width, 0),\n    /* 0x0e  WORD */ height: defaultFor(header.height, 0),\n    /* 0x10  BYTE */ pixelDepth: defaultFor(header.pixelDepth, 32),\n    /* 0x11  BYTE */ flags: defaultFor(header.flags, 8),\n  };\n}\n\nfunction defaultFor(arg, val) {\n  return typeof arg !== \"undefined\" ? arg : val;\n}\n\n/**\n * Write footer of TGA file to view\n * Byte 0-3 - Extension Area Offset, 0 if no Extension Area exists\n * Byte 4-7 - Developer Directory Offset, 0 if no Developer Area exists\n * Byte 8-25 - Signature\n * @param {Uint8Array} footer\n */\nfunction writeFooter(footer) {\n  var signature = Targa.SIGNATURE;\n  var offset = footer.byteLength - signature.length;\n  for (var i = 0; i < signature.length; i++) {\n    footer[offset + i] = signature.charCodeAt(i);\n  }\n}\n\n/**\n * Write header of TGA file to view\n * @param header\n * @param view DataView\n */\nfunction writeHeader(header, view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  view.setUint8(0x00, header.idLength);\n  view.setUint8(0x01, header.colorMapType);\n  view.setUint8(0x02, header.imageType);\n  view.setUint16(0x03, header.colorMapIndex, littleEndian);\n  view.setUint16(0x05, header.colorMapLength, littleEndian);\n  view.setUint8(0x07, header.colorMapDepth);\n  view.setUint16(0x08, header.offsetX, littleEndian);\n  view.setUint16(0x0a, header.offsetY, littleEndian);\n  view.setUint16(0x0c, header.width, littleEndian);\n  view.setUint16(0x0e, header.height, littleEndian);\n  view.setUint8(0x10, header.pixelDepth);\n  view.setUint8(0x11, header.flags);\n}\n\nfunction readHeader(view) {\n  var littleEndian = Targa.LITTLE_ENDIAN;\n\n  // Not enough data to contain header ?\n  if (view.byteLength < 0x12) {\n    throw new Error(\"Targa::load() - Not enough data to contain header\");\n  }\n\n  var header = {};\n  header.idLength = view.getUint8(0x00);\n  header.colorMapType = view.getUint8(0x01);\n  header.imageType = view.getUint8(0x02);\n  header.colorMapIndex = view.getUint16(0x03, littleEndian);\n  header.colorMapLength = view.getUint16(0x05, littleEndian);\n  header.colorMapDepth = view.getUint8(0x07);\n  header.offsetX = view.getUint16(0x08, littleEndian);\n  header.offsetY = view.getUint16(0x0a, littleEndian);\n  header.width = view.getUint16(0x0c, littleEndian);\n  header.height = view.getUint16(0x0e, littleEndian);\n  header.pixelDepth = view.getUint8(0x10);\n  header.flags = view.getUint8(0x11);\n\n  return header;\n}\n\n/**\n * Set additional header booleans\n * @param header\n */\nfunction setHeaderBooleans(header) {\n  header.hasEncoding =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.RLE_RGB ||\n    header.imageType === Targa.Type.RLE_GREY;\n  header.hasColorMap =\n    header.imageType === Targa.Type.RLE_INDEXED ||\n    header.imageType === Targa.Type.INDEXED;\n  header.isGreyColor =\n    header.imageType === Targa.Type.RLE_GREY ||\n    header.imageType === Targa.Type.GREY;\n  header.bytePerPixel = header.pixelDepth >> 3;\n  header.origin = (header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  header.alphaBits = header.flags & Targa.Origin.ALPHA;\n}\n\n/**\n * Check the header of TGA file to detect errors\n *\n * @param {object} header tga header structure\n * @throws Error\n */\nfunction checkHeader(header) {\n  // What the need of a file without data ?\n  if (header.imageType === Targa.Type.NO_DATA) {\n    throw new Error(\"Targa::checkHeader() - No data\");\n  }\n\n  // Indexed type\n  if (header.hasColorMap) {\n    if (header.colorMapLength > 256 || header.colorMapType !== 1) {\n      throw new Error(\n        \"Targa::checkHeader() - Unsupported colormap for indexed type\"\n      );\n    }\n    if (\n      header.colorMapDepth !== 16 &&\n      header.colorMapDepth !== 24 &&\n      header.colorMapDepth !== 32\n    ) {\n      throw new Error(\"Targa::checkHeader() - Unsupported colormap depth\");\n    }\n  } else {\n    if (header.colorMapType) {\n      throw new Error(\n        \"Targa::checkHeader() - Why does the image contain a palette ?\"\n      );\n    }\n  }\n\n  // Check image size\n  if (header.width <= 0 || header.height <= 0) {\n    throw new Error(\"Targa::checkHeader() - Invalid image size\");\n  }\n\n  // Check pixel size\n  if (\n    header.pixelDepth !== 8 &&\n    header.pixelDepth !== 16 &&\n    header.pixelDepth !== 24 &&\n    header.pixelDepth !== 32\n  ) {\n    throw new Error(\n      'Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"'\n    );\n  }\n\n  // Check alpha size\n  if (\n    header.alphaBits !== 0 &&\n    header.alphaBits !== 1 &&\n    header.alphaBits !== 8\n  ) {\n    throw new Error(\"Targa::checkHeader() - Unsuppported alpha size\");\n  }\n}\n\n/**\n * Decode RLE compression\n *\n * @param {Uint8Array} data\n * @param {number} bytesPerPixel bytes per Pixel\n * @param {number} outputSize in byte: width * height * pixelSize\n */\nfunction decodeRLE(data, bytesPerPixel, outputSize) {\n  var pos, c, count, i, offset;\n  var pixels, output;\n\n  output = new Uint8Array(outputSize);\n  pixels = new Uint8Array(bytesPerPixel);\n  offset = 0; // offset in data\n  pos = 0; // offset for output\n\n  while (pos < outputSize) {\n    c = data[offset++]; // current byte to check\n    count = (c & Targa.RLE_MASK) + 1; // repetition count of pixels, the lower 7 bits + 1\n\n    // RLE packet, if highest bit is set to 1.\n    if (c & Targa.RLE_BIT) {\n      // Copy pixel values to be repeated to tmp array\n      for (i = 0; i < bytesPerPixel; ++i) {\n        pixels[i] = data[offset++];\n      }\n\n      // Copy pixel values * count to output\n      for (i = 0; i < count; ++i) {\n        output.set(pixels, pos);\n        pos += bytesPerPixel;\n      }\n    }\n\n    // Raw packet (Non-Run-Length Encoded)\n    else {\n      count *= bytesPerPixel;\n      for (i = 0; i < count; ++i) {\n        output[pos++] = data[offset++];\n      }\n    }\n  }\n\n  if (pos > outputSize) {\n    throw new Error(\n      \"Targa::decodeRLE() - Read bytes: \" +\n        pos +\n        \" Expected bytes: \" +\n        outputSize\n    );\n  }\n\n  return output;\n}\n\n/**\n * Encode ImageData object with RLE compression\n *\n * @param header\n * @param imageData from canvas to compress\n */\nfunction encodeRLE(header, imageData) {\n  var maxRepetitionCount = 128;\n  var i;\n  var data = imageData;\n  var output = []; // output size is unknown\n  var pos = 0; // pos in imageData array\n  var bytesPerPixel = header.pixelDepth >> 3;\n  var offset = 0;\n  var packetType, packetLength, packetHeader;\n  var tgaLength = header.width * header.height * bytesPerPixel;\n  var isSamePixel = function isSamePixel(pos, offset) {\n    for (var i = 0; i < bytesPerPixel; i++) {\n      if (data[pos * bytesPerPixel + i] !== data[offset * bytesPerPixel + i]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  var getPacketType = function (pos) {\n    if (isSamePixel(pos, pos + 1)) {\n      return Targa.RLE_PACKET;\n    }\n    return Targa.RAW_PACKET;\n  };\n\n  while (pos * bytesPerPixel < data.length && pos * bytesPerPixel < tgaLength) {\n    // determine packet type\n    packetType = getPacketType(pos);\n\n    // determine packet length\n    packetLength = 0;\n    if (packetType === Targa.RLE_PACKET) {\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        isSamePixel(pos, pos + packetLength)\n      ) {\n        packetLength++;\n      }\n    } else {\n      // packetType === Targa.RAW_PACKET\n      while (\n        pos + packetLength < data.length &&\n        packetLength < maxRepetitionCount &&\n        getPacketType(pos + packetLength) === Targa.RAW_PACKET\n      ) {\n        packetLength++;\n      }\n    }\n\n    // write packet header\n    packetHeader = packetLength - 1;\n    if (packetType === Targa.RLE_PACKET) {\n      packetHeader |= Targa.RLE_BIT;\n    }\n    output[offset++] = packetHeader;\n\n    // write rle packet pixel OR raw pixels\n    if (packetType === Targa.RLE_PACKET) {\n      for (i = 0; i < bytesPerPixel; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel;\n    } else {\n      for (i = 0; i < bytesPerPixel * packetLength; i++) {\n        output[i + offset] = data[i + pos * bytesPerPixel];\n      }\n      offset += bytesPerPixel * packetLength;\n    }\n    pos += packetLength;\n  }\n\n  return new Uint8Array(output);\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} indexes - index to colorMap\n * @param {Array} colorMap\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData8bits(\n  imageData,\n  indexes,\n  colorMap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, index, offset, i, x, y;\n  var bytePerPixel = this.header.colorMapDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      offset = (x + width * y) * 4;\n      index = indexes[i] * bytePerPixel;\n      if (bytePerPixel === 4) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = colorMap[index + 3]; // alpha\n      } else if (bytePerPixel === 3) {\n        imageData[offset] = colorMap[index + 2]; // red\n        imageData[offset + 1] = colorMap[index + 1]; // green\n        imageData[offset + 2] = colorMap[index]; // blue\n        imageData[offset + 3] = 255; // alpha\n      } else if (bytePerPixel === 2) {\n        color = colorMap[index] | (colorMap[index + 1] << 8);\n        imageData[offset] = (color & 0x7c00) >> 7; // red\n        imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n        imageData[offset + 2] = (color & 0x001f) << 3; // blue\n        imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n      }\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i] | (pixels[i + 1] << 8);\n      offset = (x + width * y) * 4;\n      imageData[offset] = (color & 0x7c00) >> 7; // red\n      imageData[offset + 1] = (color & 0x03e0) >> 2; // green\n      imageData[offset + 2] = (color & 0x001f) << 3; // blue\n      imageData[offset + 3] = color & 0x8000 ? 0 : 255; // overlay 0 = opaque and 1 = transparent Discussion at: https://bugzilla.gnome.org/show_bug.cgi?id=683381\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (24bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData24bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var offset, i, x, y;\n  var bpp = this.header.pixelDepth >> 3;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += bpp) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 3] = 255; // alpha\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      imageData[offset + 2] = pixels[i]; // blue\n      imageData[offset + 1] = pixels[i + 1]; // green\n      imageData[offset] = pixels[i + 2]; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (32bits). Uses pre multiplied alpha values\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data from TGA file\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageData32bitsPre(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var i, x, y, offset, alpha;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 4) {\n      offset = (x + width * y) * 4;\n      alpha = pixels[i + 3] * 255; // TODO needs testing\n      imageData[offset + 2] = pixels[i] / alpha; // blue\n      imageData[offset + 1] = pixels[i + 1] / alpha; // green\n      imageData[offset] = pixels[i + 2] / alpha; // red\n      imageData[offset + 3] = pixels[i + 3]; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (8bits grey)\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey8bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i++) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color; // red\n      imageData[offset + 1] = color; // green\n      imageData[offset + 2] = color; // blue\n      imageData[offset + 3] = 255; // alpha\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Return a ImageData object from a TGA file (16bits grey) 8 Bit RGB and 8 Bit Alpha\n *\n * @param {Array} imageData - ImageData to bind\n * @param {Array} pixels data\n * @param {Array} colormap - not used\n * @param {number} width\n * @param {number} y_start - start at y pixel.\n * @param {number} x_start - start at x pixel.\n * @param {number} y_step  - increment y pixel each time.\n * @param {number} y_end   - stop at pixel y.\n * @param {number} x_step  - increment x pixel each time.\n * @param {number} x_end   - stop at pixel x.\n * @returns {Array} imageData\n */\nfunction getImageDataGrey16bits(\n  imageData,\n  pixels,\n  colormap,\n  width,\n  y_start,\n  y_step,\n  y_end,\n  x_start,\n  x_step,\n  x_end\n) {\n  var color, offset, i, x, y;\n\n  for (i = 0, y = y_start; y !== y_end; y += y_step) {\n    for (x = x_start; x !== x_end; x += x_step, i += 2) {\n      color = pixels[i];\n      offset = (x + width * y) * 4;\n      imageData[offset] = color;\n      imageData[offset + 1] = color;\n      imageData[offset + 2] = color;\n      imageData[offset + 3] = pixels[i + 1];\n    }\n  }\n\n  return imageData;\n}\n\n/**\n * Open a targa file using XHR, be aware with Cross Domain files...\n *\n * @param {string} path - Path of the filename to load\n * @param {function} callback - callback to trigger when the file is loaded\n */\nTarga.prototype.open = function targaOpen(path, callback) {\n  var req,\n    tga = this;\n  req = new XMLHttpRequest();\n  req.open(\"GET\", path, true);\n  req.responseType = \"arraybuffer\";\n  req.onload = function () {\n    if (this.status === 200) {\n      tga.arrayBuffer = req.response;\n      tga.load(tga.arrayBuffer);\n      if (callback) {\n        callback.call(tga);\n      }\n    }\n  };\n  req.send(null);\n};\n\nfunction readFooter(view) {\n  var offset = view.byteLength - Targa.FOOTER_SIZE;\n  var signature = Targa.SIGNATURE;\n\n  var footer = {};\n\n  var signatureArray = new Uint8Array(\n    view.buffer,\n    offset + 0x08,\n    signature.length\n  );\n  var str = String.fromCharCode.apply(null, signatureArray);\n\n  if (!isSignatureValid(str)) {\n    footer.hasFooter = false;\n    return footer;\n  }\n\n  footer.hasFooter = true;\n  footer.extensionOffset = view.getUint32(offset, Targa.LITTLE_ENDIAN);\n  footer.developerOffset = view.getUint32(offset + 0x04, Targa.LITTLE_ENDIAN);\n  footer.hasExtensionArea = footer.extensionOffset !== 0;\n  footer.hasDeveloperArea = footer.developerOffset !== 0;\n\n  if (footer.extensionOffset) {\n    footer.attributeType = view.getUint8(footer.extensionOffset + 494);\n  }\n\n  return footer;\n}\n\nfunction isSignatureValid(str) {\n  var signature = Targa.SIGNATURE;\n\n  for (var i = 0; i < signature.length; i++) {\n    if (str.charCodeAt(i) !== signature.charCodeAt(i)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Load and parse a TGA file\n *\n * @param {ArrayBuffer} data - TGA file buffer array\n */\nTarga.prototype.load = function targaLoad(data) {\n  var dataView = new DataView(data);\n\n  this.headerData = new Uint8Array(data, 0, Targa.HEADER_SIZE);\n\n  this.header = readHeader(dataView); // Parse Header\n  setHeaderBooleans(this.header);\n  checkHeader(this.header); // Check if a valid TGA file (or if we can load it)\n\n  var offset = Targa.HEADER_SIZE;\n  // Move to data\n  offset += this.header.idLength;\n  if (offset >= data.byteLength) {\n    throw new Error(\"Targa::load() - No data\");\n  }\n\n  // Read palette\n  if (this.header.hasColorMap) {\n    var colorMapSize =\n      this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n    this.palette = new Uint8Array(data, offset, colorMapSize);\n    offset += colorMapSize;\n  }\n\n  var bytesPerPixel = this.header.pixelDepth >> 3;\n  var imageSize = this.header.width * this.header.height;\n  var pixelTotal = imageSize * bytesPerPixel;\n\n  if (this.header.hasEncoding) {\n    // RLE encoded\n    var RLELength = data.byteLength - offset - Targa.FOOTER_SIZE;\n    var RLEData = new Uint8Array(data, offset, RLELength);\n    this.imageData = decodeRLE(RLEData, bytesPerPixel, pixelTotal);\n  } else {\n    // RAW pixels\n    this.imageData = new Uint8Array(\n      data,\n      offset,\n      this.header.hasColorMap ? imageSize : pixelTotal\n    );\n  }\n\n  this.footer = readFooter(dataView);\n\n  if (\n    this.header.alphaBits !== 0 ||\n    (this.footer.hasExtensionArea &&\n      (this.footer.attributeType === 3 || this.footer.attributeType === 4))\n  ) {\n    this.footer.usesAlpha = true;\n  }\n};\n\n/**\n * Return a ImageData object from a TGA file\n *\n * @param {object} imageData - Optional ImageData to work with\n * @returns {object} imageData\n */\nTarga.prototype.getImageData = function targaGetImageData(imageData) {\n  var width = this.header.width;\n  var height = this.header.height;\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n  var getImageData;\n\n  // Create an imageData\n  if (!imageData) {\n    if (document) {\n      imageData = document\n        .createElement(\"canvas\")\n        .getContext(\"2d\")\n        .createImageData(width, height);\n    }\n    // In Thread context ?\n    else {\n      imageData = {\n        width: width,\n        height: height,\n        data: new Uint8ClampedArray(width * height * 4),\n      };\n    }\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0;\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1;\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0;\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1;\n    x_step = -1;\n    x_end = -1;\n  }\n\n  // TODO: use this.header.offsetX and this.header.offsetY ?\n\n  switch (this.header.pixelDepth) {\n    case 8:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey8bits\n        : getImageData8bits;\n      break;\n\n    case 16:\n      getImageData = this.header.isGreyColor\n        ? getImageDataGrey16bits\n        : getImageData16bits;\n      break;\n\n    case 24:\n      getImageData = getImageData24bits;\n      break;\n\n    case 32:\n      if (this.footer.hasExtensionArea) {\n        if (this.footer.attributeType === 3) {\n          // straight alpha\n          getImageData = getImageData32bits;\n        } else if (this.footer.attributeType === 4) {\n          // pre multiplied alpha\n          getImageData = getImageData32bitsPre;\n        } else {\n          // ignore alpha values if attributeType set to 0, 1, 2\n          getImageData = getImageData24bits;\n        }\n      } else {\n        if (this.header.alphaBits !== 0) {\n          getImageData = getImageData32bits;\n        } else {\n          // 32 bits Depth, but alpha Bits set to 0\n          getImageData = getImageData24bits;\n        }\n      }\n\n      break;\n  }\n\n  getImageData.call(\n    this,\n    imageData.data,\n    this.imageData,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n  return imageData;\n};\n\n/** (Experimental)\n *  Encodes imageData into TGA format\n *  Only TGA True Color 32 bit with optional RLE encoding is supported for now\n * @param imageData\n */\nTarga.prototype.setImageData = function targaSetImageData(imageData) {\n  if (!imageData) {\n    throw new Error(\"Targa::setImageData() - imageData argument missing\");\n  }\n\n  var width = this.header.width;\n  var height = this.header.height;\n  var expectedLength = width * height * (this.header.pixelDepth >> 3);\n  var origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n  var x_start, x_step, x_end, y_start, y_step, y_end;\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n    y_start = 0; // start bottom, step upward\n    y_step = 1;\n    y_end = height;\n  } else {\n    y_start = height - 1; // start at top, step downward\n    y_step = -1;\n    y_end = -1;\n  }\n\n  if (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n    x_start = 0; // start left, step right\n    x_step = 1;\n    x_end = width;\n  } else {\n    x_start = width - 1; // start right, step left\n    x_step = -1;\n    x_end = -1;\n  }\n\n  if (!this.imageData) {\n    this.imageData = new Uint8Array(expectedLength);\n  }\n\n  // start top left if origin is bottom left\n  // swapping order of first two arguments does the trick for writing\n  // this converts canvas data to internal tga representation\n  // this.imageData contains tga data\n  getImageData32bits(\n    this.imageData,\n    imageData.data,\n    this.palette,\n    width,\n    y_start,\n    y_step,\n    y_end,\n    x_start,\n    x_step,\n    x_end\n  );\n\n  var data = this.imageData;\n\n  if (this.header.hasEncoding) {\n    data = encodeRLE(this.header, data);\n  }\n\n  var bufferSize = Targa.HEADER_SIZE + data.length + Targa.FOOTER_SIZE;\n  var buffer = new ArrayBuffer(bufferSize);\n\n  this.arrayBuffer = buffer;\n  // create array, useful for inspecting data while debugging\n  this.headerData = new Uint8Array(buffer, 0, Targa.HEADER_SIZE);\n  this.RLEData = new Uint8Array(buffer, Targa.HEADER_SIZE, data.length);\n  this.footerData = new Uint8Array(\n    buffer,\n    Targa.HEADER_SIZE + data.length,\n    Targa.FOOTER_SIZE\n  );\n\n  var headerView = new DataView(this.headerData.buffer);\n  writeHeader(this.header, headerView);\n  this.RLEData.set(data);\n  writeFooter(this.footerData);\n};\n\n/**\n * Return a canvas with the TGA render on it\n *\n * @returns {object} CanvasElement\n */\nTarga.prototype.getCanvas = function targaGetCanvas() {\n  var canvas, ctx, imageData;\n\n  canvas = document.createElement(\"canvas\");\n  ctx = canvas.getContext(\"2d\");\n  imageData = ctx.createImageData(this.header.width, this.header.height);\n\n  canvas.width = this.header.width;\n  canvas.height = this.header.height;\n\n  ctx.putImageData(this.getImageData(imageData), 0, 0);\n\n  return canvas;\n};\n\n/**\n * Return a dataURI of the TGA file\n *\n * @param {string} type - Optional image content-type to output (default: image/png)\n * @returns {string} url\n */\nTarga.prototype.getDataURL = function targaGetDatURL(type) {\n  return this.getCanvas().toDataURL(type || \"image/png\");\n};\n\n/**\n * Return a objectURL of the TGA file\n * The url can be used in the download attribute of a link\n * @returns {string} url\n */\nTarga.prototype.getBlobURL = function targetGetBlobURL() {\n  if (!this.arrayBuffer) {\n    throw new Error(\"Targa::getBlobURL() - No data available for blob\");\n  }\n  var blob = new Blob([this.arrayBuffer], { type: \"image/x-tga\" });\n  return URL.createObjectURL(blob);\n};\n\nexport default Targa;\n","import { Tooltip } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst LightTooltip = withStyles((theme) => ({\r\n  tooltip: {\r\n    backgroundColor: \"white\",\r\n    color: \"rgba(0, 0, 0, 0.87)\",\r\n    boxShadow: \"rgba(0, 0, 0, 0.2)\",\r\n    fontSize: 11,\r\n  },\r\n  arrow: {\r\n    color: \"white\",\r\n  },\r\n}))(Tooltip);\r\n\r\nexport default LightTooltip;\r\n","import React, { useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport {\r\n  Popover,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n} from \"@material-ui/core\";\r\n\r\nconst CustomOutlinedInput = styled(OutlinedInput)`\r\n  &.MuiOutlinedInput-root {\r\n    width: 100px !important;\r\n  }\r\n  .MuiOutlinedInput-input {\r\n    padding: 6px 14px;\r\n    border-bottom: none;\r\n    width: 40px;\r\n  }\r\n`;\r\n\r\nconst ZoomPopover = ({\r\n  anchorEl,\r\n  zoom,\r\n  setZoom,\r\n  onZoomIn,\r\n  onZoomOut,\r\n  onZoomFit,\r\n  onClose,\r\n}) => {\r\n  const handleZoomChange = useCallback(\r\n    (event) => {\r\n      setZoom(parseInt(event.target.value || 0) / 100.0);\r\n    },\r\n    [setZoom]\r\n  );\r\n\r\n  const handleFocus = useCallback((event) => event.target.select(), []);\r\n\r\n  const handleZoom100 = useCallback(() => {\r\n    setZoom(1);\r\n  }, [setZoom]);\r\n\r\n  return (\r\n    <Popover\r\n      open={Boolean(anchorEl)}\r\n      anchorEl={anchorEl}\r\n      onClose={onClose}\r\n      anchorOrigin={{\r\n        vertical: \"top\",\r\n        horizontal: \"right\",\r\n      }}\r\n      transformOrigin={{\r\n        vertical: \"bottom\",\r\n        horizontal: \"right\",\r\n      }}\r\n    >\r\n      <Box display=\"flex\" flexDirection=\"column\" p={4} width=\"200px\">\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomIn}>Zoom in</Button>\r\n          <Typography variant=\"body2\">Shift +</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomOut}>Zoom out</Button>\r\n          <Typography variant=\"body2\">Shift -&nbsp;</Typography>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Button onClick={onZoomFit}>Zoom to fit</Button>\r\n          <Typography variant=\"body2\">Shift 9</Typography>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          mb={2}\r\n        >\r\n          <Button onClick={handleZoom100}>Zoom to 100%</Button>\r\n          <Typography variant=\"body2\">Shift 0</Typography>\r\n        </Box>\r\n        <CustomOutlinedInput\r\n          id=\"zoom-value\"\r\n          value={zoom * 100}\r\n          onChange={handleZoomChange}\r\n          onFocus={handleFocus}\r\n          endAdornment={<InputAdornment position=\"end\">%</InputAdornment>}\r\n          labelWidth={0}\r\n          autoFocus={true}\r\n        />\r\n      </Box>\r\n    </Popover>\r\n  );\r\n};\r\n\r\nexport default React.memo(ZoomPopover);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  setZoom,\r\n  historyActionBack,\r\n  historyActionUp,\r\n} from \"redux/reducers/boardReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  IconButton as MuiIconButton,\r\n  Typography as MuiTypography,\r\n  Box,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ToggleButton as MuiToggleButton,\r\n  ToggleButtonGroup,\r\n} from \"@material-ui/lab\";\r\nimport {\r\n  Undo as UndoIcon,\r\n  Redo as RedoIcon,\r\n  KeyboardArrowUp as ArrowUpIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport { PaintingGuides } from \"constant\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ZoomPopover from \"dialogs/ZoomPopover\";\r\n\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst ToggleButton = styled(MuiToggleButton)(spacing);\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\n\r\nconst Wrapper = styled.div`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  padding: 10px 20px;\r\n  background: #151515;\r\n  z-index: 1201;\r\n`;\r\nconst ZoomButton = styled(Button)`\r\n  &.MuiButton-contained {\r\n    color: #fff;\r\n    background-color: rgba(255, 255, 255, 0.12);\r\n  }\r\n`;\r\n\r\nconst Toolbar = React.memo((props) => {\r\n  const {\r\n    onZoomIn,\r\n    onZoomOut,\r\n    onZoomFit,\r\n    onChangePaintingGuides,\r\n    onDownloadTGA,\r\n  } = props;\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const actionHistoryIndex = useSelector(\r\n    (state) => state.boardReducer.actionHistoryIndex\r\n  );\r\n  const actionHistory = useSelector(\r\n    (state) => state.boardReducer.actionHistory\r\n  );\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n\r\n  const handleChangePaintingGuides = useCallback(\r\n    (event, newFormats) => {\r\n      onChangePaintingGuides(newFormats);\r\n    },\r\n    [onChangePaintingGuides]\r\n  );\r\n\r\n  const handleUndoRedo = useCallback(\r\n    (isUndo = true) => {\r\n      if (isUndo) {\r\n        dispatch(historyActionBack());\r\n      } else {\r\n        dispatch(historyActionUp());\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleZoomPoperOpen = useCallback(\r\n    (event) => {\r\n      setAnchorEl(event.currentTarget);\r\n    },\r\n    [setAnchorEl]\r\n  );\r\n\r\n  const handleCloseZoomPoper = useCallback(() => {\r\n    setAnchorEl(null);\r\n  }, [setAnchorEl]);\r\n\r\n  const handleZoom = useCallback(\r\n    (value) => {\r\n      dispatch(setZoom(value));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignContent=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <Box display=\"flex\" justifyContent=\"start\" alignContent=\"center\">\r\n          <ToggleButtonGroup\r\n            value={paintingGuides}\r\n            onChange={handleChangePaintingGuides}\r\n            aria-label=\"Painting Guides\"\r\n          >\r\n            <ToggleButton value={PaintingGuides.CARMASK} aria-label=\"car-mask\">\r\n              <LightTooltip title=\"Toggle Car Mask Guide (HotKey: 1)\" arrow>\r\n                <Typography variant=\"caption\">car mask</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.WIREFRAME}\r\n              aria-label=\"wireframe\"\r\n            >\r\n              <LightTooltip title=\"Toggle Wireframe Guide (HotKey: 2)\" arrow>\r\n                <Typography variant=\"caption\">wireframe</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.SPONSORBLOCKS}\r\n              aria-label=\"sponsor-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Sponsor Blocks Guide (HotKey: 3)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">sponsor blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton\r\n              value={PaintingGuides.NUMBERBLOCKS}\r\n              aria-label=\"number-blocks\"\r\n            >\r\n              <LightTooltip\r\n                title=\"Toggle Number Blocks Guide (HotKey: 4)\"\r\n                arrow\r\n              >\r\n                <Typography variant=\"caption\">number blocks</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n            <ToggleButton value={PaintingGuides.GRID} aria-label=\"grid\">\r\n              <LightTooltip title=\"Toggle Grid Guide (HotKey: 5)\" arrow>\r\n                <Typography variant=\"caption\">grid</Typography>\r\n              </LightTooltip>\r\n            </ToggleButton>\r\n          </ToggleButtonGroup>\r\n        </Box>\r\n        <Box display=\"flex\" justifyContent=\"flex-end\" alignContent=\"center\">\r\n          <Button variant=\"outlined\" onClick={onDownloadTGA}>\r\n            Download TGA\r\n          </Button>\r\n          <LightTooltip title=\"Undo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === -1}\r\n              onClick={() => handleUndoRedo(true)}\r\n            >\r\n              <UndoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <LightTooltip title=\"Redo\" arrow>\r\n            <IconButton\r\n              disabled={actionHistoryIndex === actionHistory.length - 1}\r\n              onClick={() => handleUndoRedo(false)}\r\n            >\r\n              <RedoIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n\r\n          <ZoomButton\r\n            variant=\"contained\"\r\n            endIcon={<ArrowUpIcon />}\r\n            onClick={handleZoomPoperOpen}\r\n          >\r\n            {(zoom * 100).toFixed(2)} %\r\n          </ZoomButton>\r\n\r\n          <ZoomPopover\r\n            anchorEl={anchorEl}\r\n            zoom={zoom}\r\n            setZoom={handleZoom}\r\n            onZoomIn={onZoomIn}\r\n            onZoomOut={onZoomOut}\r\n            onZoomFit={onZoomFit}\r\n            onClose={handleCloseZoomPoper}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n});\r\n\r\nexport default Toolbar;\r\n","import Canvg from \"canvg\";\r\nimport React, { useRef, useState, useEffect } from \"react\";\r\nimport Konva from \"konva\";\r\nimport { mathRound2, hexToRgba } from \"helper\";\r\nimport { Image } from \"react-konva\";\r\n\r\nconst URLImage = ({\r\n  id,\r\n  src,\r\n  filterColor,\r\n  frameSize,\r\n  allowFit,\r\n  layer_data,\r\n  loadedStatus,\r\n  onLoadLayer,\r\n  tellSize,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const imageRef = useRef(null);\r\n  const shapeRef = useRef();\r\n  const [image, setImage] = useState(null);\r\n  const filters = [];\r\n\r\n  if (filterColor && filterColor.length) {\r\n    filters.push(Konva.Filters.RGBA);\r\n  }\r\n  const getPixelRatio = (node) => {\r\n    if (imageRef.current) {\r\n      return Math.max(\r\n        1,\r\n        imageRef.current.width / node.width(),\r\n        imageRef.current.height / node.height()\r\n      );\r\n    }\r\n    return 1;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loadedStatus !== false && loadedStatus !== true && onLoadLayer && id)\r\n      onLoadLayer(id, false);\r\n    loadImage();\r\n    return () => {\r\n      if (imageRef.current) {\r\n        imageRef.current.removeEventListener(\"load\", handleLoad);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (shapeRef.current) {\r\n      if (filterColor && filterColor.length) {\r\n        shapeRef.current.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // shapeRef.current.getLayer().batchDraw();\r\n      } else {\r\n        shapeRef.current.clearCache();\r\n      }\r\n    }\r\n  }, [filterColor]);\r\n\r\n  const handleLoad = async () => {\r\n    let originWidth =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.width\r\n        : frameSize.width / 2;\r\n    let originHeight =\r\n      !allowFit ||\r\n      (imageRef.current.width <= frameSize.width / 2 &&\r\n        imageRef.current.height <= frameSize.height / 2)\r\n        ? imageRef.current.height\r\n        : ((frameSize.width / 2) * imageRef.current.height) /\r\n          imageRef.current.width;\r\n    let width = props.width || originWidth;\r\n    let height = props.height || originHeight;\r\n\r\n    if (\r\n      src.toLowerCase().includes(\".svg\") &&\r\n      (!imageRef.current.width || !imageRef.current.height)\r\n    ) {\r\n      let canvas = document.createElement(\"canvas\");\r\n      const ctx = canvas.getContext(\"2d\");\r\n      const v = await Canvg.from(ctx, src, {\r\n        enableRedraw: true,\r\n      });\r\n      console.log(v);\r\n      width = width || v.documentElement.node.width.baseVal.value || 200;\r\n      height = height || v.documentElement.node.height.baseVal.value || 200;\r\n      v.resize(width, height, \"none\");\r\n      await v.render();\r\n      setImage(canvas);\r\n    } else {\r\n      setImage(imageRef.current);\r\n    }\r\n\r\n    if (onChange && !props.width && !props.height) {\r\n      onChange({\r\n        left: mathRound2(props.x - width / 2),\r\n        top: mathRound2(props.y - height / 2),\r\n        width: mathRound2(width),\r\n        height: mathRound2(height),\r\n      });\r\n    }\r\n\r\n    if (filterColor && filterColor.length) {\r\n      shapeRef.current.cache({\r\n        pixelRatio: getPixelRatio(shapeRef.current),\r\n        imageSmoothingEnabled: true,\r\n      });\r\n      // shapeRef.current.getLayer().batchDraw();\r\n    }\r\n    if (tellSize) {\r\n      tellSize({\r\n        width: width,\r\n        height: height,\r\n      });\r\n    }\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  };\r\n  const loadImage = async () => {\r\n    const img = new window.Image();\r\n    // img.src = src;\r\n    img.src = src + `?timestamp=${new Date().toISOString()}`;\r\n    img.crossOrigin = \"anonymous\";\r\n    imageRef.current = img;\r\n    imageRef.current.addEventListener(\"load\", handleLoad);\r\n  };\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      console.log(\"scaleX, scaleY: \", scaleX, scaleY);\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(1, node.width() * Math.abs(scaleX))),\r\n        height: mathRound2(Math.max(1, node.height() * Math.abs(scaleY))),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n        shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n        shadowOffsetX: mathRound2(layer_data.shadowOffsetX * Math.abs(scaleX)),\r\n        shadowOffsetY: mathRound2(layer_data.shadowOffsetY * Math.abs(scaleY)),\r\n      });\r\n      if (filterColor && filterColor.length) {\r\n        node.cache({\r\n          pixelRatio: getPixelRatio(shapeRef.current),\r\n          imageSmoothingEnabled: true,\r\n        });\r\n        // node.getLayer().batchDraw();\r\n      } else {\r\n        node.clearCache();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Image\r\n      {...props}\r\n      image={image}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      draggable={onChange}\r\n      filters={filters.length ? filters : null}\r\n      red={filterColor && filterColor.length ? hexToRgba(filterColor).r : null}\r\n      green={\r\n        filterColor && filterColor.length ? hexToRgba(filterColor).g : null\r\n      }\r\n      blue={filterColor && filterColor.length ? hexToRgba(filterColor).b : null}\r\n      alpha={\r\n        filterColor && filterColor.length\r\n          ? hexToRgba(filterColor).a / 255\r\n          : null\r\n      }\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default URLImage;\r\n","import React from \"react\";\r\nimport { Line } from \"react-konva\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideTop = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    frameSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n  const gridPadding = guideData.grid_padding || 10;\r\n  const gridStroke = guideData.grid_stroke || 0.1;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-wireframe\"\r\n        loadedStatus={loadedStatuses[\"guide-wireframe\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/wireframe.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.wireframe_color}\r\n        opacity={guideData.wireframe_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.WIREFRAME) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      {Array.from(Array(Math.round(frameSize.width / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`x-${i}`}\r\n            points={[\r\n              Math.round(i * gridPadding),\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.width,\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n      {Array.from(Array(Math.round(frameSize.height / gridPadding)), (e, i) => {\r\n        return (\r\n          <Line\r\n            key={`y-${i}`}\r\n            points={[\r\n              0,\r\n              Math.round(i * gridPadding),\r\n              frameSize.height,\r\n              Math.round(i * gridPadding),\r\n            ]}\r\n            stroke={guideData.grid_color || \"#ddd\"}\r\n            opacity={guideData.grid_opacity || 1}\r\n            strokeWidth={gridStroke}\r\n            listening={false}\r\n            visible={\r\n              paintingGuides.includes(PaintingGuides.GRID) ? true : false\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideTop);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideCarMask = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <URLImage\r\n      id=\"guide-mask\"\r\n      loadedStatus={loadedStatuses[\"guide-mask\"]}\r\n      src={`${\r\n        config.assetsURL\r\n      }/templates/${currentCarMake.folder_directory.replace(\r\n        \" \",\r\n        \"_\"\r\n      )}/mask.png`}\r\n      tellSize={handleImageSize}\r\n      filterColor={guideData.carmask_color}\r\n      opacity={guideData.carmask_opacity}\r\n      listening={false}\r\n      visible={paintingGuides.includes(PaintingGuides.CARMASK) ? true : false}\r\n      onLoadLayer={onLoadLayer}\r\n    />\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideCarMask);\r\n","import React from \"react\";\r\nimport { PaintingGuides } from \"constant\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport config from \"config\";\r\n\r\nconst PaintingGuideBottom = (props) => {\r\n  const {\r\n    paintingGuides,\r\n    currentCarMake,\r\n    handleImageSize,\r\n    guideData,\r\n    loadedStatuses,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  return (\r\n    <>\r\n      <URLImage\r\n        id=\"guide-sponsorblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-sponsorblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/sponsor_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.sponsor_color}\r\n        opacity={guideData.sponsor_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.SPONSORBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n\r\n      <URLImage\r\n        id=\"guide-numberblocks\"\r\n        loadedStatus={loadedStatuses[\"guide-numberblocks\"]}\r\n        src={`${\r\n          config.assetsURL\r\n        }/templates/${currentCarMake.folder_directory.replace(\r\n          \" \",\r\n          \"_\"\r\n        )}/number_blocks.png`}\r\n        tellSize={handleImageSize}\r\n        filterColor={guideData.numberblock_color}\r\n        opacity={guideData.numberblock_opacity}\r\n        listening={false}\r\n        visible={\r\n          paintingGuides.includes(PaintingGuides.NUMBERBLOCKS) ? true : false\r\n        }\r\n        onLoadLayer={onLoadLayer}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaintingGuideBottom);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst CarParts = (props) => {\r\n  const {\r\n    layers,\r\n    currentCarMake,\r\n    loadedStatuses,\r\n    handleImageSize,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.CAR),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={\r\n            config.assetsURL +\r\n            \"/templates/\" +\r\n            currentCarMake.folder_directory.replace(\" \", \"_\") +\r\n            `/${layer.layer_data.img}`\r\n          }\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          onLoadLayer={onLoadLayer}\r\n          tellSize={handleImageSize}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(CarParts);\r\n","import React, { useMemo } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes } from \"constant\";\r\nimport config from \"config\";\r\n\r\nconst BasePaints = (props) => {\r\n  const { layers, loadedStatuses, handleImageSize, onLoadLayer } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.BASE),\r\n        [\"layer_order\", \"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => (\r\n        <URLImage\r\n          key={layer.id}\r\n          id={layer.id}\r\n          src={`${config.assetsURL}/bases/${layer.layer_data.id}/${layer.layer_data.img}`}\r\n          opacity={layer.layer_data.opacity}\r\n          filterColor={layer.layer_data.color}\r\n          listening={false}\r\n          visible={layer.layer_visible ? true : false}\r\n          loadedStatus={loadedStatuses[layer.id]}\r\n          tellSize={handleImageSize}\r\n          onLoadLayer={onLoadLayer}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(BasePaints);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport config from \"config\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst Overlays = (props) => {\r\n  const {\r\n    layers,\r\n    setCurrentLayer,\r\n    frameSize,\r\n    mouseMode,\r\n    boardRotate,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.OVERLAY),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        return (\r\n          <URLImage\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            allowFit={true}\r\n            filterColor={layer.layer_data.color}\r\n            width={layer.layer_data.width}\r\n            height={layer.layer_data.height}\r\n            rotation={layer.layer_data.rotation}\r\n            boardRotate={boardRotate}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            frameSize={frameSize}\r\n            layer_data={layer.layer_data}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            visible={layer.layer_visible ? true : false}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Overlays);\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\n\r\nimport { Text } from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nconst TextNode = ({\r\n  id,\r\n  fontFamily,\r\n  fontFile,\r\n  loadedFontList,\r\n  loadedList,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  onLoadLayer,\r\n  onSelect,\r\n  onChange,\r\n  onFontLoad,\r\n  onHover,\r\n  ...props\r\n}) => {\r\n  const [loadedFontFamily, setLoadedFontFamily] = useState(null);\r\n  const shapeRef = useRef();\r\n  useEffect(() => {\r\n    if (fontFamily && fontFile) {\r\n      if (!loadedFontList.includes(fontFamily)) {\r\n        loadFont();\r\n      } else {\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      }\r\n    }\r\n  }, [fontFamily, fontFile]);\r\n\r\n  const loadFont = () => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        onFontLoad(fontFamily);\r\n        setLoadedFontFamily(fontFamily);\r\n        if (onLoadLayer && id) onLoadLayer(id, true);\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      onChange({\r\n        left: mathRound2(e.target.x()),\r\n        top: mathRound2(e.target.y()),\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n      });\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      onChange({\r\n        left: mathRound2(node.x()),\r\n        top: mathRound2(node.y()),\r\n        // set minimal value\r\n        width: mathRound2(Math.max(5, node.width())),\r\n        height: mathRound2(Math.max(5, node.height())),\r\n        rotation: mathRound2(node.rotation()) || 0,\r\n        scaleX: mathRound2(Math.max(0.01, scaleX)),\r\n        scaleY: mathRound2(Math.max(0.01, scaleY)),\r\n        flop: scaleX > 0 ? 0 : 1,\r\n        flip: scaleY > 0 ? 0 : 1,\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <Text\r\n      {...props}\r\n      fontFamily={loadedFontFamily}\r\n      onClick={onSelect}\r\n      onTap={onSelect}\r\n      ref={shapeRef}\r\n      shadowColor={shapeRef.current ? shadowColor : null}\r\n      shadowBlur={shapeRef.current ? shadowBlur : null}\r\n      shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n      shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n      shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n      draggable={onChange}\r\n      onDragStart={handleDragStart}\r\n      onDragEnd={handleDragEnd}\r\n      onTransformEnd={handleTransformEnd}\r\n      perfectDrawEnabled={false}\r\n      shadowForStrokeEnabled={false}\r\n      onMouseOver={() => props.listening && onHover && onHover(true)}\r\n      onMouseOut={() => props.listening && onHover && onHover(false)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextNode;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport URLImage from \"components/URLImage\";\r\nimport TextNode from \"components/TextNode\";\r\nimport config from \"config\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset } from \"helper\";\r\n\r\nconst LogosAndTexts = (props) => {\r\n  const {\r\n    layers,\r\n    loadedFontList,\r\n    loadedStatuses,\r\n    fonts,\r\n    frameSize,\r\n    mouseMode,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    onChange,\r\n    onFontLoad,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter(\r\n          (item) =>\r\n            item.layer_type === LayerTypes.LOGO ||\r\n            item.layer_type === LayerTypes.UPLOAD ||\r\n            item.layer_type === LayerTypes.TEXT\r\n        ),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const layerFont = useCallback(\r\n    (layer) => {\r\n      return fonts.length\r\n        ? fonts.find((item) => item.id === layer.layer_data.font)\r\n        : {};\r\n    },\r\n    [fonts]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n\r\n        if (layer.layer_type !== LayerTypes.TEXT) {\r\n          return (\r\n            <URLImage\r\n              key={layer.id}\r\n              id={layer.id}\r\n              name={layer.id.toString()}\r\n              src={`${config.assetsURL}/${layer.layer_data.source_file}`}\r\n              loadedStatus={loadedStatuses[layer.id]}\r\n              x={parseFloat(layer.layer_data.left || 0)}\r\n              y={parseFloat(layer.layer_data.top || 0)}\r\n              allowFit={true}\r\n              width={layer.layer_data.width}\r\n              height={layer.layer_data.height}\r\n              frameSize={frameSize}\r\n              rotation={layer.layer_data.rotation}\r\n              boardRotate={boardRotate}\r\n              scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n              scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n              shadowColor={layer.layer_data.shadowColor}\r\n              shadowBlur={layer.layer_data.shadowBlur}\r\n              shadowOpacity={layer.layer_data.shadowOpacity}\r\n              shadowOffsetX={shadowOffset.x}\r\n              shadowOffsetY={shadowOffset.y}\r\n              opacity={layer.layer_data.opacity}\r\n              layer_data={layer.layer_data}\r\n              onSelect={() => setCurrentLayer(layer)}\r\n              listening={\r\n                !layer.layer_locked && mouseMode === MouseModes.DEFAULT\r\n              }\r\n              onChange={(values) => onChange(layer, values)}\r\n              onHover={(flag) => onHover(layer, flag)}\r\n              visible={layer.layer_visible ? true : false}\r\n              onLoadLayer={onLoadLayer}\r\n            />\r\n          );\r\n        }\r\n        let font = layerFont(layer);\r\n        return (\r\n          <TextNode\r\n            key={layer.id}\r\n            id={layer.id}\r\n            name={layer.id.toString()}\r\n            text={layer.layer_data.text}\r\n            fontFamily={font.font_name}\r\n            fontFile={\r\n              font.font_file\r\n                ? `url(${config.assetsURL}/${font.font_file})`\r\n                : null\r\n            }\r\n            loadedFontList={loadedFontList}\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            onFontLoad={onFontLoad}\r\n            fontSize={layer.layer_data.size}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            x={parseFloat(layer.layer_data.left || 0)}\r\n            y={parseFloat(layer.layer_data.top || 0)}\r\n            offsetX={0}\r\n            offsetY={0}\r\n            // width={layer.layer_data.width}\r\n            // height={layer.layer_data.height}\r\n            opacity={layer.layer_data.opacity}\r\n            rotation={layer.layer_data.rotation}\r\n            scaleX={\r\n              (layer.layer_data.scaleX || 1) *\r\n              (layer.layer_data.flop === 1 ? -1 : 1)\r\n            }\r\n            scaleY={\r\n              (layer.layer_data.scaleY || 1) *\r\n              (layer.layer_data.flip === 1 ? -1 : 1)\r\n            }\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            visible={layer.layer_visible ? true : false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogosAndTexts);\r\n","import React, { useRef, useEffect } from \"react\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Rect,\r\n  Circle,\r\n  Ellipse,\r\n  Star,\r\n  Ring,\r\n  RegularPolygon,\r\n  Wedge,\r\n  Arc,\r\n  Line,\r\n  Arrow,\r\n} from \"react-konva\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport { MouseModes, AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nconst Shape = ({\r\n  id,\r\n  type,\r\n  x,\r\n  y,\r\n  width,\r\n  height,\r\n  radius,\r\n  points,\r\n  lineCap,\r\n  lineJoin,\r\n  offsetsFromStroke,\r\n  pointerLength,\r\n  pointerWidth,\r\n  innerRadius,\r\n  outerRadius,\r\n  cornerRadius,\r\n  numPoints,\r\n  angle,\r\n  onSelect,\r\n  onChange,\r\n  onHover,\r\n  shadowColor,\r\n  shadowBlur,\r\n  shadowOpacity,\r\n  shadowOffsetX,\r\n  shadowOffsetY,\r\n  layer_data,\r\n  onLoadLayer,\r\n  ...props\r\n}) => {\r\n  const shapeRef = useRef();\r\n  const handleDragStart = (e) => {\r\n    onSelect();\r\n  };\r\n  const handleDragEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(e.target.x() - offsetsFromStroke.x),\r\n            top: mathRound2(e.target.y() - offsetsFromStroke.y),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  const handleTransformEnd = (e) => {\r\n    if (onChange) {\r\n      const AllowedLayerTypes = AllowedLayerProps[LayerTypes.SHAPE][type];\r\n      const node = shapeRef.current;\r\n      const scaleX = node.scaleX();\r\n      const scaleY = node.scaleY();\r\n      const width = type !== MouseModes.ELLIPSE ? node.width() : node.radiusX();\r\n      const height =\r\n        type !== MouseModes.ELLIPSE ? node.height() : node.radiusY();\r\n      const xyScale = Math.abs(\r\n        Math.abs(mathRound2(scaleY)) !== 1 ? scaleY : scaleX\r\n      );\r\n\r\n      // we will reset it back\r\n      node.scaleX(scaleX > 0 ? 1 : -1);\r\n      node.scaleY(scaleY > 0 ? 1 : -1);\r\n\r\n      onChange(\r\n        _.pick(\r\n          {\r\n            left: mathRound2(node.x() - offsetsFromStroke.x),\r\n            top: mathRound2(node.y() - offsetsFromStroke.y),\r\n            width: mathRound2(\r\n              Math.max(1, width * Math.abs(scaleX)) - offsetsFromStroke.width\r\n            ),\r\n            height: mathRound2(\r\n              Math.max(1, height * Math.abs(scaleY)) - offsetsFromStroke.height\r\n            ),\r\n            radius: node.radius\r\n              ? mathRound2(\r\n                  Math.max(1, node.radius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.radius\r\n                )\r\n              : 0,\r\n            innerRadius: node.innerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.innerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.innerRadius\r\n                )\r\n              : 0,\r\n            outerRadius: node.outerRadius\r\n              ? mathRound2(\r\n                  Math.max(1, node.outerRadius() * Math.abs(scaleY)) -\r\n                    offsetsFromStroke.outerRadius\r\n                )\r\n              : 0,\r\n            rotation: mathRound2(node.rotation()) || 0,\r\n            flop: scaleX > 0 ? 0 : 1,\r\n            flip: scaleY > 0 ? 0 : 1,\r\n            stroke: mathRound2(node.strokeWidth() * xyScale),\r\n            shadowBlur: mathRound2(node.shadowBlur() * xyScale),\r\n            shadowOffsetX: mathRound2(\r\n              layer_data.shadowOffsetX * Math.abs(scaleX)\r\n            ),\r\n            shadowOffsetY: mathRound2(\r\n              layer_data.shadowOffsetY * Math.abs(scaleY)\r\n            ),\r\n            cornerTopLeft: mathRound2(layer_data.cornerTopLeft * xyScale),\r\n            cornerTopRight: mathRound2(layer_data.cornerTopRight * xyScale),\r\n            cornerBottomLeft: mathRound2(layer_data.cornerBottomLeft * xyScale),\r\n            cornerBottomRight: mathRound2(\r\n              layer_data.cornerBottomRight * xyScale\r\n            ),\r\n            points: points.map((point, index) =>\r\n              index % 2 === 0\r\n                ? mathRound2(point * Math.abs(scaleX))\r\n                : mathRound2(point * Math.abs(scaleY))\r\n            ),\r\n          },\r\n          AllowedLayerTypes.filter((item) =>\r\n            item.includes(\"layer_data.\")\r\n          ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n        )\r\n      );\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (onLoadLayer && id) onLoadLayer(id, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      {type === MouseModes.RECT ? (\r\n        <Rect\r\n          {...props}\r\n          ref={shapeRef}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          cornerRadius={cornerRadius}\r\n          x={x}\r\n          y={y}\r\n          width={width}\r\n          height={height}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.CIRCLE ? (\r\n        <Circle\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ELLIPSE ? (\r\n        <Ellipse\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radiusX={width}\r\n          radiusY={height}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.STAR ? (\r\n        <Star\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          numPoints={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.RING ? (\r\n        <Ring\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.REGULARPOLYGON ? (\r\n        <RegularPolygon\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          sides={numPoints}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.WEDGE ? (\r\n        <Wedge\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          radius={radius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARC ? (\r\n        <Arc\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          innerRadius={innerRadius}\r\n          outerRadius={outerRadius}\r\n          angle={angle}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          shadowForStrokeEnabled={false}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.LINE || type === MouseModes.PEN ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.POLYGON ? (\r\n        <Line\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          closed={true}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : type === MouseModes.ARROW ? (\r\n        <Arrow\r\n          {...props}\r\n          ref={shapeRef}\r\n          x={x}\r\n          y={y}\r\n          points={points}\r\n          lineCap={lineCap}\r\n          lineJoin={lineJoin}\r\n          pointerLength={pointerLength}\r\n          pointerWidth={pointerWidth}\r\n          shadowColor={shapeRef.current ? shadowColor : null}\r\n          shadowBlur={shapeRef.current ? shadowBlur : null}\r\n          shadowOpacity={shapeRef.current ? shadowOpacity : null}\r\n          shadowOffsetX={shapeRef.current ? shadowOffsetX : null}\r\n          shadowOffsetY={shapeRef.current ? shadowOffsetY : null}\r\n          draggable={onChange}\r\n          onClick={onSelect}\r\n          onDragStart={handleDragStart}\r\n          onDragEnd={handleDragEnd}\r\n          onTransformEnd={handleTransformEnd}\r\n          onMouseOver={() => props.listening && onHover && onHover(true)}\r\n          onMouseOut={() => props.listening && onHover && onHover(false)}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Shape;\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport Shape from \"components/Shape\";\r\nimport { LayerTypes, MouseModes } from \"constant\";\r\nimport { getRelativeShadowOffset, removeDuplicatedPointFromEnd } from \"helper\";\r\n\r\nconst Shapes = (props) => {\r\n  const {\r\n    layers,\r\n    drawingLayer,\r\n    setCurrentLayer,\r\n    boardRotate,\r\n    mouseMode,\r\n    loadedStatuses,\r\n    onChange,\r\n    onHover,\r\n    onLoadLayer,\r\n  } = props;\r\n\r\n  const filteredLayers = useMemo(\r\n    () =>\r\n      _.orderBy(\r\n        layers.filter((item) => item.layer_type === LayerTypes.SHAPE),\r\n        [\"layer_order\"],\r\n        [\"desc\"]\r\n      ),\r\n    [layers]\r\n  );\r\n  const getShadowOffset = useCallback(\r\n    (layer) => {\r\n      return getRelativeShadowOffset(boardRotate, {\r\n        x: layer.layer_data.shadowOffsetX,\r\n        y: layer.layer_data.shadowOffsetY,\r\n      });\r\n    },\r\n    [boardRotate]\r\n  );\r\n  const getOffsetsFromStroke = useCallback((layer) => {\r\n    if (layer.layer_data.strokeType === \"inside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: -layer.layer_data.stroke / 2.0,\r\n        width: -layer.layer_data.stroke / 2.0,\r\n        radius: -layer.layer_data.stroke / 2.0,\r\n        pointerLength: -layer.layer_data.stroke / 2.0,\r\n        pointerWidth: -layer.layer_data.stroke / 2.0,\r\n        innerRadius: layer.layer_data.stroke / 2.0,\r\n        outerRadius: -layer.layer_data.stroke / 2.0,\r\n      };\r\n    if (layer.layer_data.strokeType === \"outside\")\r\n      return {\r\n        x: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        y: [MouseModes.RECT, MouseModes.ELLIPSE].includes(layer.layer_type)\r\n          ? -layer.layer_data.stroke / 2.0\r\n          : 0,\r\n        height: layer.layer_data.stroke / 2.0,\r\n        width: layer.layer_data.stroke / 2.0,\r\n        radius: layer.layer_data.stroke / 2.0,\r\n        pointerLength: layer.layer_data.stroke / 2.0,\r\n        pointerWidth: layer.layer_data.stroke / 2.0,\r\n        innerRadius: -layer.layer_data.stroke / 2.0,\r\n        outerRadius: layer.layer_data.stroke / 2.0,\r\n      };\r\n    return {\r\n      x: 0,\r\n      y: 0,\r\n      height: 0,\r\n      width: 0,\r\n      radius: 0,\r\n      pointerLength: 0,\r\n      pointerWidth: 0,\r\n      innerRadius: 0,\r\n      outerRadius: 0,\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {filteredLayers.map((layer) => {\r\n        let shadowOffset = getShadowOffset(layer);\r\n        let offsetsFromStroke = getOffsetsFromStroke(layer);\r\n\r\n        return (\r\n          <Shape\r\n            key={layer.id}\r\n            id={layer.id}\r\n            type={layer.layer_data.type}\r\n            x={parseFloat(layer.layer_data.left + offsetsFromStroke.x || 0)}\r\n            y={parseFloat(layer.layer_data.top + offsetsFromStroke.y || 0)}\r\n            width={Math.abs(layer.layer_data.width + offsetsFromStroke.width)}\r\n            height={Math.abs(\r\n              layer.layer_data.height + offsetsFromStroke.height\r\n            )}\r\n            radius={Math.abs(\r\n              layer.layer_data.radius + offsetsFromStroke.radius\r\n            )}\r\n            offsetsFromStroke={offsetsFromStroke}\r\n            points={\r\n              layer.layer_data.points\r\n                ? removeDuplicatedPointFromEnd(layer.layer_data.points)\r\n                : []\r\n            }\r\n            loadedStatus={loadedStatuses[layer.id]}\r\n            pointerLength={Math.abs(\r\n              layer.layer_data.pointerLength + offsetsFromStroke.pointerLength\r\n            )}\r\n            pointerWidth={Math.abs(\r\n              layer.layer_data.pointerWidth + offsetsFromStroke.pointerWidth\r\n            )}\r\n            lineCap={layer.layer_data.lineCap}\r\n            lineJoin={layer.layer_data.lineJoin}\r\n            innerRadius={Math.abs(\r\n              layer.layer_data.innerRadius + offsetsFromStroke.innerRadius\r\n            )}\r\n            outerRadius={Math.abs(\r\n              layer.layer_data.outerRadius + offsetsFromStroke.outerRadius\r\n            )}\r\n            numPoints={layer.layer_data.numPoints}\r\n            cornerRadius={[\r\n              layer.layer_data.cornerTopLeft,\r\n              layer.layer_data.cornerTopRight,\r\n              layer.layer_data.cornerBottomLeft,\r\n              layer.layer_data.cornerBottomRight,\r\n            ]}\r\n            rotation={layer.layer_data.rotation}\r\n            angle={layer.layer_data.angle}\r\n            opacity={layer.layer_data.opacity}\r\n            scaleX={layer.layer_data.flop === 1 ? -1 : 1}\r\n            scaleY={layer.layer_data.flip === 1 ? -1 : 1}\r\n            shadowColor={layer.layer_data.shadowColor}\r\n            shadowBlur={layer.layer_data.shadowBlur}\r\n            shadowOpacity={layer.layer_data.shadowOpacity}\r\n            shadowOffsetX={shadowOffset.x}\r\n            shadowOffsetY={shadowOffset.y}\r\n            fill={layer.layer_data.color}\r\n            strokeWidth={layer.layer_data.stroke}\r\n            stroke={layer.layer_data.scolor}\r\n            strokeEnabled={true}\r\n            globalCompositeOperation={\r\n              layer.layer_data.blendType === \"normal\"\r\n                ? null\r\n                : layer.layer_data.blendType\r\n            }\r\n            name={layer.id.toString()}\r\n            visible={layer.layer_visible ? true : false}\r\n            layer_data={layer.layer_data}\r\n            perfectDrawEnabled={false}\r\n            onSelect={() => setCurrentLayer(layer)}\r\n            listening={!layer.layer_locked && mouseMode === MouseModes.DEFAULT}\r\n            onChange={(values) => onChange(layer, values)}\r\n            onHover={(flag) => onHover(layer, flag)}\r\n            onLoadLayer={onLoadLayer}\r\n          />\r\n        );\r\n      })}\r\n      {drawingLayer ? (\r\n        <Shape\r\n          type={drawingLayer.layer_data.type}\r\n          x={parseFloat(drawingLayer.layer_data.left || 0)}\r\n          y={parseFloat(drawingLayer.layer_data.top || 0)}\r\n          width={drawingLayer.layer_data.width}\r\n          height={drawingLayer.layer_data.height}\r\n          radius={Math.abs(drawingLayer.layer_data.radius)}\r\n          angle={drawingLayer.layer_data.angle}\r\n          points={\r\n            drawingLayer.layer_data.points\r\n              ? removeDuplicatedPointFromEnd(drawingLayer.layer_data.points)\r\n              : []\r\n          }\r\n          pointerLength={drawingLayer.layer_data.pointerLength}\r\n          pointerWidth={drawingLayer.layer_data.pointerWidth}\r\n          lineCap={drawingLayer.layer_data.lineCap}\r\n          lineJoin={drawingLayer.layer_data.lineJoin}\r\n          innerRadius={Math.abs(drawingLayer.layer_data.innerRadius)}\r\n          outerRadius={Math.abs(drawingLayer.layer_data.outerRadius)}\r\n          numPoints={drawingLayer.layer_data.numPoints}\r\n          fill={drawingLayer.layer_data.color}\r\n          strokeWidth={drawingLayer.layer_data.stroke}\r\n          stroke={drawingLayer.layer_data.scolor}\r\n          strokeEnabled={true}\r\n          layer_data={drawingLayer.layer_data}\r\n          perfectDrawEnabled={false}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(Shapes);\r\n","import React, { useRef, useEffect, useMemo } from \"react\";\r\n\r\nimport { MouseModes } from \"constant\";\r\nimport { Transformer } from \"react-konva\";\r\n\r\nconst TransformerComponent = ({\r\n  selectedLayer,\r\n  pressedKey,\r\n  hoveredTransform,\r\n}) => {\r\n  const trRef = useRef();\r\n  const keepRatio = useMemo(\r\n    () =>\r\n      selectedLayer &&\r\n      (selectedLayer.layer_data.sizeLocked ||\r\n        selectedLayer.layer_data.scaleLocked ||\r\n        [\r\n          MouseModes.CIRCLE,\r\n          MouseModes.STAR,\r\n          MouseModes.RING,\r\n          MouseModes.REGULARPOLYGON,\r\n          MouseModes.WEDGE,\r\n          MouseModes.ARC,\r\n        ].includes(selectedLayer.layer_data.type) ||\r\n        pressedKey === \"shift\"),\r\n    [selectedLayer, pressedKey]\r\n  );\r\n\r\n  const checkNode = () => {\r\n    if (selectedLayer) {\r\n      const stage = trRef.current.getStage();\r\n\r\n      const selectedNode = stage.findOne(\".\" + selectedLayer.id);\r\n      if (selectedNode === trRef.current.node()) {\r\n        return;\r\n      }\r\n\r\n      if (selectedNode) {\r\n        trRef.current.nodes([selectedNode]);\r\n      } else {\r\n        trRef.current.detach();\r\n      }\r\n      trRef.current.getLayer().batchDraw();\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    checkNode();\r\n  });\r\n\r\n  const getCenter = (shape) => {\r\n    return {\r\n      x:\r\n        shape.x +\r\n        (shape.width / 2) * Math.cos(shape.rotation) +\r\n        (shape.height / 2) * Math.sin(-shape.rotation),\r\n      y:\r\n        shape.y +\r\n        (shape.height / 2) * Math.cos(shape.rotation) +\r\n        (shape.width / 2) * Math.sin(shape.rotation),\r\n    };\r\n  };\r\n\r\n  const rotateAroundPoint = (shape, deltaDeg, point) => {\r\n    const x = Math.round(\r\n      point.x +\r\n        (shape.x - point.x) * Math.cos(deltaDeg) -\r\n        (shape.y - point.y) * Math.sin(deltaDeg)\r\n    );\r\n    const y = Math.round(\r\n      point.y +\r\n        (shape.x - point.x) * Math.sin(deltaDeg) +\r\n        (shape.y - point.y) * Math.cos(deltaDeg)\r\n    );\r\n\r\n    return {\r\n      ...shape,\r\n      rotation: shape.rotation + deltaDeg,\r\n      x,\r\n      y,\r\n    };\r\n  };\r\n\r\n  const rotateAroundCenter = (shape, deltaDeg) => {\r\n    const center = getCenter(shape);\r\n    return rotateAroundPoint(shape, deltaDeg, center);\r\n  };\r\n\r\n  const getSnapRotation = (rot) => {\r\n    const rotation = rot < 0 ? 2 * Math.PI + rot : rot;\r\n    const son = Math.PI / 12;\r\n    return Math.round(rotation / son) * son;\r\n  };\r\n  const boundBoxFunc = (oldBoundBox, newBoundBox) => {\r\n    const closesSnap = getSnapRotation(newBoundBox.rotation);\r\n    const diff = closesSnap - oldBoundBox.rotation;\r\n    if (pressedKey === \"shift\") {\r\n      if (newBoundBox.rotation - oldBoundBox.rotation === 0) {\r\n        return newBoundBox;\r\n      }\r\n      if (Math.abs(diff) > 0) {\r\n        return rotateAroundCenter(oldBoundBox, diff);\r\n      }\r\n      return oldBoundBox;\r\n    }\r\n    return newBoundBox;\r\n  };\r\n\r\n  if (selectedLayer)\r\n    return (\r\n      <Transformer\r\n        ref={trRef}\r\n        keepRatio={keepRatio}\r\n        enabledAnchors={\r\n          hoveredTransform\r\n            ? []\r\n            : keepRatio\r\n            ? [\"top-left\", \"top-right\", \"bottom-left\", \"bottom-right\"]\r\n            : [\r\n                \"top-left\",\r\n                \"top-center\",\r\n                \"top-right\",\r\n                \"middle-right\",\r\n                \"middle-left\",\r\n                \"bottom-left\",\r\n                \"bottom-center\",\r\n                \"bottom-right\",\r\n              ]\r\n        }\r\n        rotateEnabled={!hoveredTransform}\r\n        boundBoxFunc={boundBoxFunc}\r\n        borderStroke={hoveredTransform ? \"red\" : null}\r\n      />\r\n    );\r\n  return <></>;\r\n};\r\n\r\nexport default TransformerComponent;\r\n","import React, {\r\n  useRef,\r\n  useState,\r\n  useEffect,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport useInterval from \"react-useinterval\";\r\nimport { Stage, Layer, Rect } from \"react-konva\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useResizeDetector } from \"react-resize-detector\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Box, IconButton as MuiIconButton } from \"@material-ui/core\";\r\nimport {\r\n  RotateLeft as RotateLeftIcon,\r\n  RotateRight as RotateRightIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nimport PaintingGuideTop from \"./guides/PaintingGuideTop\";\r\nimport PaintingGuideCarMask from \"./guides/PaintingGuideCarMask\";\r\nimport PaintingGuideBottom from \"./guides/PaintingGuideBottom\";\r\nimport CarParts from \"./layers/CarParts\";\r\nimport BasePaints from \"./layers/BasePaints\";\r\nimport Overlays from \"./layers/Overlays\";\r\nimport LogosAndTexts from \"./layers/LogosAndTexts\";\r\nimport Shapes from \"./layers/Shapes\";\r\nimport TransformerComponent from \"components/TransformerComponent\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\n\r\nimport {\r\n  setFrameSizeToMax,\r\n  setMouseMode,\r\n  setZoom,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  createShape,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n  setLoadedStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { MouseModes, LayerTypes, DefaultLayer } from \"constant\";\r\nimport {\r\n  getRelativePointerPosition,\r\n  removeDuplicatedPointFromEnd,\r\n} from \"helper\";\r\n\r\nconst IconButton = styled(MuiIconButton)(spacing);\r\nconst RotationButton = styled(IconButton)`\r\n  background: black;\r\n  border-radius: 0;\r\n  &:hover {\r\n    background: #444;\r\n  }\r\n`;\r\n\r\nconst Board = ({\r\n  hoveredLayerJSON,\r\n  onChangeHoverJSONItem,\r\n  onChangeBoardRotation,\r\n  stageRef,\r\n  baseLayerRef,\r\n  mainLayerRef,\r\n  carMaskLayerRef,\r\n}) => {\r\n  const scaleBy = 1.2;\r\n  const [prevPosition, setPrevPosition] = useState({});\r\n  const drawingLayerRef = useRef(null);\r\n  const prevTick = useRef(0);\r\n  const currentTick = useRef(0);\r\n  const [tick, setTick] = useState(0);\r\n\r\n  const dispatch = useDispatch();\r\n  const { width, height, ref } = useResizeDetector();\r\n\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeSaving = useSelector((state) => state.schemeReducer.saving);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const drawingStatus = useSelector(\r\n    (state) => state.layerReducer.drawingStatus\r\n  );\r\n\r\n  useEffect(() => {\r\n    switch (drawingStatus) {\r\n      case DrawingStatus.ADD_TO_SHAPE:\r\n        if (drawingLayerRef.current) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: removeDuplicatedPointFromEnd(\r\n                drawingLayerRef.current.layer_data.points\r\n              ),\r\n            },\r\n          };\r\n          dispatch(createShape(currentScheme.id, layer));\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        }\r\n        break;\r\n      case DrawingStatus.CLEAR_COMMAND:\r\n        // setDrawingLayer(null);\r\n        drawingLayerRef.current = null;\r\n        dispatch(setDrawingStatus(null));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [drawingStatus]);\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      setTick(tick + 1);\r\n    }\r\n  }, 50 * (Math.min(currentTick.current - prevTick.current > 4 ? currentTick.current - prevTick.current : (currentTick.current - prevTick.current) / 2, 20) || 1));\r\n\r\n  useInterval(() => {\r\n    if (mouseMode !== MouseModes.DEFAULT) {\r\n      currentTick.current = currentTick.current + 1;\r\n    }\r\n  }, 5);\r\n\r\n  const handleMouseDown = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Down\");\r\n      if (mouseMode === MouseModes.DEFAULT) {\r\n        const clickedOnEmpty = e.target === e.target.getStage();\r\n        if (clickedOnEmpty && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        }\r\n      }\r\n    },\r\n    [dispatch, mouseMode, currentLayer]\r\n  );\r\n  const handleContentMouseDown = useCallback(\r\n    (e) => {\r\n      if (mouseMode !== MouseModes.DEFAULT) {\r\n        const position = getRelativePointerPosition(stageRef.current);\r\n        if (!drawingLayerRef.current) {\r\n          let newLayer = {\r\n            ...DefaultLayer,\r\n            layer_type: LayerTypes.SHAPE,\r\n            layer_data: {\r\n              ...DefaultLayer.layer_data,\r\n              type: mouseMode,\r\n              name: mouseMode,\r\n              left: position.x,\r\n              top: position.y,\r\n              color: currentScheme.guide_data.default_shape_color || \"#000000\",\r\n              opacity: currentScheme.guide_data.default_shape_opacity || 1,\r\n              scolor:\r\n                currentScheme.guide_data.default_shape_scolor || \"#000000\",\r\n              stroke: currentScheme.guide_data.default_shape_stroke || 1,\r\n            },\r\n          };\r\n\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0, 0, 0];\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            newLayer.layer_data.stroke = 5;\r\n            newLayer.layer_data.points = [0, 0];\r\n          }\r\n          drawingLayerRef.current = newLayer;\r\n        } else {\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            let layer = {\r\n              ...drawingLayerRef.current,\r\n              layer_data: {\r\n                ...drawingLayerRef.current.layer_data,\r\n                points: removeDuplicatedPointFromEnd(\r\n                  drawingLayerRef.current.layer_data.points\r\n                ),\r\n              },\r\n            };\r\n            layer.layer_data.points = layer.layer_data.points.concat([\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n              position.x - drawingLayerRef.current.layer_data.left,\r\n              position.y - drawingLayerRef.current.layer_data.top,\r\n            ]);\r\n\r\n            drawingLayerRef.current = layer;\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      stageRef.current,\r\n    ]\r\n  );\r\n  const handleMouseMove = useCallback(() => {\r\n    // console.log(\"Mouse Move\");\r\n\r\n    if (mouseMode !== MouseModes.DEFAULT && drawingLayerRef.current) {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      const width = position.x - drawingLayerRef.current.layer_data.left;\r\n      const height = position.y - drawingLayerRef.current.layer_data.top;\r\n      const positionX = position.x - drawingLayerRef.current.layer_data.left;\r\n      const positionY = position.y - drawingLayerRef.current.layer_data.top;\r\n      if (\r\n        drawingLayerRef.current.layer_data.points.length < 2 ||\r\n        positionX !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 2\r\n          ] ||\r\n        positionY !==\r\n          drawingLayerRef.current.layer_data.points[\r\n            drawingLayerRef.current.layer_data.points.length - 1\r\n          ]\r\n      ) {\r\n        if (\r\n          currentTick.current - prevTick.current > 1 ||\r\n          drawingLayerRef.current.layer_data.points.length < 2 ||\r\n          Math.abs(\r\n            positionX -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 2\r\n              ]\r\n          ) > 10 ||\r\n          Math.abs(\r\n            positionY -\r\n              drawingLayerRef.current.layer_data.points[\r\n                drawingLayerRef.current.layer_data.points.length - 1\r\n              ]\r\n          ) > 10\r\n        ) {\r\n          let layer = {\r\n            ...drawingLayerRef.current,\r\n            layer_data: {\r\n              ...drawingLayerRef.current.layer_data,\r\n              points: [...drawingLayerRef.current.layer_data.points],\r\n              width:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                width > 0\r\n                  ? width\r\n                  : 0,\r\n              height:\r\n                MouseModes.ELLIPSE !== drawingLayerRef.current.layer_type &&\r\n                height > 0\r\n                  ? height\r\n                  : 0,\r\n              radius: Math.abs(width),\r\n              innerRadius: Math.abs(width) / 2.5,\r\n              outerRadius: Math.abs(width),\r\n            },\r\n          };\r\n          if (\r\n            [MouseModes.LINE, MouseModes.ARROW, MouseModes.POLYGON].includes(\r\n              mouseMode\r\n            )\r\n          ) {\r\n            layer.layer_data.points.splice(-2, 2, positionX, positionY);\r\n          }\r\n          if (mouseMode === MouseModes.PEN) {\r\n            layer.layer_data.points.push(positionX);\r\n            layer.layer_data.points.push(positionY);\r\n          }\r\n          drawingLayerRef.current = layer;\r\n        }\r\n      }\r\n      prevTick.current = currentTick.current;\r\n    }\r\n  }, [\r\n    mouseMode,\r\n    drawingLayerRef.current,\r\n    getRelativePointerPosition,\r\n    stageRef.current,\r\n    currentTick.current,\r\n  ]);\r\n  const handleMouseUp = useCallback(\r\n    (e) => {\r\n      // console.log(\"Mouse Up\");\r\n      if (\r\n        ![\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode)\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      setPrevPosition(position);\r\n    },\r\n    [dispatch, mouseMode, getRelativePointerPosition, setPrevPosition]\r\n  );\r\n  const handleContentDoubleClick = useCallback(\r\n    (e) => {\r\n      const position = getRelativePointerPosition(stageRef.current);\r\n      if (\r\n        [\r\n          MouseModes.DEFAULT,\r\n          MouseModes.LINE,\r\n          MouseModes.ARROW,\r\n          MouseModes.POLYGON,\r\n        ].includes(mouseMode) &&\r\n        drawingLayerRef.current &&\r\n        prevPosition.x === position.x &&\r\n        prevPosition.y === position.y\r\n      ) {\r\n        dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      mouseMode,\r\n      getRelativePointerPosition,\r\n      drawingLayerRef.current,\r\n      prevPosition,\r\n    ]\r\n  );\r\n  const handleZoomStage = useCallback(\r\n    (event) => {\r\n      event.evt.preventDefault();\r\n      if (stageRef.current !== null && event.evt.ctrlKey) {\r\n        const stage = stageRef.current;\r\n        const oldScale = stage.scaleX();\r\n        const { x: pointerX, y: pointerY } = stage.getPointerPosition();\r\n        const mousePointTo = {\r\n          x: (pointerX - stage.x()) / oldScale,\r\n          y: (pointerY - stage.y()) / oldScale,\r\n        };\r\n        const newScale = Math.max(\r\n          Math.min(\r\n            event.evt.deltaY > 0 ? oldScale / scaleBy : oldScale * scaleBy,\r\n            10\r\n          ),\r\n          0.25\r\n        );\r\n        dispatch(setZoom(newScale));\r\n        const newPos = {\r\n          x: pointerX - mousePointTo.x * newScale,\r\n          y: pointerY - mousePointTo.y * newScale,\r\n        };\r\n        stage.position(newPos);\r\n        stage.batchDraw();\r\n      }\r\n    },\r\n    [dispatch, stageRef.current]\r\n  );\r\n  const handleImageSize = useCallback(\r\n    (size) => {\r\n      if (frameSize.width < size.width || frameSize.height < size.height) {\r\n        dispatch(\r\n          setFrameSizeToMax({\r\n            width: Math.max(frameSize.width, size.width),\r\n            height: Math.max(frameSize.height, size.height),\r\n          })\r\n        );\r\n      }\r\n    },\r\n    [dispatch, frameSize]\r\n  );\r\n  const handleLayerDataChange = useCallback(\r\n    (layer, values) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          layer_data: {\r\n            ...layer.layer_data,\r\n            ...values,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleLayerSelect = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const handleHoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const handleAddFont = useCallback(\r\n    (fontFamily) => {\r\n      dispatch(insertToLoadedFontList(fontFamily));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleChangeBoardRotation = useCallback(\r\n    (isRight = true) => {\r\n      let newBoardRotate;\r\n      if (isRight) {\r\n        newBoardRotate = boardRotate + 90;\r\n        if (newBoardRotate >= 360) newBoardRotate = 0;\r\n      } else {\r\n        newBoardRotate = boardRotate - 90;\r\n        if (newBoardRotate < 0) newBoardRotate = 270;\r\n      }\r\n      onChangeBoardRotation(newBoardRotate);\r\n    },\r\n    [boardRotate, onChangeBoardRotation]\r\n  );\r\n  const handleLoadLayer = useCallback(\r\n    (layerID, flag) => {\r\n      dispatch(setLoadedStatus({ key: layerID, value: flag }));\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  return (\r\n    <Box\r\n      width=\"100%\"\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      flexDirection=\"column\"\r\n      alignItems=\"center\"\r\n      margin=\"auto\"\r\n      position=\"relative\"\r\n      id=\"board-wrapper\"\r\n      position=\"relative\"\r\n      ref={ref}\r\n    >\r\n      <Stage\r\n        width={width}\r\n        height={height}\r\n        onMousedown={handleMouseDown}\r\n        onContentMousedown={handleContentMouseDown}\r\n        onContentMousemove={handleMouseMove}\r\n        onContentMouseup={handleMouseUp}\r\n        onDblClick={handleContentDoubleClick}\r\n        onTouchStart={handleMouseDown}\r\n        onWheel={handleZoomStage}\r\n        scaleX={zoom || 1}\r\n        scaleY={zoom || 1}\r\n        rotation={boardRotate}\r\n        x={width - frameSize.width / 2}\r\n        y={height - frameSize.height / 2}\r\n        offsetX={width / 2}\r\n        offsetY={height / 2}\r\n        ref={stageRef}\r\n        draggable={mouseMode === MouseModes.DEFAULT}\r\n        style={{\r\n          cursor: mouseMode === MouseModes.DEFAULT ? \"default\" : \"crosshair\",\r\n        }}\r\n      >\r\n        <Layer ref={baseLayerRef} listening={false}>\r\n          {/* Background */}\r\n          <Rect\r\n            x={0}\r\n            y={0}\r\n            width={frameSize.width}\r\n            height={frameSize.height}\r\n            fill={\r\n              currentScheme.base_color === \"transparent\"\r\n                ? currentScheme.base_color\r\n                : \"#\" + currentScheme.base_color\r\n            }\r\n            listening={false}\r\n          />\r\n          <BasePaints\r\n            layers={layerList}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer listening={false}>\r\n          <PaintingGuideBottom\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            guideData={currentScheme.guide_data}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={mainLayerRef}>\r\n          <CarParts\r\n            layers={layerList}\r\n            currentCarMake={currentCarMake}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Overlays\r\n            layers={layerList}\r\n            frameSize={frameSize}\r\n            boardRotate={boardRotate}\r\n            currentLayer={currentLayer}\r\n            mouseMode={mouseMode}\r\n            loadedStatuses={loadedStatuses}\r\n            handleImageSize={handleImageSize}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <Shapes\r\n            layers={layerList}\r\n            drawingLayer={drawingLayerRef.current}\r\n            boardRotate={boardRotate}\r\n            mouseMode={mouseMode}\r\n            currentLayer={currentLayer}\r\n            loadedStatuses={loadedStatuses}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <LogosAndTexts\r\n            layers={layerList}\r\n            fonts={fontList}\r\n            loadedFontList={loadedFontList}\r\n            frameSize={frameSize}\r\n            mouseMode={mouseMode}\r\n            boardRotate={boardRotate}\r\n            loadedStatuses={loadedStatuses}\r\n            currentLayer={currentLayer}\r\n            setCurrentLayer={handleLayerSelect}\r\n            onChange={handleLayerDataChange}\r\n            onFontLoad={handleAddFont}\r\n            onHover={handleHoverLayer}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer ref={carMaskLayerRef} listening={false}>\r\n          <PaintingGuideCarMask\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n        </Layer>\r\n        <Layer>\r\n          <PaintingGuideTop\r\n            currentCarMake={currentCarMake}\r\n            paintingGuides={paintingGuides}\r\n            loadedStatuses={loadedStatuses}\r\n            frameSize={frameSize}\r\n            guideData={currentScheme.guide_data}\r\n            handleImageSize={handleImageSize}\r\n            onLoadLayer={handleLoadLayer}\r\n          />\r\n          <TransformerComponent\r\n            selectedLayer={currentLayer}\r\n            pressedKey={pressedKey}\r\n          />\r\n          {hoveredLayerJSON &&\r\n          (!currentLayer || !hoveredLayerJSON[currentLayer.id]) ? (\r\n            <TransformerComponent\r\n              selectedLayer={layerList.find(\r\n                (item) => hoveredLayerJSON[item.id]\r\n              )}\r\n              hoveredTransform={true}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Layer>\r\n      </Stage>\r\n      <Box position=\"absolute\" right={currentLayer ? \"350px\" : 0} top={0}>\r\n        <LightTooltip title=\"Rotate Left\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(false)}>\r\n            <RotateLeftIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Rotate Right\" position=\"bottom\" arrow>\r\n          <RotationButton onClick={() => handleChangeBoardRotation(true)}>\r\n            <RotateRightIcon />\r\n          </RotationButton>\r\n        </LightTooltip>\r\n      </Box>\r\n      {schemeSaving || !schemeLoaded ? (\r\n        <Box\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          bgcolor=\"#282828\"\r\n          position=\"absolute\"\r\n          left=\"0\"\r\n          top=\"0\"\r\n        >\r\n          <Box\r\n            position=\"absolute\"\r\n            top=\"calc(50% - 25px)\"\r\n            right=\"calc(50% - 25px)\"\r\n          >\r\n            <ScreenLoader />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Slider,\r\n  Tooltip,\r\n  Box,\r\n  Typography as MuiTypography,\r\n  Input,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomInput = styled(Input)`\r\n  .MuiInputBase-inputMarginDense {\r\n    padding-top: 4px;\r\n    padding-bottom: 5px;\r\n    width: 50px;\r\n  }\r\n`;\r\nconst SliderWrapper = styled(Box)`\r\n  width: 80px;\r\n  margin-left: 8px;\r\n  margin-right: 8px;\r\n  height: 28px;\r\n`;\r\nconst Wrapper = styled(Grid)`\r\n  height: 100%;\r\n  align-items: center;\r\n`;\r\n\r\nconst SliderInput = (props) => {\r\n  const { label, min, max, value, setValue, step } = props;\r\n  const handleBlur = () => {\r\n    if (value < min) {\r\n      setValue(min);\r\n    } else if (value > max) {\r\n      setValue(max);\r\n    }\r\n  };\r\n  return (\r\n    <Wrapper container>\r\n      <Grid item xs={6}>\r\n        <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n          {label}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <SliderWrapper>\r\n            <Slider\r\n              min={min}\r\n              max={max}\r\n              step={step}\r\n              value={value}\r\n              onChange={(event, value) => setValue(value)}\r\n              aria-labelledby=\"shape-size\"\r\n              ValueLabelComponent={(props) => (\r\n                <Tooltip\r\n                  open={props.open}\r\n                  enterTouchDelay={0}\r\n                  placement=\"top\"\r\n                  title={props.value}\r\n                >\r\n                  {props.children}\r\n                </Tooltip>\r\n              )}\r\n            />\r\n          </SliderWrapper>\r\n          <CustomInput\r\n            value={value}\r\n            margin=\"dense\"\r\n            type=\"number\"\r\n            step={step || 1}\r\n            onChange={(event) =>\r\n              setValue(\r\n                event.target.value === \"\"\r\n                  ? min || 0\r\n                  : Number(event.target.value)\r\n              )\r\n            }\r\n            onBlur={handleBlur}\r\n            inputProps={{\r\n              min: min,\r\n              max: max,\r\n              \"aria-labelledby\": \"input-slider\",\r\n            }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default SliderInput;\r\n","import React from \"react\";\r\nimport { ColorPicker } from \"material-ui-color\";\r\nimport { Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { Palette } from \"constant\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nconst ColorInputField = styled(TextField)`\r\n  width: 80px;\r\n`;\r\n\r\nconst ColorPickerInput = (props) => {\r\n  const { value, onChange, onInputChange, error, helperText } = props;\r\n\r\n  const handleInputKeyDown = (event) => {\r\n    if (event.key === \"Enter\") {\r\n      onChange(event.target.value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n      <Box display=\"flex\" alignItems=\"center\">\r\n        <ColorPicker\r\n          value={value || \"\"}\r\n          onChange={(color) => onChange(color.css.backgroundColor)}\r\n          palette={Palette}\r\n          deferred\r\n          hideTextfield\r\n        />\r\n        <ColorInputField\r\n          value={value || \"\"}\r\n          onChange={(event) => onInputChange(event.target.value)}\r\n          onKeyDown={handleInputKeyDown}\r\n        />\r\n      </Box>\r\n      {error ? (\r\n        <Typography color=\"secondary\" variant=\"body2\">\r\n          {helperText}\r\n        </Typography>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ColorPickerInput;\r\n","import React, { useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik, Form } from \"formik\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomAccordionSummary = styled(AccordionSummary)`\r\n  background: #3f3f3f;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst SubForm = (props) => {\r\n  const {\r\n    label,\r\n    colorKey,\r\n    opacityKey,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    extraChildren,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <CustomAccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>{label}</Typography>\r\n      </CustomAccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\" mb={1}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={6}>\r\n              <Box\r\n                display=\"flex\"\r\n                flexDirection=\"row\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n                <ColorPickerInput\r\n                  value={values[colorKey]}\r\n                  onChange={(color) => setFieldValue(colorKey, color)}\r\n                  onInputChange={(color) => setFieldValue(colorKey, color)}\r\n                  error={Boolean(errors[colorKey])}\r\n                  helperText={errors[colorKey]}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values[opacityKey]}\r\n                setValue={(value) => setFieldValue(opacityKey, value)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          {extraChildren}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nconst SchemeSettingsDialog = (props) => {\r\n  const { onCancel, open, onApply } = props;\r\n  const guide_data = useSelector(\r\n    (state) => state.schemeReducer.current.guide_data\r\n  );\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"insert-text-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"insert-text-title\">Settings</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          carmask_color: guide_data.carmask_color || \"\",\r\n          carmask_opacity: guide_data.carmask_opacity || 1,\r\n          wireframe_color: guide_data.wireframe_color || \"\",\r\n          wireframe_opacity: guide_data.wireframe_opacity || 1,\r\n          sponsor_color: guide_data.sponsor_color || \"\",\r\n          sponsor_opacity: guide_data.sponsor_opacity || 1,\r\n          numberblock_color: guide_data.numberblock_color || \"\",\r\n          numberblock_opacity: guide_data.numberblock_opacity || 1,\r\n          grid_color: guide_data.grid_color || \"\",\r\n          grid_opacity: guide_data.grid_opacity || 1,\r\n          grid_padding: guide_data.grid_padding || 10,\r\n          grid_stroke: guide_data.grid_stroke || 0.1,\r\n          default_shape_color: guide_data.default_shape_color || \"#000000\",\r\n          default_shape_opacity: guide_data.default_shape_opacity || 1,\r\n          default_shape_scolor: guide_data.default_shape_scolor || \"#000000\",\r\n          default_shape_stroke: guide_data.default_shape_stroke || 1,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          carmask_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          wireframe_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          sponsor_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          numberblock_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          grid_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          default_shape_scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onApply}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit} noValidate>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <SubForm\r\n                label=\"Car Mask\"\r\n                colorKey=\"carmask_color\"\r\n                opacityKey=\"carmask_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Wireframe\"\r\n                colorKey=\"wireframe_color\"\r\n                opacityKey=\"wireframe_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Sponsor Blocks\"\r\n                colorKey=\"sponsor_color\"\r\n                opacityKey=\"sponsor_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Number Blocks\"\r\n                colorKey=\"numberblock_color\"\r\n                opacityKey=\"numberblock_opacity\"\r\n                {...formProps}\r\n              />\r\n              <SubForm\r\n                label=\"Grid\"\r\n                colorKey=\"grid_color\"\r\n                opacityKey=\"grid_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Column Size\"\r\n                        min={5}\r\n                        max={50}\r\n                        step={1}\r\n                        value={formProps.values.grid_padding}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_padding\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0.01}\r\n                        max={3}\r\n                        step={0.01}\r\n                        value={formProps.values.grid_stroke}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"grid_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n              <SubForm\r\n                label=\"Default Shapes\"\r\n                colorKey=\"default_shape_color\"\r\n                opacityKey=\"default_shape_opacity\"\r\n                {...formProps}\r\n                extraChildren={\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <Box\r\n                        display=\"flex\"\r\n                        flexDirection=\"row\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"space-between\"\r\n                      >\r\n                        <Typography\r\n                          variant=\"body1\"\r\n                          color=\"textSecondary\"\r\n                          mr={2}\r\n                        >\r\n                          Stroke Color\r\n                        </Typography>\r\n                        <ColorPickerInput\r\n                          value={formProps.values[\"default_shape_scolor\"]}\r\n                          onChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          onInputChange={(color) =>\r\n                            formProps.setFieldValue(\r\n                              \"default_shape_scolor\",\r\n                              color\r\n                            )\r\n                          }\r\n                          error={Boolean(\r\n                            formProps.errors[\"default_shape_scolor\"]\r\n                          )}\r\n                          helperText={formProps.errors[\"default_shape_scolor\"]}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                      <SliderInput\r\n                        label=\"Stroke Width\"\r\n                        min={0}\r\n                        max={1}\r\n                        step={0.01}\r\n                        value={formProps.values[\"default_shape_stroke\"]}\r\n                        setValue={(value) =>\r\n                          formProps.setFieldValue(\"default_shape_stroke\", value)\r\n                        }\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                }\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting || !formProps.isValid}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(SchemeSettingsDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport {\r\n  Grid as MuiGrid,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst ShortCuts = {\r\n  DELETE: \"Delete Layer\",\r\n  ENTER: \"Complete Drawing\",\r\n  1: \"Toggle Car Mask Guide\",\r\n  2: \"Toggle Wireframe Guide\",\r\n  3: \"Toggle Sponsor Block Guide\",\r\n  4: \"Toggle Number Block Guide\",\r\n  5: \"Toggle Grid Guide\",\r\n  T: \"Insert Text\",\r\n  S: \"Insert Overlay\",\r\n  L: \"Insert Logo\",\r\n  B: \"Insert Basepaint\",\r\n  \"↑\": \"Move Layer Up\",\r\n  \"↓\": \"Move Layer Down\",\r\n  \"←\": \"Move Lyer Left\",\r\n  \"→\": \"Move Lyer Right\",\r\n  \"Shift ↑\": \"10x Move Layer Up\",\r\n  \"Shift ↓\": \"10x Move Layer Down\",\r\n  \"Shift ←\": \"10x Move Lyer Left\",\r\n  \"Shift →\": \"10x Move Lyer Right\",\r\n  \"Shift +\": \"Zoom In\",\r\n  \"Shift -\": \"Zoom Out\",\r\n  \"Shift 9\": \"Zoom To Fit\",\r\n  \"Shift 0\": \"Zoom To 100%\",\r\n  \"Shift D\": \"Default Mouse Mode\",\r\n  \"Shift B\": \"Brush Drawing Mode\",\r\n  \"Shift R\": \"Rectangle Drawing Mode\",\r\n  \"Shift C\": \"Circle Drawing Mode\",\r\n  \"Shift E\": \"Ellipse Drawing Mode\",\r\n  \"Shift S\": \"Star Drawing Mode\",\r\n  \"Shift G\": \"Ring Drawing Mode\",\r\n  \"Shift O\": \"Regular-Polygon Drawing Mode\",\r\n  \"Shift W\": \"Wedge Drawing Mode\",\r\n  \"Shift A\": \"Arc Drawing Mode\",\r\n  \"Shift P\": \"Polygon Drawing Mode\",\r\n  \"Shift L\": \"Line Drawing Mode\",\r\n  \"Shift >\": \"Arrow Drawing Mode\",\r\n  \"Ctrl/Meta C\": \"Copy Layer To Clipboard\",\r\n  \"Ctrl/Meta V\": \"Paste Layer From Clipboard\",\r\n  \"Ctrl/Meta Z\": \"Undo Action\",\r\n  \"Ctrl/Meta Y\": \"Redo Action\",\r\n};\r\n\r\nconst Grid = styled(MuiGrid)(spacing);\r\nconst KeyText = styled(Typography)`\r\n  color: #ca812c;\r\n  background: #000000;\r\n  width: fit-content;\r\n  padding: 0px 10px;\r\n  border-radius: 3px;\r\n`;\r\nconst DescriptionText = styled(Typography)`\r\n  width: fit-content;\r\n  padding: 0px;\r\n`;\r\n\r\nconst ShortCutsDialog = (props) => {\r\n  const { onCancel, open } = props;\r\n\r\n  return (\r\n    <Dialog\r\n      aria-labelledby=\"short-cuts-title\"\r\n      open={open}\r\n      onClose={onCancel}\r\n      fullWidth\r\n      maxWidth=\"sm\"\r\n    >\r\n      <DialogTitle id=\"short-cuts-title\">Shortcuts</DialogTitle>\r\n      <DialogContent dividers id=\"short-cuts-dialog-content\">\r\n        {Object.keys(ShortCuts).map((item, index) => (\r\n          <Grid container key={index} mb={2}>\r\n            <Grid item xs={6}>\r\n              <KeyText>{item}</KeyText>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DescriptionText>{ShortCuts[item]}</DescriptionText>\r\n            </Grid>\r\n          </Grid>\r\n        ))}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShortCutsDialog);\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport {\r\n  changeName,\r\n  updateScheme,\r\n  clearCurrent as clearCurrentScheme,\r\n} from \"redux/reducers/schemeReducer\";\r\n\r\nimport { Box, IconButton, TextField } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  Settings as SettingsIcon,\r\n  Save as SaveIcon,\r\n  SettingsBackupRestore as BackUpIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faQuestion, faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SchemeSettingsDialog from \"dialogs/SchemeSettingsDialog\";\r\nimport ShortCutsDialog from \"dialogs/ShortCutsDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst CustomIcon = styled(FontAwesomeIcon)`\r\n  width: 20px !important;\r\n`;\r\n\r\nconst DialogTypes = {\r\n  SHORTCUTS: \"SHORTCUTS\",\r\n  SETTINGS: \"SETTINGS\",\r\n};\r\n\r\nconst NameInput = styled(TextField)`\r\n  width: ${(props) => props.width};\r\n`;\r\n\r\nconst TitleBar = () => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n\r\n  const handleNameChange = useCallback(\r\n    (event) => {\r\n      setName(event.target.value);\r\n    },\r\n    [setName]\r\n  );\r\n  const handleSaveName = useCallback(() => {\r\n    dispatch(changeName(currentScheme.id, name));\r\n  }, [dispatch, currentScheme && currentScheme.id, name]);\r\n  const handleNameKeyDown = useCallback(\r\n    (event) => {\r\n      if (event.keyCode === 13) {\r\n        event.preventDefault();\r\n        handleSaveName();\r\n      }\r\n    },\r\n    [handleSaveName]\r\n  );\r\n\r\n  const handleDiscardName = useCallback(() => {\r\n    setName(currentScheme.name);\r\n  }, [setName, currentScheme && currentScheme.name]);\r\n\r\n  const handleGoBack = useCallback(() => {\r\n    dispatch(clearCurrentScheme());\r\n    history.push(\"/\");\r\n  }, [history, dispatch]);\r\n\r\n  const handleApplySettings = useCallback(\r\n    (guide_data) => {\r\n      dispatch(\r\n        updateScheme({\r\n          ...currentScheme,\r\n          guide_data: guide_data,\r\n        })\r\n      );\r\n      setDialog(null);\r\n    },\r\n    [dispatch, currentScheme, setDialog]\r\n  );\r\n  useEffect(() => {\r\n    if (currentScheme) {\r\n      setName(currentScheme.name);\r\n    }\r\n  }, [currentScheme && currentScheme.name]);\r\n\r\n  return (\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"space-between\"\r\n      alignItems=\"center\"\r\n      px={1}\r\n      my={1}\r\n    >\r\n      <NameInput\r\n        value={name}\r\n        onChange={handleNameChange}\r\n        onKeyDown={handleNameKeyDown}\r\n        width={currentScheme && name !== currentScheme.name ? \"105px\" : \"185px\"}\r\n      />\r\n      <Box display=\"flex\">\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Discard Change\" arrow>\r\n            <IconButton onClick={handleDiscardName} color=\"secondary\">\r\n              <BackUpIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {currentScheme && name !== currentScheme.name ? (\r\n          <LightTooltip title=\"Save\" arrow>\r\n            <IconButton onClick={handleSaveName}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n          </LightTooltip>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <LightTooltip title=\"Back\" arrow>\r\n          <IconButton onClick={handleGoBack}>\r\n            <CustomIcon icon={faChevronLeft} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Shortcuts\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SHORTCUTS)}>\r\n            <CustomIcon icon={faQuestion} size=\"xs\" />\r\n          </IconButton>\r\n        </LightTooltip>\r\n        <LightTooltip title=\"Settings\" arrow>\r\n          <IconButton onClick={() => setDialog(DialogTypes.SETTINGS)}>\r\n            <SettingsIcon />\r\n          </IconButton>\r\n        </LightTooltip>\r\n      </Box>\r\n\r\n      <ShortCutsDialog\r\n        open={dialog === DialogTypes.SHORTCUTS}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <SchemeSettingsDialog\r\n        open={dialog === DialogTypes.SETTINGS}\r\n        onApply={handleApplySettings}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(TitleBar);\r\n","import React, { useEffect, useRef, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { Box, IconButton, Typography } from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  cursor: pointer;\r\n  &.sortable-chosen {\r\n    background: rgba(255, 255, 255, 0.2);\r\n  }\r\n  &.activeItem {\r\n    background: rgba(0, 0, 0, 0.5) !important;\r\n  }\r\n  &.hoveredItem {\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\nconst CustomTypography = styled(Typography)`\r\n  color: ${(props) => (props.active === \"true\" ? \"white\" : \"darkgray\")};\r\n`;\r\nconst SmallIconButton = styled(IconButton)`\r\n  .MuiSvgIcon-root {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst PartItem = (props) => {\r\n  const {\r\n    layer_visible,\r\n    layer_locked,\r\n    text,\r\n    toggleVisible,\r\n    toggleLocked,\r\n    selected,\r\n    disableLock,\r\n    onSelect,\r\n    hovered,\r\n    onHover,\r\n  } = props;\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const handleToggleVisible = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleVisible();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  const handleToggleLock = useCallback(\r\n    (e) => {\r\n      e.stopPropagation();\r\n      e.nativeEvent.stopImmediatePropagation();\r\n      toggleLocked();\r\n    },\r\n    [toggleVisible]\r\n  );\r\n\r\n  return (\r\n    <Wrapper\r\n      ref={wrapperRef}\r\n      px={2}\r\n      py={1}\r\n      mb={1}\r\n      display=\"flex\"\r\n      width=\"100%\"\r\n      border={1}\r\n      borderColor=\"grey.700\"\r\n      borderRadius={5}\r\n      onClick={onSelect}\r\n      onMouseEnter={() => onHover(true)}\r\n      onMouseLeave={() => onHover(false)}\r\n      className={clsx(selected && \"activeItem\", hovered && \"hoveredItem\")}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        width=\"100%\"\r\n      >\r\n        <CustomTypography\r\n          variant=\"body2\"\r\n          active={layer_visible ? \"true\" : \"false\"}\r\n          noWrap\r\n        >\r\n          {text}\r\n        </CustomTypography>\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          {!disableLock && (selected || hovered || layer_locked) ? (\r\n            <Box mr={1}>\r\n              <SmallIconButton onClick={handleToggleLock} size=\"small\">\r\n                {layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </SmallIconButton>\r\n            </Box>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\" mr={1}></Box>\r\n          )}\r\n          {selected || hovered || !layer_visible ? (\r\n            <SmallIconButton onClick={handleToggleVisible} size=\"small\">\r\n              {layer_visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\r\n            </SmallIconButton>\r\n          ) : (\r\n            <Box width=\"24px\" height=\"24px\"></Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(PartItem);\r\n","import React, { useEffect, useState, useMemo, useCallback } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport _ from \"lodash\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { ReactSortable } from \"react-sortablejs\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { MouseModes, LayerTypes } from \"constant\";\r\nimport {\r\n  updateLayer,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Collapse,\r\n  IconButton,\r\n  Button as MuiButton,\r\n  ButtonGroup as MuiButtonGroup,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Add as AddIcon,\r\n} from \"@material-ui/icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport PartItem from \"./PartItem\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  expand: {\r\n    transform: \"rotate(0deg)\",\r\n    marginLeft: \"auto\",\r\n    transition: theme.transitions.create(\"transform\", {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: \"rotate(180deg)\",\r\n  },\r\n}));\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst ButtonGroup = styled(MuiButtonGroup)(spacing);\r\nconst AddButton = styled(Button)`\r\n  min-width: 40px;\r\n  padding: 3px 5px;\r\n  .MuiButton-startIcon {\r\n    margin-right: 2px;\r\n  }\r\n  .MuiButton-endIcon {\r\n    margin: 0;\r\n  }\r\n  .fa-lg {\r\n    font-size: 1.3333333333em !important;\r\n  }\r\n`;\r\nconst CustomCardHeader = styled(CardHeader)`\r\n  .MuiCardHeader-title {\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n  }\r\n  .MuiCardHeader-content {\r\n    width: calc(100% - 50px);\r\n  }\r\n`;\r\nconst CustomCardContent = styled(CardContent)`\r\n  padding-top: 0;\r\n`;\r\n\r\nconst PartGroup = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [expanded, setExpanded] = useState(true);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const {\r\n    layerList,\r\n    title,\r\n    actions,\r\n    extraChildren,\r\n    disableLock,\r\n    disableDnd,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const sortedList = useMemo(\r\n    () => _.orderBy(layerList, [\"layer_order\"], [\"asc\"]),\r\n    [layerList]\r\n  );\r\n\r\n  useEffect(() => {\r\n    for (let index in sortedList) {\r\n      if (sortedList[index].layer_order !== parseInt(index) + 1) {\r\n        dispatch(\r\n          updateLayer(\r\n            {\r\n              ...sortedList[index],\r\n              layer_order: parseInt(index) + 1,\r\n            },\r\n            false\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }, [layerList.length]);\r\n\r\n  const handleExpandClick = useCallback(() => {\r\n    setExpanded((preValue) => !preValue);\r\n  }, [setExpanded]);\r\n  const handleChangeLayer = useCallback(\r\n    (list) => {\r\n      for (let index in list) {\r\n        const layer = layerList.find((item) => item.id == list[index].id);\r\n        if (layer && layer.layer_order !== parseInt(index) + 1) {\r\n          dispatch(\r\n            updateLayer(\r\n              {\r\n                ...layer,\r\n                layer_order: parseInt(index) + 1,\r\n              },\r\n              false\r\n            )\r\n          );\r\n        }\r\n      }\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (id, field) => {\r\n      const layer = layerList.find((item) => item.id === id);\r\n      dispatch(\r\n        updateLayer({\r\n          ...layer,\r\n          [field]: layer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [layerList, dispatch]\r\n  );\r\n  const selectLayer = useCallback(\r\n    (layer) => {\r\n      dispatch(setCurrentLayer(layer));\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const hoverLayer = useCallback(\r\n    (layer, flag) => {\r\n      onChangeHoverJSONItem(layer.id, flag);\r\n    },\r\n    [onChangeHoverJSONItem]\r\n  );\r\n  const layerName = useCallback((name, type) => {\r\n    if (type === LayerTypes.UPLOAD && name.indexOf(user.id.toString()) === 0)\r\n      return name.slice(user.id.toString().length + 1);\r\n    return name;\r\n  }, []);\r\n\r\n  return (\r\n    <Box mb={2}>\r\n      <Card>\r\n        <CustomCardHeader\r\n          title={title}\r\n          action={\r\n            <Box display=\"flex\">\r\n              {actions ? (\r\n                <ButtonGroup mr={1}>\r\n                  {actions.map((action, index) => (\r\n                    <AddButton\r\n                      key={index}\r\n                      onClick={action.onClick}\r\n                      size=\"small\"\r\n                      startIcon={<AddIcon />}\r\n                      endIcon={<FontAwesomeIcon icon={action.icon} size=\"lg\" />}\r\n                      variant=\"outlined\"\r\n                    ></AddButton>\r\n                  ))}\r\n                </ButtonGroup>\r\n              ) : (\r\n                <></>\r\n              )}\r\n              <IconButton\r\n                onClick={handleExpandClick}\r\n                className={clsx(classes.expand, {\r\n                  [classes.expandOpen]: expanded,\r\n                })}\r\n              >\r\n                <ExpandMoreIcon />\r\n              </IconButton>\r\n            </Box>\r\n          }\r\n        />\r\n        <Collapse in={expanded}>\r\n          <CustomCardContent>\r\n            <ReactSortable\r\n              list={sortedList}\r\n              setList={handleChangeLayer}\r\n              animation={150}\r\n              onChoose={(evt) => console.log(evt)}\r\n              onSelect={(evt) => console.log(evt)}\r\n              sort={!disableDnd}\r\n            >\r\n              {sortedList.map((item) => (\r\n                <PartItem\r\n                  text={layerName(item.layer_data.name, item.layer_type)}\r\n                  layer_visible={item.layer_visible}\r\n                  layer_locked={item.layer_locked}\r\n                  key={item.id}\r\n                  toggleVisible={() => toggleField(item.id, \"layer_visible\")}\r\n                  toggleLocked={() => toggleField(item.id, \"layer_locked\")}\r\n                  selected={currentLayer && currentLayer.id === item.id}\r\n                  hovered={hoveredLayerJSON[item.id]}\r\n                  onSelect={() => selectLayer(item)}\r\n                  onHover={(flag) => hoverLayer(item, flag)}\r\n                  disableLock={disableLock}\r\n                />\r\n              ))}\r\n            </ReactSortable>\r\n            {extraChildren}\r\n          </CustomCardContent>\r\n        </Collapse>\r\n      </Card>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PartGroup;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst BasePaintDialog = React.memo((props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const { basePaints, onCancel, open, onOpenBase } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n  return (\r\n    <Dialog aria-labelledby=\"base-paints-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"base-paints-title\">Select Base Paint</DialogTitle>\r\n      <DialogContent dividers id=\"base-paint-dialog-content\">\r\n        <CustomInfiniteScroll\r\n          dataLength={limit} //This is important field to render the next data\r\n          next={increaseData}\r\n          hasMore={limit < basePaints.length}\r\n          loader={<Loader />}\r\n          scrollableTarget=\"base-paint-dialog-content\"\r\n        >\r\n          <CustomGridList cellHeight={178} cols={3}>\r\n            {basePaints.slice(0, limit).map((basepaint) => (\r\n              <CustomGridListTile\r\n                key={basepaint.id}\r\n                cols={1}\r\n                onClick={() => onOpenBase(basepaint)}\r\n              >\r\n                <CustomImg\r\n                  src={`${config.assetsURL}/bases/${basepaint.id}/preview.jpg`}\r\n                  alt={basepaint.base_description}\r\n                />\r\n                <GridListTileBar\r\n                  title={basepaint.base_name}\r\n                  subtitle={basepaint.base_description}\r\n                />\r\n              </CustomGridListTile>\r\n            ))}\r\n          </CustomGridList>\r\n        </CustomInfiniteScroll>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default BasePaintDialog;\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst ShapeDialog = (props) => {\r\n  const step = 15;\r\n  const [limit, setLimit] = useState(step);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { shapes, onCancel, open, onOpenShape } = props;\r\n\r\n  const increaseData = () => {\r\n    setLimit(limit + step);\r\n  };\r\n\r\n  const filteredShapes = shapes.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      item.description.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"shape-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"shape-title\">Insert Shape</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <Box id=\"shape-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < filteredShapes.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"shape-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {filteredShapes.slice(0, limit).map((shape) => (\r\n                <CustomGridListTile\r\n                  key={shape.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenShape(shape)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${shape.overlay_thumb}`}\r\n                    alt={shape.name}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={shape.name}\r\n                    subtitle={shape.description}\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShapeDialog);\r\n","import React, { useState } from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n  Typography as MuiTypography,\r\n  Tab,\r\n  Tabs,\r\n} from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport SearchBox from \"components/SearchBox\";\r\nimport config from \"config\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\n\r\nconst StyledTabs = withStyles({\r\n  indicator: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"transparent\",\r\n    \"& > span\": {\r\n      maxWidth: 40,\r\n      width: \"100%\",\r\n      backgroundColor: \"#635ee7\",\r\n    },\r\n  },\r\n})((props) => <Tabs {...props} TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n  root: {\r\n    textTransform: \"none\",\r\n    color: \"#fff\",\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n    fontSize: \"1rem\",\r\n    marginRight: 0,\r\n    padding: \"6px 5px\",\r\n    minWidth: 60,\r\n    \"&:focus\": {\r\n      opacity: 1,\r\n    },\r\n  },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst TabPanel = (props) => {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`logo-tabpanel-${index}`}\r\n      aria-labelledby={`logo-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && <>{children}</>}\r\n    </div>\r\n  );\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `logo-tab-${index}`,\r\n    \"aria-controls\": `logo-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst LogoDialog = (props) => {\r\n  const step = 15;\r\n  const [logoLimit, setLogoLimit] = useState(step);\r\n  const [flagLimit, setFlagLimit] = useState(step);\r\n  const [tabValue, setTabValue] = useState(0);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { logos, onCancel, open, onOpenLogo } = props;\r\n\r\n  const increaseLogoData = () => {\r\n    setLogoLimit(logoLimit + step);\r\n  };\r\n  const increaseFlagData = () => {\r\n    setFlagLimit(flagLimit + step);\r\n  };\r\n  const handleTabChange = (event, newValue) => {\r\n    setTabValue(newValue);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  const filteredLogos = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type !== \"flag\"\r\n  );\r\n  const filteredFlags = logos.filter(\r\n    (item) =>\r\n      item.name.toLowerCase().includes(search.toLowerCase()) &&\r\n      item.type === \"flag\"\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"logo-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"logo-title\">\r\n        <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\r\n          <Typography variant=\"h5\" mr={2}>\r\n            Insert:\r\n          </Typography>\r\n          <StyledTabs\r\n            value={tabValue}\r\n            onChange={handleTabChange}\r\n            aria-label=\"logo tab\"\r\n          >\r\n            <StyledTab label=\"Logo\" {...a11yProps(0)} />\r\n            <StyledTab label=\"Flag\" {...a11yProps(1)} />\r\n          </StyledTabs>\r\n        </Box>\r\n      </DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <Box mb={2}>\r\n          <SearchBox value={search} onChange={(value) => setSearch(value)} />\r\n        </Box>\r\n        <TabPanel value={tabValue} index={0}>\r\n          <Box id=\"logo-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={logoLimit} //This is important field to render the next data\r\n              next={increaseLogoData}\r\n              hasMore={logoLimit < filteredLogos.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"logo-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredLogos.slice(0, logoLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n        <TabPanel value={tabValue} index={1}>\r\n          <Box id=\"flag-dialog-content\" overflow=\"auto\" height=\"70vh\">\r\n            <CustomInfiniteScroll\r\n              dataLength={flagLimit} //This is important field to render the next data\r\n              next={increaseFlagData}\r\n              hasMore={flagLimit < filteredFlags.length}\r\n              loader={<Loader />}\r\n              scrollableTarget=\"flag-dialog-content\"\r\n            >\r\n              <CustomGridList cellHeight={178} cols={3}>\r\n                {filteredFlags.slice(0, flagLimit).map((logo) => (\r\n                  <CustomGridListTile\r\n                    key={logo.id}\r\n                    cols={1}\r\n                    onClick={() => onOpenLogo(logo)}\r\n                  >\r\n                    <CustomImg\r\n                      src={`${config.assetsURL}/${logo.preview_file}`}\r\n                      alt={logo.name}\r\n                    />\r\n                    <GridListTileBar title={logo.name} />\r\n                  </CustomGridListTile>\r\n                ))}\r\n              </CustomGridList>\r\n            </CustomInfiniteScroll>\r\n          </Box>\r\n        </TabPanel>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(LogoDialog);\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst ConfirmDialog = React.memo((props) => {\r\n  const { text, open, onCancel, onConfirm } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography variant=\"body1\">{text}</Typography>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"primary\">\r\n          Cancel\r\n        </Button>\r\n        <Button\r\n          onClick={onConfirm}\r\n          color=\"default\"\r\n          variant=\"outlined\"\r\n          autoFocus\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n});\r\n\r\nexport default ConfirmDialog;\r\n","import React from \"react\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Box,\r\n} from \"@material-ui/core\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextWrapper = styled(Box)`\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst YesNoDialog = (props) => {\r\n  const { text, open, onYes, onNo } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"confirm-title\" open={open}>\r\n      <DialogTitle id=\"confirm-title\">Confirm</DialogTitle>\r\n      <DialogContent dividers>\r\n        <TextWrapper>{text}</TextWrapper>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onYes} color=\"secondary\" variant=\"outlined\" autoFocus>\r\n          Yes\r\n        </Button>\r\n        <Button onClick={onNo} color=\"primary\" variant=\"outlined\">\r\n          No\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(YesNoDialog);\r\n","import React, { useState, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport Loader from \"components/Loader\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  IconButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  GridList,\r\n  GridListTile,\r\n  GridListTileBar,\r\n} from \"@material-ui/core\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport YesNoDialog from \"dialogs/YesNoDialog\";\r\nimport { Delete as DeleteIcon } from \"@material-ui/icons\";\r\nimport { DropzoneArea } from \"material-ui-dropzone\";\r\nimport { uploadFiles, deleteUpload } from \"redux/reducers/uploadReducer\";\r\nimport {\r\n  deleteItemsByUploadID as deleteLayerItemsByUploadID,\r\n  setCurrent as setCurrentLayer,\r\n} from \"redux/reducers/layerReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\n\r\nimport config from \"config\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst CustomInfiniteScroll = styled(InfiniteScroll)`\r\n  &.infinite-scroll-component {\r\n    overflow: hidden !important;\r\n  }\r\n`;\r\n\r\nconst CustomGridList = styled(GridList)`\r\n  overflow: hidden !important;\r\n  margin: 0 !important;\r\n`;\r\nconst CustomGridListTile = styled(GridListTile)`\r\n  cursor: pointer;\r\n`;\r\nconst CustomDialogContent = styled(DialogContent)`\r\n  width: 600px;\r\n`;\r\nconst CustomImg = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  object-fit: contain;\r\n`;\r\nconst DeleteButton = styled(IconButton)`\r\n  color: #ccc;\r\n`;\r\n\r\nconst UploadDialog = (props) => {\r\n  const step = 15;\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const [uploadToDelete, setUploadToDelete] = useState(null);\r\n  const [associatedSchemes, setAssociatedSchemes] = useState([]);\r\n\r\n  const [limit, setLimit] = useState(step);\r\n  const [files, setFiles] = useState([]);\r\n  const [dropZoneKey, setDropZoneKey] = useState(1);\r\n  const { uploads, onCancel, open, onOpenUpload } = props;\r\n\r\n  const increaseData = useCallback(() => {\r\n    setLimit(limit + step);\r\n  }, [setLimit, limit]);\r\n  const getNameFromFileName = useCallback(\r\n    (file_name) => {\r\n      let temp = file_name.substring(\r\n        file_name.lastIndexOf(\"uploads/\") + \"uploads/\".length,\r\n        file_name.lastIndexOf(\".\")\r\n      );\r\n      if (temp.indexOf(user.id.toString()) === 0)\r\n        return temp.slice(user.id.toString().length + 1);\r\n      return temp;\r\n    },\r\n    [user.id]\r\n  );\r\n  const handleDropZoneChange = useCallback(\r\n    (files_up) => {\r\n      setFiles(files_up);\r\n      console.log(files_up);\r\n    },\r\n    [setFiles]\r\n  );\r\n  const handleUploadFiles = useCallback(() => {\r\n    console.log(files);\r\n    dispatch(uploadFiles(user.id, currentScheme.id, files));\r\n    setFiles([]);\r\n    setDropZoneKey(dropZoneKey + 1);\r\n  }, [\r\n    dispatch,\r\n    user.id,\r\n    currentScheme.id,\r\n    files,\r\n    setFiles,\r\n    dropZoneKey,\r\n    setDropZoneKey,\r\n  ]);\r\n  const handleClickDeleteUpload = useCallback(\r\n    (event, uploadItem) => {\r\n      event.stopPropagation();\r\n      event.nativeEvent.stopImmediatePropagation();\r\n      setUploadToDelete(uploadItem);\r\n    },\r\n    [setUploadToDelete]\r\n  );\r\n  const handleDeleteUploadConfirm = useCallback(async () => {\r\n    console.log(\"Deleting: \", uploadToDelete);\r\n    try {\r\n      let schemes = await SchemeService.getSchemeListByUploadID(\r\n        uploadToDelete.id\r\n      );\r\n      if (schemes.length) {\r\n        setAssociatedSchemes(schemes);\r\n      } else {\r\n        dispatch(deleteUpload(uploadToDelete, true));\r\n        setUploadToDelete(null);\r\n      }\r\n    } catch (err) {\r\n      dispatch(setMessage({ message: err.message }));\r\n      setUploadToDelete(null);\r\n    }\r\n  }, [dispatch, uploadToDelete, setAssociatedSchemes, setUploadToDelete]);\r\n\r\n  const handleDeleteUploadFinally = useCallback(\r\n    (deleteFromAll = true) => {\r\n      if (deleteFromAll) {\r\n        dispatch(deleteLayerItemsByUploadID(uploadToDelete.id));\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n      dispatch(deleteUpload(uploadToDelete, deleteFromAll));\r\n      setUploadToDelete(null);\r\n      setAssociatedSchemes([]);\r\n    },\r\n    [dispatch, uploadToDelete, setUploadToDelete, setAssociatedSchemes]\r\n  );\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"upload-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"upload-title\">My Uploads</DialogTitle>\r\n      <CustomDialogContent dividers>\r\n        <DropzoneArea\r\n          onChange={handleDropZoneChange}\r\n          value={files}\r\n          showFileNamesInPreview={true}\r\n          showFileNames={true}\r\n          maxFiles={10}\r\n          key={dropZoneKey}\r\n        />\r\n        {files.length ? (\r\n          <Box mt={1} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleUploadFiles}\r\n            >\r\n              Save To My Upload List\r\n            </Button>\r\n          </Box>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <Box id=\"upload-dialog-content\" overflow=\"auto\" height=\"40vh\" mt={1}>\r\n          <CustomInfiniteScroll\r\n            dataLength={limit} //This is important field to render the next data\r\n            next={increaseData}\r\n            hasMore={limit < uploads.length}\r\n            loader={<Loader />}\r\n            scrollableTarget=\"upload-dialog-content\"\r\n          >\r\n            <CustomGridList cellHeight={178} cols={3}>\r\n              {uploads.slice(0, limit).map((uploadItem) => (\r\n                <CustomGridListTile\r\n                  key={uploadItem.id}\r\n                  cols={1}\r\n                  onClick={() => onOpenUpload(uploadItem)}\r\n                >\r\n                  <CustomImg\r\n                    src={`${config.assetsURL}/${uploadItem.file_name}`}\r\n                    alt={getNameFromFileName(uploadItem.file_name)}\r\n                  />\r\n                  <GridListTileBar\r\n                    title={getNameFromFileName(uploadItem.file_name)}\r\n                    actionIcon={\r\n                      <DeleteButton\r\n                        onClick={(event) =>\r\n                          handleClickDeleteUpload(event, uploadItem)\r\n                        }\r\n                      >\r\n                        <DeleteIcon />\r\n                      </DeleteButton>\r\n                    }\r\n                  />\r\n                </CustomGridListTile>\r\n              ))}\r\n            </CustomGridList>\r\n          </CustomInfiniteScroll>\r\n        </Box>\r\n      </CustomDialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onCancel} color=\"secondary\">\r\n          Cancel\r\n        </Button>\r\n      </DialogActions>\r\n      <ConfirmDialog\r\n        text={\r\n          uploadToDelete\r\n            ? `Are you sure to delete \"${getNameFromFileName(\r\n                uploadToDelete.file_name\r\n              )}\"?`\r\n            : \"\"\r\n        }\r\n        open={!!uploadToDelete}\r\n        onCancel={() => setUploadToDelete(null)}\r\n        onConfirm={handleDeleteUploadConfirm}\r\n      />\r\n      <YesNoDialog\r\n        text={\r\n          associatedSchemes.length ? (\r\n            <>\r\n              The Projects below have the associated file:\r\n              <ul>\r\n                {associatedSchemes.map((item, index) => (\r\n                  <li key={index}>{item.name}</li>\r\n                ))}\r\n              </ul>\r\n              Would you like delete all of them?\r\n            </>\r\n          ) : (\r\n            \"\"\r\n          )\r\n        }\r\n        open={!!associatedSchemes.length}\r\n        onYes={() => handleDeleteUploadFinally(true)}\r\n        onNo={() => handleDeleteUploadFinally(false)}\r\n      />\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(UploadDialog);\r\n","import React from \"react\";\r\nimport config from \"config\";\r\n\r\nimport styled from \"styled-components/macro\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { Select as MuiSelect, MenuItem } from \"@material-ui/core\";\r\n\r\nconst Select = styled(MuiSelect)(spacing);\r\n\r\nconst CustomSelect = styled(Select)`\r\n  .MuiSelect-selectMenu {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst FontImage = styled.img`\r\n  width: 506px;\r\n  filter: invert(1);\r\n`;\r\n\r\nconst FontSelect = (props) => {\r\n  const { fontList, value, onChange } = props;\r\n\r\n  return (\r\n    <CustomSelect\r\n      labelId=\"font-select-label\"\r\n      id=\"font-select-outlined\"\r\n      value={value}\r\n      onChange={onChange}\r\n      label=\"Font\"\r\n      mb={4}\r\n      renderValue={(id) => {\r\n        const font = fontList.find((item) => item.id === id);\r\n        if (!font) {\r\n          return <>Select Font</>;\r\n        }\r\n        return (\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        );\r\n      }}\r\n    >\r\n      {fontList.map((font) => (\r\n        <MenuItem value={font.id} key={font.id}>\r\n          <FontImage\r\n            src={`${config.assetsURL}/${font.font_preview}`}\r\n            alt={font.font_name}\r\n          />\r\n        </MenuItem>\r\n      ))}\r\n    </CustomSelect>\r\n  );\r\n};\r\n\r\nexport default FontSelect;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Formik, Form } from \"formik\";\r\n\r\nimport styled from \"styled-components/macro\";\r\nimport { colorValidator } from \"helper\";\r\nimport config from \"config\";\r\nimport { insertToLoadedList as insertToLoadedFontList } from \"redux/reducers/fontReducer\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\nimport {\r\n  Box,\r\n  Button as MuiButton,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField as MuiTextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Typography as MuiTypography,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport SliderInput from \"components/SliderInput\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\nconst TextField = styled(MuiTextField)(spacing);\r\nconst Typography = styled(MuiTypography)(spacing);\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst TextPreviewWrapper = styled(Box)`\r\n  overflow: auto;\r\n  background: #${(props) => props.backColor};\r\n`;\r\nconst TextPreview = styled(Box)`\r\n  color: ${(props) => props.color};\r\n  -webkit-text-stroke-width: ${(props) => props.stroke}px;\r\n  -webkit-text-stroke-color: ${(props) => props.scolor};\r\n  font-size: ${(props) => props.size}px;\r\n  font-family: ${(props) => props.font};\r\n  transform: rotate(${(props) => props.rotate}deg);\r\n`;\r\n\r\nconst InnerForm = React.memo((props) => {\r\n  const {\r\n    fontList,\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    baseColor,\r\n  } = props;\r\n  const dispatch = useDispatch();\r\n  const loadedFontList = useSelector((state) => state.fontReducer.loadedList);\r\n\r\n  const loadFont = (fontFamily, fontFile) => {\r\n    let fontObject = new FontFace(fontFamily, fontFile);\r\n    fontObject\r\n      .load()\r\n      .then(function (loaded_face) {\r\n        document.fonts.add(loaded_face);\r\n        dispatch(insertToLoadedFontList(fontFamily));\r\n      })\r\n      .catch(function (error) {\r\n        // error occurred\r\n        console.warn(error, fontFamily);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    let font = fontList.length\r\n      ? fontList.find((item) => item.id === values.font)\r\n      : null;\r\n    if (font && !loadedFontList.includes(font.font_name)) {\r\n      loadFont(font.font_name, `url(${config.assetsURL}/${font.font_file})`);\r\n    }\r\n  }, [values.font]);\r\n\r\n  return (\r\n    <>\r\n      <CustomeTextField\r\n        name=\"text\"\r\n        label=\"Text\"\r\n        placeholder=\"Input Text here\"\r\n        variant=\"outlined\"\r\n        value={values.text}\r\n        error={Boolean(touched.text && errors.text)}\r\n        helperText={touched.text && errors.text}\r\n        onBlur={handleBlur}\r\n        onChange={handleChange}\r\n        fullWidth\r\n        margin=\"normal\"\r\n        mb={4}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n        }}\r\n        autoFocus={true}\r\n      />\r\n      <FormControl variant=\"outlined\">\r\n        <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n        <FontSelect\r\n          value={values.font}\r\n          onChange={(e) => setFieldValue(\"font\", e.target.value)}\r\n          fontList={fontList}\r\n        />\r\n      </FormControl>\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Font Size\"\r\n            min={6}\r\n            max={72}\r\n            value={values.size}\r\n            setValue={(value) => setFieldValue(\"size\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Font Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.color}\r\n              onChange={(color) => setFieldValue(\"color\", color)}\r\n              onInputChange={(color) => setFieldValue(\"color\", color)}\r\n              error={Boolean(errors.color)}\r\n              helperText={errors.color}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Stroke Width\"\r\n            min={0}\r\n            max={10}\r\n            value={values.stroke}\r\n            setValue={(value) => setFieldValue(\"stroke\", value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={6}>\r\n          <Box\r\n            display=\"flex\"\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-between\"\r\n          >\r\n            <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n              Stroke Color\r\n            </Typography>\r\n            <ColorPickerInput\r\n              value={values.scolor}\r\n              onChange={(color) => setFieldValue(\"scolor\", color)}\r\n              onInputChange={(color) => setFieldValue(\"scolor\", color)}\r\n              error={Boolean(errors.scolor)}\r\n              helperText={errors.scolor}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={2}>\r\n        <Grid item xs={12} sm={6}>\r\n          <SliderInput\r\n            label=\"Rotation\"\r\n            min={-179}\r\n            max={179}\r\n            value={values.rotation}\r\n            setValue={(value) => setFieldValue(\"rotation\", value)}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      <TextPreviewWrapper\r\n        width=\"100%\"\r\n        height=\"200px\"\r\n        my={2}\r\n        display=\"flex\"\r\n        justifyContent=\"center\"\r\n        alignItems=\"center\"\r\n        backColor={baseColor}\r\n      >\r\n        <TextPreview\r\n          color={values.color}\r\n          stroke={values.stroke}\r\n          scolor={values.scolor}\r\n          size={values.size}\r\n          rotate={values.rotation}\r\n          font={fontList.find((item) => item.id === values.font).font_name}\r\n        >\r\n          {values.text}\r\n        </TextPreview>\r\n      </TextPreviewWrapper>\r\n    </>\r\n  );\r\n});\r\n\r\nconst TextDialog = (props) => {\r\n  const {\r\n    fontList,\r\n    onCancel,\r\n    open,\r\n    baseColor,\r\n    defaultColor,\r\n    defaultStrokeColor,\r\n    onCreate,\r\n  } = props;\r\n\r\n  return (\r\n    <Dialog aria-labelledby=\"insert-text-title\" open={open} onClose={onCancel}>\r\n      <DialogTitle id=\"insert-text-title\">Insert Text</DialogTitle>\r\n      <Formik\r\n        initialValues={{\r\n          text: \"\",\r\n          font: 1,\r\n          size: 14,\r\n          color: defaultColor || \"#000000\",\r\n          stroke: 0,\r\n          scolor: defaultStrokeColor || \"#000000\",\r\n          rotation: 0,\r\n        }}\r\n        validationSchema={Yup.object().shape({\r\n          text: Yup.string().required(\"Required\"),\r\n          color: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n          scolor: Yup.string()\r\n            .nullable()\r\n            .test(\"color-validation\", \"Incorrect Color Format\", colorValidator),\r\n        })}\r\n        validate={(values) => {\r\n          console.log(values);\r\n          return {};\r\n        }}\r\n        onSubmit={onCreate}\r\n      >\r\n        {(formProps) => (\r\n          <Form onSubmit={formProps.handleSubmit}>\r\n            <DialogContent dividers id=\"insert-text-dialog-content\">\r\n              <InnerForm\r\n                {...formProps}\r\n                fontList={fontList}\r\n                baseColor={baseColor}\r\n              />\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={onCancel} color=\"secondary\">\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                disabled={formProps.isSubmitting}\r\n              >\r\n                Create\r\n              </Button>\r\n            </DialogActions>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default React.memo(TextDialog);\r\n","import React, { useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport { Box, MenuItem, Divider as MuiDivider } from \"@material-ui/core\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Octagon as OctagonIcon } from \"react-feather\";\r\nimport {\r\n  SignalWifi4Bar as WedgeIcon,\r\n  ShowChart as LineIcon,\r\n  TrendingUp as ArrowIcon,\r\n} from \"@material-ui/icons\";\r\nimport {\r\n  faSquare,\r\n  faCircle,\r\n  faStar,\r\n  faDotCircle,\r\n  faMousePointer,\r\n  faDrawPolygon,\r\n  faPaintBrush,\r\n  faImage,\r\n  faFont,\r\n  faFolderOpen,\r\n  faShapes,\r\n  faCar,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faCuttlefish } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nimport { setMouseMode } from \"redux/reducers/boardReducer\";\r\nimport {\r\n  setCurrent as setCurrentLayer,\r\n  createLayersFromBasePaint,\r\n  createLayerFromShape,\r\n  createLayerFromLogo,\r\n  createLayerFromUpload,\r\n  createTextLayer,\r\n} from \"redux/reducers/layerReducer\";\r\n\r\nimport { DialogTypes, MouseModes } from \"constant\";\r\n\r\nimport BasePaintDialog from \"dialogs/BasePaintDialog\";\r\nimport ShapeDialog from \"dialogs/ShapeDialog\";\r\nimport LogoDialog from \"dialogs/LogoDialog\";\r\nimport UploadDialog from \"dialogs/UploadDialog\";\r\nimport TextDialog from \"dialogs/TextDialog\";\r\nimport LightTooltip from \"components/LightTooltip\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\nconst Wrapper = styled(Box)`\r\n  background: #666666;\r\n  padding: 0px 10px 0 15px;\r\n`;\r\nconst ToolWrapper = styled(Box)`\r\n  background: #444;\r\n  border-radius: 5px;\r\n  padding: 5px 1px;\r\n`;\r\nconst CustomItem = styled(MenuItem)`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 7px 10px;\r\n  background-color: ${(props) =>\r\n    props.active === \"true\" ? \"rgba(255, 255, 255, 0.08)\" : \"none\"};\r\n`;\r\n\r\nconst CustomFontAwesomeIcon = styled(FontAwesomeIcon)`\r\n  transform: ${(props) =>\r\n    props.isstretch === \"true\" ? \"scaleX(1.2) scaleY(0.8)\" : \"none\"};\r\n`;\r\n\r\nconst modes = [\r\n  {\r\n    value: MouseModes.DEFAULT,\r\n    label: \"Default Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faMousePointer} />,\r\n  },\r\n  {\r\n    value: MouseModes.POLYGON,\r\n    label: \"Polygon Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDrawPolygon} />,\r\n  },\r\n  {\r\n    value: MouseModes.LINE,\r\n    label: \"Line Mode\",\r\n    icon: <LineIcon />,\r\n  },\r\n  {\r\n    value: MouseModes.PEN,\r\n    label: \"Brush Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faPaintBrush} />,\r\n  },\r\n  {\r\n    value: MouseModes.RECT,\r\n    label: \"Rectangle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faSquare} />,\r\n  },\r\n  {\r\n    value: MouseModes.CIRCLE,\r\n    label: \"Circle Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.ELLIPSE,\r\n    label: \"Ellipse Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCircle} isstretch=\"true\" />,\r\n  },\r\n  {\r\n    value: MouseModes.STAR,\r\n    label: \"Star Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faStar} />,\r\n  },\r\n  {\r\n    value: MouseModes.RING,\r\n    label: \"Ring Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faDotCircle} />,\r\n  },\r\n  {\r\n    value: MouseModes.REGULARPOLYGON,\r\n    label: \"Regular Polygon Mode\",\r\n    icon: <OctagonIcon size={17} />,\r\n  },\r\n  {\r\n    value: MouseModes.WEDGE,\r\n    label: \"Wedge Mode\",\r\n    icon: <WedgeIcon fontSize=\"small\" />,\r\n  },\r\n  {\r\n    value: MouseModes.ARC,\r\n    label: \"Arc Mode\",\r\n    icon: <CustomFontAwesomeIcon icon={faCuttlefish} />,\r\n  },\r\n  {\r\n    value: MouseModes.ARROW,\r\n    label: \"Arrow Mode\",\r\n    icon: <ArrowIcon fontSize=\"small\" />,\r\n  },\r\n];\r\n\r\nconst dialog_modes = [\r\n  {\r\n    value: DialogTypes.UPLOAD,\r\n    label: \"Insert My Logo/Upload New Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faFolderOpen} />,\r\n  },\r\n  {\r\n    value: DialogTypes.LOGO,\r\n    label: \"Insert Logo\",\r\n    icon: <CustomFontAwesomeIcon icon={faImage} />,\r\n  },\r\n  {\r\n    value: DialogTypes.TEXT,\r\n    label: \"Insert Text\",\r\n    icon: <CustomFontAwesomeIcon icon={faFont} />,\r\n  },\r\n  {\r\n    value: DialogTypes.SHAPE,\r\n    label: \"Insert Overlay\",\r\n    icon: <CustomFontAwesomeIcon icon={faShapes} />,\r\n  },\r\n  {\r\n    value: DialogTypes.BASEPAINT,\r\n    label: \"Insert BasePaint\",\r\n    icon: <CustomFontAwesomeIcon icon={faCar} />,\r\n  },\r\n];\r\n\r\nconst DrawerBar = ({ dialog, setDialog, focusBoard }) => {\r\n  const dispatch = useDispatch();\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const uploadList = useSelector((state) => state.uploadReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const basePaints = useSelector((state) => state.basePaintReducer.list);\r\n\r\n  const handleModeChange = useCallback(\r\n    (value) => {\r\n      dispatch(setMouseMode(value));\r\n      if (value !== MouseModes.DEFAULT) {\r\n        dispatch(setCurrentLayer(null));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const handleOpenBase = useCallback(\r\n    (base) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayersFromBasePaint(currentScheme.id, base));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [dispatch, setDialog, focusBoard, currentScheme && currentScheme.id]\r\n  );\r\n  const handleOpenShape = useCallback(\r\n    (shape) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromShape(currentScheme.id, shape, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenLogo = useCallback(\r\n    (logo) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromLogo(currentScheme.id, logo, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleOpenUpload = useCallback(\r\n    (upload) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createLayerFromUpload(currentScheme.id, upload, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n  const handleCreateText = useCallback(\r\n    (values) => {\r\n      dispatch(setMouseMode(MouseModes.DEFAULT));\r\n      dispatch(createTextLayer(currentScheme.id, values, frameSize));\r\n      setDialog(null);\r\n      focusBoard();\r\n    },\r\n    [\r\n      dispatch,\r\n      setDialog,\r\n      focusBoard,\r\n      currentScheme && currentScheme.id,\r\n      frameSize,\r\n    ]\r\n  );\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ToolWrapper>\r\n        {modes.map((mode) => (\r\n          <LightTooltip\r\n            key={mode.value}\r\n            title={mode.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={mode.value}\r\n              onClick={() => handleModeChange(mode.value)}\r\n              active={mode.value === mouseMode ? \"true\" : \"false\"}\r\n            >\r\n              {mode.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n        <Divider my={1} />\r\n        {dialog_modes.map((item) => (\r\n          <LightTooltip\r\n            key={item.value}\r\n            title={item.label}\r\n            arrow\r\n            placement=\"right\"\r\n          >\r\n            <CustomItem\r\n              value={item.value}\r\n              onClick={() => setDialog(item.value)}\r\n            >\r\n              {item.icon}\r\n            </CustomItem>\r\n          </LightTooltip>\r\n        ))}\r\n      </ToolWrapper>\r\n\r\n      <BasePaintDialog\r\n        open={dialog === DialogTypes.BASEPAINT}\r\n        basePaints={basePaints}\r\n        onOpenBase={handleOpenBase}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <ShapeDialog\r\n        open={dialog === DialogTypes.SHAPE}\r\n        shapes={overlayList}\r\n        onOpenShape={handleOpenShape}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <LogoDialog\r\n        open={dialog === DialogTypes.LOGO}\r\n        logos={logoList}\r\n        onOpenLogo={handleOpenLogo}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <UploadDialog\r\n        open={dialog === DialogTypes.UPLOAD}\r\n        uploads={uploadList}\r\n        onOpenUpload={handleOpenUpload}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n      <TextDialog\r\n        open={dialog === DialogTypes.TEXT}\r\n        fontList={fontList}\r\n        baseColor={currentScheme.base_color}\r\n        defaultColor={currentScheme.guide_data.default_shape_color}\r\n        defaultStrokeColor={currentScheme.guide_data.default_shape_scolor}\r\n        onCreate={handleCreateText}\r\n        onCancel={() => setDialog(null)}\r\n      />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default React.memo(DrawerBar);\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nimport TitleBar from \"./TitleBar\";\r\nimport PartGroup from \"./PartGroup\";\r\nimport DrawerBar from \"./DrawerBar\";\r\n\r\nimport { changeBaseColor } from \"redux/reducers/schemeReducer\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\n\r\nconst LayerWrapper = styled(Box)`\r\n  width: 300px;\r\n  background: #666666;\r\n  overflow: auto;\r\n`;\r\nconst TitleWrapper = styled(Box)`\r\n  background: #666666;\r\n`;\r\nconst Wrapper = styled(Box)`\r\n  height: calc(100% - 46px);\r\n  position: relative;\r\n`;\r\nconst ColorApplyButton = styled(Button)`\r\n  padding: 3px 15px 5px;\r\n`;\r\n\r\nconst Sidebar = (props) => {\r\n  const {\r\n    dialog,\r\n    setDialog,\r\n    focusBoard,\r\n    hoveredLayerJSON,\r\n    onChangeHoverJSONItem,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const layerList = useSelector((state) => state.layerReducer.list);\r\n  const currentCarMake = useSelector((state) => state.carMakeReducer.current);\r\n\r\n  const baseColor = useMemo(\r\n    () =>\r\n      currentScheme.base_color === \"transparent\"\r\n        ? currentScheme.base_color\r\n        : \"#\" + currentScheme.base_color,\r\n    [currentScheme.base_color]\r\n  );\r\n\r\n  const [colorInput, setColorInput] = useState(baseColor);\r\n  const [colorDirty, setColorDirty] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setColorInput(baseColor);\r\n  }, [baseColor]);\r\n\r\n  const handleChangeBasePaintColor = useCallback(\r\n    (color) => {\r\n      dispatch(changeBaseColor(currentScheme.id, color));\r\n      setColorInput(color);\r\n      setColorDirty(false);\r\n    },\r\n    [dispatch, currentScheme && currentScheme.id, setColorInput, setColorDirty]\r\n  );\r\n  const handleChangeBasePaintColorInput = useCallback(\r\n    (color) => {\r\n      setColorInput(color);\r\n      if (color !== baseColor) setColorDirty(true);\r\n      else setColorDirty(false);\r\n    },\r\n    [baseColor, setColorInput, setColorDirty]\r\n  );\r\n  const handleApplyBasePaintColor = useCallback(() => {\r\n    dispatch(changeBaseColor(currentScheme.id, colorInput));\r\n    setColorDirty(false);\r\n  }, [dispatch, currentScheme && currentScheme.id, colorInput, setColorDirty]);\r\n\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\">\r\n      <TitleWrapper px={3}>\r\n        <TitleBar />\r\n      </TitleWrapper>\r\n      <Wrapper display=\"flex\">\r\n        <DrawerBar\r\n          dialog={dialog}\r\n          setDialog={setDialog}\r\n          focusBoard={focusBoard}\r\n        />\r\n        <LayerWrapper pr={3} pb={2}>\r\n          <PartGroup\r\n            title={currentCarMake ? currentCarMake.name : \"\"}\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.CAR\r\n            )}\r\n            disableLock={true}\r\n            disableDnd={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Logos & Text\"\r\n            layerList={layerList.filter(\r\n              (item) =>\r\n                item.layer_type === LayerTypes.LOGO ||\r\n                item.layer_type === LayerTypes.TEXT ||\r\n                item.layer_type === LayerTypes.UPLOAD\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Shapes\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.SHAPE\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Overlays\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.OVERLAY\r\n            )}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n          />\r\n          <PartGroup\r\n            title=\"Base Paint\"\r\n            layerList={layerList.filter(\r\n              (item) => item.layer_type === LayerTypes.BASE\r\n            )}\r\n            disableLock={true}\r\n            hoveredLayerJSON={hoveredLayerJSON}\r\n            onChangeHoverJSONItem={onChangeHoverJSONItem}\r\n            extraChildren={\r\n              <Box\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"space-between\"\r\n              >\r\n                <ColorPickerInput\r\n                  value={colorInput}\r\n                  onChange={handleChangeBasePaintColor}\r\n                  onInputChange={handleChangeBasePaintColorInput}\r\n                />\r\n                {colorDirty ? (\r\n                  <ColorApplyButton\r\n                    onClick={handleApplyBasePaintColor}\r\n                    variant=\"outlined\"\r\n                  >\r\n                    Apply\r\n                  </ColorApplyButton>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </Box>\r\n            }\r\n          />\r\n        </LayerWrapper>\r\n      </Wrapper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport SliderInput from \"components/SliderInput\";\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  IconButton,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  Visibility as VisibilityIcon,\r\n  VisibilityOff as VisibilityOffIcon,\r\n  Lock as LockIcon,\r\n  LockOpen as LockOpenIcon,\r\n  ExpandMore as ExpandMoreIcon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst GeneralProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleField,\r\n  } = props;\r\n\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  if (JSON.stringify(errors) !== \"{}\") {\r\n    console.log(errors);\r\n  }\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.name\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.text\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.numPoints\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.angle\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>General</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.name\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.name\"\r\n              label=\"Name\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.name}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.name &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.name\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.name &&\r\n                errors.layer_data &&\r\n                errors.layer_data.name\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.text\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.text\"\r\n              label=\"Text\"\r\n              variant=\"outlined\"\r\n              value={values.layer_data.text}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.text &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.text\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.text &&\r\n                errors.layer_data &&\r\n                errors.layer_data.text\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.numPoints\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.numPoints\"\r\n              label=\"Number of Points\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={Math.round(values.layer_data.numPoints)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.numPoints &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.numPoints\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.numPoints &&\r\n                errors.layer_data &&\r\n                errors.layer_data.numPoints\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.angle\") ? (\r\n            <SliderInput\r\n              label=\"Angle\"\r\n              min={0}\r\n              max={360}\r\n              value={Math.round(values.layer_data.angle)}\r\n              setValue={(value) => setFieldValue(\"layer_data.angle\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_visible\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Visibility\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_visible\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_visible ? (\r\n                  <VisibilityIcon />\r\n                ) : (\r\n                  <VisibilityOffIcon />\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_locked\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Locking\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() => toggleField(\"layer_locked\")}\r\n                size=\"small\"\r\n              >\r\n                {values.layer_locked ? <LockIcon /> : <LockOpenIcon />}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(GeneralProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes, MouseModes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  Link as LinkIcon,\r\n  LinkOff as LinkOfficon,\r\n} from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\nconst CustomIconButton = styled(IconButton)`\r\n  margin: 0 5px;\r\n  height: 50px;\r\n`;\r\n\r\nconst SizeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const pressingShiftKey = useMemo(() => pressedKey === \"shift\", [pressedKey]);\r\n\r\n  const handleChangeWidth = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.height\",\r\n          (value * currentLayer.layer_data.height) /\r\n            currentLayer.layer_data.width\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.width\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeHeight = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.sizeLocked) {\r\n        setFieldValue(\r\n          \"layer_data.width\",\r\n          (value * currentLayer.layer_data.width) /\r\n            currentLayer.layer_data.height\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.height\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.height,\r\n      currentLayer && currentLayer.layer_data.width,\r\n    ]\r\n  );\r\n  const handleChangeScaleX = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleY\",\r\n          (value * currentLayer.layer_data.scaleY) /\r\n            currentLayer.layer_data.scaleX\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleX\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n  const handleChangeScaleY = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.scaleX\",\r\n          (value * currentLayer.layer_data.scaleX) /\r\n            currentLayer.layer_data.scaleY\r\n        );\r\n      }\r\n      setFieldValue(\"layer_data.scaleY\", parseFloat(event.target.value) || 0);\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.scaleY,\r\n      currentLayer && currentLayer.layer_data.scaleX,\r\n    ]\r\n  );\r\n\r\n  const handleChangeInnerRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.outerRadius\",\r\n          (value * currentLayer.layer_data.outerRadius) /\r\n            currentLayer.layer_data.innerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.innerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  const handleChangeOuterRadius = useCallback(\r\n    (event) => {\r\n      let value = parseFloat(event.target.value) || 0;\r\n      if (values.layer_data.scaleLocked) {\r\n        setFieldValue(\r\n          \"layer_data.innerRadius\",\r\n          (value * currentLayer.layer_data.innerRadius) /\r\n            currentLayer.layer_data.outerRadius\r\n        );\r\n      }\r\n      setFieldValue(\r\n        \"layer_data.outerRadius\",\r\n        parseFloat(event.target.value) || 0\r\n      );\r\n    },\r\n    [\r\n      setFieldValue,\r\n      currentLayer && currentLayer.layer_data.outerRadius,\r\n      currentLayer && currentLayer.layer_data.innerRadius,\r\n    ]\r\n  );\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.height\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scaleY\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.radius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.outerRadius\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerLength\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.pointerWidth\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Size</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.width\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Width\"\r\n                    : \"RadiusX\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.width)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.width &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.width\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.width &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.width\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeWidth}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.width\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"sizeLocked\")}\r\n              >\r\n                {values.layer_data.sizeLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.height\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.height\"\r\n                label={\r\n                  values.layer_data.type !== MouseModes.ELLIPSE\r\n                    ? \"Height\"\r\n                    : \"RadiusY\"\r\n                }\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.height)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.height &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.height\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.height &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.height\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeHeight}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleX\"\r\n                label=\"ScaleX\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleX)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleX\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleX &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleX\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleX}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleX\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.scaleY\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.scaleY\"\r\n                label=\"ScaleY\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.scaleY)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.scaleY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.scaleY\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.scaleY &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.scaleY\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeScaleY}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          <Box\r\n            display=\"flex\"\r\n            justifyContent=\"space-between\"\r\n            width=\"100%\"\r\n            alignItems=\"center\"\r\n          >\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.innerRadius\"\r\n                label=\"Inner Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.innerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.innerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.innerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.innerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.innerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeInnerRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.innerRadius\") &&\r\n            AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomIconButton\r\n                onClick={() => toggleLayerDataField(\"scaleLocked\")}\r\n              >\r\n                {values.layer_data.scaleLocked || pressingShiftKey ? (\r\n                  <LinkIcon />\r\n                ) : (\r\n                  <LinkOfficon />\r\n                )}\r\n              </CustomIconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n            {AllowedLayerTypes.includes(\"layer_data.outerRadius\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.outerRadius\"\r\n                label=\"Outer Radius\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.outerRadius)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.outerRadius &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.outerRadius\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.outerRadius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.outerRadius\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChangeOuterRadius}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Box>\r\n          {AllowedLayerTypes.includes(\"layer_data.radius\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.radius\"\r\n              label=\"Radius\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.radius)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.radius &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.radius\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.radius &&\r\n                errors.layer_data &&\r\n                errors.layer_data.radius\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerWidth\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerWidth\"\r\n              label=\"Pointer Width\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerWidth)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerWidth &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerWidth\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerWidth &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerWidth\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.pointerLength\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.pointerLength\"\r\n              label=\"Pointer Length\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.pointerLength)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.pointerLength &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.pointerLength\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.pointerLength &&\r\n                errors.layer_data &&\r\n                errors.layer_data.pointerLength\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(SizeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst PositionProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.left\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.top\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Position</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.left\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.left\"\r\n                  label=\"X\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.left)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.left &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.left\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.left &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.left\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.top\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.top\"\r\n                  label=\"Y\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.top)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.top &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.top\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.top &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.top\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(PositionProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  FormControl as MuiFormControl,\r\n  Typography,\r\n  InputLabel,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { spacing } from \"@material-ui/system\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\nimport FontSelect from \"components/FontSelect\";\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst FormControl = styled(MuiFormControl)(spacing);\r\n\r\nconst FontProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    fontList,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"layer_data.font\")) return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Font</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.font\") ? (\r\n            <FormControl variant=\"outlined\" mt={2}>\r\n              <InputLabel id=\"font-select-label\">Font</InputLabel>\r\n              <FontSelect\r\n                value={values.layer_data.font}\r\n                onChange={(e) => onLayerDataUpdate(\"font\", e.target.value)}\r\n                fontList={fontList}\r\n              />\r\n            </FormControl>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Font Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.size\") ? (\r\n            <SliderInput\r\n              label=\"Font Size\"\r\n              min={6}\r\n              max={72}\r\n              value={values.layer_data.size}\r\n              setValue={(value) => setFieldValue(\"layer_data.size\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(FontProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst StrokeProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.stroke\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.scolor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.strokeType\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Stroke</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.scolor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.scolor}\r\n                  onChange={(color) => onLayerDataUpdate(\"scolor\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.scolor\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.scolor)}\r\n                  helperText={errors.layer_data && errors.layer_data.scolor}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.stroke\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Stroke Width\"\r\n                min={0}\r\n                max={10}\r\n                value={values.layer_data.stroke}\r\n                setValue={(value) => setFieldValue(\"layer_data.stroke\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.strokeType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Stroke Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.strokeType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.strokeType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"strokeType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"inside\">Inside</MenuItem>\r\n                  <MenuItem value=\"middle\">Middle</MenuItem>\r\n                  <MenuItem value=\"outside\">Outside</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(StrokeProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Select,\r\n  MenuItem,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst ColorProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.opacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.blendType\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Colors</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.color\") &&\r\n          values.layer_type !== LayerTypes.TEXT ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.color}\r\n                  onChange={(color) => onLayerDataUpdate(\"color\", color)}\r\n                  onInputChange={(color) =>\r\n                    setFieldValue(\"layer_data.color\", color)\r\n                  }\r\n                  error={Boolean(errors.layer_data && errors.layer_data.color)}\r\n                  helperText={errors.layer_data && errors.layer_data.color}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.opacity\") ? (\r\n            <Box mb={2}>\r\n              <SliderInput\r\n                label=\"Opacity\"\r\n                min={0}\r\n                max={1}\r\n                step={0.01}\r\n                value={values.layer_data.opacity}\r\n                setValue={(value) => setFieldValue(\"layer_data.opacity\", value)}\r\n              />\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.blendType\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Blend Type\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <Select\r\n                  name=\"layer_data.blendType\"\r\n                  variant=\"outlined\"\r\n                  value={values.layer_data.blendType}\r\n                  onChange={(event) =>\r\n                    onLayerDataUpdate(\"blendType\", event.target.value)\r\n                  }\r\n                  fullWidth\r\n                >\r\n                  <MenuItem value=\"normal\">Normal</MenuItem>\r\n\r\n                  <MenuItem value=\"multiply\">Multiply</MenuItem>\r\n                  <MenuItem value=\"darken\">Darken</MenuItem>\r\n                  <MenuItem value=\"lighten\">Lighten</MenuItem>\r\n                  <MenuItem value=\"color-burn\">Color Burn</MenuItem>\r\n                  <MenuItem value=\"color\">Color</MenuItem>\r\n                  <MenuItem value=\"screen\">Screen</MenuItem>\r\n                  <MenuItem value=\"overlay\">Overlay</MenuItem>\r\n                  <MenuItem value=\"hue\">Hue</MenuItem>\r\n                  <MenuItem value=\"saturation\">Saturation</MenuItem>\r\n                  <MenuItem value=\"luminosity\">Luminosity</MenuItem>\r\n                  <MenuItem value=\"xor\">Xor</MenuItem>\r\n                </Select>\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ColorProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Typography,\r\n  FormControl,\r\n  FormControlLabel,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport {\r\n  ExpandMore as ExpandMoreIcon,\r\n  SwapHoriz as SwapHorizIcon,\r\n  SwapVert as SwapVertIcon,\r\n} from \"@material-ui/icons\";\r\nimport { faSlash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst RotationProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    toggleField,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.rotation\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flip\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.flop\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Rotation</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.rotation\") ? (\r\n            <SliderInput\r\n              label=\"Rotation\"\r\n              min={-179}\r\n              max={179}\r\n              value={Math.round(values.layer_data.rotation)}\r\n              setValue={(value) => setFieldValue(\"layer_data.rotation\", value)}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flop\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flop\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flop\", values.layer_data.flop ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flop ? (\r\n                  <SwapHorizIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapHorizIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.flip\") ? (\r\n            <Box\r\n              display=\"flex\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"row\"\r\n              justifyContent=\"space-between\"\r\n            >\r\n              <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                Flip\r\n              </Typography>\r\n              <IconButton\r\n                onClick={() =>\r\n                  onLayerDataUpdate(\"flip\", values.layer_data.flip ? 0 : 1)\r\n                }\r\n                size=\"small\"\r\n              >\r\n                {values.layer_data.flip ? (\r\n                  <SwapVertIcon />\r\n                ) : (\r\n                  <>\r\n                    <SwapVertIcon />\r\n                    <Box position=\"absolute\" left=\"4px\" top=\"5px\">\r\n                      <FontAwesomeIcon icon={faSlash} size=\"sm\" />\r\n                    </Box>\r\n                  </>\r\n                )}\r\n              </IconButton>\r\n            </Box>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(RotationProperty);\r\n","import React, { useState, useMemo, useCallback } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nimport ColorPickerInput from \"components/ColorPickerInput\";\r\nimport SliderInput from \"components/SliderInput\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst ShadowProperty = (props) => {\r\n  const DefaultBlurToSet = 5;\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onLayerDataUpdate,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n  const handleColorChange = useCallback(\r\n    (value, applyNow = true) => {\r\n      if (\r\n        !values.layer_data.shadowColor ||\r\n        values.layer_data.shadowColor === \"transparent\"\r\n      ) {\r\n        setFieldValue(\"layer_data.shadowBlur\", DefaultBlurToSet);\r\n      }\r\n      if (applyNow) onLayerDataUpdate(\"shadowColor\", value);\r\n      else setFieldValue(\"layer_data.shadowColor\", value);\r\n    },\r\n    [setFieldValue, onLayerDataUpdate, values.layer_data.shadowColor]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowColor\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowBlur\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Shadow</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowColor\") ? (\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={6}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\" mr={2}>\r\n                  Shadow Color\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <ColorPickerInput\r\n                  value={values.layer_data.shadowColor}\r\n                  onChange={(color) => handleColorChange(color)}\r\n                  onInputChange={(color) => handleColorChange(color, false)}\r\n                  error={Boolean(\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  )}\r\n                  helperText={\r\n                    errors.layer_data && errors.layer_data.shadowColor\r\n                  }\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowBlur\") ? (\r\n            <CustomeTextField\r\n              name=\"layer_data.shadowBlur\"\r\n              label=\"Shadow Blur\"\r\n              variant=\"outlined\"\r\n              type=\"number\"\r\n              value={mathRound2(values.layer_data.shadowBlur)}\r\n              error={Boolean(\r\n                touched.layer_data &&\r\n                  touched.layer_data.shadowBlur &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.shadowBlur\r\n              )}\r\n              helperText={\r\n                touched.layer_data &&\r\n                touched.layer_data.shadowBlur &&\r\n                errors.layer_data &&\r\n                errors.layer_data.shadowBlur\r\n              }\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              mb={4}\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {AllowedLayerTypes.includes(\"layer_data.shadowOpacity\") ? (\r\n            <SliderInput\r\n              label=\"Shadow Opacity\"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n              value={values.layer_data.shadowOpacity}\r\n              setValue={(value) =>\r\n                setFieldValue(\"layer_data.shadowOpacity\", value)\r\n              }\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <Grid container spacing={1}>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetX\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetX\"\r\n                  label=\"Shadow OffsetX\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetX)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetX &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetX\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetX &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetX\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              {AllowedLayerTypes.includes(\"layer_data.shadowOffsetY\") ? (\r\n                <CustomeTextField\r\n                  name=\"layer_data.shadowOffsetY\"\r\n                  label=\"Shadow OffsetY\"\r\n                  variant=\"outlined\"\r\n                  type=\"number\"\r\n                  value={mathRound2(values.layer_data.shadowOffsetY)}\r\n                  error={Boolean(\r\n                    touched.layer_data &&\r\n                      touched.layer_data.shadowOffsetY &&\r\n                      errors.layer_data &&\r\n                      errors.layer_data.shadowOffsetY\r\n                  )}\r\n                  helperText={\r\n                    touched.layer_data &&\r\n                    touched.layer_data.shadowOffsetY &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.shadowOffsetY\r\n                  }\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  mb={4}\r\n                  InputLabelProps={{\r\n                    shrink: true,\r\n                  }}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(ShadowProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\nimport styled from \"styled-components/macro\";\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\nimport { mathRound2 } from \"helper\";\r\n\r\nimport {\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n} from \"@material-ui/core\";\r\nimport { ExpandMore as ExpandMoreIcon } from \"@material-ui/icons\";\r\n\r\nconst CustomeTextField = styled(TextField)`\r\n  .MuiInputBase-input {\r\n    height: 2rem;\r\n  }\r\n`;\r\n\r\nconst CornerProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n  } = props;\r\n  const [expanded, setExpanded] = useState(true);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") &&\r\n    !AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\")\r\n  )\r\n    return <></>;\r\n  return (\r\n    <Accordion expanded={expanded} onChange={() => setExpanded(!expanded)}>\r\n      <AccordionSummary expandIcon={<ExpandMoreIcon />}>\r\n        <Typography>Corner Radius</Typography>\r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopLeft\"\r\n                label=\"Top Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerTopRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerTopRight\"\r\n                label=\"Top Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerTopRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerTopRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerTopRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerTopRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerTopRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomLeft\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomLeft\"\r\n                label=\"Bottom Left\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomLeft)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomLeft &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomLeft\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomLeft &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomLeft\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            {AllowedLayerTypes.includes(\"layer_data.cornerBottomRight\") ? (\r\n              <CustomeTextField\r\n                name=\"layer_data.cornerBottomRight\"\r\n                label=\"Bottom Right\"\r\n                variant=\"outlined\"\r\n                type=\"number\"\r\n                value={mathRound2(values.layer_data.cornerBottomRight)}\r\n                error={Boolean(\r\n                  touched.layer_data &&\r\n                    touched.layer_data.cornerBottomRight &&\r\n                    errors.layer_data &&\r\n                    errors.layer_data.cornerBottomRight\r\n                )}\r\n                helperText={\r\n                  touched.layer_data &&\r\n                  touched.layer_data.cornerBottomRight &&\r\n                  errors.layer_data &&\r\n                  errors.layer_data.cornerBottomRight\r\n                }\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                fullWidth\r\n                margin=\"normal\"\r\n                mb={4}\r\n                InputLabelProps={{\r\n                  shrink: true,\r\n                }}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n};\r\n\r\nexport default React.memo(CornerProperty);\r\n","import React, { useState, useMemo } from \"react\";\r\n\r\nimport { AllowedLayerProps, LayerTypes } from \"constant\";\r\n\r\nimport { Box, Button } from \"@material-ui/core\";\r\n\r\nconst ExtraProperty = (props) => {\r\n  const {\r\n    errors,\r\n    handleBlur,\r\n    handleChange,\r\n    setFieldValue,\r\n    touched,\r\n    values,\r\n    onClone,\r\n  } = props;\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      values.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[values.layer_type]\r\n        : AllowedLayerProps[values.layer_type][values.layer_data.type],\r\n    [values]\r\n  );\r\n\r\n  if (!AllowedLayerTypes.includes(\"clone\")) return <></>;\r\n  return (\r\n    <Box display=\"flex\" flexDirection=\"column\" width=\"100%\">\r\n      {AllowedLayerTypes.includes(\"clone\") ? (\r\n        <Button variant=\"outlined\" onClick={onClone}>\r\n          Clone\r\n        </Button>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default React.memo(ExtraProperty);\r\n","import React, { useMemo, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components/macro\";\r\nimport { Formik, Form } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport _ from \"lodash\";\r\n\r\nimport { updateLayer, cloneLayer } from \"redux/reducers/layerReducer\";\r\nimport { AllowedLayerProps, LayerTypes, DefaultLayer } from \"constant\";\r\nimport { colorValidator } from \"helper\";\r\n\r\nimport { Box, Typography, Button } from \"@material-ui/core\";\r\nimport GeneralProperty from \"./GeneralProperty\";\r\nimport SizeProperty from \"./SizeProperty\";\r\nimport PositionProperty from \"./PositionProperty\";\r\nimport FontProperty from \"./FontProperty\";\r\nimport StrokeProperty from \"./StrokeProperty\";\r\nimport ColorProperty from \"./ColorProperty\";\r\nimport RotationProperty from \"./RotationProperty\";\r\nimport ShadowProperty from \"./ShadowProperty\";\r\nimport CornerProperty from \"./CornerProperty\";\r\nimport ExtraProperty from \"./ExtraProperty\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  width: 350px;\r\n  position: fixed;\r\n  right: 0;\r\n  top: 0;\r\n  background: #666666;\r\n  height: calc(100% - 50px);\r\n  overflow: auto;\r\n`;\r\n\r\nconst InnerForm = React.memo(\r\n  ({\r\n    fontList,\r\n    toggleField,\r\n    toggleLayerDataField,\r\n    currentLayer,\r\n    pressedKey,\r\n    onClone,\r\n    onLayerDataUpdate,\r\n    ...formProps\r\n  }) => {\r\n    const isDirty = useMemo(() => {\r\n      for (let i in formProps.values.layer_data) {\r\n        if (formProps.values.layer_data[i] != currentLayer.layer_data[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      for (let i in formProps.values) {\r\n        if (i != \"layer_data\" && formProps.values[i] != currentLayer[i]) {\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }, [formProps.values, currentLayer]);\r\n\r\n    return (\r\n      <Form onSubmit={formProps.handleSubmit} noValidate>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          height=\"34px\"\r\n        >\r\n          <Typography variant=\"h5\" noWrap>\r\n            Properties\r\n          </Typography>\r\n          {formProps.isValid && isDirty ? (\r\n            <Button type=\"submit\" color=\"primary\" variant=\"outlined\">\r\n              Apply\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </Box>\r\n        <GeneralProperty {...formProps} toggleField={toggleField} />\r\n        <FontProperty\r\n          {...formProps}\r\n          fontList={fontList}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <ColorProperty {...formProps} onLayerDataUpdate={onLayerDataUpdate} />\r\n        <StrokeProperty\r\n          {...formProps}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <SizeProperty\r\n          {...formProps}\r\n          toggleLayerDataField={toggleLayerDataField}\r\n          currentLayer={currentLayer}\r\n          pressedKey={pressedKey}\r\n        />\r\n        <PositionProperty {...formProps} />\r\n        <RotationProperty\r\n          {...formProps}\r\n          toggleField={toggleField}\r\n          onLayerDataUpdate={onLayerDataUpdate}\r\n        />\r\n        <ShadowProperty {...formProps} onLayerDataUpdate={onLayerDataUpdate} />\r\n        <CornerProperty {...formProps} />\r\n        <ExtraProperty {...formProps} onClone={onClone} />\r\n      </Form>\r\n    );\r\n  }\r\n);\r\n\r\nconst PropertyBar = () => {\r\n  const dispatch = useDispatch();\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const AllowedLayerTypes = useMemo(\r\n    () =>\r\n      !currentLayer\r\n        ? []\r\n        : currentLayer.layer_type !== LayerTypes.SHAPE\r\n        ? AllowedLayerProps[currentLayer.layer_type]\r\n        : AllowedLayerProps[currentLayer.layer_type][\r\n            currentLayer.layer_data.type\r\n          ],\r\n    [currentLayer]\r\n  );\r\n  const defaultValues = useMemo(\r\n    () =>\r\n      _.pick(\r\n        {\r\n          layer_visible: 1,\r\n          layer_locked: 0,\r\n          layer_data: _.pick(\r\n            DefaultLayer.layer_data,\r\n            AllowedLayerTypes.filter((item) =>\r\n              item.includes(\"layer_data.\")\r\n            ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n          ),\r\n        },\r\n        AllowedLayerTypes.filter((item) => !item.includes(\"layer_data.\"))\r\n      ),\r\n    [AllowedLayerTypes]\r\n  );\r\n  const handleClone = useCallback(() => {\r\n    if (currentLayer) dispatch(cloneLayer(currentLayer));\r\n  }, [dispatch, currentLayer]);\r\n  const handleApply = useCallback(\r\n    (values) => {\r\n      dispatch(updateLayer(values));\r\n    },\r\n    [dispatch]\r\n  );\r\n  const toggleField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          [field]: currentLayer[field] ? 0 : 1,\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const handleLayerDataUpdate = useCallback(\r\n    (key, value) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [key]: value,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n  const toggleLayerDataField = useCallback(\r\n    (field) => {\r\n      dispatch(\r\n        updateLayer({\r\n          ...currentLayer,\r\n          layer_data: {\r\n            ...currentLayer.layer_data,\r\n            [field]: currentLayer.layer_data[field] ? 0 : 1,\r\n          },\r\n        })\r\n      );\r\n    },\r\n    [dispatch, currentLayer]\r\n  );\r\n\r\n  if (currentLayer) {\r\n    return (\r\n      <Wrapper py={5} px={3}>\r\n        <Formik\r\n          initialValues={{\r\n            ...defaultValues,\r\n            ...currentLayer,\r\n            layer_data: {\r\n              ...defaultValues.layer_data,\r\n              ...currentLayer.layer_data,\r\n            },\r\n          }}\r\n          validationSchema={Yup.object({\r\n            layer_order: Yup.number(),\r\n            layer_visible: Yup.number(),\r\n            layer_locked: Yup.number(),\r\n            layer_data: Yup.object(\r\n              _.pick(\r\n                {\r\n                  name: Yup.string().required(\"Required\"),\r\n                  text: Yup.string().test(\r\n                    \"text-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      (value && value.length) ||\r\n                      !AllowedLayerTypes.includes(\"layer_data.text\")\r\n                  ),\r\n                  width: Yup.number().test(\r\n                    \"width-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.width\")\r\n                  ),\r\n                  height: Yup.number().test(\r\n                    \"height-validation\",\r\n                    \"Required\",\r\n                    (value) =>\r\n                      value || !AllowedLayerTypes.includes(\"layer_data.height\")\r\n                  ),\r\n                  left: Yup.number(),\r\n                  top: Yup.number(),\r\n                  rotation: Yup.number()\r\n                    .moreThan(-181, \"Must be greater than -181\")\r\n                    .lessThan(181, \"Must be less than 181\"),\r\n                  flop: Yup.number(),\r\n                  flip: Yup.number(),\r\n                  scaleX: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  scaleY: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  color: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  size: Yup.number(),\r\n                  scolor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  stroke: Yup.number(),\r\n                  font: Yup.number(),\r\n                  opacity: Yup.number(),\r\n                  shadowColor: Yup.string()\r\n                    .nullable()\r\n                    .test(\r\n                      \"color-validation\",\r\n                      \"Incorrect Color Format\",\r\n                      colorValidator\r\n                    ),\r\n                  shadowBlur: Yup.number(),\r\n                  shadowOpacity: Yup.number(),\r\n                  shadowOffsetX: Yup.number(),\r\n                  shadowOffsetY: Yup.number(),\r\n                  cornerTopLeft: Yup.number(),\r\n                  cornerTopRight: Yup.number(),\r\n                  cornerBottomLeft: Yup.number(),\r\n                  cornerBottomRight: Yup.number(),\r\n                  radius: Yup.number().moreThan(0, \"Must be greater than 0\"),\r\n                  innerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  outerRadius: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  numPoints: Yup.number().moreThan(1, \"Must be greater than 1\"),\r\n                  angle: Yup.number(),\r\n                  pointerLength: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                  pointerWidth: Yup.number().moreThan(\r\n                    0,\r\n                    \"Must be greater than 0\"\r\n                  ),\r\n                },\r\n                AllowedLayerTypes.filter((item) =>\r\n                  item.includes(\"layer_data.\")\r\n                ).map((item) => item.replace(\"layer_data.\", \"\"))\r\n              )\r\n            ),\r\n          })}\r\n          enableReinitialize\r\n          validate={(values) => {\r\n            console.log(values);\r\n            return {};\r\n          }}\r\n          onSubmit={handleApply}\r\n        >\r\n          {(formProps) => (\r\n            <InnerForm\r\n              {...formProps}\r\n              fontList={fontList}\r\n              toggleField={toggleField}\r\n              toggleLayerDataField={toggleLayerDataField}\r\n              currentLayer={currentLayer}\r\n              pressedKey={pressedKey}\r\n              onClone={handleClone}\r\n              onLayerDataUpdate={handleLayerDataUpdate}\r\n            />\r\n          )}\r\n        </Formik>\r\n      </Wrapper>\r\n    );\r\n  }\r\n  return <></>;\r\n};\r\n\r\nexport default PropertyBar;\r\n","import React, { useEffect, useState, useRef, useCallback } from \"react\";\r\nimport _ from \"lodash\";\r\nimport styled from \"styled-components/macro\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport KeyboardEventHandler from \"react-keyboard-event-handler\";\r\nimport Helmet from \"react-helmet\";\r\nimport { useParams } from \"react-router\";\r\nimport TGA from \"utils/tga\";\r\n\r\nimport { Box } from \"@material-ui/core\";\r\n\r\nimport { LayerTypes } from \"constant\";\r\nimport ScreenLoader from \"components/ScreenLoader\";\r\nimport Toolbar from \"./Toolbar\";\r\nimport Board from \"./Board\";\r\nimport Sidebar from \"./sideBar\";\r\nimport PropertyBar from \"./propertyBar\";\r\nimport ConfirmDialog from \"dialogs/ConfirmDialog\";\r\nimport { MouseModes, PaintingGuides, DialogTypes } from \"constant\";\r\n\r\nimport { getScheme, setSaving, setLoaded } from \"redux/reducers/schemeReducer\";\r\nimport { getOverlayList } from \"redux/reducers/overlayReducer\";\r\nimport { getFontList } from \"redux/reducers/fontReducer\";\r\nimport { getLogoList } from \"redux/reducers/logoReducer\";\r\nimport { setMessage } from \"redux/reducers/messageReducer\";\r\nimport {\r\n  deleteLayer,\r\n  setCurrent as setCurrentLayer,\r\n  updateLayer,\r\n  updateLayerOnly,\r\n  setClipboard as setLayerClipboard,\r\n  cloneLayer,\r\n  setDrawingStatus,\r\n  DrawingStatus,\r\n} from \"redux/reducers/layerReducer\";\r\nimport {\r\n  setPaintingGuides,\r\n  setZoom,\r\n  setMouseMode,\r\n  setPressedKey,\r\n  setBoardRotate,\r\n  historyActionUp,\r\n  historyActionBack,\r\n} from \"redux/reducers/boardReducer\";\r\nimport { getUploadListByUserID } from \"redux/reducers/uploadReducer\";\r\nimport { mathRound4, dataURItoBlob, addImageProcess } from \"helper\";\r\nimport SchemeService from \"services/schemeService\";\r\n\r\nconst Wrapper = styled(Box)`\r\n  background-color: ${(props) => props.background};\r\n`;\r\n\r\nconst Scheme = () => {\r\n  const dispatch = useDispatch();\r\n  const params = useParams();\r\n  const [confirmMessage, setConfirmMessage] = useState(\"\");\r\n  const [dialog, setDialog] = useState(null);\r\n  const [hoveredJSON, setHoveredJSON] = useState({});\r\n  const pixelRatio = 0.5;\r\n\r\n  const tick = useRef(0);\r\n  const prevTick = useRef(0);\r\n  const stageRef = useRef(null);\r\n  const baseLayerRef = useRef(null);\r\n  const mainLayerRef = useRef(null);\r\n  const carMaskLayerRef = useRef(null);\r\n\r\n  const user = useSelector((state) => state.authReducer.user);\r\n  const currentScheme = useSelector((state) => state.schemeReducer.current);\r\n  const schemeLoaded = useSelector((state) => state.schemeReducer.loaded);\r\n  const currentLayer = useSelector((state) => state.layerReducer.current);\r\n  const clipboardLayer = useSelector((state) => state.layerReducer.clipboard);\r\n  const loadedStatuses = useSelector(\r\n    (state) => state.layerReducer.loadedStatuses\r\n  );\r\n  const overlayList = useSelector((state) => state.overlayReducer.list);\r\n  const logoList = useSelector((state) => state.logoReducer.list);\r\n  const fontList = useSelector((state) => state.fontReducer.list);\r\n  const zoom = useSelector((state) => state.boardReducer.zoom);\r\n  const pressedKey = useSelector((state) => state.boardReducer.pressedKey);\r\n  const boardRotate = useSelector((state) => state.boardReducer.boardRotate);\r\n  const frameSize = useSelector((state) => state.boardReducer.frameSize);\r\n  const mouseMode = useSelector((state) => state.boardReducer.mouseMode);\r\n  const paintingGuides = useSelector(\r\n    (state) => state.boardReducer.paintingGuides\r\n  );\r\n\r\n  const currentSchemeRef = useRef(null);\r\n  const frameSizeRef = useRef(null);\r\n\r\n  const schemeLoading = useSelector((state) => state.schemeReducer.loading);\r\n  const carMakeLoading = useSelector((state) => state.carMakeReducer.loading);\r\n  const fontLoading = useSelector((state) => state.fontReducer.loading);\r\n  const uploadsInitialized = useSelector(\r\n    (state) => state.uploadReducer.initialized\r\n  );\r\n\r\n  const setHoveredJSONItem = useCallback(\r\n    (key, value) => {\r\n      setHoveredJSON((origin) => ({ ...origin, [key]: value }));\r\n    },\r\n    [setHoveredJSON]\r\n  );\r\n\r\n  const handleZoomIn = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom * 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomOut = useCallback(() => {\r\n    dispatch(setZoom(mathRound4(Math.max(Math.min(zoom / 1.25, 10), 0.25))));\r\n  }, [dispatch, zoom]);\r\n  const handleZoomFit = useCallback(() => {\r\n    let width = stageRef.current.attrs.width;\r\n    let height = stageRef.current.attrs.height;\r\n    const newZoom = mathRound4(\r\n      Math.min(width / frameSize.width, height / frameSize.height)\r\n    );\r\n    stageRef.current.x((width / 2 - frameSize.width / 2) * newZoom + width / 2);\r\n    stageRef.current.y(\r\n      (height / 2 - frameSize.height / 2) * newZoom + height / 2\r\n    );\r\n    dispatch(setZoom(newZoom));\r\n  }, [\r\n    dispatch,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.width,\r\n    stageRef.current && stageRef.current.attrs && stageRef.current.attrs.height,\r\n    frameSize,\r\n  ]);\r\n  const handleChangePaintingGuides = useCallback((newFormats) => {\r\n    dispatch(setPaintingGuides(newFormats));\r\n  }, []);\r\n  const handleChangeBoardRotation = useCallback((newRotation) => {\r\n    dispatch(setBoardRotate(newRotation));\r\n  }, []);\r\n  const togglePaintingGuides = useCallback(\r\n    (guide) => {\r\n      let newPaintingGuides = [...paintingGuides];\r\n      let index = newPaintingGuides.indexOf(guide);\r\n      if (index > -1) {\r\n        newPaintingGuides.splice(index, 1);\r\n      } else {\r\n        newPaintingGuides.push(guide);\r\n      }\r\n      handleChangePaintingGuides(newPaintingGuides);\r\n    },\r\n    [paintingGuides, handleChangePaintingGuides]\r\n  );\r\n  const focusBoard = useCallback(() => {\r\n    setTimeout(() => document.activeElement.blur(), 1000);\r\n  }, []);\r\n\r\n  const handleKeyEvent = useCallback(\r\n    (key, event) => {\r\n      // Delete Selected Layer\r\n      // console.log(\"KeyEvent: \", key, event);\r\n      if (event.target.tagName !== \"INPUT\" && event.type === \"keydown\") {\r\n        if (pressedKey !== key) {\r\n          dispatch(setPressedKey(key));\r\n        }\r\n        if (\r\n          (key === \"del\" || key === \"backspace\") &&\r\n          currentLayer &&\r\n          currentLayer.layer_type !== LayerTypes.CAR\r\n        ) {\r\n          setConfirmMessage(\r\n            `Are you sure to delete \"${currentLayer.layer_data.name}\"?`\r\n          );\r\n        } else if (key === \"esc\" && currentLayer) {\r\n          dispatch(setCurrentLayer(null));\r\n        } else if (event.key === \"+\" && event.shiftKey) {\r\n          handleZoomIn();\r\n        } else if (event.key === \"_\" && event.shiftKey) {\r\n          handleZoomOut();\r\n        } else if (event.key === \")\" && event.shiftKey) {\r\n          dispatch(setZoom(1));\r\n        } else if (event.key === \"(\" && event.shiftKey) {\r\n          handleZoomFit();\r\n        } else if (event.key === \"D\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.DEFAULT));\r\n        } else if (event.key === \"B\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.PEN));\r\n        } else if (event.key === \"R\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RECT));\r\n        } else if (event.key === \"C\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.CIRCLE));\r\n        } else if (event.key === \"E\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ELLIPSE));\r\n        } else if (event.key === \"S\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.STAR));\r\n        } else if (event.key === \"G\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.RING));\r\n        } else if (event.key === \"O\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.REGULARPOLYGON));\r\n        } else if (event.key === \"W\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.WEDGE));\r\n        } else if (event.key === \"A\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARC));\r\n        } else if (event.key === \"P\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.POLYGON));\r\n        } else if (event.key === \"L\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.LINE));\r\n        } else if (event.key === \">\" && event.shiftKey) {\r\n          dispatch(setMouseMode(MouseModes.ARROW));\r\n        } else if (\r\n          event.key === \"c\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          currentLayer\r\n        ) {\r\n          dispatch(setLayerClipboard(currentLayer));\r\n        } else if (\r\n          event.key === \"v\" &&\r\n          (event.ctrlKey || event.metaKey) &&\r\n          clipboardLayer\r\n        ) {\r\n          dispatch(cloneLayer(clipboardLayer));\r\n        } else if (event.key === \"z\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionBack());\r\n        } else if (event.key === \"y\" && (event.ctrlKey || event.metaKey)) {\r\n          dispatch(historyActionUp());\r\n        } else if (key === \"1\") {\r\n          togglePaintingGuides(PaintingGuides.CARMASK);\r\n        } else if (key === \"2\") {\r\n          togglePaintingGuides(PaintingGuides.WIREFRAME);\r\n        } else if (key === \"3\") {\r\n          togglePaintingGuides(PaintingGuides.SPONSORBLOCKS);\r\n        } else if (key === \"4\") {\r\n          togglePaintingGuides(PaintingGuides.NUMBERBLOCKS);\r\n        } else if (key === \"5\") {\r\n          togglePaintingGuides(PaintingGuides.GRID);\r\n        } else if (key === \"t\") {\r\n          setDialog(DialogTypes.TEXT);\r\n        } else if (key === \"s\") {\r\n          setDialog(DialogTypes.SHAPE);\r\n        } else if (key === \"l\") {\r\n          setDialog(DialogTypes.LOGO);\r\n        } else if (key === \"b\") {\r\n          setDialog(DialogTypes.BASEPAINT);\r\n        } else if (key === \"enter\") {\r\n          if (\r\n            [\r\n              MouseModes.DEFAULT,\r\n              MouseModes.LINE,\r\n              MouseModes.ARROW,\r\n              MouseModes.POLYGON,\r\n            ].includes(mouseMode)\r\n          ) {\r\n            dispatch(setDrawingStatus(DrawingStatus.ADD_TO_SHAPE));\r\n          }\r\n        }\r\n      }\r\n\r\n      // Arrow Keys\r\n      if (event.target.tagName !== \"INPUT\") {\r\n        if (event.type === \"keyup\") {\r\n          dispatch(setPressedKey(null));\r\n        }\r\n        if (\r\n          [\"ArrowRight\", \"ArrowLeft\", \"ArrowUp\", \"ArrowDown\"].includes(\r\n            event.key\r\n          ) &&\r\n          currentLayer &&\r\n          ![LayerTypes.CAR, LayerTypes.BASE].includes(currentLayer.layer_type)\r\n        ) {\r\n          let speed = event.shiftKey ? 10 : 1;\r\n          let initialspeedX =\r\n            event.key === \"ArrowLeft\"\r\n              ? -speed\r\n              : event.key === \"ArrowRight\"\r\n              ? speed\r\n              : 0;\r\n          let initialspeedY =\r\n            event.key === \"ArrowUp\"\r\n              ? -speed\r\n              : event.key === \"ArrowDown\"\r\n              ? speed\r\n              : 0;\r\n          let speedX = initialspeedX;\r\n          let speedY = initialspeedY;\r\n          if (boardRotate === 90) {\r\n            speedX = initialspeedY;\r\n            speedY = -initialspeedX;\r\n          } else if (boardRotate === 180) {\r\n            speedX = -initialspeedX;\r\n            speedY = -initialspeedY;\r\n          } else if (boardRotate === 270) {\r\n            speedX = -initialspeedY;\r\n            speedY = initialspeedX;\r\n          }\r\n          if (event.type === \"keyup\") {\r\n            let layer_data = { ...currentLayer.layer_data };\r\n            if (prevTick.current != tick.current) {\r\n              layer_data.left = currentLayer.layer_data.left + speedX;\r\n              layer_data.top = currentLayer.layer_data.top + speedY;\r\n            }\r\n            dispatch(\r\n              updateLayer({\r\n                ...currentLayer,\r\n                layer_data: layer_data,\r\n              })\r\n            );\r\n          } else {\r\n            if (prevTick.current != tick.current) {\r\n              prevTick.current = Object.assign(tick.current);\r\n              dispatch(\r\n                updateLayerOnly({\r\n                  ...currentLayer,\r\n                  layer_data: {\r\n                    ...currentLayer.layer_data,\r\n                    left: currentLayer.layer_data.left + speedX,\r\n                    top: currentLayer.layer_data.top + speedY,\r\n                  },\r\n                })\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    [\r\n      dispatch,\r\n      pressedKey,\r\n      currentLayer,\r\n      clipboardLayer,\r\n      prevTick.current,\r\n      tick.current,\r\n    ]\r\n  );\r\n  const handleConfirm = useCallback(() => {\r\n    dispatch(deleteLayer(currentLayer));\r\n    setConfirmMessage(\"\");\r\n  }, [dispatch, currentLayer, setConfirmMessage]);\r\n\r\n  const takeScreenshot = useCallback(\r\n    async (isPNG = true) => {\r\n      let canvas = document.createElement(\"canvas\");\r\n      let ctx = canvas.getContext(\"2d\");\r\n\r\n      let width = frameSizeRef.current.width * pixelRatio;\r\n      let height = frameSizeRef.current.height * pixelRatio;\r\n      let baseLayerImg, mainLayerImg, carMaskLayerImg;\r\n      let attrs = { ...stageRef.current.attrs };\r\n      stageRef.current.setAttrs({\r\n        x: 0,\r\n        y: 0,\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n        scaleX: 1,\r\n        scaleY: 1,\r\n        rotation: 0,\r\n        width: frameSizeRef.current.width,\r\n        height: frameSizeRef.current.height,\r\n      });\r\n      stageRef.current.draw();\r\n\r\n      if (baseLayerRef.current) {\r\n        let baseLayerURL = baseLayerRef.current.toDataURL({ pixelRatio });\r\n        baseLayerImg = await addImageProcess(baseLayerURL);\r\n      }\r\n      if (mainLayerRef.current) {\r\n        let mainLayerURL = mainLayerRef.current.toDataURL({ pixelRatio });\r\n        mainLayerImg = await addImageProcess(mainLayerURL);\r\n      }\r\n      if (carMaskLayerRef.current && isPNG) {\r\n        let carMaskLayerURL = carMaskLayerRef.current.toDataURL({\r\n          pixelRatio,\r\n        });\r\n        carMaskLayerImg = await addImageProcess(carMaskLayerURL);\r\n      }\r\n\r\n      stageRef.current.setAttrs(_.omit(attrs, [\"container\"]));\r\n      stageRef.current.draw();\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n\r\n      if (baseLayerImg) {\r\n        ctx.drawImage(\r\n          baseLayerImg,\r\n          0,\r\n          0,\r\n          baseLayerImg.width,\r\n          baseLayerImg.height\r\n        );\r\n      }\r\n      if (mainLayerImg) {\r\n        ctx.drawImage(\r\n          mainLayerImg,\r\n          0,\r\n          0,\r\n          mainLayerImg.width,\r\n          mainLayerImg.height\r\n        );\r\n      }\r\n      if (carMaskLayerImg) {\r\n        ctx.drawImage(\r\n          carMaskLayerImg,\r\n          0,\r\n          0,\r\n          carMaskLayerImg.width,\r\n          carMaskLayerImg.height\r\n        );\r\n      }\r\n      if (isPNG) return canvas.toDataURL(\"image/png\");\r\n      var imageData = ctx.getImageData(0, 0, width, height);\r\n      return imageData;\r\n    },\r\n    [\r\n      frameSizeRef.current,\r\n      stageRef.current,\r\n      baseLayerRef.current,\r\n      mainLayerRef.current,\r\n      carMaskLayerRef.current,\r\n    ]\r\n  );\r\n\r\n  const handleUploadThumbnail = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let dataURL = await takeScreenshot();\r\n        dispatch(setSaving(false));\r\n        let blob = dataURItoBlob(dataURL);\r\n        var fileOfBlob = new File(\r\n          [blob],\r\n          `${currentSchemeRef.current.id}.png`,\r\n          {\r\n            type: \"image/png\",\r\n          }\r\n        );\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"files\", fileOfBlob);\r\n        formData.append(\"schemeID\", currentSchemeRef.current.id);\r\n\r\n        await SchemeService.uploadThumbnail(formData);\r\n      } catch (err) {\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  const handleDownloadTGA = useCallback(async () => {\r\n    if (stageRef.current && currentSchemeRef.current) {\r\n      try {\r\n        dispatch(setSaving(true));\r\n        let imageData = await takeScreenshot(false);\r\n        dispatch(setSaving(false));\r\n        var tga = new TGA({\r\n          width: frameSizeRef.current.width * pixelRatio,\r\n          height: frameSizeRef.current.height * pixelRatio,\r\n          imageType: TGA.Type.RLE_RGB,\r\n        });\r\n        tga.setImageData(imageData);\r\n\r\n        // get a blob url which can be used to download the file\r\n        var url = tga.getBlobURL();\r\n\r\n        var a = document.createElement(\"a\");\r\n        a.style = \"display: none\";\r\n        a.href = url;\r\n        a.download = `${currentSchemeRef.current.id}.tga`;\r\n        a.click();\r\n        window.URL.revokeObjectURL(url);\r\n      } catch (err) {\r\n        console.log(err);\r\n        dispatch(setMessage({ message: err.message }));\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    currentSchemeRef.current && currentSchemeRef.current.id,\r\n    !stageRef.current,\r\n    takeScreenshot,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.id && params.id) {\r\n      if (!currentScheme) {\r\n        dispatch(getScheme(params.id));\r\n      }\r\n      if (!uploadsInitialized) {\r\n        dispatch(getUploadListByUserID(user.id));\r\n      }\r\n      if (!overlayList.length) dispatch(getOverlayList());\r\n      if (!logoList.length) dispatch(getLogoList());\r\n      if (!fontList.length) dispatch(getFontList());\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      tick.current += 1;\r\n    }, 200);\r\n    const startTimout = setTimeout(handleUploadThumbnail, 7000);\r\n    const thumbnailInterval = setInterval(handleUploadThumbnail, 300000);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n      clearInterval(thumbnailInterval);\r\n      clearTimeout(startTimout);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !schemeLoaded &&\r\n      Object.keys(loadedStatuses).every((k) => loadedStatuses[k]) &&\r\n      stageRef.current\r\n    ) {\r\n      dispatch(setLoaded(true));\r\n      handleZoomFit();\r\n    }\r\n  }, [loadedStatuses]);\r\n\r\n  useEffect(() => {\r\n    currentSchemeRef.current = currentScheme;\r\n  }, [currentScheme]);\r\n\r\n  useEffect(() => {\r\n    frameSizeRef.current = frameSize;\r\n  }, [frameSize]);\r\n\r\n  return (\r\n    <>\r\n      <Helmet title={currentScheme ? currentScheme.name : null} />\r\n      {schemeLoading || carMakeLoading || fontLoading || !currentScheme ? (\r\n        <ScreenLoader />\r\n      ) : (\r\n        <Box width=\"100%\" height=\"100%\" display=\"flex\" flexDirection=\"column\">\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <KeyboardEventHandler\r\n            handleKeys={[\"all\"]}\r\n            handleEventType=\"keyup\"\r\n            onKeyEvent={handleKeyEvent}\r\n          />\r\n          <Box width=\"100%\" height=\"calc(100% - 50px)\" display=\"flex\">\r\n            <Sidebar\r\n              dialog={dialog}\r\n              setDialog={setDialog}\r\n              focusBoard={focusBoard}\r\n              hoveredLayerJSON={hoveredJSON}\r\n              onChangeHoverJSONItem={setHoveredJSONItem}\r\n            />\r\n            <Wrapper\r\n              width=\"calc(100% - 350px)\"\r\n              background=\"#282828\"\r\n              overflow=\"hidden\"\r\n            >\r\n              <Board\r\n                hoveredLayerJSON={hoveredJSON}\r\n                onChangeHoverJSONItem={setHoveredJSONItem}\r\n                onChangeBoardRotation={handleChangeBoardRotation}\r\n                stageRef={stageRef}\r\n                baseLayerRef={baseLayerRef}\r\n                mainLayerRef={mainLayerRef}\r\n                carMaskLayerRef={carMaskLayerRef}\r\n              />\r\n            </Wrapper>\r\n            <PropertyBar />\r\n          </Box>\r\n          <Toolbar\r\n            onZoomIn={handleZoomIn}\r\n            onZoomOut={handleZoomOut}\r\n            onZoomFit={handleZoomFit}\r\n            onChangePaintingGuides={handleChangePaintingGuides}\r\n            onDownloadTGA={handleDownloadTGA}\r\n          />\r\n        </Box>\r\n      )}\r\n      <ConfirmDialog\r\n        text={confirmMessage}\r\n        open={confirmMessage.length !== 0}\r\n        onCancel={() => setConfirmMessage(\"\")}\r\n        onConfirm={handleConfirm}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Scheme;\r\n","import React from \"react\";\r\nimport { makeStyles, InputBase } from \"@material-ui/core\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  search: {\r\n    position: \"relative\",\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: \"transparent\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n    border: \"1px solid #8A8A8A\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: \"auto\",\r\n    },\r\n  },\r\n  searchIcon: {\r\n    padding: theme.spacing(0, 2),\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    pointerEvents: \"none\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  inputRoot: {\r\n    color: \"inherit\",\r\n    width: \"100%\",\r\n  },\r\n  inputInput: {\r\n    padding: theme.spacing(1, 1, 1, 0),\r\n    // vertical padding + font size from searchIcon\r\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n    transition: theme.transitions.create(\"width\"),\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst SearchBox = (props) => {\r\n  const { value, onChange } = props;\r\n\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.search}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        placeholder=\"Search\"\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        value={value}\r\n        inputProps={{ \"aria-label\": \"search\" }}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n"],"sourceRoot":""}